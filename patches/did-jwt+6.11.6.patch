diff --git a/node_modules/did-jwt/dist/did-jwt.js b/node_modules/did-jwt/dist/did-jwt.js
index 817657d..87567fb 100644
--- a/node_modules/did-jwt/dist/did-jwt.js
+++ b/node_modules/did-jwt/dist/did-jwt.js
@@ -1,2 +1,18212 @@
-/*! For license information please see did-jwt.js.LICENSE.txt */
-!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("DID-JWT",[],t):"object"==typeof exports?exports["DID-JWT"]=t():e["DID-JWT"]=t()}(self,(()=>(()=>{var e={8099:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(7117);function n(e,t,r){return void 0===t&&(t=new Uint8Array(2)),void 0===r&&(r=0),t[r+0]=e>>>8,t[r+1]=e>>>0,t}function f(e,t,r){return void 0===t&&(t=new Uint8Array(2)),void 0===r&&(r=0),t[r+0]=e>>>0,t[r+1]=e>>>8,t}function o(e,t){return void 0===t&&(t=0),e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}function a(e,t){return void 0===t&&(t=0),(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}function s(e,t){return void 0===t&&(t=0),e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t]}function d(e,t){return void 0===t&&(t=0),(e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t])>>>0}function h(e,t,r){return void 0===t&&(t=new Uint8Array(4)),void 0===r&&(r=0),t[r+0]=e>>>24,t[r+1]=e>>>16,t[r+2]=e>>>8,t[r+3]=e>>>0,t}function c(e,t,r){return void 0===t&&(t=new Uint8Array(4)),void 0===r&&(r=0),t[r+0]=e>>>0,t[r+1]=e>>>8,t[r+2]=e>>>16,t[r+3]=e>>>24,t}function u(e,t,r){return void 0===t&&(t=new Uint8Array(8)),void 0===r&&(r=0),h(e/4294967296>>>0,t,r),h(e>>>0,t,r+4),t}function l(e,t,r){return void 0===t&&(t=new Uint8Array(8)),void 0===r&&(r=0),c(e>>>0,t,r),c(e/4294967296>>>0,t,r+4),t}t.readInt16BE=function(e,t){return void 0===t&&(t=0),(e[t+0]<<8|e[t+1])<<16>>16},t.readUint16BE=function(e,t){return void 0===t&&(t=0),(e[t+0]<<8|e[t+1])>>>0},t.readInt16LE=function(e,t){return void 0===t&&(t=0),(e[t+1]<<8|e[t])<<16>>16},t.readUint16LE=function(e,t){return void 0===t&&(t=0),(e[t+1]<<8|e[t])>>>0},t.writeUint16BE=n,t.writeInt16BE=n,t.writeUint16LE=f,t.writeInt16LE=f,t.readInt32BE=o,t.readUint32BE=a,t.readInt32LE=s,t.readUint32LE=d,t.writeUint32BE=h,t.writeInt32BE=h,t.writeUint32LE=c,t.writeInt32LE=c,t.readInt64BE=function(e,t){void 0===t&&(t=0);var r=o(e,t),i=o(e,t+4);return 4294967296*r+i-4294967296*(i>>31)},t.readUint64BE=function(e,t){return void 0===t&&(t=0),4294967296*a(e,t)+a(e,t+4)},t.readInt64LE=function(e,t){void 0===t&&(t=0);var r=s(e,t);return 4294967296*s(e,t+4)+r-4294967296*(r>>31)},t.readUint64LE=function(e,t){void 0===t&&(t=0);var r=d(e,t);return 4294967296*d(e,t+4)+r},t.writeUint64BE=u,t.writeInt64BE=u,t.writeUint64LE=l,t.writeInt64LE=l,t.readUintBE=function(e,t,r){if(void 0===r&&(r=0),e%8!=0)throw new Error("readUintBE supports only bitLengths divisible by 8");if(e/8>t.length-r)throw new Error("readUintBE: array is too short for the given bitLength");for(var i=0,n=1,f=e/8+r-1;f>=r;f--)i+=t[f]*n,n*=256;return i},t.readUintLE=function(e,t,r){if(void 0===r&&(r=0),e%8!=0)throw new Error("readUintLE supports only bitLengths divisible by 8");if(e/8>t.length-r)throw new Error("readUintLE: array is too short for the given bitLength");for(var i=0,n=1,f=r;f<r+e/8;f++)i+=t[f]*n,n*=256;return i},t.writeUintBE=function(e,t,r,n){if(void 0===r&&(r=new Uint8Array(e/8)),void 0===n&&(n=0),e%8!=0)throw new Error("writeUintBE supports only bitLengths divisible by 8");if(!i.isSafeInteger(t))throw new Error("writeUintBE value must be an integer");for(var f=1,o=e/8+n-1;o>=n;o--)r[o]=t/f&255,f*=256;return r},t.writeUintLE=function(e,t,r,n){if(void 0===r&&(r=new Uint8Array(e/8)),void 0===n&&(n=0),e%8!=0)throw new Error("writeUintLE supports only bitLengths divisible by 8");if(!i.isSafeInteger(t))throw new Error("writeUintLE value must be an integer");for(var f=1,o=n;o<n+e/8;o++)r[o]=t/f&255,f*=256;return r},t.readFloat32BE=function(e,t){return void 0===t&&(t=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat32(t)},t.readFloat32LE=function(e,t){return void 0===t&&(t=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat32(t,!0)},t.readFloat64BE=function(e,t){return void 0===t&&(t=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat64(t)},t.readFloat64LE=function(e,t){return void 0===t&&(t=0),new DataView(e.buffer,e.byteOffset,e.byteLength).getFloat64(t,!0)},t.writeFloat32BE=function(e,t,r){return void 0===t&&(t=new Uint8Array(4)),void 0===r&&(r=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setFloat32(r,e),t},t.writeFloat32LE=function(e,t,r){return void 0===t&&(t=new Uint8Array(4)),void 0===r&&(r=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setFloat32(r,e,!0),t},t.writeFloat64BE=function(e,t,r){return void 0===t&&(t=new Uint8Array(8)),void 0===r&&(r=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setFloat64(r,e),t},t.writeFloat64LE=function(e,t,r){return void 0===t&&(t=new Uint8Array(8)),void 0===r&&(r=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setFloat64(r,e,!0),t}},5439:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(8099),n=r(7309);function f(e,t,r){for(var n=1634760805,f=857760878,o=2036477234,a=1797285236,s=r[3]<<24|r[2]<<16|r[1]<<8|r[0],d=r[7]<<24|r[6]<<16|r[5]<<8|r[4],h=r[11]<<24|r[10]<<16|r[9]<<8|r[8],c=r[15]<<24|r[14]<<16|r[13]<<8|r[12],u=r[19]<<24|r[18]<<16|r[17]<<8|r[16],l=r[23]<<24|r[22]<<16|r[21]<<8|r[20],b=r[27]<<24|r[26]<<16|r[25]<<8|r[24],p=r[31]<<24|r[30]<<16|r[29]<<8|r[28],y=t[3]<<24|t[2]<<16|t[1]<<8|t[0],m=t[7]<<24|t[6]<<16|t[5]<<8|t[4],v=t[11]<<24|t[10]<<16|t[9]<<8|t[8],g=t[15]<<24|t[14]<<16|t[13]<<8|t[12],w=n,_=f,M=o,S=a,A=s,E=d,x=h,I=c,k=u,L=l,P=b,U=p,C=y,z=m,N=v,R=g,B=0;B<20;B+=2)A=(A^=k=k+(C=(C^=w=w+A|0)>>>16|C<<16)|0)>>>20|A<<12,E=(E^=L=L+(z=(z^=_=_+E|0)>>>16|z<<16)|0)>>>20|E<<12,x=(x^=P=P+(N=(N^=M=M+x|0)>>>16|N<<16)|0)>>>20|x<<12,I=(I^=U=U+(R=(R^=S=S+I|0)>>>16|R<<16)|0)>>>20|I<<12,x=(x^=P=P+(N=(N^=M=M+x|0)>>>24|N<<8)|0)>>>25|x<<7,I=(I^=U=U+(R=(R^=S=S+I|0)>>>24|R<<8)|0)>>>25|I<<7,E=(E^=L=L+(z=(z^=_=_+E|0)>>>24|z<<8)|0)>>>25|E<<7,A=(A^=k=k+(C=(C^=w=w+A|0)>>>24|C<<8)|0)>>>25|A<<7,E=(E^=P=P+(R=(R^=w=w+E|0)>>>16|R<<16)|0)>>>20|E<<12,x=(x^=U=U+(C=(C^=_=_+x|0)>>>16|C<<16)|0)>>>20|x<<12,I=(I^=k=k+(z=(z^=M=M+I|0)>>>16|z<<16)|0)>>>20|I<<12,A=(A^=L=L+(N=(N^=S=S+A|0)>>>16|N<<16)|0)>>>20|A<<12,I=(I^=k=k+(z=(z^=M=M+I|0)>>>24|z<<8)|0)>>>25|I<<7,A=(A^=L=L+(N=(N^=S=S+A|0)>>>24|N<<8)|0)>>>25|A<<7,x=(x^=U=U+(C=(C^=_=_+x|0)>>>24|C<<8)|0)>>>25|x<<7,E=(E^=P=P+(R=(R^=w=w+E|0)>>>24|R<<8)|0)>>>25|E<<7;i.writeUint32LE(w+n|0,e,0),i.writeUint32LE(_+f|0,e,4),i.writeUint32LE(M+o|0,e,8),i.writeUint32LE(S+a|0,e,12),i.writeUint32LE(A+s|0,e,16),i.writeUint32LE(E+d|0,e,20),i.writeUint32LE(x+h|0,e,24),i.writeUint32LE(I+c|0,e,28),i.writeUint32LE(k+u|0,e,32),i.writeUint32LE(L+l|0,e,36),i.writeUint32LE(P+b|0,e,40),i.writeUint32LE(U+p|0,e,44),i.writeUint32LE(C+y|0,e,48),i.writeUint32LE(z+m|0,e,52),i.writeUint32LE(N+v|0,e,56),i.writeUint32LE(R+g|0,e,60)}function o(e,t,r,i,o){if(void 0===o&&(o=0),32!==e.length)throw new Error("ChaCha: key size must be 32 bytes");if(i.length<r.length)throw new Error("ChaCha: destination is shorter than source");var s,d;if(0===o){if(8!==t.length&&12!==t.length)throw new Error("ChaCha nonce must be 8 or 12 bytes");d=(s=new Uint8Array(16)).length-t.length,s.set(t,d)}else{if(16!==t.length)throw new Error("ChaCha nonce with counter must be 16 bytes");s=t,d=o}for(var h=new Uint8Array(64),c=0;c<r.length;c+=64){f(h,s,e);for(var u=c;u<c+64&&u<r.length;u++)i[u]=r[u]^h[u-c];a(s,0,d)}return n.wipe(h),0===o&&n.wipe(s),i}function a(e,t,r){for(var i=1;r--;)i=i+(255&e[t])|0,e[t]=255&i,i>>>=8,t++;if(i>0)throw new Error("ChaCha: counter overflow")}t.streamXOR=o,t.stream=function(e,t,r,i){return void 0===i&&(i=0),n.wipe(r),o(e,t,r,r,i)}},5501:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(5439),n=r(3027),f=r(7309),o=r(8099),a=r(4153);t.KEY_LENGTH=32,t.NONCE_LENGTH=12,t.TAG_LENGTH=16;var s=new Uint8Array(16),d=function(){function e(e){if(this.nonceLength=t.NONCE_LENGTH,this.tagLength=t.TAG_LENGTH,e.length!==t.KEY_LENGTH)throw new Error("ChaCha20Poly1305 needs 32-byte key");this._key=new Uint8Array(e)}return e.prototype.seal=function(e,t,r,n){if(e.length>16)throw new Error("ChaCha20Poly1305: incorrect nonce length");var o=new Uint8Array(16);o.set(e,o.length-e.length);var a=new Uint8Array(32);i.stream(this._key,o,a,4);var s,d=t.length+this.tagLength;if(n){if(n.length!==d)throw new Error("ChaCha20Poly1305: incorrect destination length");s=n}else s=new Uint8Array(d);return i.streamXOR(this._key,o,t,s,4),this._authenticate(s.subarray(s.length-this.tagLength,s.length),a,s.subarray(0,s.length-this.tagLength),r),f.wipe(o),s},e.prototype.open=function(e,t,r,n){if(e.length>16)throw new Error("ChaCha20Poly1305: incorrect nonce length");if(t.length<this.tagLength)return null;var o=new Uint8Array(16);o.set(e,o.length-e.length);var s=new Uint8Array(32);i.stream(this._key,o,s,4);var d=new Uint8Array(this.tagLength);if(this._authenticate(d,s,t.subarray(0,t.length-this.tagLength),r),!a.equal(d,t.subarray(t.length-this.tagLength,t.length)))return null;var h,c=t.length-this.tagLength;if(n){if(n.length!==c)throw new Error("ChaCha20Poly1305: incorrect destination length");h=n}else h=new Uint8Array(c);return i.streamXOR(this._key,o,t.subarray(0,t.length-this.tagLength),h,4),f.wipe(o),h},e.prototype.clean=function(){return f.wipe(this._key),this},e.prototype._authenticate=function(e,t,r,i){var a=new n.Poly1305(t);i&&(a.update(i),i.length%16>0&&a.update(s.subarray(i.length%16))),a.update(r),r.length%16>0&&a.update(s.subarray(r.length%16));var d=new Uint8Array(8);i&&o.writeUint64LE(i.length,d),a.update(d),o.writeUint64LE(r.length,d),a.update(d);for(var h=a.digest(),c=0;c<h.length;c++)e[c]=h[c];a.clean(),f.wipe(h),f.wipe(d)},e}();t.ChaCha20Poly1305=d},4153:(e,t)=>{"use strict";function r(e,t){if(e.length!==t.length)return 0;for(var r=0,i=0;i<e.length;i++)r|=e[i]^t[i];return 1&r-1>>>8}Object.defineProperty(t,"__esModule",{value:!0}),t.select=function(e,t,r){return~(e-1)&t|e-1&r},t.lessOrEqual=function(e,t){return(0|e)-(0|t)-1>>>31&1},t.compare=r,t.equal=function(e,t){return 0!==e.length&&0!==t.length&&0!==r(e,t)}},1050:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertSecretKeyToX25519=t.convertPublicKeyToX25519=t.verify=t.sign=t.extractPublicKeyFromSecretKey=t.generateKeyPair=t.generateKeyPairFromSeed=t.SEED_LENGTH=t.SECRET_KEY_LENGTH=t.PUBLIC_KEY_LENGTH=t.SIGNATURE_LENGTH=void 0;const i=r(1416),n=r(3350),f=r(7309);function o(e){const t=new Float64Array(16);if(e)for(let r=0;r<e.length;r++)t[r]=e[r];return t}t.SIGNATURE_LENGTH=64,t.PUBLIC_KEY_LENGTH=32,t.SECRET_KEY_LENGTH=64,t.SEED_LENGTH=32,new Uint8Array(32)[0]=9;const a=o(),s=o([1]),d=o([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),h=o([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),c=o([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),u=o([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),l=o([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function b(e,t){for(let r=0;r<16;r++)e[r]=0|t[r]}function p(e){let t=1;for(let r=0;r<16;r++){let i=e[r]+t+65535;t=Math.floor(i/65536),e[r]=i-65536*t}e[0]+=t-1+37*(t-1)}function y(e,t,r){const i=~(r-1);for(let r=0;r<16;r++){const n=i&(e[r]^t[r]);e[r]^=n,t[r]^=n}}function m(e,t){const r=o(),i=o();for(let e=0;e<16;e++)i[e]=t[e];p(i),p(i),p(i);for(let e=0;e<2;e++){r[0]=i[0]-65517;for(let e=1;e<15;e++)r[e]=i[e]-65535-(r[e-1]>>16&1),r[e-1]&=65535;r[15]=i[15]-32767-(r[14]>>16&1);const e=r[15]>>16&1;r[14]&=65535,y(i,r,1-e)}for(let t=0;t<16;t++)e[2*t]=255&i[t],e[2*t+1]=i[t]>>8}function v(e,t){let r=0;for(let i=0;i<32;i++)r|=e[i]^t[i];return(1&r-1>>>8)-1}function g(e,t){const r=new Uint8Array(32),i=new Uint8Array(32);return m(r,e),m(i,t),v(r,i)}function w(e){const t=new Uint8Array(32);return m(t,e),1&t[0]}function _(e,t,r){for(let i=0;i<16;i++)e[i]=t[i]+r[i]}function M(e,t,r){for(let i=0;i<16;i++)e[i]=t[i]-r[i]}function S(e,t,r){let i,n,f=0,o=0,a=0,s=0,d=0,h=0,c=0,u=0,l=0,b=0,p=0,y=0,m=0,v=0,g=0,w=0,_=0,M=0,S=0,A=0,E=0,x=0,I=0,k=0,L=0,P=0,U=0,C=0,z=0,N=0,R=0,B=r[0],T=r[1],O=r[2],D=r[3],j=r[4],K=r[5],q=r[6],H=r[7],J=r[8],F=r[9],V=r[10],W=r[11],$=r[12],G=r[13],X=r[14],Z=r[15];i=t[0],f+=i*B,o+=i*T,a+=i*O,s+=i*D,d+=i*j,h+=i*K,c+=i*q,u+=i*H,l+=i*J,b+=i*F,p+=i*V,y+=i*W,m+=i*$,v+=i*G,g+=i*X,w+=i*Z,i=t[1],o+=i*B,a+=i*T,s+=i*O,d+=i*D,h+=i*j,c+=i*K,u+=i*q,l+=i*H,b+=i*J,p+=i*F,y+=i*V,m+=i*W,v+=i*$,g+=i*G,w+=i*X,_+=i*Z,i=t[2],a+=i*B,s+=i*T,d+=i*O,h+=i*D,c+=i*j,u+=i*K,l+=i*q,b+=i*H,p+=i*J,y+=i*F,m+=i*V,v+=i*W,g+=i*$,w+=i*G,_+=i*X,M+=i*Z,i=t[3],s+=i*B,d+=i*T,h+=i*O,c+=i*D,u+=i*j,l+=i*K,b+=i*q,p+=i*H,y+=i*J,m+=i*F,v+=i*V,g+=i*W,w+=i*$,_+=i*G,M+=i*X,S+=i*Z,i=t[4],d+=i*B,h+=i*T,c+=i*O,u+=i*D,l+=i*j,b+=i*K,p+=i*q,y+=i*H,m+=i*J,v+=i*F,g+=i*V,w+=i*W,_+=i*$,M+=i*G,S+=i*X,A+=i*Z,i=t[5],h+=i*B,c+=i*T,u+=i*O,l+=i*D,b+=i*j,p+=i*K,y+=i*q,m+=i*H,v+=i*J,g+=i*F,w+=i*V,_+=i*W,M+=i*$,S+=i*G,A+=i*X,E+=i*Z,i=t[6],c+=i*B,u+=i*T,l+=i*O,b+=i*D,p+=i*j,y+=i*K,m+=i*q,v+=i*H,g+=i*J,w+=i*F,_+=i*V,M+=i*W,S+=i*$,A+=i*G,E+=i*X,x+=i*Z,i=t[7],u+=i*B,l+=i*T,b+=i*O,p+=i*D,y+=i*j,m+=i*K,v+=i*q,g+=i*H,w+=i*J,_+=i*F,M+=i*V,S+=i*W,A+=i*$,E+=i*G,x+=i*X,I+=i*Z,i=t[8],l+=i*B,b+=i*T,p+=i*O,y+=i*D,m+=i*j,v+=i*K,g+=i*q,w+=i*H,_+=i*J,M+=i*F,S+=i*V,A+=i*W,E+=i*$,x+=i*G,I+=i*X,k+=i*Z,i=t[9],b+=i*B,p+=i*T,y+=i*O,m+=i*D,v+=i*j,g+=i*K,w+=i*q,_+=i*H,M+=i*J,S+=i*F,A+=i*V,E+=i*W,x+=i*$,I+=i*G,k+=i*X,L+=i*Z,i=t[10],p+=i*B,y+=i*T,m+=i*O,v+=i*D,g+=i*j,w+=i*K,_+=i*q,M+=i*H,S+=i*J,A+=i*F,E+=i*V,x+=i*W,I+=i*$,k+=i*G,L+=i*X,P+=i*Z,i=t[11],y+=i*B,m+=i*T,v+=i*O,g+=i*D,w+=i*j,_+=i*K,M+=i*q,S+=i*H,A+=i*J,E+=i*F,x+=i*V,I+=i*W,k+=i*$,L+=i*G,P+=i*X,U+=i*Z,i=t[12],m+=i*B,v+=i*T,g+=i*O,w+=i*D,_+=i*j,M+=i*K,S+=i*q,A+=i*H,E+=i*J,x+=i*F,I+=i*V,k+=i*W,L+=i*$,P+=i*G,U+=i*X,C+=i*Z,i=t[13],v+=i*B,g+=i*T,w+=i*O,_+=i*D,M+=i*j,S+=i*K,A+=i*q,E+=i*H,x+=i*J,I+=i*F,k+=i*V,L+=i*W,P+=i*$,U+=i*G,C+=i*X,z+=i*Z,i=t[14],g+=i*B,w+=i*T,_+=i*O,M+=i*D,S+=i*j,A+=i*K,E+=i*q,x+=i*H,I+=i*J,k+=i*F,L+=i*V,P+=i*W,U+=i*$,C+=i*G,z+=i*X,N+=i*Z,i=t[15],w+=i*B,_+=i*T,M+=i*O,S+=i*D,A+=i*j,E+=i*K,x+=i*q,I+=i*H,k+=i*J,L+=i*F,P+=i*V,U+=i*W,C+=i*$,z+=i*G,N+=i*X,R+=i*Z,f+=38*_,o+=38*M,a+=38*S,s+=38*A,d+=38*E,h+=38*x,c+=38*I,u+=38*k,l+=38*L,b+=38*P,p+=38*U,y+=38*C,m+=38*z,v+=38*N,g+=38*R,n=1,i=f+n+65535,n=Math.floor(i/65536),f=i-65536*n,i=o+n+65535,n=Math.floor(i/65536),o=i-65536*n,i=a+n+65535,n=Math.floor(i/65536),a=i-65536*n,i=s+n+65535,n=Math.floor(i/65536),s=i-65536*n,i=d+n+65535,n=Math.floor(i/65536),d=i-65536*n,i=h+n+65535,n=Math.floor(i/65536),h=i-65536*n,i=c+n+65535,n=Math.floor(i/65536),c=i-65536*n,i=u+n+65535,n=Math.floor(i/65536),u=i-65536*n,i=l+n+65535,n=Math.floor(i/65536),l=i-65536*n,i=b+n+65535,n=Math.floor(i/65536),b=i-65536*n,i=p+n+65535,n=Math.floor(i/65536),p=i-65536*n,i=y+n+65535,n=Math.floor(i/65536),y=i-65536*n,i=m+n+65535,n=Math.floor(i/65536),m=i-65536*n,i=v+n+65535,n=Math.floor(i/65536),v=i-65536*n,i=g+n+65535,n=Math.floor(i/65536),g=i-65536*n,i=w+n+65535,n=Math.floor(i/65536),w=i-65536*n,f+=n-1+37*(n-1),n=1,i=f+n+65535,n=Math.floor(i/65536),f=i-65536*n,i=o+n+65535,n=Math.floor(i/65536),o=i-65536*n,i=a+n+65535,n=Math.floor(i/65536),a=i-65536*n,i=s+n+65535,n=Math.floor(i/65536),s=i-65536*n,i=d+n+65535,n=Math.floor(i/65536),d=i-65536*n,i=h+n+65535,n=Math.floor(i/65536),h=i-65536*n,i=c+n+65535,n=Math.floor(i/65536),c=i-65536*n,i=u+n+65535,n=Math.floor(i/65536),u=i-65536*n,i=l+n+65535,n=Math.floor(i/65536),l=i-65536*n,i=b+n+65535,n=Math.floor(i/65536),b=i-65536*n,i=p+n+65535,n=Math.floor(i/65536),p=i-65536*n,i=y+n+65535,n=Math.floor(i/65536),y=i-65536*n,i=m+n+65535,n=Math.floor(i/65536),m=i-65536*n,i=v+n+65535,n=Math.floor(i/65536),v=i-65536*n,i=g+n+65535,n=Math.floor(i/65536),g=i-65536*n,i=w+n+65535,n=Math.floor(i/65536),w=i-65536*n,f+=n-1+37*(n-1),e[0]=f,e[1]=o,e[2]=a,e[3]=s,e[4]=d,e[5]=h,e[6]=c,e[7]=u,e[8]=l,e[9]=b,e[10]=p,e[11]=y,e[12]=m,e[13]=v,e[14]=g,e[15]=w}function A(e,t){S(e,t,t)}function E(e,t){const r=o();let i;for(i=0;i<16;i++)r[i]=t[i];for(i=253;i>=0;i--)A(r,r),2!==i&&4!==i&&S(r,r,t);for(i=0;i<16;i++)e[i]=r[i]}function x(e,t){const r=o(),i=o(),n=o(),f=o(),a=o(),s=o(),d=o(),c=o(),u=o();M(r,e[1],e[0]),M(u,t[1],t[0]),S(r,r,u),_(i,e[0],e[1]),_(u,t[0],t[1]),S(i,i,u),S(n,e[3],t[3]),S(n,n,h),S(f,e[2],t[2]),_(f,f,f),M(a,i,r),M(s,f,n),_(d,f,n),_(c,i,r),S(e[0],a,s),S(e[1],c,d),S(e[2],d,s),S(e[3],a,c)}function I(e,t,r){for(let i=0;i<4;i++)y(e[i],t[i],r)}function k(e,t){const r=o(),i=o(),n=o();E(n,t[2]),S(r,t[0],n),S(i,t[1],n),m(e,i),e[31]^=w(r)<<7}function L(e,t,r){b(e[0],a),b(e[1],s),b(e[2],s),b(e[3],a);for(let i=255;i>=0;--i){const n=r[i/8|0]>>(7&i)&1;I(e,t,n),x(t,e),x(e,e),I(e,t,n)}}function P(e,t){const r=[o(),o(),o(),o()];b(r[0],c),b(r[1],u),b(r[2],s),S(r[3],c,u),L(e,r,t)}function U(e){if(e.length!==t.SEED_LENGTH)throw new Error(`ed25519: seed must be ${t.SEED_LENGTH} bytes`);const r=(0,n.hash)(e);r[0]&=248,r[31]&=127,r[31]|=64;const i=new Uint8Array(32),f=[o(),o(),o(),o()];P(f,r),k(i,f);const a=new Uint8Array(64);return a.set(e),a.set(i,32),{publicKey:i,secretKey:a}}t.generateKeyPairFromSeed=U,t.generateKeyPair=function(e){const t=(0,i.randomBytes)(32,e),r=U(t);return(0,f.wipe)(t),r},t.extractPublicKeyFromSecretKey=function(e){if(e.length!==t.SECRET_KEY_LENGTH)throw new Error(`ed25519: secret key must be ${t.SECRET_KEY_LENGTH} bytes`);return new Uint8Array(e.subarray(32))};const C=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function z(e,t){let r,i,n,f;for(i=63;i>=32;--i){for(r=0,n=i-32,f=i-12;n<f;++n)t[n]+=r-16*t[i]*C[n-(i-32)],r=Math.floor((t[n]+128)/256),t[n]-=256*r;t[n]+=r,t[i]=0}for(r=0,n=0;n<32;n++)t[n]+=r-(t[31]>>4)*C[n],r=t[n]>>8,t[n]&=255;for(n=0;n<32;n++)t[n]-=r*C[n];for(i=0;i<32;i++)t[i+1]+=t[i]>>8,e[i]=255&t[i]}function N(e){const t=new Float64Array(64);for(let r=0;r<64;r++)t[r]=e[r];for(let t=0;t<64;t++)e[t]=0;z(e,t)}function R(e,t){const r=o(),i=o(),n=o(),f=o(),h=o(),c=o(),u=o();return b(e[2],s),function(e,t){for(let r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}(e[1],t),A(n,e[1]),S(f,n,d),M(n,n,e[2]),_(f,e[2],f),A(h,f),A(c,h),S(u,c,h),S(r,u,n),S(r,r,f),function(e,t){const r=o();let i;for(i=0;i<16;i++)r[i]=t[i];for(i=250;i>=0;i--)A(r,r),1!==i&&S(r,r,t);for(i=0;i<16;i++)e[i]=r[i]}(r,r),S(r,r,n),S(r,r,f),S(r,r,f),S(e[0],r,f),A(i,e[0]),S(i,i,f),g(i,n)&&S(e[0],e[0],l),A(i,e[0]),S(i,i,f),g(i,n)?-1:(w(e[0])===t[31]>>7&&M(e[0],a,e[0]),S(e[3],e[0],e[1]),0)}t.sign=function(e,t){const r=new Float64Array(64),i=[o(),o(),o(),o()],f=(0,n.hash)(e.subarray(0,32));f[0]&=248,f[31]&=127,f[31]|=64;const a=new Uint8Array(64);a.set(f.subarray(32),32);const s=new n.SHA512;s.update(a.subarray(32)),s.update(t);const d=s.digest();s.clean(),N(d),P(i,d),k(a,i),s.reset(),s.update(a.subarray(0,32)),s.update(e.subarray(32)),s.update(t);const h=s.digest();N(h);for(let e=0;e<32;e++)r[e]=d[e];for(let e=0;e<32;e++)for(let t=0;t<32;t++)r[e+t]+=h[e]*f[t];return z(a.subarray(32),r),a},t.verify=function(e,r,i){const f=new Uint8Array(32),a=[o(),o(),o(),o()],s=[o(),o(),o(),o()];if(i.length!==t.SIGNATURE_LENGTH)throw new Error(`ed25519: signature must be ${t.SIGNATURE_LENGTH} bytes`);if(R(s,e))return!1;const d=new n.SHA512;d.update(i.subarray(0,32)),d.update(e),d.update(r);const h=d.digest();return N(h),L(a,s,h),P(s,i.subarray(32)),x(a,s),k(f,a),!v(i,f)},t.convertPublicKeyToX25519=function(e){let t=[o(),o(),o(),o()];if(R(t,e))throw new Error("Ed25519: invalid public key");let r=o(),i=o(),n=t[1];_(r,s,n),M(i,s,n),E(i,i),S(r,r,i);let f=new Uint8Array(32);return m(f,r),f},t.convertSecretKeyToX25519=function(e){const t=(0,n.hash)(e.subarray(0,32));t[0]&=248,t[31]&=127,t[31]|=64;const r=new Uint8Array(t.subarray(0,32));return(0,f.wipe)(t),r}},7117:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.mul=Math.imul||function(e,t){var r=65535&e,i=65535&t;return r*i+((e>>>16&65535)*i+r*(t>>>16&65535)<<16>>>0)|0},t.add=function(e,t){return e+t|0},t.sub=function(e,t){return e-t|0},t.rotl=function(e,t){return e<<t|e>>>32-t},t.rotr=function(e,t){return e<<32-t|e>>>t},t.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},t.MAX_SAFE_INTEGER=9007199254740991,t.isSafeInteger=function(e){return t.isInteger(e)&&e>=-t.MAX_SAFE_INTEGER&&e<=t.MAX_SAFE_INTEGER}},3027:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(4153),n=r(7309);t.DIGEST_LENGTH=16;var f=function(){function e(e){this.digestLength=t.DIGEST_LENGTH,this._buffer=new Uint8Array(16),this._r=new Uint16Array(10),this._h=new Uint16Array(10),this._pad=new Uint16Array(8),this._leftover=0,this._fin=0,this._finished=!1;var r=e[0]|e[1]<<8;this._r[0]=8191&r;var i=e[2]|e[3]<<8;this._r[1]=8191&(r>>>13|i<<3);var n=e[4]|e[5]<<8;this._r[2]=7939&(i>>>10|n<<6);var f=e[6]|e[7]<<8;this._r[3]=8191&(n>>>7|f<<9);var o=e[8]|e[9]<<8;this._r[4]=255&(f>>>4|o<<12),this._r[5]=o>>>1&8190;var a=e[10]|e[11]<<8;this._r[6]=8191&(o>>>14|a<<2);var s=e[12]|e[13]<<8;this._r[7]=8065&(a>>>11|s<<5);var d=e[14]|e[15]<<8;this._r[8]=8191&(s>>>8|d<<8),this._r[9]=d>>>5&127,this._pad[0]=e[16]|e[17]<<8,this._pad[1]=e[18]|e[19]<<8,this._pad[2]=e[20]|e[21]<<8,this._pad[3]=e[22]|e[23]<<8,this._pad[4]=e[24]|e[25]<<8,this._pad[5]=e[26]|e[27]<<8,this._pad[6]=e[28]|e[29]<<8,this._pad[7]=e[30]|e[31]<<8}return e.prototype._blocks=function(e,t,r){for(var i=this._fin?0:2048,n=this._h[0],f=this._h[1],o=this._h[2],a=this._h[3],s=this._h[4],d=this._h[5],h=this._h[6],c=this._h[7],u=this._h[8],l=this._h[9],b=this._r[0],p=this._r[1],y=this._r[2],m=this._r[3],v=this._r[4],g=this._r[5],w=this._r[6],_=this._r[7],M=this._r[8],S=this._r[9];r>=16;){var A=e[t+0]|e[t+1]<<8;n+=8191&A;var E=e[t+2]|e[t+3]<<8;f+=8191&(A>>>13|E<<3);var x=e[t+4]|e[t+5]<<8;o+=8191&(E>>>10|x<<6);var I=e[t+6]|e[t+7]<<8;a+=8191&(x>>>7|I<<9);var k=e[t+8]|e[t+9]<<8;s+=8191&(I>>>4|k<<12),d+=k>>>1&8191;var L=e[t+10]|e[t+11]<<8;h+=8191&(k>>>14|L<<2);var P=e[t+12]|e[t+13]<<8;c+=8191&(L>>>11|P<<5);var U=e[t+14]|e[t+15]<<8,C=0,z=C;z+=n*b,z+=f*(5*S),z+=o*(5*M),z+=a*(5*_),C=(z+=s*(5*w))>>>13,z&=8191,z+=d*(5*g),z+=h*(5*v),z+=c*(5*m),z+=(u+=8191&(P>>>8|U<<8))*(5*y);var N=C+=(z+=(l+=U>>>5|i)*(5*p))>>>13;N+=n*p,N+=f*b,N+=o*(5*S),N+=a*(5*M),C=(N+=s*(5*_))>>>13,N&=8191,N+=d*(5*w),N+=h*(5*g),N+=c*(5*v),N+=u*(5*m),C+=(N+=l*(5*y))>>>13,N&=8191;var R=C;R+=n*y,R+=f*p,R+=o*b,R+=a*(5*S),C=(R+=s*(5*M))>>>13,R&=8191,R+=d*(5*_),R+=h*(5*w),R+=c*(5*g),R+=u*(5*v);var B=C+=(R+=l*(5*m))>>>13;B+=n*m,B+=f*y,B+=o*p,B+=a*b,C=(B+=s*(5*S))>>>13,B&=8191,B+=d*(5*M),B+=h*(5*_),B+=c*(5*w),B+=u*(5*g);var T=C+=(B+=l*(5*v))>>>13;T+=n*v,T+=f*m,T+=o*y,T+=a*p,C=(T+=s*b)>>>13,T&=8191,T+=d*(5*S),T+=h*(5*M),T+=c*(5*_),T+=u*(5*w);var O=C+=(T+=l*(5*g))>>>13;O+=n*g,O+=f*v,O+=o*m,O+=a*y,C=(O+=s*p)>>>13,O&=8191,O+=d*b,O+=h*(5*S),O+=c*(5*M),O+=u*(5*_);var D=C+=(O+=l*(5*w))>>>13;D+=n*w,D+=f*g,D+=o*v,D+=a*m,C=(D+=s*y)>>>13,D&=8191,D+=d*p,D+=h*b,D+=c*(5*S),D+=u*(5*M);var j=C+=(D+=l*(5*_))>>>13;j+=n*_,j+=f*w,j+=o*g,j+=a*v,C=(j+=s*m)>>>13,j&=8191,j+=d*y,j+=h*p,j+=c*b,j+=u*(5*S);var K=C+=(j+=l*(5*M))>>>13;K+=n*M,K+=f*_,K+=o*w,K+=a*g,C=(K+=s*v)>>>13,K&=8191,K+=d*m,K+=h*y,K+=c*p,K+=u*b;var q=C+=(K+=l*(5*S))>>>13;q+=n*S,q+=f*M,q+=o*_,q+=a*w,C=(q+=s*g)>>>13,q&=8191,q+=d*v,q+=h*m,q+=c*y,q+=u*p,n=z=8191&(C=(C=((C+=(q+=l*b)>>>13)<<2)+C|0)+(z&=8191)|0),f=N+=C>>>=13,o=R&=8191,a=B&=8191,s=T&=8191,d=O&=8191,h=D&=8191,c=j&=8191,u=K&=8191,l=q&=8191,t+=16,r-=16}this._h[0]=n,this._h[1]=f,this._h[2]=o,this._h[3]=a,this._h[4]=s,this._h[5]=d,this._h[6]=h,this._h[7]=c,this._h[8]=u,this._h[9]=l},e.prototype.finish=function(e,t){void 0===t&&(t=0);var r,i,n,f,o=new Uint16Array(10);if(this._leftover){for(f=this._leftover,this._buffer[f++]=1;f<16;f++)this._buffer[f]=0;this._fin=1,this._blocks(this._buffer,0,16)}for(r=this._h[1]>>>13,this._h[1]&=8191,f=2;f<10;f++)this._h[f]+=r,r=this._h[f]>>>13,this._h[f]&=8191;for(this._h[0]+=5*r,r=this._h[0]>>>13,this._h[0]&=8191,this._h[1]+=r,r=this._h[1]>>>13,this._h[1]&=8191,this._h[2]+=r,o[0]=this._h[0]+5,r=o[0]>>>13,o[0]&=8191,f=1;f<10;f++)o[f]=this._h[f]+r,r=o[f]>>>13,o[f]&=8191;for(o[9]-=8192,i=(1^r)-1,f=0;f<10;f++)o[f]&=i;for(i=~i,f=0;f<10;f++)this._h[f]=this._h[f]&i|o[f];for(this._h[0]=65535&(this._h[0]|this._h[1]<<13),this._h[1]=65535&(this._h[1]>>>3|this._h[2]<<10),this._h[2]=65535&(this._h[2]>>>6|this._h[3]<<7),this._h[3]=65535&(this._h[3]>>>9|this._h[4]<<4),this._h[4]=65535&(this._h[4]>>>12|this._h[5]<<1|this._h[6]<<14),this._h[5]=65535&(this._h[6]>>>2|this._h[7]<<11),this._h[6]=65535&(this._h[7]>>>5|this._h[8]<<8),this._h[7]=65535&(this._h[8]>>>8|this._h[9]<<5),n=this._h[0]+this._pad[0],this._h[0]=65535&n,f=1;f<8;f++)n=(this._h[f]+this._pad[f]|0)+(n>>>16)|0,this._h[f]=65535&n;return e[t+0]=this._h[0]>>>0,e[t+1]=this._h[0]>>>8,e[t+2]=this._h[1]>>>0,e[t+3]=this._h[1]>>>8,e[t+4]=this._h[2]>>>0,e[t+5]=this._h[2]>>>8,e[t+6]=this._h[3]>>>0,e[t+7]=this._h[3]>>>8,e[t+8]=this._h[4]>>>0,e[t+9]=this._h[4]>>>8,e[t+10]=this._h[5]>>>0,e[t+11]=this._h[5]>>>8,e[t+12]=this._h[6]>>>0,e[t+13]=this._h[6]>>>8,e[t+14]=this._h[7]>>>0,e[t+15]=this._h[7]>>>8,this._finished=!0,this},e.prototype.update=function(e){var t,r=0,i=e.length;if(this._leftover){(t=16-this._leftover)>i&&(t=i);for(var n=0;n<t;n++)this._buffer[this._leftover+n]=e[r+n];if(i-=t,r+=t,this._leftover+=t,this._leftover<16)return this;this._blocks(this._buffer,0,16),this._leftover=0}if(i>=16&&(t=i-i%16,this._blocks(e,r,t),r+=t,i-=t),i){for(n=0;n<i;n++)this._buffer[this._leftover+n]=e[r+n];this._leftover+=i}return this},e.prototype.digest=function(){if(this._finished)throw new Error("Poly1305 was finished");var e=new Uint8Array(16);return this.finish(e),e},e.prototype.clean=function(){return n.wipe(this._buffer),n.wipe(this._r),n.wipe(this._h),n.wipe(this._pad),this._leftover=0,this._fin=0,this._finished=!0,this},e}();t.Poly1305=f,t.oneTimeAuth=function(e,t){var r=new f(e);r.update(t);var i=r.digest();return r.clean(),i},t.equal=function(e,r){return e.length===t.DIGEST_LENGTH&&r.length===t.DIGEST_LENGTH&&i.equal(e,r)}},1416:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomStringForEntropy=t.randomString=t.randomUint32=t.randomBytes=t.defaultRandomSource=void 0;const i=r(6008),n=r(8099),f=r(7309);function o(e,r=t.defaultRandomSource){return r.randomBytes(e)}t.defaultRandomSource=new i.SystemRandomSource,t.randomBytes=o,t.randomUint32=function(e=t.defaultRandomSource){const r=o(4,e),i=(0,n.readUint32LE)(r);return(0,f.wipe)(r),i};const a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";function s(e,r=a,i=t.defaultRandomSource){if(r.length<2)throw new Error("randomString charset is too short");if(r.length>256)throw new Error("randomString charset is too long");let n="";const s=r.length,d=256-256%s;for(;e>0;){const t=o(Math.ceil(256*e/d),i);for(let i=0;i<t.length&&e>0;i++){const f=t[i];f<d&&(n+=r.charAt(f%s),e--)}(0,f.wipe)(t)}return n}t.randomString=s,t.randomStringForEntropy=function(e,r=a,i=t.defaultRandomSource){return s(Math.ceil(e/(Math.log(r.length)/Math.LN2)),r,i)}},5455:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BrowserRandomSource=void 0,t.BrowserRandomSource=class{constructor(){this.isAvailable=!1,this.isInstantiated=!1;const e="undefined"!=typeof self?self.crypto||self.msCrypto:null;e&&void 0!==e.getRandomValues&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error("Browser random byte generator is not available.");const t=new Uint8Array(e);for(let e=0;e<t.length;e+=65536)this._crypto.getRandomValues(t.subarray(e,e+Math.min(t.length-e,65536)));return t}}},8871:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NodeRandomSource=void 0;const i=r(7309);t.NodeRandomSource=class{constructor(){this.isAvailable=!1,this.isInstantiated=!1;{const e=r(5883);e&&e.randomBytes&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error("Node.js random byte generator is not available.");let t=this._crypto.randomBytes(e);if(t.length!==e)throw new Error("NodeRandomSource: got fewer bytes than requested");const r=new Uint8Array(e);for(let e=0;e<r.length;e++)r[e]=t[e];return(0,i.wipe)(t),r}}},6008:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SystemRandomSource=void 0;const i=r(5455),n=r(8871);t.SystemRandomSource=class{constructor(){return this.isAvailable=!1,this.name="",this._source=new i.BrowserRandomSource,this._source.isAvailable?(this.isAvailable=!0,void(this.name="Browser")):(this._source=new n.NodeRandomSource,this._source.isAvailable?(this.isAvailable=!0,void(this.name="Node")):void 0)}randomBytes(e){if(!this.isAvailable)throw new Error("System random byte generator is not available.");return this._source.randomBytes(e)}}},3294:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(8099),n=r(7309);t.DIGEST_LENGTH=32,t.BLOCK_SIZE=64;var f=function(){function e(){this.digestLength=t.DIGEST_LENGTH,this.blockSize=t.BLOCK_SIZE,this._state=new Int32Array(8),this._temp=new Int32Array(64),this._buffer=new Uint8Array(128),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this.reset()}return e.prototype._initState=function(){this._state[0]=1779033703,this._state[1]=3144134277,this._state[2]=1013904242,this._state[3]=2773480762,this._state[4]=1359893119,this._state[5]=2600822924,this._state[6]=528734635,this._state[7]=1541459225},e.prototype.reset=function(){return this._initState(),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this},e.prototype.clean=function(){n.wipe(this._buffer),n.wipe(this._temp),this.reset()},e.prototype.update=function(e,t){if(void 0===t&&(t=e.length),this._finished)throw new Error("SHA256: can't update because hash was finished.");var r=0;if(this._bytesHashed+=t,this._bufferLength>0){for(;this._bufferLength<this.blockSize&&t>0;)this._buffer[this._bufferLength++]=e[r++],t--;this._bufferLength===this.blockSize&&(a(this._temp,this._state,this._buffer,0,this.blockSize),this._bufferLength=0)}for(t>=this.blockSize&&(r=a(this._temp,this._state,e,r,t),t%=this.blockSize);t>0;)this._buffer[this._bufferLength++]=e[r++],t--;return this},e.prototype.finish=function(e){if(!this._finished){var t=this._bytesHashed,r=this._bufferLength,n=t/536870912|0,f=t<<3,o=t%64<56?64:128;this._buffer[r]=128;for(var s=r+1;s<o-8;s++)this._buffer[s]=0;i.writeUint32BE(n,this._buffer,o-8),i.writeUint32BE(f,this._buffer,o-4),a(this._temp,this._state,this._buffer,0,o),this._finished=!0}for(s=0;s<this.digestLength/4;s++)i.writeUint32BE(this._state[s],e,4*s);return this},e.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},e.prototype.saveState=function(){if(this._finished)throw new Error("SHA256: cannot save finished state");return{state:new Int32Array(this._state),buffer:this._bufferLength>0?new Uint8Array(this._buffer):void 0,bufferLength:this._bufferLength,bytesHashed:this._bytesHashed}},e.prototype.restoreState=function(e){return this._state.set(e.state),this._bufferLength=e.bufferLength,e.buffer&&this._buffer.set(e.buffer),this._bytesHashed=e.bytesHashed,this._finished=!1,this},e.prototype.cleanSavedState=function(e){n.wipe(e.state),e.buffer&&n.wipe(e.buffer),e.bufferLength=0,e.bytesHashed=0},e}();t.SHA256=f;var o=new Int32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function a(e,t,r,n,f){for(;f>=64;){for(var a=t[0],s=t[1],d=t[2],h=t[3],c=t[4],u=t[5],l=t[6],b=t[7],p=0;p<16;p++){var y=n+4*p;e[p]=i.readUint32BE(r,y)}for(p=16;p<64;p++){var m=e[p-2],v=(m>>>17|m<<15)^(m>>>19|m<<13)^m>>>10,g=((m=e[p-15])>>>7|m<<25)^(m>>>18|m<<14)^m>>>3;e[p]=(v+e[p-7]|0)+(g+e[p-16]|0)}for(p=0;p<64;p++)v=(((c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7))+(c&u^~c&l)|0)+(b+(o[p]+e[p]|0)|0)|0,g=((a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10))+(a&s^a&d^s&d)|0,b=l,l=u,u=c,c=h+v|0,h=d,d=s,s=a,a=v+g|0;t[0]+=a,t[1]+=s,t[2]+=d,t[3]+=h,t[4]+=c,t[5]+=u,t[6]+=l,t[7]+=b,n+=64,f-=64}return n}t.hash=function(e){var t=new f;t.update(e);var r=t.digest();return t.clean(),r}},3350:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(8099),n=r(7309);t.DIGEST_LENGTH=64,t.BLOCK_SIZE=128;var f=function(){function e(){this.digestLength=t.DIGEST_LENGTH,this.blockSize=t.BLOCK_SIZE,this._stateHi=new Int32Array(8),this._stateLo=new Int32Array(8),this._tempHi=new Int32Array(16),this._tempLo=new Int32Array(16),this._buffer=new Uint8Array(256),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this.reset()}return e.prototype._initState=function(){this._stateHi[0]=1779033703,this._stateHi[1]=3144134277,this._stateHi[2]=1013904242,this._stateHi[3]=2773480762,this._stateHi[4]=1359893119,this._stateHi[5]=2600822924,this._stateHi[6]=528734635,this._stateHi[7]=1541459225,this._stateLo[0]=4089235720,this._stateLo[1]=2227873595,this._stateLo[2]=4271175723,this._stateLo[3]=1595750129,this._stateLo[4]=2917565137,this._stateLo[5]=725511199,this._stateLo[6]=4215389547,this._stateLo[7]=327033209},e.prototype.reset=function(){return this._initState(),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this},e.prototype.clean=function(){n.wipe(this._buffer),n.wipe(this._tempHi),n.wipe(this._tempLo),this.reset()},e.prototype.update=function(e,r){if(void 0===r&&(r=e.length),this._finished)throw new Error("SHA512: can't update because hash was finished.");var i=0;if(this._bytesHashed+=r,this._bufferLength>0){for(;this._bufferLength<t.BLOCK_SIZE&&r>0;)this._buffer[this._bufferLength++]=e[i++],r--;this._bufferLength===this.blockSize&&(a(this._tempHi,this._tempLo,this._stateHi,this._stateLo,this._buffer,0,this.blockSize),this._bufferLength=0)}for(r>=this.blockSize&&(i=a(this._tempHi,this._tempLo,this._stateHi,this._stateLo,e,i,r),r%=this.blockSize);r>0;)this._buffer[this._bufferLength++]=e[i++],r--;return this},e.prototype.finish=function(e){if(!this._finished){var t=this._bytesHashed,r=this._bufferLength,n=t/536870912|0,f=t<<3,o=t%128<112?128:256;this._buffer[r]=128;for(var s=r+1;s<o-8;s++)this._buffer[s]=0;i.writeUint32BE(n,this._buffer,o-8),i.writeUint32BE(f,this._buffer,o-4),a(this._tempHi,this._tempLo,this._stateHi,this._stateLo,this._buffer,0,o),this._finished=!0}for(s=0;s<this.digestLength/8;s++)i.writeUint32BE(this._stateHi[s],e,8*s),i.writeUint32BE(this._stateLo[s],e,8*s+4);return this},e.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},e.prototype.saveState=function(){if(this._finished)throw new Error("SHA256: cannot save finished state");return{stateHi:new Int32Array(this._stateHi),stateLo:new Int32Array(this._stateLo),buffer:this._bufferLength>0?new Uint8Array(this._buffer):void 0,bufferLength:this._bufferLength,bytesHashed:this._bytesHashed}},e.prototype.restoreState=function(e){return this._stateHi.set(e.stateHi),this._stateLo.set(e.stateLo),this._bufferLength=e.bufferLength,e.buffer&&this._buffer.set(e.buffer),this._bytesHashed=e.bytesHashed,this._finished=!1,this},e.prototype.cleanSavedState=function(e){n.wipe(e.stateHi),n.wipe(e.stateLo),e.buffer&&n.wipe(e.buffer),e.bufferLength=0,e.bytesHashed=0},e}();t.SHA512=f;var o=new Int32Array([1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591]);function a(e,t,r,n,f,a,s){for(var d,h,c,u,l,b,p,y,m=r[0],v=r[1],g=r[2],w=r[3],_=r[4],M=r[5],S=r[6],A=r[7],E=n[0],x=n[1],I=n[2],k=n[3],L=n[4],P=n[5],U=n[6],C=n[7];s>=128;){for(var z=0;z<16;z++){var N=8*z+a;e[z]=i.readUint32BE(f,N),t[z]=i.readUint32BE(f,N+4)}for(z=0;z<80;z++){var R,B,T=m,O=v,D=g,j=w,K=_,q=M,H=S,J=E,F=x,V=I,W=k,$=L,G=P,X=U;if(l=65535&(h=C),b=h>>>16,p=65535&(d=A),y=d>>>16,l+=65535&(h=(L>>>14|_<<18)^(L>>>18|_<<14)^(_>>>9|L<<23)),b+=h>>>16,p+=65535&(d=(_>>>14|L<<18)^(_>>>18|L<<14)^(L>>>9|_<<23)),y+=d>>>16,l+=65535&(h=L&P^~L&U),b+=h>>>16,p+=65535&(d=_&M^~_&S),y+=d>>>16,d=o[2*z],l+=65535&(h=o[2*z+1]),b+=h>>>16,p+=65535&d,y+=d>>>16,d=e[z%16],b+=(h=t[z%16])>>>16,p+=65535&d,y+=d>>>16,p+=(b+=(l+=65535&h)>>>16)>>>16,l=65535&(h=u=65535&l|b<<16),b=h>>>16,p=65535&(d=c=65535&p|(y+=p>>>16)<<16),y=d>>>16,l+=65535&(h=(E>>>28|m<<4)^(m>>>2|E<<30)^(m>>>7|E<<25)),b+=h>>>16,p+=65535&(d=(m>>>28|E<<4)^(E>>>2|m<<30)^(E>>>7|m<<25)),y+=d>>>16,b+=(h=E&x^E&I^x&I)>>>16,p+=65535&(d=m&v^m&g^v&g),y+=d>>>16,R=65535&(p+=(b+=(l+=65535&h)>>>16)>>>16)|(y+=p>>>16)<<16,B=65535&l|b<<16,l=65535&(h=W),b=h>>>16,p=65535&(d=j),y=d>>>16,b+=(h=u)>>>16,p+=65535&(d=c),y+=d>>>16,v=T,g=O,w=D,_=j=65535&(p+=(b+=(l+=65535&h)>>>16)>>>16)|(y+=p>>>16)<<16,M=K,S=q,A=H,m=R,x=J,I=F,k=V,L=W=65535&l|b<<16,P=$,U=G,C=X,E=B,z%16==15)for(N=0;N<16;N++)d=e[N],l=65535&(h=t[N]),b=h>>>16,p=65535&d,y=d>>>16,d=e[(N+9)%16],l+=65535&(h=t[(N+9)%16]),b+=h>>>16,p+=65535&d,y+=d>>>16,c=e[(N+1)%16],l+=65535&(h=((u=t[(N+1)%16])>>>1|c<<31)^(u>>>8|c<<24)^(u>>>7|c<<25)),b+=h>>>16,p+=65535&(d=(c>>>1|u<<31)^(c>>>8|u<<24)^c>>>7),y+=d>>>16,c=e[(N+14)%16],b+=(h=((u=t[(N+14)%16])>>>19|c<<13)^(c>>>29|u<<3)^(u>>>6|c<<26))>>>16,p+=65535&(d=(c>>>19|u<<13)^(u>>>29|c<<3)^c>>>6),y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,e[N]=65535&p|y<<16,t[N]=65535&l|b<<16}l=65535&(h=E),b=h>>>16,p=65535&(d=m),y=d>>>16,d=r[0],b+=(h=n[0])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[0]=m=65535&p|y<<16,n[0]=E=65535&l|b<<16,l=65535&(h=x),b=h>>>16,p=65535&(d=v),y=d>>>16,d=r[1],b+=(h=n[1])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[1]=v=65535&p|y<<16,n[1]=x=65535&l|b<<16,l=65535&(h=I),b=h>>>16,p=65535&(d=g),y=d>>>16,d=r[2],b+=(h=n[2])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[2]=g=65535&p|y<<16,n[2]=I=65535&l|b<<16,l=65535&(h=k),b=h>>>16,p=65535&(d=w),y=d>>>16,d=r[3],b+=(h=n[3])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[3]=w=65535&p|y<<16,n[3]=k=65535&l|b<<16,l=65535&(h=L),b=h>>>16,p=65535&(d=_),y=d>>>16,d=r[4],b+=(h=n[4])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[4]=_=65535&p|y<<16,n[4]=L=65535&l|b<<16,l=65535&(h=P),b=h>>>16,p=65535&(d=M),y=d>>>16,d=r[5],b+=(h=n[5])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[5]=M=65535&p|y<<16,n[5]=P=65535&l|b<<16,l=65535&(h=U),b=h>>>16,p=65535&(d=S),y=d>>>16,d=r[6],b+=(h=n[6])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[6]=S=65535&p|y<<16,n[6]=U=65535&l|b<<16,l=65535&(h=C),b=h>>>16,p=65535&(d=A),y=d>>>16,d=r[7],b+=(h=n[7])>>>16,p+=65535&d,y+=d>>>16,y+=(p+=(b+=(l+=65535&h)>>>16)>>>16)>>>16,r[7]=A=65535&p|y<<16,n[7]=C=65535&l|b<<16,a+=128,s-=128}return a}t.hash=function(e){var t=new f;t.update(e);var r=t.digest();return t.clean(),r}},7309:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wipe=function(e){for(var t=0;t<e.length;t++)e[t]=0;return e}},7664:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sharedKey=t.generateKeyPair=t.generateKeyPairFromSeed=t.scalarMultBase=t.scalarMult=t.SHARED_KEY_LENGTH=t.SECRET_KEY_LENGTH=t.PUBLIC_KEY_LENGTH=void 0;const i=r(1416),n=r(7309);function f(e){const t=new Float64Array(16);if(e)for(let r=0;r<e.length;r++)t[r]=e[r];return t}t.PUBLIC_KEY_LENGTH=32,t.SECRET_KEY_LENGTH=32,t.SHARED_KEY_LENGTH=32;const o=new Uint8Array(32);o[0]=9;const a=f([56129,1]);function s(e){let t=1;for(let r=0;r<16;r++){let i=e[r]+t+65535;t=Math.floor(i/65536),e[r]=i-65536*t}e[0]+=t-1+37*(t-1)}function d(e,t,r){const i=~(r-1);for(let r=0;r<16;r++){const n=i&(e[r]^t[r]);e[r]^=n,t[r]^=n}}function h(e,t,r){for(let i=0;i<16;i++)e[i]=t[i]+r[i]}function c(e,t,r){for(let i=0;i<16;i++)e[i]=t[i]-r[i]}function u(e,t,r){let i,n,f=0,o=0,a=0,s=0,d=0,h=0,c=0,u=0,l=0,b=0,p=0,y=0,m=0,v=0,g=0,w=0,_=0,M=0,S=0,A=0,E=0,x=0,I=0,k=0,L=0,P=0,U=0,C=0,z=0,N=0,R=0,B=r[0],T=r[1],O=r[2],D=r[3],j=r[4],K=r[5],q=r[6],H=r[7],J=r[8],F=r[9],V=r[10],W=r[11],$=r[12],G=r[13],X=r[14],Z=r[15];i=t[0],f+=i*B,o+=i*T,a+=i*O,s+=i*D,d+=i*j,h+=i*K,c+=i*q,u+=i*H,l+=i*J,b+=i*F,p+=i*V,y+=i*W,m+=i*$,v+=i*G,g+=i*X,w+=i*Z,i=t[1],o+=i*B,a+=i*T,s+=i*O,d+=i*D,h+=i*j,c+=i*K,u+=i*q,l+=i*H,b+=i*J,p+=i*F,y+=i*V,m+=i*W,v+=i*$,g+=i*G,w+=i*X,_+=i*Z,i=t[2],a+=i*B,s+=i*T,d+=i*O,h+=i*D,c+=i*j,u+=i*K,l+=i*q,b+=i*H,p+=i*J,y+=i*F,m+=i*V,v+=i*W,g+=i*$,w+=i*G,_+=i*X,M+=i*Z,i=t[3],s+=i*B,d+=i*T,h+=i*O,c+=i*D,u+=i*j,l+=i*K,b+=i*q,p+=i*H,y+=i*J,m+=i*F,v+=i*V,g+=i*W,w+=i*$,_+=i*G,M+=i*X,S+=i*Z,i=t[4],d+=i*B,h+=i*T,c+=i*O,u+=i*D,l+=i*j,b+=i*K,p+=i*q,y+=i*H,m+=i*J,v+=i*F,g+=i*V,w+=i*W,_+=i*$,M+=i*G,S+=i*X,A+=i*Z,i=t[5],h+=i*B,c+=i*T,u+=i*O,l+=i*D,b+=i*j,p+=i*K,y+=i*q,m+=i*H,v+=i*J,g+=i*F,w+=i*V,_+=i*W,M+=i*$,S+=i*G,A+=i*X,E+=i*Z,i=t[6],c+=i*B,u+=i*T,l+=i*O,b+=i*D,p+=i*j,y+=i*K,m+=i*q,v+=i*H,g+=i*J,w+=i*F,_+=i*V,M+=i*W,S+=i*$,A+=i*G,E+=i*X,x+=i*Z,i=t[7],u+=i*B,l+=i*T,b+=i*O,p+=i*D,y+=i*j,m+=i*K,v+=i*q,g+=i*H,w+=i*J,_+=i*F,M+=i*V,S+=i*W,A+=i*$,E+=i*G,x+=i*X,I+=i*Z,i=t[8],l+=i*B,b+=i*T,p+=i*O,y+=i*D,m+=i*j,v+=i*K,g+=i*q,w+=i*H,_+=i*J,M+=i*F,S+=i*V,A+=i*W,E+=i*$,x+=i*G,I+=i*X,k+=i*Z,i=t[9],b+=i*B,p+=i*T,y+=i*O,m+=i*D,v+=i*j,g+=i*K,w+=i*q,_+=i*H,M+=i*J,S+=i*F,A+=i*V,E+=i*W,x+=i*$,I+=i*G,k+=i*X,L+=i*Z,i=t[10],p+=i*B,y+=i*T,m+=i*O,v+=i*D,g+=i*j,w+=i*K,_+=i*q,M+=i*H,S+=i*J,A+=i*F,E+=i*V,x+=i*W,I+=i*$,k+=i*G,L+=i*X,P+=i*Z,i=t[11],y+=i*B,m+=i*T,v+=i*O,g+=i*D,w+=i*j,_+=i*K,M+=i*q,S+=i*H,A+=i*J,E+=i*F,x+=i*V,I+=i*W,k+=i*$,L+=i*G,P+=i*X,U+=i*Z,i=t[12],m+=i*B,v+=i*T,g+=i*O,w+=i*D,_+=i*j,M+=i*K,S+=i*q,A+=i*H,E+=i*J,x+=i*F,I+=i*V,k+=i*W,L+=i*$,P+=i*G,U+=i*X,C+=i*Z,i=t[13],v+=i*B,g+=i*T,w+=i*O,_+=i*D,M+=i*j,S+=i*K,A+=i*q,E+=i*H,x+=i*J,I+=i*F,k+=i*V,L+=i*W,P+=i*$,U+=i*G,C+=i*X,z+=i*Z,i=t[14],g+=i*B,w+=i*T,_+=i*O,M+=i*D,S+=i*j,A+=i*K,E+=i*q,x+=i*H,I+=i*J,k+=i*F,L+=i*V,P+=i*W,U+=i*$,C+=i*G,z+=i*X,N+=i*Z,i=t[15],w+=i*B,_+=i*T,M+=i*O,S+=i*D,A+=i*j,E+=i*K,x+=i*q,I+=i*H,k+=i*J,L+=i*F,P+=i*V,U+=i*W,C+=i*$,z+=i*G,N+=i*X,R+=i*Z,f+=38*_,o+=38*M,a+=38*S,s+=38*A,d+=38*E,h+=38*x,c+=38*I,u+=38*k,l+=38*L,b+=38*P,p+=38*U,y+=38*C,m+=38*z,v+=38*N,g+=38*R,n=1,i=f+n+65535,n=Math.floor(i/65536),f=i-65536*n,i=o+n+65535,n=Math.floor(i/65536),o=i-65536*n,i=a+n+65535,n=Math.floor(i/65536),a=i-65536*n,i=s+n+65535,n=Math.floor(i/65536),s=i-65536*n,i=d+n+65535,n=Math.floor(i/65536),d=i-65536*n,i=h+n+65535,n=Math.floor(i/65536),h=i-65536*n,i=c+n+65535,n=Math.floor(i/65536),c=i-65536*n,i=u+n+65535,n=Math.floor(i/65536),u=i-65536*n,i=l+n+65535,n=Math.floor(i/65536),l=i-65536*n,i=b+n+65535,n=Math.floor(i/65536),b=i-65536*n,i=p+n+65535,n=Math.floor(i/65536),p=i-65536*n,i=y+n+65535,n=Math.floor(i/65536),y=i-65536*n,i=m+n+65535,n=Math.floor(i/65536),m=i-65536*n,i=v+n+65535,n=Math.floor(i/65536),v=i-65536*n,i=g+n+65535,n=Math.floor(i/65536),g=i-65536*n,i=w+n+65535,n=Math.floor(i/65536),w=i-65536*n,f+=n-1+37*(n-1),n=1,i=f+n+65535,n=Math.floor(i/65536),f=i-65536*n,i=o+n+65535,n=Math.floor(i/65536),o=i-65536*n,i=a+n+65535,n=Math.floor(i/65536),a=i-65536*n,i=s+n+65535,n=Math.floor(i/65536),s=i-65536*n,i=d+n+65535,n=Math.floor(i/65536),d=i-65536*n,i=h+n+65535,n=Math.floor(i/65536),h=i-65536*n,i=c+n+65535,n=Math.floor(i/65536),c=i-65536*n,i=u+n+65535,n=Math.floor(i/65536),u=i-65536*n,i=l+n+65535,n=Math.floor(i/65536),l=i-65536*n,i=b+n+65535,n=Math.floor(i/65536),b=i-65536*n,i=p+n+65535,n=Math.floor(i/65536),p=i-65536*n,i=y+n+65535,n=Math.floor(i/65536),y=i-65536*n,i=m+n+65535,n=Math.floor(i/65536),m=i-65536*n,i=v+n+65535,n=Math.floor(i/65536),v=i-65536*n,i=g+n+65535,n=Math.floor(i/65536),g=i-65536*n,i=w+n+65535,n=Math.floor(i/65536),w=i-65536*n,f+=n-1+37*(n-1),e[0]=f,e[1]=o,e[2]=a,e[3]=s,e[4]=d,e[5]=h,e[6]=c,e[7]=u,e[8]=l,e[9]=b,e[10]=p,e[11]=y,e[12]=m,e[13]=v,e[14]=g,e[15]=w}function l(e,t){u(e,t,t)}function b(e,t){const r=new Uint8Array(32),i=new Float64Array(80),n=f(),o=f(),b=f(),p=f(),y=f(),m=f();for(let t=0;t<31;t++)r[t]=e[t];r[31]=127&e[31]|64,r[0]&=248,function(e,t){for(let r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}(i,t);for(let e=0;e<16;e++)o[e]=i[e];n[0]=p[0]=1;for(let e=254;e>=0;--e){const t=r[e>>>3]>>>(7&e)&1;d(n,o,t),d(b,p,t),h(y,n,b),c(n,n,b),h(b,o,p),c(o,o,p),l(p,y),l(m,n),u(n,b,n),u(b,o,y),h(y,n,b),c(n,n,b),l(o,n),c(b,p,m),u(n,b,a),h(n,n,p),u(b,b,n),u(n,p,m),u(p,o,i),l(o,y),d(n,o,t),d(b,p,t)}for(let e=0;e<16;e++)i[e+16]=n[e],i[e+32]=b[e],i[e+48]=o[e],i[e+64]=p[e];const v=i.subarray(32),g=i.subarray(16);!function(e,t){const r=f();for(let e=0;e<16;e++)r[e]=t[e];for(let e=253;e>=0;e--)l(r,r),2!==e&&4!==e&&u(r,r,t);for(let t=0;t<16;t++)e[t]=r[t]}(v,v),u(g,g,v);const w=new Uint8Array(32);return function(e,t){const r=f(),i=f();for(let e=0;e<16;e++)i[e]=t[e];s(i),s(i),s(i);for(let e=0;e<2;e++){r[0]=i[0]-65517;for(let e=1;e<15;e++)r[e]=i[e]-65535-(r[e-1]>>16&1),r[e-1]&=65535;r[15]=i[15]-32767-(r[14]>>16&1);const e=r[15]>>16&1;r[14]&=65535,d(i,r,1-e)}for(let t=0;t<16;t++)e[2*t]=255&i[t],e[2*t+1]=i[t]>>8}(w,g),w}function p(e){return b(e,o)}function y(e){if(e.length!==t.SECRET_KEY_LENGTH)throw new Error(`x25519: seed must be ${t.SECRET_KEY_LENGTH} bytes`);const r=new Uint8Array(e);return{publicKey:p(r),secretKey:r}}t.scalarMult=b,t.scalarMultBase=p,t.generateKeyPairFromSeed=y,t.generateKeyPair=function(e){const t=(0,i.randomBytes)(32,e),r=y(t);return(0,n.wipe)(t),r},t.sharedKey=function(e,r,i=!1){if(e.length!==t.PUBLIC_KEY_LENGTH)throw new Error("X25519: incorrect secret key length");if(r.length!==t.PUBLIC_KEY_LENGTH)throw new Error("X25519: incorrect public key length");const n=b(e,r);if(i){let e=0;for(let t=0;t<n.length;t++)e|=n[t];if(0===e)throw new Error("X25519: invalid shared key")}return n}},5753:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(8099),n=r(7309),f=r(5439);function o(e,t,r,i){if(24!==t.length)throw new Error("XChaCha20 nonce must be 24 bytes");var o=a(e,t.subarray(0,16),new Uint8Array(32)),s=new Uint8Array(12);s.set(t.subarray(16),4);var d=f.streamXOR(o,s,r,i);return n.wipe(o),d}function a(e,t,r){for(var n=1634760805,f=857760878,o=2036477234,a=1797285236,s=e[3]<<24|e[2]<<16|e[1]<<8|e[0],d=e[7]<<24|e[6]<<16|e[5]<<8|e[4],h=e[11]<<24|e[10]<<16|e[9]<<8|e[8],c=e[15]<<24|e[14]<<16|e[13]<<8|e[12],u=e[19]<<24|e[18]<<16|e[17]<<8|e[16],l=e[23]<<24|e[22]<<16|e[21]<<8|e[20],b=e[27]<<24|e[26]<<16|e[25]<<8|e[24],p=e[31]<<24|e[30]<<16|e[29]<<8|e[28],y=t[3]<<24|t[2]<<16|t[1]<<8|t[0],m=t[7]<<24|t[6]<<16|t[5]<<8|t[4],v=t[11]<<24|t[10]<<16|t[9]<<8|t[8],g=t[15]<<24|t[14]<<16|t[13]<<8|t[12],w=0;w<20;w+=2)s=(s^=u=u+(y=(y^=n=n+s|0)>>>16|y<<16)|0)>>>20|s<<12,d=(d^=l=l+(m=(m^=f=f+d|0)>>>16|m<<16)|0)>>>20|d<<12,h=(h^=b=b+(v=(v^=o=o+h|0)>>>16|v<<16)|0)>>>20|h<<12,c=(c^=p=p+(g=(g^=a=a+c|0)>>>16|g<<16)|0)>>>20|c<<12,h=(h^=b=b+(v=(v^=o=o+h|0)>>>24|v<<8)|0)>>>25|h<<7,c=(c^=p=p+(g=(g^=a=a+c|0)>>>24|g<<8)|0)>>>25|c<<7,d=(d^=l=l+(m=(m^=f=f+d|0)>>>24|m<<8)|0)>>>25|d<<7,s=(s^=u=u+(y=(y^=n=n+s|0)>>>24|y<<8)|0)>>>25|s<<7,d=(d^=b=b+(g=(g^=n=n+d|0)>>>16|g<<16)|0)>>>20|d<<12,h=(h^=p=p+(y=(y^=f=f+h|0)>>>16|y<<16)|0)>>>20|h<<12,c=(c^=u=u+(m=(m^=o=o+c|0)>>>16|m<<16)|0)>>>20|c<<12,s=(s^=l=l+(v=(v^=a=a+s|0)>>>16|v<<16)|0)>>>20|s<<12,c=(c^=u=u+(m=(m^=o=o+c|0)>>>24|m<<8)|0)>>>25|c<<7,s=(s^=l=l+(v=(v^=a=a+s|0)>>>24|v<<8)|0)>>>25|s<<7,h=(h^=p=p+(y=(y^=f=f+h|0)>>>24|y<<8)|0)>>>25|h<<7,d=(d^=b=b+(g=(g^=n=n+d|0)>>>24|g<<8)|0)>>>25|d<<7;return i.writeUint32LE(n,r,0),i.writeUint32LE(f,r,4),i.writeUint32LE(o,r,8),i.writeUint32LE(a,r,12),i.writeUint32LE(y,r,16),i.writeUint32LE(m,r,20),i.writeUint32LE(v,r,24),i.writeUint32LE(g,r,28),r}t.streamXOR=o,t.stream=function(e,t,r){return n.wipe(r),o(e,t,r,r)},t.hchacha=a},9375:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r(5753),n=r(5501),f=r(7309);t.KEY_LENGTH=32,t.NONCE_LENGTH=24,t.TAG_LENGTH=16;var o=function(){function e(e){if(this.nonceLength=t.NONCE_LENGTH,this.tagLength=t.TAG_LENGTH,e.length!==t.KEY_LENGTH)throw new Error("ChaCha20Poly1305 needs 32-byte key");this._key=new Uint8Array(e)}return e.prototype.seal=function(e,t,r,o){if(24!==e.length)throw new Error("XChaCha20Poly1305: incorrect nonce length");var a=i.hchacha(this._key,e.subarray(0,16),new Uint8Array(32)),s=new Uint8Array(12);s.set(e.subarray(16),4);var d=new n.ChaCha20Poly1305(a),h=d.seal(s,t,r,o);return f.wipe(a),f.wipe(s),d.clean(),h},e.prototype.open=function(e,t,r,o){if(24!==e.length)throw new Error("XChaCha20Poly1305: incorrect nonce length");if(t.length<this.tagLength)return null;var a=i.hchacha(this._key,e.subarray(0,16),new Uint8Array(32)),s=new Uint8Array(12);s.set(e.subarray(16),4);var d=new n.ChaCha20Poly1305(a),h=d.open(s,t,r,o);return f.wipe(a),f.wipe(s),d.clean(),h},e.prototype.clean=function(){return f.wipe(this._key),this},e}();t.XChaCha20Poly1305=o},7715:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bech32m=t.bech32=void 0;const r="qpzry9x8gf2tvdw0s3jn54khce6mua7l",i={};for(let e=0;e<r.length;e++){const t=r.charAt(e);i[t]=e}function n(e){const t=e>>25;return(33554431&e)<<5^996825010&-(t>>0&1)^642813549&-(t>>1&1)^513874426&-(t>>2&1)^1027748829&-(t>>3&1)^705979059&-(t>>4&1)}function f(e){let t=1;for(let r=0;r<e.length;++r){const i=e.charCodeAt(r);if(i<33||i>126)return"Invalid prefix ("+e+")";t=n(t)^i>>5}t=n(t);for(let r=0;r<e.length;++r){const i=e.charCodeAt(r);t=n(t)^31&i}return t}function o(e,t,r,i){let n=0,f=0;const o=(1<<r)-1,a=[];for(let i=0;i<e.length;++i)for(n=n<<t|e[i],f+=t;f>=r;)f-=r,a.push(n>>f&o);if(i)f>0&&a.push(n<<r-f&o);else{if(f>=t)return"Excess padding";if(n<<r-f&o)return"Non-zero padding"}return a}function a(e){return o(e,8,5,!0)}function s(e){const t=o(e,5,8,!1);if(Array.isArray(t))return t}function d(e){const t=o(e,5,8,!1);if(Array.isArray(t))return t;throw new Error(t)}function h(e){let t;function o(e,r){if(r=r||90,e.length<8)return e+" too short";if(e.length>r)return"Exceeds length limit";const o=e.toLowerCase(),a=e.toUpperCase();if(e!==o&&e!==a)return"Mixed-case string "+e;const s=(e=o).lastIndexOf("1");if(-1===s)return"No separator character for "+e;if(0===s)return"Missing prefix for "+e;const d=e.slice(0,s),h=e.slice(s+1);if(h.length<6)return"Data too short";let c=f(d);if("string"==typeof c)return c;const u=[];for(let e=0;e<h.length;++e){const t=h.charAt(e),r=i[t];if(void 0===r)return"Unknown character "+t;c=n(c)^r,e+6>=h.length||u.push(r)}return c!==t?"Invalid checksum for "+e:{prefix:d,words:u}}return t="bech32"===e?1:734539939,{decodeUnsafe:function(e,t){const r=o(e,t);if("object"==typeof r)return r},decode:function(e,t){const r=o(e,t);if("object"==typeof r)return r;throw new Error(r)},encode:function(e,i,o){if(o=o||90,e.length+7+i.length>o)throw new TypeError("Exceeds length limit");let a=f(e=e.toLowerCase());if("string"==typeof a)throw new Error(a);let s=e+"1";for(let e=0;e<i.length;++e){const t=i[e];if(t>>5!=0)throw new Error("Non 5-bit word");a=n(a)^t,s+=r.charAt(t)}for(let e=0;e<6;++e)a=n(a);a^=t;for(let e=0;e<6;++e)s+=r.charAt(a>>5*(5-e)&31);return s},toWords:a,fromWordsUnsafe:s,fromWords:d}}t.bech32=h("bech32"),t.bech32m=h("bech32m")},3550:function(e,t,r){!function(e,t){"use strict";function i(e,t){if(!e)throw new Error(t||"Assertion failed")}function n(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}function f(e,t,r){if(f.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(r=t,t=10),this._init(e||0,t||10,r||"be"))}var o;"object"==typeof e?e.exports=f:t.BN=f,f.BN=f,f.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:r(6601).Buffer}catch(e){}function a(e,t){var r=e.charCodeAt(t);return r>=65&&r<=70?r-55:r>=97&&r<=102?r-87:r-48&15}function s(e,t,r){var i=a(e,r);return r-1>=t&&(i|=a(e,r-1)<<4),i}function d(e,t,r,i){for(var n=0,f=Math.min(e.length,r),o=t;o<f;o++){var a=e.charCodeAt(o)-48;n*=i,n+=a>=49?a-49+10:a>=17?a-17+10:a}return n}f.isBN=function(e){return e instanceof f||null!==e&&"object"==typeof e&&e.constructor.wordSize===f.wordSize&&Array.isArray(e.words)},f.max=function(e,t){return e.cmp(t)>0?e:t},f.min=function(e,t){return e.cmp(t)<0?e:t},f.prototype._init=function(e,t,r){if("number"==typeof e)return this._initNumber(e,t,r);if("object"==typeof e)return this._initArray(e,t,r);"hex"===t&&(t=16),i(t===(0|t)&&t>=2&&t<=36);var n=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<e.length&&(16===t?this._parseHex(e,n,r):(this._parseBase(e,t,n),"le"===r&&this._initArray(this.toArray(),t,r)))},f.prototype._initNumber=function(e,t,r){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(i(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===r&&this._initArray(this.toArray(),t,r)},f.prototype._initArray=function(e,t,r){if(i("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var f,o,a=0;if("be"===r)for(n=e.length-1,f=0;n>=0;n-=3)o=e[n]|e[n-1]<<8|e[n-2]<<16,this.words[f]|=o<<a&67108863,this.words[f+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,f++);else if("le"===r)for(n=0,f=0;n<e.length;n+=3)o=e[n]|e[n+1]<<8|e[n+2]<<16,this.words[f]|=o<<a&67108863,this.words[f+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,f++);return this.strip()},f.prototype._parseHex=function(e,t,r){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,f=0,o=0;if("be"===r)for(i=e.length-1;i>=t;i-=2)n=s(e,t,i)<<f,this.words[o]|=67108863&n,f>=18?(f-=18,o+=1,this.words[o]|=n>>>26):f+=8;else for(i=(e.length-t)%2==0?t+1:t;i<e.length;i+=2)n=s(e,t,i)<<f,this.words[o]|=67108863&n,f>=18?(f-=18,o+=1,this.words[o]|=n>>>26):f+=8;this.strip()},f.prototype._parseBase=function(e,t,r){this.words=[0],this.length=1;for(var i=0,n=1;n<=67108863;n*=t)i++;i--,n=n/t|0;for(var f=e.length-r,o=f%i,a=Math.min(f,f-o)+r,s=0,h=r;h<a;h+=i)s=d(e,h,h+i,t),this.imuln(n),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s);if(0!==o){var c=1;for(s=d(e,h,e.length,t),h=0;h<o;h++)c*=t;this.imuln(c),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s)}this.strip()},f.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},f.prototype.clone=function(){var e=new f(null);return this.copy(e),e},f.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},f.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},f.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},f.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],c=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],u=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function l(e,t,r){r.negative=t.negative^e.negative;var i=e.length+t.length|0;r.length=i,i=i-1|0;var n=0|e.words[0],f=0|t.words[0],o=n*f,a=67108863&o,s=o/67108864|0;r.words[0]=a;for(var d=1;d<i;d++){for(var h=s>>>26,c=67108863&s,u=Math.min(d,t.length-1),l=Math.max(0,d-e.length+1);l<=u;l++){var b=d-l|0;h+=(o=(n=0|e.words[b])*(f=0|t.words[l])+c)/67108864|0,c=67108863&o}r.words[d]=0|c,s=0|h}return 0!==s?r.words[d]=0|s:r.length--,r.strip()}f.prototype.toString=function(e,t){var r;if(t=0|t||1,16===(e=e||10)||"hex"===e){r="";for(var n=0,f=0,o=0;o<this.length;o++){var a=this.words[o],s=(16777215&(a<<n|f)).toString(16);r=0!=(f=a>>>24-n&16777215)||o!==this.length-1?h[6-s.length]+s+r:s+r,(n+=2)>=26&&(n-=26,o--)}for(0!==f&&(r=f.toString(16)+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}if(e===(0|e)&&e>=2&&e<=36){var d=c[e],l=u[e];r="";var b=this.clone();for(b.negative=0;!b.isZero();){var p=b.modn(l).toString(e);r=(b=b.idivn(l)).isZero()?p+r:h[d-p.length]+p+r}for(this.isZero()&&(r="0"+r);r.length%t!=0;)r="0"+r;return 0!==this.negative&&(r="-"+r),r}i(!1,"Base should be between 2 and 36")},f.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},f.prototype.toJSON=function(){return this.toString(16)},f.prototype.toBuffer=function(e,t){return i(void 0!==o),this.toArrayLike(o,e,t)},f.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},f.prototype.toArrayLike=function(e,t,r){var n=this.byteLength(),f=r||Math.max(1,n);i(n<=f,"byte array longer than desired length"),i(f>0,"Requested array length <= 0"),this.strip();var o,a,s="le"===t,d=new e(f),h=this.clone();if(s){for(a=0;!h.isZero();a++)o=h.andln(255),h.iushrn(8),d[a]=o;for(;a<f;a++)d[a]=0}else{for(a=0;a<f-n;a++)d[a]=0;for(a=0;!h.isZero();a++)o=h.andln(255),h.iushrn(8),d[f-a-1]=o}return d},Math.clz32?f.prototype._countBits=function(e){return 32-Math.clz32(e)}:f.prototype._countBits=function(e){var t=e,r=0;return t>=4096&&(r+=13,t>>>=13),t>=64&&(r+=7,t>>>=7),t>=8&&(r+=4,t>>>=4),t>=2&&(r+=2,t>>>=2),r+t},f.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,r=0;return 0==(8191&t)&&(r+=13,t>>>=13),0==(127&t)&&(r+=7,t>>>=7),0==(15&t)&&(r+=4,t>>>=4),0==(3&t)&&(r+=2,t>>>=2),0==(1&t)&&r++,r},f.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},f.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);if(e+=r,26!==r)break}return e},f.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},f.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},f.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},f.prototype.isNeg=function(){return 0!==this.negative},f.prototype.neg=function(){return this.clone().ineg()},f.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},f.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},f.prototype.ior=function(e){return i(0==(this.negative|e.negative)),this.iuor(e)},f.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},f.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},f.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var r=0;r<t.length;r++)this.words[r]=this.words[r]&e.words[r];return this.length=t.length,this.strip()},f.prototype.iand=function(e){return i(0==(this.negative|e.negative)),this.iuand(e)},f.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},f.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},f.prototype.iuxor=function(e){var t,r;this.length>e.length?(t=this,r=e):(t=e,r=this);for(var i=0;i<r.length;i++)this.words[i]=t.words[i]^r.words[i];if(this!==t)for(;i<t.length;i++)this.words[i]=t.words[i];return this.length=t.length,this.strip()},f.prototype.ixor=function(e){return i(0==(this.negative|e.negative)),this.iuxor(e)},f.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},f.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},f.prototype.inotn=function(e){i("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),r=e%26;this._expand(t),r>0&&t--;for(var n=0;n<t;n++)this.words[n]=67108863&~this.words[n];return r>0&&(this.words[n]=~this.words[n]&67108863>>26-r),this.strip()},f.prototype.notn=function(e){return this.clone().inotn(e)},f.prototype.setn=function(e,t){i("number"==typeof e&&e>=0);var r=e/26|0,n=e%26;return this._expand(r+1),this.words[r]=t?this.words[r]|1<<n:this.words[r]&~(1<<n),this.strip()},f.prototype.iadd=function(e){var t,r,i;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(r=this,i=e):(r=e,i=this);for(var n=0,f=0;f<i.length;f++)t=(0|r.words[f])+(0|i.words[f])+n,this.words[f]=67108863&t,n=t>>>26;for(;0!==n&&f<r.length;f++)t=(0|r.words[f])+n,this.words[f]=67108863&t,n=t>>>26;if(this.length=r.length,0!==n)this.words[this.length]=n,this.length++;else if(r!==this)for(;f<r.length;f++)this.words[f]=r.words[f];return this},f.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},f.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var r,i,n=this.cmp(e);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(r=this,i=e):(r=e,i=this);for(var f=0,o=0;o<i.length;o++)f=(t=(0|r.words[o])-(0|i.words[o])+f)>>26,this.words[o]=67108863&t;for(;0!==f&&o<r.length;o++)f=(t=(0|r.words[o])+f)>>26,this.words[o]=67108863&t;if(0===f&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this.strip()},f.prototype.sub=function(e){return this.clone().isub(e)};var b=function(e,t,r){var i,n,f,o=e.words,a=t.words,s=r.words,d=0,h=0|o[0],c=8191&h,u=h>>>13,l=0|o[1],b=8191&l,p=l>>>13,y=0|o[2],m=8191&y,v=y>>>13,g=0|o[3],w=8191&g,_=g>>>13,M=0|o[4],S=8191&M,A=M>>>13,E=0|o[5],x=8191&E,I=E>>>13,k=0|o[6],L=8191&k,P=k>>>13,U=0|o[7],C=8191&U,z=U>>>13,N=0|o[8],R=8191&N,B=N>>>13,T=0|o[9],O=8191&T,D=T>>>13,j=0|a[0],K=8191&j,q=j>>>13,H=0|a[1],J=8191&H,F=H>>>13,V=0|a[2],W=8191&V,$=V>>>13,G=0|a[3],X=8191&G,Z=G>>>13,Y=0|a[4],Q=8191&Y,ee=Y>>>13,te=0|a[5],re=8191&te,ie=te>>>13,ne=0|a[6],fe=8191&ne,oe=ne>>>13,ae=0|a[7],se=8191&ae,de=ae>>>13,he=0|a[8],ce=8191&he,ue=he>>>13,le=0|a[9],be=8191&le,pe=le>>>13;r.negative=e.negative^t.negative,r.length=19;var ye=(d+(i=Math.imul(c,K))|0)+((8191&(n=(n=Math.imul(c,q))+Math.imul(u,K)|0))<<13)|0;d=((f=Math.imul(u,q))+(n>>>13)|0)+(ye>>>26)|0,ye&=67108863,i=Math.imul(b,K),n=(n=Math.imul(b,q))+Math.imul(p,K)|0,f=Math.imul(p,q);var me=(d+(i=i+Math.imul(c,J)|0)|0)+((8191&(n=(n=n+Math.imul(c,F)|0)+Math.imul(u,J)|0))<<13)|0;d=((f=f+Math.imul(u,F)|0)+(n>>>13)|0)+(me>>>26)|0,me&=67108863,i=Math.imul(m,K),n=(n=Math.imul(m,q))+Math.imul(v,K)|0,f=Math.imul(v,q),i=i+Math.imul(b,J)|0,n=(n=n+Math.imul(b,F)|0)+Math.imul(p,J)|0,f=f+Math.imul(p,F)|0;var ve=(d+(i=i+Math.imul(c,W)|0)|0)+((8191&(n=(n=n+Math.imul(c,$)|0)+Math.imul(u,W)|0))<<13)|0;d=((f=f+Math.imul(u,$)|0)+(n>>>13)|0)+(ve>>>26)|0,ve&=67108863,i=Math.imul(w,K),n=(n=Math.imul(w,q))+Math.imul(_,K)|0,f=Math.imul(_,q),i=i+Math.imul(m,J)|0,n=(n=n+Math.imul(m,F)|0)+Math.imul(v,J)|0,f=f+Math.imul(v,F)|0,i=i+Math.imul(b,W)|0,n=(n=n+Math.imul(b,$)|0)+Math.imul(p,W)|0,f=f+Math.imul(p,$)|0;var ge=(d+(i=i+Math.imul(c,X)|0)|0)+((8191&(n=(n=n+Math.imul(c,Z)|0)+Math.imul(u,X)|0))<<13)|0;d=((f=f+Math.imul(u,Z)|0)+(n>>>13)|0)+(ge>>>26)|0,ge&=67108863,i=Math.imul(S,K),n=(n=Math.imul(S,q))+Math.imul(A,K)|0,f=Math.imul(A,q),i=i+Math.imul(w,J)|0,n=(n=n+Math.imul(w,F)|0)+Math.imul(_,J)|0,f=f+Math.imul(_,F)|0,i=i+Math.imul(m,W)|0,n=(n=n+Math.imul(m,$)|0)+Math.imul(v,W)|0,f=f+Math.imul(v,$)|0,i=i+Math.imul(b,X)|0,n=(n=n+Math.imul(b,Z)|0)+Math.imul(p,X)|0,f=f+Math.imul(p,Z)|0;var we=(d+(i=i+Math.imul(c,Q)|0)|0)+((8191&(n=(n=n+Math.imul(c,ee)|0)+Math.imul(u,Q)|0))<<13)|0;d=((f=f+Math.imul(u,ee)|0)+(n>>>13)|0)+(we>>>26)|0,we&=67108863,i=Math.imul(x,K),n=(n=Math.imul(x,q))+Math.imul(I,K)|0,f=Math.imul(I,q),i=i+Math.imul(S,J)|0,n=(n=n+Math.imul(S,F)|0)+Math.imul(A,J)|0,f=f+Math.imul(A,F)|0,i=i+Math.imul(w,W)|0,n=(n=n+Math.imul(w,$)|0)+Math.imul(_,W)|0,f=f+Math.imul(_,$)|0,i=i+Math.imul(m,X)|0,n=(n=n+Math.imul(m,Z)|0)+Math.imul(v,X)|0,f=f+Math.imul(v,Z)|0,i=i+Math.imul(b,Q)|0,n=(n=n+Math.imul(b,ee)|0)+Math.imul(p,Q)|0,f=f+Math.imul(p,ee)|0;var _e=(d+(i=i+Math.imul(c,re)|0)|0)+((8191&(n=(n=n+Math.imul(c,ie)|0)+Math.imul(u,re)|0))<<13)|0;d=((f=f+Math.imul(u,ie)|0)+(n>>>13)|0)+(_e>>>26)|0,_e&=67108863,i=Math.imul(L,K),n=(n=Math.imul(L,q))+Math.imul(P,K)|0,f=Math.imul(P,q),i=i+Math.imul(x,J)|0,n=(n=n+Math.imul(x,F)|0)+Math.imul(I,J)|0,f=f+Math.imul(I,F)|0,i=i+Math.imul(S,W)|0,n=(n=n+Math.imul(S,$)|0)+Math.imul(A,W)|0,f=f+Math.imul(A,$)|0,i=i+Math.imul(w,X)|0,n=(n=n+Math.imul(w,Z)|0)+Math.imul(_,X)|0,f=f+Math.imul(_,Z)|0,i=i+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,ee)|0)+Math.imul(v,Q)|0,f=f+Math.imul(v,ee)|0,i=i+Math.imul(b,re)|0,n=(n=n+Math.imul(b,ie)|0)+Math.imul(p,re)|0,f=f+Math.imul(p,ie)|0;var Me=(d+(i=i+Math.imul(c,fe)|0)|0)+((8191&(n=(n=n+Math.imul(c,oe)|0)+Math.imul(u,fe)|0))<<13)|0;d=((f=f+Math.imul(u,oe)|0)+(n>>>13)|0)+(Me>>>26)|0,Me&=67108863,i=Math.imul(C,K),n=(n=Math.imul(C,q))+Math.imul(z,K)|0,f=Math.imul(z,q),i=i+Math.imul(L,J)|0,n=(n=n+Math.imul(L,F)|0)+Math.imul(P,J)|0,f=f+Math.imul(P,F)|0,i=i+Math.imul(x,W)|0,n=(n=n+Math.imul(x,$)|0)+Math.imul(I,W)|0,f=f+Math.imul(I,$)|0,i=i+Math.imul(S,X)|0,n=(n=n+Math.imul(S,Z)|0)+Math.imul(A,X)|0,f=f+Math.imul(A,Z)|0,i=i+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,ee)|0)+Math.imul(_,Q)|0,f=f+Math.imul(_,ee)|0,i=i+Math.imul(m,re)|0,n=(n=n+Math.imul(m,ie)|0)+Math.imul(v,re)|0,f=f+Math.imul(v,ie)|0,i=i+Math.imul(b,fe)|0,n=(n=n+Math.imul(b,oe)|0)+Math.imul(p,fe)|0,f=f+Math.imul(p,oe)|0;var Se=(d+(i=i+Math.imul(c,se)|0)|0)+((8191&(n=(n=n+Math.imul(c,de)|0)+Math.imul(u,se)|0))<<13)|0;d=((f=f+Math.imul(u,de)|0)+(n>>>13)|0)+(Se>>>26)|0,Se&=67108863,i=Math.imul(R,K),n=(n=Math.imul(R,q))+Math.imul(B,K)|0,f=Math.imul(B,q),i=i+Math.imul(C,J)|0,n=(n=n+Math.imul(C,F)|0)+Math.imul(z,J)|0,f=f+Math.imul(z,F)|0,i=i+Math.imul(L,W)|0,n=(n=n+Math.imul(L,$)|0)+Math.imul(P,W)|0,f=f+Math.imul(P,$)|0,i=i+Math.imul(x,X)|0,n=(n=n+Math.imul(x,Z)|0)+Math.imul(I,X)|0,f=f+Math.imul(I,Z)|0,i=i+Math.imul(S,Q)|0,n=(n=n+Math.imul(S,ee)|0)+Math.imul(A,Q)|0,f=f+Math.imul(A,ee)|0,i=i+Math.imul(w,re)|0,n=(n=n+Math.imul(w,ie)|0)+Math.imul(_,re)|0,f=f+Math.imul(_,ie)|0,i=i+Math.imul(m,fe)|0,n=(n=n+Math.imul(m,oe)|0)+Math.imul(v,fe)|0,f=f+Math.imul(v,oe)|0,i=i+Math.imul(b,se)|0,n=(n=n+Math.imul(b,de)|0)+Math.imul(p,se)|0,f=f+Math.imul(p,de)|0;var Ae=(d+(i=i+Math.imul(c,ce)|0)|0)+((8191&(n=(n=n+Math.imul(c,ue)|0)+Math.imul(u,ce)|0))<<13)|0;d=((f=f+Math.imul(u,ue)|0)+(n>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,i=Math.imul(O,K),n=(n=Math.imul(O,q))+Math.imul(D,K)|0,f=Math.imul(D,q),i=i+Math.imul(R,J)|0,n=(n=n+Math.imul(R,F)|0)+Math.imul(B,J)|0,f=f+Math.imul(B,F)|0,i=i+Math.imul(C,W)|0,n=(n=n+Math.imul(C,$)|0)+Math.imul(z,W)|0,f=f+Math.imul(z,$)|0,i=i+Math.imul(L,X)|0,n=(n=n+Math.imul(L,Z)|0)+Math.imul(P,X)|0,f=f+Math.imul(P,Z)|0,i=i+Math.imul(x,Q)|0,n=(n=n+Math.imul(x,ee)|0)+Math.imul(I,Q)|0,f=f+Math.imul(I,ee)|0,i=i+Math.imul(S,re)|0,n=(n=n+Math.imul(S,ie)|0)+Math.imul(A,re)|0,f=f+Math.imul(A,ie)|0,i=i+Math.imul(w,fe)|0,n=(n=n+Math.imul(w,oe)|0)+Math.imul(_,fe)|0,f=f+Math.imul(_,oe)|0,i=i+Math.imul(m,se)|0,n=(n=n+Math.imul(m,de)|0)+Math.imul(v,se)|0,f=f+Math.imul(v,de)|0,i=i+Math.imul(b,ce)|0,n=(n=n+Math.imul(b,ue)|0)+Math.imul(p,ce)|0,f=f+Math.imul(p,ue)|0;var Ee=(d+(i=i+Math.imul(c,be)|0)|0)+((8191&(n=(n=n+Math.imul(c,pe)|0)+Math.imul(u,be)|0))<<13)|0;d=((f=f+Math.imul(u,pe)|0)+(n>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,i=Math.imul(O,J),n=(n=Math.imul(O,F))+Math.imul(D,J)|0,f=Math.imul(D,F),i=i+Math.imul(R,W)|0,n=(n=n+Math.imul(R,$)|0)+Math.imul(B,W)|0,f=f+Math.imul(B,$)|0,i=i+Math.imul(C,X)|0,n=(n=n+Math.imul(C,Z)|0)+Math.imul(z,X)|0,f=f+Math.imul(z,Z)|0,i=i+Math.imul(L,Q)|0,n=(n=n+Math.imul(L,ee)|0)+Math.imul(P,Q)|0,f=f+Math.imul(P,ee)|0,i=i+Math.imul(x,re)|0,n=(n=n+Math.imul(x,ie)|0)+Math.imul(I,re)|0,f=f+Math.imul(I,ie)|0,i=i+Math.imul(S,fe)|0,n=(n=n+Math.imul(S,oe)|0)+Math.imul(A,fe)|0,f=f+Math.imul(A,oe)|0,i=i+Math.imul(w,se)|0,n=(n=n+Math.imul(w,de)|0)+Math.imul(_,se)|0,f=f+Math.imul(_,de)|0,i=i+Math.imul(m,ce)|0,n=(n=n+Math.imul(m,ue)|0)+Math.imul(v,ce)|0,f=f+Math.imul(v,ue)|0;var xe=(d+(i=i+Math.imul(b,be)|0)|0)+((8191&(n=(n=n+Math.imul(b,pe)|0)+Math.imul(p,be)|0))<<13)|0;d=((f=f+Math.imul(p,pe)|0)+(n>>>13)|0)+(xe>>>26)|0,xe&=67108863,i=Math.imul(O,W),n=(n=Math.imul(O,$))+Math.imul(D,W)|0,f=Math.imul(D,$),i=i+Math.imul(R,X)|0,n=(n=n+Math.imul(R,Z)|0)+Math.imul(B,X)|0,f=f+Math.imul(B,Z)|0,i=i+Math.imul(C,Q)|0,n=(n=n+Math.imul(C,ee)|0)+Math.imul(z,Q)|0,f=f+Math.imul(z,ee)|0,i=i+Math.imul(L,re)|0,n=(n=n+Math.imul(L,ie)|0)+Math.imul(P,re)|0,f=f+Math.imul(P,ie)|0,i=i+Math.imul(x,fe)|0,n=(n=n+Math.imul(x,oe)|0)+Math.imul(I,fe)|0,f=f+Math.imul(I,oe)|0,i=i+Math.imul(S,se)|0,n=(n=n+Math.imul(S,de)|0)+Math.imul(A,se)|0,f=f+Math.imul(A,de)|0,i=i+Math.imul(w,ce)|0,n=(n=n+Math.imul(w,ue)|0)+Math.imul(_,ce)|0,f=f+Math.imul(_,ue)|0;var Ie=(d+(i=i+Math.imul(m,be)|0)|0)+((8191&(n=(n=n+Math.imul(m,pe)|0)+Math.imul(v,be)|0))<<13)|0;d=((f=f+Math.imul(v,pe)|0)+(n>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,i=Math.imul(O,X),n=(n=Math.imul(O,Z))+Math.imul(D,X)|0,f=Math.imul(D,Z),i=i+Math.imul(R,Q)|0,n=(n=n+Math.imul(R,ee)|0)+Math.imul(B,Q)|0,f=f+Math.imul(B,ee)|0,i=i+Math.imul(C,re)|0,n=(n=n+Math.imul(C,ie)|0)+Math.imul(z,re)|0,f=f+Math.imul(z,ie)|0,i=i+Math.imul(L,fe)|0,n=(n=n+Math.imul(L,oe)|0)+Math.imul(P,fe)|0,f=f+Math.imul(P,oe)|0,i=i+Math.imul(x,se)|0,n=(n=n+Math.imul(x,de)|0)+Math.imul(I,se)|0,f=f+Math.imul(I,de)|0,i=i+Math.imul(S,ce)|0,n=(n=n+Math.imul(S,ue)|0)+Math.imul(A,ce)|0,f=f+Math.imul(A,ue)|0;var ke=(d+(i=i+Math.imul(w,be)|0)|0)+((8191&(n=(n=n+Math.imul(w,pe)|0)+Math.imul(_,be)|0))<<13)|0;d=((f=f+Math.imul(_,pe)|0)+(n>>>13)|0)+(ke>>>26)|0,ke&=67108863,i=Math.imul(O,Q),n=(n=Math.imul(O,ee))+Math.imul(D,Q)|0,f=Math.imul(D,ee),i=i+Math.imul(R,re)|0,n=(n=n+Math.imul(R,ie)|0)+Math.imul(B,re)|0,f=f+Math.imul(B,ie)|0,i=i+Math.imul(C,fe)|0,n=(n=n+Math.imul(C,oe)|0)+Math.imul(z,fe)|0,f=f+Math.imul(z,oe)|0,i=i+Math.imul(L,se)|0,n=(n=n+Math.imul(L,de)|0)+Math.imul(P,se)|0,f=f+Math.imul(P,de)|0,i=i+Math.imul(x,ce)|0,n=(n=n+Math.imul(x,ue)|0)+Math.imul(I,ce)|0,f=f+Math.imul(I,ue)|0;var Le=(d+(i=i+Math.imul(S,be)|0)|0)+((8191&(n=(n=n+Math.imul(S,pe)|0)+Math.imul(A,be)|0))<<13)|0;d=((f=f+Math.imul(A,pe)|0)+(n>>>13)|0)+(Le>>>26)|0,Le&=67108863,i=Math.imul(O,re),n=(n=Math.imul(O,ie))+Math.imul(D,re)|0,f=Math.imul(D,ie),i=i+Math.imul(R,fe)|0,n=(n=n+Math.imul(R,oe)|0)+Math.imul(B,fe)|0,f=f+Math.imul(B,oe)|0,i=i+Math.imul(C,se)|0,n=(n=n+Math.imul(C,de)|0)+Math.imul(z,se)|0,f=f+Math.imul(z,de)|0,i=i+Math.imul(L,ce)|0,n=(n=n+Math.imul(L,ue)|0)+Math.imul(P,ce)|0,f=f+Math.imul(P,ue)|0;var Pe=(d+(i=i+Math.imul(x,be)|0)|0)+((8191&(n=(n=n+Math.imul(x,pe)|0)+Math.imul(I,be)|0))<<13)|0;d=((f=f+Math.imul(I,pe)|0)+(n>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,i=Math.imul(O,fe),n=(n=Math.imul(O,oe))+Math.imul(D,fe)|0,f=Math.imul(D,oe),i=i+Math.imul(R,se)|0,n=(n=n+Math.imul(R,de)|0)+Math.imul(B,se)|0,f=f+Math.imul(B,de)|0,i=i+Math.imul(C,ce)|0,n=(n=n+Math.imul(C,ue)|0)+Math.imul(z,ce)|0,f=f+Math.imul(z,ue)|0;var Ue=(d+(i=i+Math.imul(L,be)|0)|0)+((8191&(n=(n=n+Math.imul(L,pe)|0)+Math.imul(P,be)|0))<<13)|0;d=((f=f+Math.imul(P,pe)|0)+(n>>>13)|0)+(Ue>>>26)|0,Ue&=67108863,i=Math.imul(O,se),n=(n=Math.imul(O,de))+Math.imul(D,se)|0,f=Math.imul(D,de),i=i+Math.imul(R,ce)|0,n=(n=n+Math.imul(R,ue)|0)+Math.imul(B,ce)|0,f=f+Math.imul(B,ue)|0;var Ce=(d+(i=i+Math.imul(C,be)|0)|0)+((8191&(n=(n=n+Math.imul(C,pe)|0)+Math.imul(z,be)|0))<<13)|0;d=((f=f+Math.imul(z,pe)|0)+(n>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,i=Math.imul(O,ce),n=(n=Math.imul(O,ue))+Math.imul(D,ce)|0,f=Math.imul(D,ue);var ze=(d+(i=i+Math.imul(R,be)|0)|0)+((8191&(n=(n=n+Math.imul(R,pe)|0)+Math.imul(B,be)|0))<<13)|0;d=((f=f+Math.imul(B,pe)|0)+(n>>>13)|0)+(ze>>>26)|0,ze&=67108863;var Ne=(d+(i=Math.imul(O,be))|0)+((8191&(n=(n=Math.imul(O,pe))+Math.imul(D,be)|0))<<13)|0;return d=((f=Math.imul(D,pe))+(n>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,s[0]=ye,s[1]=me,s[2]=ve,s[3]=ge,s[4]=we,s[5]=_e,s[6]=Me,s[7]=Se,s[8]=Ae,s[9]=Ee,s[10]=xe,s[11]=Ie,s[12]=ke,s[13]=Le,s[14]=Pe,s[15]=Ue,s[16]=Ce,s[17]=ze,s[18]=Ne,0!==d&&(s[19]=d,r.length++),r};function p(e,t,r){return(new y).mulp(e,t,r)}function y(e,t){this.x=e,this.y=t}Math.imul||(b=l),f.prototype.mulTo=function(e,t){var r,i=this.length+e.length;return r=10===this.length&&10===e.length?b(this,e,t):i<63?l(this,e,t):i<1024?function(e,t,r){r.negative=t.negative^e.negative,r.length=e.length+t.length;for(var i=0,n=0,f=0;f<r.length-1;f++){var o=n;n=0;for(var a=67108863&i,s=Math.min(f,t.length-1),d=Math.max(0,f-e.length+1);d<=s;d++){var h=f-d,c=(0|e.words[h])*(0|t.words[d]),u=67108863&c;a=67108863&(u=u+a|0),n+=(o=(o=o+(c/67108864|0)|0)+(u>>>26)|0)>>>26,o&=67108863}r.words[f]=a,i=o,o=n}return 0!==i?r.words[f]=i:r.length--,r.strip()}(this,e,t):p(this,e,t),r},y.prototype.makeRBT=function(e){for(var t=new Array(e),r=f.prototype._countBits(e)-1,i=0;i<e;i++)t[i]=this.revBin(i,r,e);return t},y.prototype.revBin=function(e,t,r){if(0===e||e===r-1)return e;for(var i=0,n=0;n<t;n++)i|=(1&e)<<t-n-1,e>>=1;return i},y.prototype.permute=function(e,t,r,i,n,f){for(var o=0;o<f;o++)i[o]=t[e[o]],n[o]=r[e[o]]},y.prototype.transform=function(e,t,r,i,n,f){this.permute(f,e,t,r,i,n);for(var o=1;o<n;o<<=1)for(var a=o<<1,s=Math.cos(2*Math.PI/a),d=Math.sin(2*Math.PI/a),h=0;h<n;h+=a)for(var c=s,u=d,l=0;l<o;l++){var b=r[h+l],p=i[h+l],y=r[h+l+o],m=i[h+l+o],v=c*y-u*m;m=c*m+u*y,y=v,r[h+l]=b+y,i[h+l]=p+m,r[h+l+o]=b-y,i[h+l+o]=p-m,l!==a&&(v=s*c-d*u,u=s*u+d*c,c=v)}},y.prototype.guessLen13b=function(e,t){var r=1|Math.max(t,e),i=1&r,n=0;for(r=r/2|0;r;r>>>=1)n++;return 1<<n+1+i},y.prototype.conjugate=function(e,t,r){if(!(r<=1))for(var i=0;i<r/2;i++){var n=e[i];e[i]=e[r-i-1],e[r-i-1]=n,n=t[i],t[i]=-t[r-i-1],t[r-i-1]=-n}},y.prototype.normalize13b=function(e,t){for(var r=0,i=0;i<t/2;i++){var n=8192*Math.round(e[2*i+1]/t)+Math.round(e[2*i]/t)+r;e[i]=67108863&n,r=n<67108864?0:n/67108864|0}return e},y.prototype.convert13b=function(e,t,r,n){for(var f=0,o=0;o<t;o++)f+=0|e[o],r[2*o]=8191&f,f>>>=13,r[2*o+1]=8191&f,f>>>=13;for(o=2*t;o<n;++o)r[o]=0;i(0===f),i(0==(-8192&f))},y.prototype.stub=function(e){for(var t=new Array(e),r=0;r<e;r++)t[r]=0;return t},y.prototype.mulp=function(e,t,r){var i=2*this.guessLen13b(e.length,t.length),n=this.makeRBT(i),f=this.stub(i),o=new Array(i),a=new Array(i),s=new Array(i),d=new Array(i),h=new Array(i),c=new Array(i),u=r.words;u.length=i,this.convert13b(e.words,e.length,o,i),this.convert13b(t.words,t.length,d,i),this.transform(o,f,a,s,i,n),this.transform(d,f,h,c,i,n);for(var l=0;l<i;l++){var b=a[l]*h[l]-s[l]*c[l];s[l]=a[l]*c[l]+s[l]*h[l],a[l]=b}return this.conjugate(a,s,i),this.transform(a,s,u,f,i,n),this.conjugate(u,f,i),this.normalize13b(u,i),r.negative=e.negative^t.negative,r.length=e.length+t.length,r.strip()},f.prototype.mul=function(e){var t=new f(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},f.prototype.mulf=function(e){var t=new f(null);return t.words=new Array(this.length+e.length),p(this,e,t)},f.prototype.imul=function(e){return this.clone().mulTo(e,this)},f.prototype.imuln=function(e){i("number"==typeof e),i(e<67108864);for(var t=0,r=0;r<this.length;r++){var n=(0|this.words[r])*e,f=(67108863&n)+(67108863&t);t>>=26,t+=n/67108864|0,t+=f>>>26,this.words[r]=67108863&f}return 0!==t&&(this.words[r]=t,this.length++),this},f.prototype.muln=function(e){return this.clone().imuln(e)},f.prototype.sqr=function(){return this.mul(this)},f.prototype.isqr=function(){return this.imul(this.clone())},f.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),r=0;r<t.length;r++){var i=r/26|0,n=r%26;t[r]=(e.words[i]&1<<n)>>>n}return t}(e);if(0===t.length)return new f(1);for(var r=this,i=0;i<t.length&&0===t[i];i++,r=r.sqr());if(++i<t.length)for(var n=r.sqr();i<t.length;i++,n=n.sqr())0!==t[i]&&(r=r.mul(n));return r},f.prototype.iushln=function(e){i("number"==typeof e&&e>=0);var t,r=e%26,n=(e-r)/26,f=67108863>>>26-r<<26-r;if(0!==r){var o=0;for(t=0;t<this.length;t++){var a=this.words[t]&f,s=(0|this.words[t])-a<<r;this.words[t]=s|o,o=a>>>26-r}o&&(this.words[t]=o,this.length++)}if(0!==n){for(t=this.length-1;t>=0;t--)this.words[t+n]=this.words[t];for(t=0;t<n;t++)this.words[t]=0;this.length+=n}return this.strip()},f.prototype.ishln=function(e){return i(0===this.negative),this.iushln(e)},f.prototype.iushrn=function(e,t,r){var n;i("number"==typeof e&&e>=0),n=t?(t-t%26)/26:0;var f=e%26,o=Math.min((e-f)/26,this.length),a=67108863^67108863>>>f<<f,s=r;if(n-=o,n=Math.max(0,n),s){for(var d=0;d<o;d++)s.words[d]=this.words[d];s.length=o}if(0===o);else if(this.length>o)for(this.length-=o,d=0;d<this.length;d++)this.words[d]=this.words[d+o];else this.words[0]=0,this.length=1;var h=0;for(d=this.length-1;d>=0&&(0!==h||d>=n);d--){var c=0|this.words[d];this.words[d]=h<<26-f|c>>>f,h=c&a}return s&&0!==h&&(s.words[s.length++]=h),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},f.prototype.ishrn=function(e,t,r){return i(0===this.negative),this.iushrn(e,t,r)},f.prototype.shln=function(e){return this.clone().ishln(e)},f.prototype.ushln=function(e){return this.clone().iushln(e)},f.prototype.shrn=function(e){return this.clone().ishrn(e)},f.prototype.ushrn=function(e){return this.clone().iushrn(e)},f.prototype.testn=function(e){i("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26,n=1<<t;return!(this.length<=r||!(this.words[r]&n))},f.prototype.imaskn=function(e){i("number"==typeof e&&e>=0);var t=e%26,r=(e-t)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=r)return this;if(0!==t&&r++,this.length=Math.min(r,this.length),0!==t){var n=67108863^67108863>>>t<<t;this.words[this.length-1]&=n}return this.strip()},f.prototype.maskn=function(e){return this.clone().imaskn(e)},f.prototype.iaddn=function(e){return i("number"==typeof e),i(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},f.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},f.prototype.isubn=function(e){if(i("number"==typeof e),i(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},f.prototype.addn=function(e){return this.clone().iaddn(e)},f.prototype.subn=function(e){return this.clone().isubn(e)},f.prototype.iabs=function(){return this.negative=0,this},f.prototype.abs=function(){return this.clone().iabs()},f.prototype._ishlnsubmul=function(e,t,r){var n,f,o=e.length+r;this._expand(o);var a=0;for(n=0;n<e.length;n++){f=(0|this.words[n+r])+a;var s=(0|e.words[n])*t;a=((f-=67108863&s)>>26)-(s/67108864|0),this.words[n+r]=67108863&f}for(;n<this.length-r;n++)a=(f=(0|this.words[n+r])+a)>>26,this.words[n+r]=67108863&f;if(0===a)return this.strip();for(i(-1===a),a=0,n=0;n<this.length;n++)a=(f=-(0|this.words[n])+a)>>26,this.words[n]=67108863&f;return this.negative=1,this.strip()},f.prototype._wordDiv=function(e,t){var r=(this.length,e.length),i=this.clone(),n=e,o=0|n.words[n.length-1];0!=(r=26-this._countBits(o))&&(n=n.ushln(r),i.iushln(r),o=0|n.words[n.length-1]);var a,s=i.length-n.length;if("mod"!==t){(a=new f(null)).length=s+1,a.words=new Array(a.length);for(var d=0;d<a.length;d++)a.words[d]=0}var h=i.clone()._ishlnsubmul(n,1,s);0===h.negative&&(i=h,a&&(a.words[s]=1));for(var c=s-1;c>=0;c--){var u=67108864*(0|i.words[n.length+c])+(0|i.words[n.length+c-1]);for(u=Math.min(u/o|0,67108863),i._ishlnsubmul(n,u,c);0!==i.negative;)u--,i.negative=0,i._ishlnsubmul(n,1,c),i.isZero()||(i.negative^=1);a&&(a.words[c]=u)}return a&&a.strip(),i.strip(),"div"!==t&&0!==r&&i.iushrn(r),{div:a||null,mod:i}},f.prototype.divmod=function(e,t,r){return i(!e.isZero()),this.isZero()?{div:new f(0),mod:new f(0)}:0!==this.negative&&0===e.negative?(a=this.neg().divmod(e,t),"mod"!==t&&(n=a.div.neg()),"div"!==t&&(o=a.mod.neg(),r&&0!==o.negative&&o.iadd(e)),{div:n,mod:o}):0===this.negative&&0!==e.negative?(a=this.divmod(e.neg(),t),"mod"!==t&&(n=a.div.neg()),{div:n,mod:a.mod}):0!=(this.negative&e.negative)?(a=this.neg().divmod(e.neg(),t),"div"!==t&&(o=a.mod.neg(),r&&0!==o.negative&&o.isub(e)),{div:a.div,mod:o}):e.length>this.length||this.cmp(e)<0?{div:new f(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new f(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new f(this.modn(e.words[0]))}:this._wordDiv(e,t);var n,o,a},f.prototype.div=function(e){return this.divmod(e,"div",!1).div},f.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},f.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},f.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=0!==t.div.negative?t.mod.isub(e):t.mod,i=e.ushrn(1),n=e.andln(1),f=r.cmp(i);return f<0||1===n&&0===f?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},f.prototype.modn=function(e){i(e<=67108863);for(var t=(1<<26)%e,r=0,n=this.length-1;n>=0;n--)r=(t*r+(0|this.words[n]))%e;return r},f.prototype.idivn=function(e){i(e<=67108863);for(var t=0,r=this.length-1;r>=0;r--){var n=(0|this.words[r])+67108864*t;this.words[r]=n/e|0,t=n%e}return this.strip()},f.prototype.divn=function(e){return this.clone().idivn(e)},f.prototype.egcd=function(e){i(0===e.negative),i(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n=new f(1),o=new f(0),a=new f(0),s=new f(1),d=0;t.isEven()&&r.isEven();)t.iushrn(1),r.iushrn(1),++d;for(var h=r.clone(),c=t.clone();!t.isZero();){for(var u=0,l=1;0==(t.words[0]&l)&&u<26;++u,l<<=1);if(u>0)for(t.iushrn(u);u-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(h),o.isub(c)),n.iushrn(1),o.iushrn(1);for(var b=0,p=1;0==(r.words[0]&p)&&b<26;++b,p<<=1);if(b>0)for(r.iushrn(b);b-- >0;)(a.isOdd()||s.isOdd())&&(a.iadd(h),s.isub(c)),a.iushrn(1),s.iushrn(1);t.cmp(r)>=0?(t.isub(r),n.isub(a),o.isub(s)):(r.isub(t),a.isub(n),s.isub(o))}return{a,b:s,gcd:r.iushln(d)}},f.prototype._invmp=function(e){i(0===e.negative),i(!e.isZero());var t=this,r=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n,o=new f(1),a=new f(0),s=r.clone();t.cmpn(1)>0&&r.cmpn(1)>0;){for(var d=0,h=1;0==(t.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(t.iushrn(d);d-- >0;)o.isOdd()&&o.iadd(s),o.iushrn(1);for(var c=0,u=1;0==(r.words[0]&u)&&c<26;++c,u<<=1);if(c>0)for(r.iushrn(c);c-- >0;)a.isOdd()&&a.iadd(s),a.iushrn(1);t.cmp(r)>=0?(t.isub(r),o.isub(a)):(r.isub(t),a.isub(o))}return(n=0===t.cmpn(1)?o:a).cmpn(0)<0&&n.iadd(e),n},f.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),r=e.clone();t.negative=0,r.negative=0;for(var i=0;t.isEven()&&r.isEven();i++)t.iushrn(1),r.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;r.isEven();)r.iushrn(1);var n=t.cmp(r);if(n<0){var f=t;t=r,r=f}else if(0===n||0===r.cmpn(1))break;t.isub(r)}return r.iushln(i)},f.prototype.invm=function(e){return this.egcd(e).a.umod(e)},f.prototype.isEven=function(){return 0==(1&this.words[0])},f.prototype.isOdd=function(){return 1==(1&this.words[0])},f.prototype.andln=function(e){return this.words[0]&e},f.prototype.bincn=function(e){i("number"==typeof e);var t=e%26,r=(e-t)/26,n=1<<t;if(this.length<=r)return this._expand(r+1),this.words[r]|=n,this;for(var f=n,o=r;0!==f&&o<this.length;o++){var a=0|this.words[o];f=(a+=f)>>>26,a&=67108863,this.words[o]=a}return 0!==f&&(this.words[o]=f,this.length++),this},f.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},f.prototype.cmpn=function(e){var t,r=e<0;if(0!==this.negative&&!r)return-1;if(0===this.negative&&r)return 1;if(this.strip(),this.length>1)t=1;else{r&&(e=-e),i(e<=67108863,"Number is too big");var n=0|this.words[0];t=n===e?0:n<e?-1:1}return 0!==this.negative?0|-t:t},f.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},f.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,r=this.length-1;r>=0;r--){var i=0|this.words[r],n=0|e.words[r];if(i!==n){i<n?t=-1:i>n&&(t=1);break}}return t},f.prototype.gtn=function(e){return 1===this.cmpn(e)},f.prototype.gt=function(e){return 1===this.cmp(e)},f.prototype.gten=function(e){return this.cmpn(e)>=0},f.prototype.gte=function(e){return this.cmp(e)>=0},f.prototype.ltn=function(e){return-1===this.cmpn(e)},f.prototype.lt=function(e){return-1===this.cmp(e)},f.prototype.lten=function(e){return this.cmpn(e)<=0},f.prototype.lte=function(e){return this.cmp(e)<=0},f.prototype.eqn=function(e){return 0===this.cmpn(e)},f.prototype.eq=function(e){return 0===this.cmp(e)},f.red=function(e){return new S(e)},f.prototype.toRed=function(e){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},f.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},f.prototype._forceRed=function(e){return this.red=e,this},f.prototype.forceRed=function(e){return i(!this.red,"Already a number in reduction context"),this._forceRed(e)},f.prototype.redAdd=function(e){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},f.prototype.redIAdd=function(e){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},f.prototype.redSub=function(e){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},f.prototype.redISub=function(e){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},f.prototype.redShl=function(e){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},f.prototype.redMul=function(e){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},f.prototype.redIMul=function(e){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},f.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},f.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},f.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},f.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},f.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},f.prototype.redPow=function(e){return i(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var m={k256:null,p224:null,p192:null,p25519:null};function v(e,t){this.name=e,this.p=new f(t,16),this.n=this.p.bitLength(),this.k=new f(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function g(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function w(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function _(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function M(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function S(e){if("string"==typeof e){var t=f._prime(e);this.m=t.p,this.prime=t}else i(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function A(e){S.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new f(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var e=new f(null);return e.words=new Array(Math.ceil(this.n/13)),e},v.prototype.ireduce=function(e){var t,r=e;do{this.split(r,this.tmp),t=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength()}while(t>this.n);var i=t<this.n?-1:r.ucmp(this.p);return 0===i?(r.words[0]=0,r.length=1):i>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},v.prototype.split=function(e,t){e.iushrn(this.n,0,t)},v.prototype.imulK=function(e){return e.imul(this.k)},n(g,v),g.prototype.split=function(e,t){for(var r=4194303,i=Math.min(e.length,9),n=0;n<i;n++)t.words[n]=e.words[n];if(t.length=i,e.length<=9)return e.words[0]=0,void(e.length=1);var f=e.words[9];for(t.words[t.length++]=f&r,n=10;n<e.length;n++){var o=0|e.words[n];e.words[n-10]=(o&r)<<4|f>>>22,f=o}f>>>=22,e.words[n-10]=f,0===f&&e.length>10?e.length-=10:e.length-=9},g.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,r=0;r<e.length;r++){var i=0|e.words[r];t+=977*i,e.words[r]=67108863&t,t=64*i+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},n(w,v),n(_,v),n(M,v),M.prototype.imulK=function(e){for(var t=0,r=0;r<e.length;r++){var i=19*(0|e.words[r])+t,n=67108863&i;i>>>=26,e.words[r]=n,t=i}return 0!==t&&(e.words[e.length++]=t),e},f._prime=function(e){if(m[e])return m[e];var t;if("k256"===e)t=new g;else if("p224"===e)t=new w;else if("p192"===e)t=new _;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new M}return m[e]=t,t},S.prototype._verify1=function(e){i(0===e.negative,"red works only with positives"),i(e.red,"red works only with red numbers")},S.prototype._verify2=function(e,t){i(0==(e.negative|t.negative),"red works only with positives"),i(e.red&&e.red===t.red,"red works only with red numbers")},S.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},S.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},S.prototype.add=function(e,t){this._verify2(e,t);var r=e.add(t);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},S.prototype.iadd=function(e,t){this._verify2(e,t);var r=e.iadd(t);return r.cmp(this.m)>=0&&r.isub(this.m),r},S.prototype.sub=function(e,t){this._verify2(e,t);var r=e.sub(t);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},S.prototype.isub=function(e,t){this._verify2(e,t);var r=e.isub(t);return r.cmpn(0)<0&&r.iadd(this.m),r},S.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},S.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},S.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},S.prototype.isqr=function(e){return this.imul(e,e.clone())},S.prototype.sqr=function(e){return this.mul(e,e)},S.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(i(t%2==1),3===t){var r=this.m.add(new f(1)).iushrn(2);return this.pow(e,r)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);i(!n.isZero());var a=new f(1).toRed(this),s=a.redNeg(),d=this.m.subn(1).iushrn(1),h=this.m.bitLength();for(h=new f(2*h*h).toRed(this);0!==this.pow(h,d).cmp(s);)h.redIAdd(s);for(var c=this.pow(h,n),u=this.pow(e,n.addn(1).iushrn(1)),l=this.pow(e,n),b=o;0!==l.cmp(a);){for(var p=l,y=0;0!==p.cmp(a);y++)p=p.redSqr();i(y<b);var m=this.pow(c,new f(1).iushln(b-y-1));u=u.redMul(m),c=m.redSqr(),l=l.redMul(c),b=y}return u},S.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},S.prototype.pow=function(e,t){if(t.isZero())return new f(1).toRed(this);if(0===t.cmpn(1))return e.clone();var r=new Array(16);r[0]=new f(1).toRed(this),r[1]=e;for(var i=2;i<r.length;i++)r[i]=this.mul(r[i-1],e);var n=r[0],o=0,a=0,s=t.bitLength()%26;for(0===s&&(s=26),i=t.length-1;i>=0;i--){for(var d=t.words[i],h=s-1;h>=0;h--){var c=d>>h&1;n!==r[0]&&(n=this.sqr(n)),0!==c||0!==o?(o<<=1,o|=c,(4==++a||0===i&&0===h)&&(n=this.mul(n,r[o]),a=0,o=0)):a=0}s=26}return n},S.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},S.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},f.mont=function(e){return new A(e)},n(A,S),A.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},A.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},A.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var r=e.imul(t),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),f=n;return n.cmp(this.m)>=0?f=n.isub(this.m):n.cmpn(0)<0&&(f=n.iadd(this.m)),f._forceRed(this)},A.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new f(0)._forceRed(this);var r=e.mul(t),i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=r.isub(i).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},A.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(e=r.nmd(e),this)},9931:(e,t,r)=>{var i;function n(e){this.rand=e}if(e.exports=function(e){return i||(i=new n(null)),i.generate(e)},e.exports.Rand=n,n.prototype.generate=function(e){return this._rand(e)},n.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),r=0;r<t.length;r++)t[r]=this.rand.getByte();return t},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?n.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?n.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"==typeof window&&(n.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var f=r(9214);if("function"!=typeof f.randomBytes)throw new Error("Not supported");n.prototype._rand=function(e){return f.randomBytes(e)}}catch(e){}},5456:e=>{"use strict";e.exports=function e(t){if("number"==typeof t&&isNaN(t))throw new Error("NaN is not allowed");if("number"==typeof t&&!isFinite(t))throw new Error("Infinity is not allowed");return null===t||"object"!=typeof t?JSON.stringify(t):t.toJSON instanceof Function?e(t.toJSON()):Array.isArray(t)?`[${t.reduce(((t,r,i)=>`${t}${0===i?"":","}${e(void 0===r||"symbol"==typeof r?null:r)}`),"")}]`:`{${Object.keys(t).sort().reduce(((r,i)=>void 0===t[i]||"symbol"==typeof t[i]?r:`${r}${0===r.length?"":","}${e(i)}:${e(t[i])}`),"")}}`}},6266:(e,t,r)=>{"use strict";var i=t;i.version=r(8597).i8,i.utils=r(953),i.rand=r(9931),i.curve=r(8254),i.curves=r(5427),i.ec=r(7954),i.eddsa=r(5980)},4918:(e,t,r)=>{"use strict";var i=r(3550),n=r(953),f=n.getNAF,o=n.getJSF,a=n.assert;function s(e,t){this.type=e,this.p=new i(t.p,16),this.red=t.prime?i.red(t.prime):i.mont(this.p),this.zero=new i(0).toRed(this.red),this.one=new i(1).toRed(this.red),this.two=new i(2).toRed(this.red),this.n=t.n&&new i(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);!r||r.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function d(e,t){this.curve=e,this.type=t,this.precomputed=null}e.exports=s,s.prototype.point=function(){throw new Error("Not implemented")},s.prototype.validate=function(){throw new Error("Not implemented")},s.prototype._fixedNafMul=function(e,t){a(e.precomputed);var r=e._getDoubles(),i=f(t,1,this._bitLength),n=(1<<r.step+1)-(r.step%2==0?2:1);n/=3;var o,s,d=[];for(o=0;o<i.length;o+=r.step){s=0;for(var h=o+r.step-1;h>=o;h--)s=(s<<1)+i[h];d.push(s)}for(var c=this.jpoint(null,null,null),u=this.jpoint(null,null,null),l=n;l>0;l--){for(o=0;o<d.length;o++)(s=d[o])===l?u=u.mixedAdd(r.points[o]):s===-l&&(u=u.mixedAdd(r.points[o].neg()));c=c.add(u)}return c.toP()},s.prototype._wnafMul=function(e,t){var r=4,i=e._getNAFPoints(r);r=i.wnd;for(var n=i.points,o=f(t,r,this._bitLength),s=this.jpoint(null,null,null),d=o.length-1;d>=0;d--){for(var h=0;d>=0&&0===o[d];d--)h++;if(d>=0&&h++,s=s.dblp(h),d<0)break;var c=o[d];a(0!==c),s="affine"===e.type?c>0?s.mixedAdd(n[c-1>>1]):s.mixedAdd(n[-c-1>>1].neg()):c>0?s.add(n[c-1>>1]):s.add(n[-c-1>>1].neg())}return"affine"===e.type?s.toP():s},s.prototype._wnafMulAdd=function(e,t,r,i,n){var a,s,d,h=this._wnafT1,c=this._wnafT2,u=this._wnafT3,l=0;for(a=0;a<i;a++){var b=(d=t[a])._getNAFPoints(e);h[a]=b.wnd,c[a]=b.points}for(a=i-1;a>=1;a-=2){var p=a-1,y=a;if(1===h[p]&&1===h[y]){var m=[t[p],null,null,t[y]];0===t[p].y.cmp(t[y].y)?(m[1]=t[p].add(t[y]),m[2]=t[p].toJ().mixedAdd(t[y].neg())):0===t[p].y.cmp(t[y].y.redNeg())?(m[1]=t[p].toJ().mixedAdd(t[y]),m[2]=t[p].add(t[y].neg())):(m[1]=t[p].toJ().mixedAdd(t[y]),m[2]=t[p].toJ().mixedAdd(t[y].neg()));var v=[-3,-1,-5,-7,0,7,5,1,3],g=o(r[p],r[y]);for(l=Math.max(g[0].length,l),u[p]=new Array(l),u[y]=new Array(l),s=0;s<l;s++){var w=0|g[0][s],_=0|g[1][s];u[p][s]=v[3*(w+1)+(_+1)],u[y][s]=0,c[p]=m}}else u[p]=f(r[p],h[p],this._bitLength),u[y]=f(r[y],h[y],this._bitLength),l=Math.max(u[p].length,l),l=Math.max(u[y].length,l)}var M=this.jpoint(null,null,null),S=this._wnafT4;for(a=l;a>=0;a--){for(var A=0;a>=0;){var E=!0;for(s=0;s<i;s++)S[s]=0|u[s][a],0!==S[s]&&(E=!1);if(!E)break;A++,a--}if(a>=0&&A++,M=M.dblp(A),a<0)break;for(s=0;s<i;s++){var x=S[s];0!==x&&(x>0?d=c[s][x-1>>1]:x<0&&(d=c[s][-x-1>>1].neg()),M="affine"===d.type?M.mixedAdd(d):M.add(d))}}for(a=0;a<i;a++)c[a]=null;return n?M:M.toP()},s.BasePoint=d,d.prototype.eq=function(){throw new Error("Not implemented")},d.prototype.validate=function(){return this.curve.validate(this)},s.prototype.decodePoint=function(e,t){e=n.toArray(e,t);var r=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*r)return 6===e[0]?a(e[e.length-1]%2==0):7===e[0]&&a(e[e.length-1]%2==1),this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));if((2===e[0]||3===e[0])&&e.length-1===r)return this.pointFromX(e.slice(1,1+r),3===e[0]);throw new Error("Unknown point format")},d.prototype.encodeCompressed=function(e){return this.encode(e,!0)},d.prototype._encode=function(e){var t=this.curve.p.byteLength(),r=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(r):[4].concat(r,this.getY().toArray("be",t))},d.prototype.encode=function(e,t){return n.encode(this._encode(t),e)},d.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},d.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},d.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var r=[this],i=this,n=0;n<t;n+=e){for(var f=0;f<e;f++)i=i.dbl();r.push(i)}return{step:e,points:r}},d.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],r=(1<<e)-1,i=1===r?null:this.dbl(),n=1;n<r;n++)t[n]=t[n-1].add(i);return{wnd:e,points:t}},d.prototype._getBeta=function(){return null},d.prototype.dblp=function(e){for(var t=this,r=0;r<e;r++)t=t.dbl();return t}},1138:(e,t,r)=>{"use strict";var i=r(953),n=r(3550),f=r(5717),o=r(4918),a=i.assert;function s(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,o.call(this,"edwards",e),this.a=new n(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new n(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new n(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),a(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function d(e,t,r,i,f){o.BasePoint.call(this,e,"projective"),null===t&&null===r&&null===i?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new n(t,16),this.y=new n(r,16),this.z=i?new n(i,16):this.curve.one,this.t=f&&new n(f,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}f(s,o),e.exports=s,s.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},s.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},s.prototype.jpoint=function(e,t,r,i){return this.point(e,t,r,i)},s.prototype.pointFromX=function(e,t){(e=new n(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),i=this.c2.redSub(this.a.redMul(r)),f=this.one.redSub(this.c2.redMul(this.d).redMul(r)),o=i.redMul(f.redInvm()),a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");var s=a.fromRed().isOdd();return(t&&!s||!t&&s)&&(a=a.redNeg()),this.point(e,a)},s.prototype.pointFromY=function(e,t){(e=new n(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr(),i=r.redSub(this.c2),f=r.redMul(this.d).redMul(this.c2).redSub(this.a),o=i.redMul(f.redInvm());if(0===o.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");return a.fromRed().isOdd()!==t&&(a=a.redNeg()),this.point(a,e)},s.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),r=e.y.redSqr(),i=t.redMul(this.a).redAdd(r),n=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return 0===i.cmp(n)},f(d,o.BasePoint),s.prototype.pointFromJSON=function(e){return d.fromJSON(this,e)},s.prototype.point=function(e,t,r,i){return new d(this,e,t,r,i)},d.fromJSON=function(e,t){return new d(e,t[0],t[1],t[2])},d.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},d.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},d.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr();r=r.redIAdd(r);var i=this.curve._mulA(e),n=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),f=i.redAdd(t),o=f.redSub(r),a=i.redSub(t),s=n.redMul(o),d=f.redMul(a),h=n.redMul(a),c=o.redMul(f);return this.curve.point(s,d,c,h)},d.prototype._projDbl=function(){var e,t,r,i,n,f,o=this.x.redAdd(this.y).redSqr(),a=this.x.redSqr(),s=this.y.redSqr();if(this.curve.twisted){var d=(i=this.curve._mulA(a)).redAdd(s);this.zOne?(e=o.redSub(a).redSub(s).redMul(d.redSub(this.curve.two)),t=d.redMul(i.redSub(s)),r=d.redSqr().redSub(d).redSub(d)):(n=this.z.redSqr(),f=d.redSub(n).redISub(n),e=o.redSub(a).redISub(s).redMul(f),t=d.redMul(i.redSub(s)),r=d.redMul(f))}else i=a.redAdd(s),n=this.curve._mulC(this.z).redSqr(),f=i.redSub(n).redSub(n),e=this.curve._mulC(o.redISub(i)).redMul(f),t=this.curve._mulC(i).redMul(a.redISub(s)),r=i.redMul(f);return this.curve.point(e,t,r)},d.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},d.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),i=this.t.redMul(this.curve.dd).redMul(e.t),n=this.z.redMul(e.z.redAdd(e.z)),f=r.redSub(t),o=n.redSub(i),a=n.redAdd(i),s=r.redAdd(t),d=f.redMul(o),h=a.redMul(s),c=f.redMul(s),u=o.redMul(a);return this.curve.point(d,h,u,c)},d.prototype._projAdd=function(e){var t,r,i=this.z.redMul(e.z),n=i.redSqr(),f=this.x.redMul(e.x),o=this.y.redMul(e.y),a=this.curve.d.redMul(f).redMul(o),s=n.redSub(a),d=n.redAdd(a),h=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(f).redISub(o),c=i.redMul(s).redMul(h);return this.curve.twisted?(t=i.redMul(d).redMul(o.redSub(this.curve._mulA(f))),r=s.redMul(d)):(t=i.redMul(d).redMul(o.redSub(f)),r=this.curve._mulC(s).redMul(d)),this.curve.point(c,t,r)},d.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},d.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},d.prototype.mulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!1)},d.prototype.jmulAdd=function(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,!0)},d.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},d.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},d.prototype.getX=function(){return this.normalize(),this.x.fromRed()},d.prototype.getY=function(){return this.normalize(),this.y.fromRed()},d.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},d.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var r=e.clone(),i=this.curve.redN.redMul(this.z);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(i),0===this.x.cmp(t))return!0}},d.prototype.toP=d.prototype.normalize,d.prototype.mixedAdd=d.prototype.add},8254:(e,t,r)=>{"use strict";var i=t;i.base=r(4918),i.short=r(6673),i.mont=r(2881),i.edwards=r(1138)},2881:(e,t,r)=>{"use strict";var i=r(3550),n=r(5717),f=r(4918),o=r(953);function a(e){f.call(this,"mont",e),this.a=new i(e.a,16).toRed(this.red),this.b=new i(e.b,16).toRed(this.red),this.i4=new i(4).toRed(this.red).redInvm(),this.two=new i(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function s(e,t,r){f.BasePoint.call(this,e,"projective"),null===t&&null===r?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new i(t,16),this.z=new i(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}n(a,f),e.exports=a,a.prototype.validate=function(e){var t=e.normalize().x,r=t.redSqr(),i=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);return 0===i.redSqrt().redSqr().cmp(i)},n(s,f.BasePoint),a.prototype.decodePoint=function(e,t){return this.point(o.toArray(e,t),1)},a.prototype.point=function(e,t){return new s(this,e,t)},a.prototype.pointFromJSON=function(e){return s.fromJSON(this,e)},s.prototype.precompute=function(){},s.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},s.fromJSON=function(e,t){return new s(e,t[0],t[1]||e.one)},s.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},s.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},s.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),r=e.redSub(t),i=e.redMul(t),n=r.redMul(t.redAdd(this.curve.a24.redMul(r)));return this.curve.point(i,n)},s.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},s.prototype.diffAdd=function(e,t){var r=this.x.redAdd(this.z),i=this.x.redSub(this.z),n=e.x.redAdd(e.z),f=e.x.redSub(e.z).redMul(r),o=n.redMul(i),a=t.z.redMul(f.redAdd(o).redSqr()),s=t.x.redMul(f.redISub(o).redSqr());return this.curve.point(a,s)},s.prototype.mul=function(e){for(var t=e.clone(),r=this,i=this.curve.point(null,null),n=[];0!==t.cmpn(0);t.iushrn(1))n.push(t.andln(1));for(var f=n.length-1;f>=0;f--)0===n[f]?(r=r.diffAdd(i,this),i=i.dbl()):(i=r.diffAdd(i,this),r=r.dbl());return i},s.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},s.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},s.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},s.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},s.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},6673:(e,t,r)=>{"use strict";var i=r(953),n=r(3550),f=r(5717),o=r(4918),a=i.assert;function s(e){o.call(this,"short",e),this.a=new n(e.a,16).toRed(this.red),this.b=new n(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function d(e,t,r,i){o.BasePoint.call(this,e,"affine"),null===t&&null===r?(this.x=null,this.y=null,this.inf=!0):(this.x=new n(t,16),this.y=new n(r,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function h(e,t,r,i){o.BasePoint.call(this,e,"jacobian"),null===t&&null===r&&null===i?(this.x=this.curve.one,this.y=this.curve.one,this.z=new n(0)):(this.x=new n(t,16),this.y=new n(r,16),this.z=new n(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}f(s,o),e.exports=s,s.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,r;if(e.beta)t=new n(e.beta,16).toRed(this.red);else{var i=this._getEndoRoots(this.p);t=(t=i[0].cmp(i[1])<0?i[0]:i[1]).toRed(this.red)}if(e.lambda)r=new n(e.lambda,16);else{var f=this._getEndoRoots(this.n);0===this.g.mul(f[0]).x.cmp(this.g.x.redMul(t))?r=f[0]:(r=f[1],a(0===this.g.mul(r).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:r,basis:e.basis?e.basis.map((function(e){return{a:new n(e.a,16),b:new n(e.b,16)}})):this._getEndoBasis(r)}}},s.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:n.mont(e),r=new n(2).toRed(t).redInvm(),i=r.redNeg(),f=new n(3).toRed(t).redNeg().redSqrt().redMul(r);return[i.redAdd(f).fromRed(),i.redSub(f).fromRed()]},s.prototype._getEndoBasis=function(e){for(var t,r,i,f,o,a,s,d,h,c=this.n.ushrn(Math.floor(this.n.bitLength()/2)),u=e,l=this.n.clone(),b=new n(1),p=new n(0),y=new n(0),m=new n(1),v=0;0!==u.cmpn(0);){var g=l.div(u);d=l.sub(g.mul(u)),h=y.sub(g.mul(b));var w=m.sub(g.mul(p));if(!i&&d.cmp(c)<0)t=s.neg(),r=b,i=d.neg(),f=h;else if(i&&2==++v)break;s=d,l=u,u=d,y=b,b=h,m=p,p=w}o=d.neg(),a=h;var _=i.sqr().add(f.sqr());return o.sqr().add(a.sqr()).cmp(_)>=0&&(o=t,a=r),i.negative&&(i=i.neg(),f=f.neg()),o.negative&&(o=o.neg(),a=a.neg()),[{a:i,b:f},{a:o,b:a}]},s.prototype._endoSplit=function(e){var t=this.endo.basis,r=t[0],i=t[1],n=i.b.mul(e).divRound(this.n),f=r.b.neg().mul(e).divRound(this.n),o=n.mul(r.a),a=f.mul(i.a),s=n.mul(r.b),d=f.mul(i.b);return{k1:e.sub(o).sub(a),k2:s.add(d).neg()}},s.prototype.pointFromX=function(e,t){(e=new n(e,16)).red||(e=e.toRed(this.red));var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),i=r.redSqrt();if(0!==i.redSqr().redSub(r).cmp(this.zero))throw new Error("invalid point");var f=i.fromRed().isOdd();return(t&&!f||!t&&f)&&(i=i.redNeg()),this.point(e,i)},s.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,r=e.y,i=this.a.redMul(t),n=t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);return 0===r.redSqr().redISub(n).cmpn(0)},s.prototype._endoWnafMulAdd=function(e,t,r){for(var i=this._endoWnafT1,n=this._endoWnafT2,f=0;f<e.length;f++){var o=this._endoSplit(t[f]),a=e[f],s=a._getBeta();o.k1.negative&&(o.k1.ineg(),a=a.neg(!0)),o.k2.negative&&(o.k2.ineg(),s=s.neg(!0)),i[2*f]=a,i[2*f+1]=s,n[2*f]=o.k1,n[2*f+1]=o.k2}for(var d=this._wnafMulAdd(1,i,n,2*f,r),h=0;h<2*f;h++)i[h]=null,n[h]=null;return d},f(d,o.BasePoint),s.prototype.point=function(e,t,r){return new d(this,e,t,r)},s.prototype.pointFromJSON=function(e,t){return d.fromJSON(this,e,t)},d.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve,i=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(i)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(i)}}}return t}},d.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},d.fromJSON=function(e,t,r){"string"==typeof t&&(t=JSON.parse(t));var i=e.point(t[0],t[1],r);if(!t[2])return i;function n(t){return e.point(t[0],t[1],r)}var f=t[2];return i.precomputed={beta:null,doubles:f.doubles&&{step:f.doubles.step,points:[i].concat(f.doubles.points.map(n))},naf:f.naf&&{wnd:f.naf.wnd,points:[i].concat(f.naf.points.map(n))}},i},d.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},d.prototype.isInfinity=function(){return this.inf},d.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var r=t.redSqr().redISub(this.x).redISub(e.x),i=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,i)},d.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,r=this.x.redSqr(),i=e.redInvm(),n=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i),f=n.redSqr().redISub(this.x.redAdd(this.x)),o=n.redMul(this.x.redSub(f)).redISub(this.y);return this.curve.point(f,o)},d.prototype.getX=function(){return this.x.fromRed()},d.prototype.getY=function(){return this.y.fromRed()},d.prototype.mul=function(e){return e=new n(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},d.prototype.mulAdd=function(e,t,r){var i=[this,t],n=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(i,n):this.curve._wnafMulAdd(1,i,n,2)},d.prototype.jmulAdd=function(e,t,r){var i=[this,t],n=[e,r];return this.curve.endo?this.curve._endoWnafMulAdd(i,n,!0):this.curve._wnafMulAdd(1,i,n,2,!0)},d.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},d.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed,i=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(i)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(i)}}}return t},d.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},f(h,o.BasePoint),s.prototype.jpoint=function(e,t,r){return new h(this,e,t,r)},h.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),r=this.x.redMul(t),i=this.y.redMul(t).redMul(e);return this.curve.point(r,i)},h.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},h.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),r=this.z.redSqr(),i=this.x.redMul(t),n=e.x.redMul(r),f=this.y.redMul(t.redMul(e.z)),o=e.y.redMul(r.redMul(this.z)),a=i.redSub(n),s=f.redSub(o);if(0===a.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var d=a.redSqr(),h=d.redMul(a),c=i.redMul(d),u=s.redSqr().redIAdd(h).redISub(c).redISub(c),l=s.redMul(c.redISub(u)).redISub(f.redMul(h)),b=this.z.redMul(e.z).redMul(a);return this.curve.jpoint(u,l,b)},h.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),r=this.x,i=e.x.redMul(t),n=this.y,f=e.y.redMul(t).redMul(this.z),o=r.redSub(i),a=n.redSub(f);if(0===o.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var s=o.redSqr(),d=s.redMul(o),h=r.redMul(s),c=a.redSqr().redIAdd(d).redISub(h).redISub(h),u=a.redMul(h.redISub(c)).redISub(n.redMul(d)),l=this.z.redMul(o);return this.curve.jpoint(c,u,l)},h.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var r=this;for(t=0;t<e;t++)r=r.dbl();return r}var i=this.curve.a,n=this.curve.tinv,f=this.x,o=this.y,a=this.z,s=a.redSqr().redSqr(),d=o.redAdd(o);for(t=0;t<e;t++){var h=f.redSqr(),c=d.redSqr(),u=c.redSqr(),l=h.redAdd(h).redIAdd(h).redIAdd(i.redMul(s)),b=f.redMul(c),p=l.redSqr().redISub(b.redAdd(b)),y=b.redISub(p),m=l.redMul(y);m=m.redIAdd(m).redISub(u);var v=d.redMul(a);t+1<e&&(s=s.redMul(u)),f=p,a=v,d=m}return this.curve.jpoint(f,d.redMul(n),a)},h.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},h.prototype._zeroDbl=function(){var e,t,r;if(this.zOne){var i=this.x.redSqr(),n=this.y.redSqr(),f=n.redSqr(),o=this.x.redAdd(n).redSqr().redISub(i).redISub(f);o=o.redIAdd(o);var a=i.redAdd(i).redIAdd(i),s=a.redSqr().redISub(o).redISub(o),d=f.redIAdd(f);d=(d=d.redIAdd(d)).redIAdd(d),e=s,t=a.redMul(o.redISub(s)).redISub(d),r=this.y.redAdd(this.y)}else{var h=this.x.redSqr(),c=this.y.redSqr(),u=c.redSqr(),l=this.x.redAdd(c).redSqr().redISub(h).redISub(u);l=l.redIAdd(l);var b=h.redAdd(h).redIAdd(h),p=b.redSqr(),y=u.redIAdd(u);y=(y=y.redIAdd(y)).redIAdd(y),e=p.redISub(l).redISub(l),t=b.redMul(l.redISub(e)).redISub(y),r=(r=this.y.redMul(this.z)).redIAdd(r)}return this.curve.jpoint(e,t,r)},h.prototype._threeDbl=function(){var e,t,r;if(this.zOne){var i=this.x.redSqr(),n=this.y.redSqr(),f=n.redSqr(),o=this.x.redAdd(n).redSqr().redISub(i).redISub(f);o=o.redIAdd(o);var a=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),s=a.redSqr().redISub(o).redISub(o);e=s;var d=f.redIAdd(f);d=(d=d.redIAdd(d)).redIAdd(d),t=a.redMul(o.redISub(s)).redISub(d),r=this.y.redAdd(this.y)}else{var h=this.z.redSqr(),c=this.y.redSqr(),u=this.x.redMul(c),l=this.x.redSub(h).redMul(this.x.redAdd(h));l=l.redAdd(l).redIAdd(l);var b=u.redIAdd(u),p=(b=b.redIAdd(b)).redAdd(b);e=l.redSqr().redISub(p),r=this.y.redAdd(this.z).redSqr().redISub(c).redISub(h);var y=c.redSqr();y=(y=(y=y.redIAdd(y)).redIAdd(y)).redIAdd(y),t=l.redMul(b.redISub(e)).redISub(y)}return this.curve.jpoint(e,t,r)},h.prototype._dbl=function(){var e=this.curve.a,t=this.x,r=this.y,i=this.z,n=i.redSqr().redSqr(),f=t.redSqr(),o=r.redSqr(),a=f.redAdd(f).redIAdd(f).redIAdd(e.redMul(n)),s=t.redAdd(t),d=(s=s.redIAdd(s)).redMul(o),h=a.redSqr().redISub(d.redAdd(d)),c=d.redISub(h),u=o.redSqr();u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var l=a.redMul(c).redISub(u),b=r.redAdd(r).redMul(i);return this.curve.jpoint(h,l,b)},h.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),r=this.z.redSqr(),i=t.redSqr(),n=e.redAdd(e).redIAdd(e),f=n.redSqr(),o=this.x.redAdd(t).redSqr().redISub(e).redISub(i),a=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(f)).redSqr(),s=i.redIAdd(i);s=(s=(s=s.redIAdd(s)).redIAdd(s)).redIAdd(s);var d=n.redIAdd(o).redSqr().redISub(f).redISub(a).redISub(s),h=t.redMul(d);h=(h=h.redIAdd(h)).redIAdd(h);var c=this.x.redMul(a).redISub(h);c=(c=c.redIAdd(c)).redIAdd(c);var u=this.y.redMul(d.redMul(s.redISub(d)).redISub(o.redMul(a)));u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var l=this.z.redAdd(o).redSqr().redISub(r).redISub(a);return this.curve.jpoint(c,u,l)},h.prototype.mul=function(e,t){return e=new n(e,t),this.curve._wnafMul(this,e)},h.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),r=e.z.redSqr();if(0!==this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))return!1;var i=t.redMul(this.z),n=r.redMul(e.z);return 0===this.y.redMul(n).redISub(e.y.redMul(i)).cmpn(0)},h.prototype.eqXToP=function(e){var t=this.z.redSqr(),r=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(r))return!0;for(var i=e.clone(),n=this.curve.redN.redMul(t);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(r.redIAdd(n),0===this.x.cmp(r))return!0}},h.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},h.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},5427:(e,t,r)=>{"use strict";var i,n=t,f=r(3715),o=r(8254),a=r(953).assert;function s(e){"short"===e.type?this.curve=new o.short(e):"edwards"===e.type?this.curve=new o.edwards(e):this.curve=new o.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,a(this.g.validate(),"Invalid curve"),a(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function d(e,t){Object.defineProperty(n,e,{configurable:!0,enumerable:!0,get:function(){var r=new s(t);return Object.defineProperty(n,e,{configurable:!0,enumerable:!0,value:r}),r}})}n.PresetCurve=s,d("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:f.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),d("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:f.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),d("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:f.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),d("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:f.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),d("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:f.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),d("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:f.sha256,gRed:!1,g:["9"]}),d("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:f.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{i=r(1037)}catch(e){i=void 0}d("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:f.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",i]})},7954:(e,t,r)=>{"use strict";var i=r(3550),n=r(2156),f=r(953),o=r(5427),a=r(9931),s=f.assert,d=r(1251),h=r(611);function c(e){if(!(this instanceof c))return new c(e);"string"==typeof e&&(s(Object.prototype.hasOwnProperty.call(o,e),"Unknown curve "+e),e=o[e]),e instanceof o.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}e.exports=c,c.prototype.keyPair=function(e){return new d(this,e)},c.prototype.keyFromPrivate=function(e,t){return d.fromPrivate(this,e,t)},c.prototype.keyFromPublic=function(e,t){return d.fromPublic(this,e,t)},c.prototype.genKeyPair=function(e){e||(e={});for(var t=new n({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||a(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),r=this.n.byteLength(),f=this.n.sub(new i(2));;){var o=new i(t.generate(r));if(!(o.cmp(f)>0))return o.iaddn(1),this.keyFromPrivate(o)}},c.prototype._truncateToN=function(e,t){var r=8*e.byteLength()-this.n.bitLength();return r>0&&(e=e.ushrn(r)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},c.prototype.sign=function(e,t,r,f){"object"==typeof r&&(f=r,r=null),f||(f={}),t=this.keyFromPrivate(t,r),e=this._truncateToN(new i(e,16));for(var o=this.n.byteLength(),a=t.getPrivate().toArray("be",o),s=e.toArray("be",o),d=new n({hash:this.hash,entropy:a,nonce:s,pers:f.pers,persEnc:f.persEnc||"utf8"}),c=this.n.sub(new i(1)),u=0;;u++){var l=f.k?f.k(u):new i(d.generate(this.n.byteLength()));if(!((l=this._truncateToN(l,!0)).cmpn(1)<=0||l.cmp(c)>=0)){var b=this.g.mul(l);if(!b.isInfinity()){var p=b.getX(),y=p.umod(this.n);if(0!==y.cmpn(0)){var m=l.invm(this.n).mul(y.mul(t.getPrivate()).iadd(e));if(0!==(m=m.umod(this.n)).cmpn(0)){var v=(b.getY().isOdd()?1:0)|(0!==p.cmp(y)?2:0);return f.canonical&&m.cmp(this.nh)>0&&(m=this.n.sub(m),v^=1),new h({r:y,s:m,recoveryParam:v})}}}}}},c.prototype.verify=function(e,t,r,n){e=this._truncateToN(new i(e,16)),r=this.keyFromPublic(r,n);var f=(t=new h(t,"hex")).r,o=t.s;if(f.cmpn(1)<0||f.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var a,s=o.invm(this.n),d=s.mul(e).umod(this.n),c=s.mul(f).umod(this.n);return this.curve._maxwellTrick?!(a=this.g.jmulAdd(d,r.getPublic(),c)).isInfinity()&&a.eqXToP(f):!(a=this.g.mulAdd(d,r.getPublic(),c)).isInfinity()&&0===a.getX().umod(this.n).cmp(f)},c.prototype.recoverPubKey=function(e,t,r,n){s((3&r)===r,"The recovery param is more than two bits"),t=new h(t,n);var f=this.n,o=new i(e),a=t.r,d=t.s,c=1&r,u=r>>1;if(a.cmp(this.curve.p.umod(this.curve.n))>=0&&u)throw new Error("Unable to find sencond key candinate");a=u?this.curve.pointFromX(a.add(this.curve.n),c):this.curve.pointFromX(a,c);var l=t.r.invm(f),b=f.sub(o).mul(l).umod(f),p=d.mul(l).umod(f);return this.g.mulAdd(b,a,p)},c.prototype.getKeyRecoveryParam=function(e,t,r,i){if(null!==(t=new h(t,i)).recoveryParam)return t.recoveryParam;for(var n=0;n<4;n++){var f;try{f=this.recoverPubKey(e,t,n)}catch(e){continue}if(f.eq(r))return n}throw new Error("Unable to find valid recovery factor")}},1251:(e,t,r)=>{"use strict";var i=r(3550),n=r(953).assert;function f(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}e.exports=f,f.fromPublic=function(e,t,r){return t instanceof f?t:new f(e,{pub:t,pubEnc:r})},f.fromPrivate=function(e,t,r){return t instanceof f?t:new f(e,{priv:t,privEnc:r})},f.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},f.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},f.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},f.prototype._importPrivate=function(e,t){this.priv=new i(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},f.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?n(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||n(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},f.prototype.derive=function(e){return e.validate()||n(e.validate(),"public point not validated"),e.mul(this.priv).getX()},f.prototype.sign=function(e,t,r){return this.ec.sign(e,this,t,r)},f.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},f.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},611:(e,t,r)=>{"use strict";var i=r(3550),n=r(953),f=n.assert;function o(e,t){if(e instanceof o)return e;this._importDER(e,t)||(f(e.r&&e.s,"Signature without r or s"),this.r=new i(e.r,16),this.s=new i(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}function a(){this.place=0}function s(e,t){var r=e[t.place++];if(!(128&r))return r;var i=15&r;if(0===i||i>4)return!1;for(var n=0,f=0,o=t.place;f<i;f++,o++)n<<=8,n|=e[o],n>>>=0;return!(n<=127)&&(t.place=o,n)}function d(e){for(var t=0,r=e.length-1;!e[t]&&!(128&e[t+1])&&t<r;)t++;return 0===t?e:e.slice(t)}function h(e,t){if(t<128)e.push(t);else{var r=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|r);--r;)e.push(t>>>(r<<3)&255);e.push(t)}}e.exports=o,o.prototype._importDER=function(e,t){e=n.toArray(e,t);var r=new a;if(48!==e[r.place++])return!1;var f=s(e,r);if(!1===f)return!1;if(f+r.place!==e.length)return!1;if(2!==e[r.place++])return!1;var o=s(e,r);if(!1===o)return!1;var d=e.slice(r.place,o+r.place);if(r.place+=o,2!==e[r.place++])return!1;var h=s(e,r);if(!1===h)return!1;if(e.length!==h+r.place)return!1;var c=e.slice(r.place,h+r.place);if(0===d[0]){if(!(128&d[1]))return!1;d=d.slice(1)}if(0===c[0]){if(!(128&c[1]))return!1;c=c.slice(1)}return this.r=new i(d),this.s=new i(c),this.recoveryParam=null,!0},o.prototype.toDER=function(e){var t=this.r.toArray(),r=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&r[0]&&(r=[0].concat(r)),t=d(t),r=d(r);!(r[0]||128&r[1]);)r=r.slice(1);var i=[2];h(i,t.length),(i=i.concat(t)).push(2),h(i,r.length);var f=i.concat(r),o=[48];return h(o,f.length),o=o.concat(f),n.encode(o,e)}},5980:(e,t,r)=>{"use strict";var i=r(3715),n=r(5427),f=r(953),o=f.assert,a=f.parseBytes,s=r(9087),d=r(3622);function h(e){if(o("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof h))return new h(e);e=n[e].curve,this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=i.sha512}e.exports=h,h.prototype.sign=function(e,t){e=a(e);var r=this.keyFromSecret(t),i=this.hashInt(r.messagePrefix(),e),n=this.g.mul(i),f=this.encodePoint(n),o=this.hashInt(f,r.pubBytes(),e).mul(r.priv()),s=i.add(o).umod(this.curve.n);return this.makeSignature({R:n,S:s,Rencoded:f})},h.prototype.verify=function(e,t,r){e=a(e),t=this.makeSignature(t);var i=this.keyFromPublic(r),n=this.hashInt(t.Rencoded(),i.pubBytes(),e),f=this.g.mul(t.S());return t.R().add(i.pub().mul(n)).eq(f)},h.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return f.intFromLE(e.digest()).umod(this.curve.n)},h.prototype.keyFromPublic=function(e){return s.fromPublic(this,e)},h.prototype.keyFromSecret=function(e){return s.fromSecret(this,e)},h.prototype.makeSignature=function(e){return e instanceof d?e:new d(this,e)},h.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},h.prototype.decodePoint=function(e){var t=(e=f.parseBytes(e)).length-1,r=e.slice(0,t).concat(-129&e[t]),i=0!=(128&e[t]),n=f.intFromLE(r);return this.curve.pointFromY(n,i)},h.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},h.prototype.decodeInt=function(e){return f.intFromLE(e)},h.prototype.isPoint=function(e){return e instanceof this.pointClass}},9087:(e,t,r)=>{"use strict";var i=r(953),n=i.assert,f=i.parseBytes,o=i.cachedProperty;function a(e,t){this.eddsa=e,this._secret=f(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=f(t.pub)}a.fromPublic=function(e,t){return t instanceof a?t:new a(e,{pub:t})},a.fromSecret=function(e,t){return t instanceof a?t:new a(e,{secret:t})},a.prototype.secret=function(){return this._secret},o(a,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),o(a,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),o(a,"privBytes",(function(){var e=this.eddsa,t=this.hash(),r=e.encodingLength-1,i=t.slice(0,e.encodingLength);return i[0]&=248,i[r]&=127,i[r]|=64,i})),o(a,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),o(a,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),o(a,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),a.prototype.sign=function(e){return n(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},a.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},a.prototype.getSecret=function(e){return n(this._secret,"KeyPair is public only"),i.encode(this.secret(),e)},a.prototype.getPublic=function(e){return i.encode(this.pubBytes(),e)},e.exports=a},3622:(e,t,r)=>{"use strict";var i=r(3550),n=r(953),f=n.assert,o=n.cachedProperty,a=n.parseBytes;function s(e,t){this.eddsa=e,"object"!=typeof t&&(t=a(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),f(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof i&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}o(s,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),o(s,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),o(s,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),o(s,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),s.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},s.prototype.toHex=function(){return n.encode(this.toBytes(),"hex").toUpperCase()},e.exports=s},1037:e=>{e.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},953:(e,t,r)=>{"use strict";var i=t,n=r(3550),f=r(9746),o=r(4504);i.assert=f,i.toArray=o.toArray,i.zero2=o.zero2,i.toHex=o.toHex,i.encode=o.encode,i.getNAF=function(e,t,r){var i=new Array(Math.max(e.bitLength(),r)+1);i.fill(0);for(var n=1<<t+1,f=e.clone(),o=0;o<i.length;o++){var a,s=f.andln(n-1);f.isOdd()?(a=s>(n>>1)-1?(n>>1)-s:s,f.isubn(a)):a=0,i[o]=a,f.iushrn(1)}return i},i.getJSF=function(e,t){var r=[[],[]];e=e.clone(),t=t.clone();for(var i,n=0,f=0;e.cmpn(-n)>0||t.cmpn(-f)>0;){var o,a,s=e.andln(3)+n&3,d=t.andln(3)+f&3;3===s&&(s=-1),3===d&&(d=-1),o=0==(1&s)?0:3!=(i=e.andln(7)+n&7)&&5!==i||2!==d?s:-s,r[0].push(o),a=0==(1&d)?0:3!=(i=t.andln(7)+f&7)&&5!==i||2!==s?d:-d,r[1].push(a),2*n===o+1&&(n=1-n),2*f===a+1&&(f=1-f),e.iushrn(1),t.iushrn(1)}return r},i.cachedProperty=function(e,t,r){var i="_"+t;e.prototype[t]=function(){return void 0!==this[i]?this[i]:this[i]=r.call(this)}},i.parseBytes=function(e){return"string"==typeof e?i.toArray(e,"hex"):e},i.intFromLE=function(e){return new n(e,"hex","le")}},3715:(e,t,r)=>{var i=t;i.utils=r(6436),i.common=r(5772),i.sha=r(9041),i.ripemd=r(2949),i.hmac=r(2344),i.sha1=i.sha.sha1,i.sha256=i.sha.sha256,i.sha224=i.sha.sha224,i.sha384=i.sha.sha384,i.sha512=i.sha.sha512,i.ripemd160=i.ripemd.ripemd160},5772:(e,t,r)=>{"use strict";var i=r(6436),n=r(9746);function f(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=f,f.prototype.update=function(e,t){if(e=i.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var r=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-r,e.length),0===this.pending.length&&(this.pending=null),e=i.join32(e,0,e.length-r,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this},f.prototype.digest=function(e){return this.update(this._pad()),n(null===this.pending),this._digest(e)},f.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,r=t-(e+this.padLength)%t,i=new Array(r+this.padLength);i[0]=128;for(var n=1;n<r;n++)i[n]=0;if(e<<=3,"big"===this.endian){for(var f=8;f<this.padLength;f++)i[n++]=0;i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=e>>>24&255,i[n++]=e>>>16&255,i[n++]=e>>>8&255,i[n++]=255&e}else for(i[n++]=255&e,i[n++]=e>>>8&255,i[n++]=e>>>16&255,i[n++]=e>>>24&255,i[n++]=0,i[n++]=0,i[n++]=0,i[n++]=0,f=8;f<this.padLength;f++)i[n++]=0;return i}},2344:(e,t,r)=>{"use strict";var i=r(6436),n=r(9746);function f(e,t,r){if(!(this instanceof f))return new f(e,t,r);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(i.toArray(t,r))}e.exports=f,f.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),n(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},f.prototype.update=function(e,t){return this.inner.update(e,t),this},f.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},2949:(e,t,r)=>{"use strict";var i=r(6436),n=r(5772),f=i.rotl32,o=i.sum32,a=i.sum32_3,s=i.sum32_4,d=n.BlockHash;function h(){if(!(this instanceof h))return new h;d.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function c(e,t,r,i){return e<=15?t^r^i:e<=31?t&r|~t&i:e<=47?(t|~r)^i:e<=63?t&i|r&~i:t^(r|~i)}function u(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function l(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}i.inherits(h,d),t.ripemd160=h,h.blockSize=512,h.outSize=160,h.hmacStrength=192,h.padLength=64,h.prototype._update=function(e,t){for(var r=this.h[0],i=this.h[1],n=this.h[2],d=this.h[3],h=this.h[4],v=r,g=i,w=n,_=d,M=h,S=0;S<80;S++){var A=o(f(s(r,c(S,i,n,d),e[b[S]+t],u(S)),y[S]),h);r=h,h=d,d=f(n,10),n=i,i=A,A=o(f(s(v,c(79-S,g,w,_),e[p[S]+t],l(S)),m[S]),M),v=M,M=_,_=f(w,10),w=g,g=A}A=a(this.h[1],n,_),this.h[1]=a(this.h[2],d,M),this.h[2]=a(this.h[3],h,v),this.h[3]=a(this.h[4],r,g),this.h[4]=a(this.h[0],i,w),this.h[0]=A},h.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"little"):i.split32(this.h,"little")};var b=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],p=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],y=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],m=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},9041:(e,t,r)=>{"use strict";t.sha1=r(4761),t.sha224=r(799),t.sha256=r(9344),t.sha384=r(772),t.sha512=r(5900)},4761:(e,t,r)=>{"use strict";var i=r(6436),n=r(5772),f=r(7038),o=i.rotl32,a=i.sum32,s=i.sum32_5,d=f.ft_1,h=n.BlockHash,c=[1518500249,1859775393,2400959708,3395469782];function u(){if(!(this instanceof u))return new u;h.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}i.inherits(u,h),e.exports=u,u.blockSize=512,u.outSize=160,u.hmacStrength=80,u.padLength=64,u.prototype._update=function(e,t){for(var r=this.W,i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=o(r[i-3]^r[i-8]^r[i-14]^r[i-16],1);var n=this.h[0],f=this.h[1],h=this.h[2],u=this.h[3],l=this.h[4];for(i=0;i<r.length;i++){var b=~~(i/20),p=s(o(n,5),d(b,f,h,u),l,r[i],c[b]);l=u,u=h,h=o(f,30),f=n,n=p}this.h[0]=a(this.h[0],n),this.h[1]=a(this.h[1],f),this.h[2]=a(this.h[2],h),this.h[3]=a(this.h[3],u),this.h[4]=a(this.h[4],l)},u.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},799:(e,t,r)=>{"use strict";var i=r(6436),n=r(9344);function f(){if(!(this instanceof f))return new f;n.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}i.inherits(f,n),e.exports=f,f.blockSize=512,f.outSize=224,f.hmacStrength=192,f.padLength=64,f.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h.slice(0,7),"big"):i.split32(this.h.slice(0,7),"big")}},9344:(e,t,r)=>{"use strict";var i=r(6436),n=r(5772),f=r(7038),o=r(9746),a=i.sum32,s=i.sum32_4,d=i.sum32_5,h=f.ch32,c=f.maj32,u=f.s0_256,l=f.s1_256,b=f.g0_256,p=f.g1_256,y=n.BlockHash,m=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function v(){if(!(this instanceof v))return new v;y.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=m,this.W=new Array(64)}i.inherits(v,y),e.exports=v,v.blockSize=512,v.outSize=256,v.hmacStrength=192,v.padLength=64,v.prototype._update=function(e,t){for(var r=this.W,i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=s(p(r[i-2]),r[i-7],b(r[i-15]),r[i-16]);var n=this.h[0],f=this.h[1],y=this.h[2],m=this.h[3],v=this.h[4],g=this.h[5],w=this.h[6],_=this.h[7];for(o(this.k.length===r.length),i=0;i<r.length;i++){var M=d(_,l(v),h(v,g,w),this.k[i],r[i]),S=a(u(n),c(n,f,y));_=w,w=g,g=v,v=a(m,M),m=y,y=f,f=n,n=a(M,S)}this.h[0]=a(this.h[0],n),this.h[1]=a(this.h[1],f),this.h[2]=a(this.h[2],y),this.h[3]=a(this.h[3],m),this.h[4]=a(this.h[4],v),this.h[5]=a(this.h[5],g),this.h[6]=a(this.h[6],w),this.h[7]=a(this.h[7],_)},v.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},772:(e,t,r)=>{"use strict";var i=r(6436),n=r(5900);function f(){if(!(this instanceof f))return new f;n.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}i.inherits(f,n),e.exports=f,f.blockSize=1024,f.outSize=384,f.hmacStrength=192,f.padLength=128,f.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h.slice(0,12),"big"):i.split32(this.h.slice(0,12),"big")}},5900:(e,t,r)=>{"use strict";var i=r(6436),n=r(5772),f=r(9746),o=i.rotr64_hi,a=i.rotr64_lo,s=i.shr64_hi,d=i.shr64_lo,h=i.sum64,c=i.sum64_hi,u=i.sum64_lo,l=i.sum64_4_hi,b=i.sum64_4_lo,p=i.sum64_5_hi,y=i.sum64_5_lo,m=n.BlockHash,v=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function g(){if(!(this instanceof g))return new g;m.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=v,this.W=new Array(160)}function w(e,t,r,i,n){var f=e&r^~e&n;return f<0&&(f+=4294967296),f}function _(e,t,r,i,n,f){var o=t&i^~t&f;return o<0&&(o+=4294967296),o}function M(e,t,r,i,n){var f=e&r^e&n^r&n;return f<0&&(f+=4294967296),f}function S(e,t,r,i,n,f){var o=t&i^t&f^i&f;return o<0&&(o+=4294967296),o}function A(e,t){var r=o(e,t,28)^o(t,e,2)^o(t,e,7);return r<0&&(r+=4294967296),r}function E(e,t){var r=a(e,t,28)^a(t,e,2)^a(t,e,7);return r<0&&(r+=4294967296),r}function x(e,t){var r=a(e,t,14)^a(e,t,18)^a(t,e,9);return r<0&&(r+=4294967296),r}function I(e,t){var r=o(e,t,1)^o(e,t,8)^s(e,t,7);return r<0&&(r+=4294967296),r}function k(e,t){var r=a(e,t,1)^a(e,t,8)^d(e,t,7);return r<0&&(r+=4294967296),r}function L(e,t){var r=a(e,t,19)^a(t,e,29)^d(e,t,6);return r<0&&(r+=4294967296),r}i.inherits(g,m),e.exports=g,g.blockSize=1024,g.outSize=512,g.hmacStrength=192,g.padLength=128,g.prototype._prepareBlock=function(e,t){for(var r=this.W,i=0;i<32;i++)r[i]=e[t+i];for(;i<r.length;i+=2){var n=(y=r[i-4],m=r[i-3],v=void 0,(v=o(y,m,19)^o(m,y,29)^s(y,m,6))<0&&(v+=4294967296),v),f=L(r[i-4],r[i-3]),a=r[i-14],d=r[i-13],h=I(r[i-30],r[i-29]),c=k(r[i-30],r[i-29]),u=r[i-32],p=r[i-31];r[i]=l(n,f,a,d,h,c,u,p),r[i+1]=b(n,f,a,d,h,c,u,p)}var y,m,v},g.prototype._update=function(e,t){this._prepareBlock(e,t);var r,i,n,a=this.W,s=this.h[0],d=this.h[1],l=this.h[2],b=this.h[3],m=this.h[4],v=this.h[5],g=this.h[6],I=this.h[7],k=this.h[8],L=this.h[9],P=this.h[10],U=this.h[11],C=this.h[12],z=this.h[13],N=this.h[14],R=this.h[15];f(this.k.length===a.length);for(var B=0;B<a.length;B+=2){var T=N,O=R,D=(n=void 0,(n=o(r=k,i=L,14)^o(r,i,18)^o(i,r,9))<0&&(n+=4294967296),n),j=x(k,L),K=w(k,0,P,0,C),q=_(0,L,0,U,0,z),H=this.k[B],J=this.k[B+1],F=a[B],V=a[B+1],W=p(T,O,D,j,K,q,H,J,F,V),$=y(T,O,D,j,K,q,H,J,F,V);T=A(s,d),O=E(s,d),D=M(s,0,l,0,m),j=S(0,d,0,b,0,v);var G=c(T,O,D,j),X=u(T,O,D,j);N=C,R=z,C=P,z=U,P=k,U=L,k=c(g,I,W,$),L=u(I,I,W,$),g=m,I=v,m=l,v=b,l=s,b=d,s=c(W,$,G,X),d=u(W,$,G,X)}h(this.h,0,s,d),h(this.h,2,l,b),h(this.h,4,m,v),h(this.h,6,g,I),h(this.h,8,k,L),h(this.h,10,P,U),h(this.h,12,C,z),h(this.h,14,N,R)},g.prototype._digest=function(e){return"hex"===e?i.toHex32(this.h,"big"):i.split32(this.h,"big")}},7038:(e,t,r)=>{"use strict";var i=r(6436).rotr32;function n(e,t,r){return e&t^~e&r}function f(e,t,r){return e&t^e&r^t&r}function o(e,t,r){return e^t^r}t.ft_1=function(e,t,r,i){return 0===e?n(t,r,i):1===e||3===e?o(t,r,i):2===e?f(t,r,i):void 0},t.ch32=n,t.maj32=f,t.p32=o,t.s0_256=function(e){return i(e,2)^i(e,13)^i(e,22)},t.s1_256=function(e){return i(e,6)^i(e,11)^i(e,25)},t.g0_256=function(e){return i(e,7)^i(e,18)^e>>>3},t.g1_256=function(e){return i(e,17)^i(e,19)^e>>>10}},6436:(e,t,r)=>{"use strict";var i=r(9746),n=r(5717);function f(e,t){return 55296==(64512&e.charCodeAt(t))&&!(t<0||t+1>=e.length)&&56320==(64512&e.charCodeAt(t+1))}function o(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function a(e){return 1===e.length?"0"+e:e}function s(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}t.inherits=n,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"==typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}else for(var i=0,n=0;n<e.length;n++){var o=e.charCodeAt(n);o<128?r[i++]=o:o<2048?(r[i++]=o>>6|192,r[i++]=63&o|128):f(e,n)?(o=65536+((1023&o)<<10)+(1023&e.charCodeAt(++n)),r[i++]=o>>18|240,r[i++]=o>>12&63|128,r[i++]=o>>6&63|128,r[i++]=63&o|128):(r[i++]=o>>12|224,r[i++]=o>>6&63|128,r[i++]=63&o|128)}else for(n=0;n<e.length;n++)r[n]=0|e[n];return r},t.toHex=function(e){for(var t="",r=0;r<e.length;r++)t+=a(e[r].toString(16));return t},t.htonl=o,t.toHex32=function(e,t){for(var r="",i=0;i<e.length;i++){var n=e[i];"little"===t&&(n=o(n)),r+=s(n.toString(16))}return r},t.zero2=a,t.zero8=s,t.join32=function(e,t,r,n){var f=r-t;i(f%4==0);for(var o=new Array(f/4),a=0,s=t;a<o.length;a++,s+=4){var d;d="big"===n?e[s]<<24|e[s+1]<<16|e[s+2]<<8|e[s+3]:e[s+3]<<24|e[s+2]<<16|e[s+1]<<8|e[s],o[a]=d>>>0}return o},t.split32=function(e,t){for(var r=new Array(4*e.length),i=0,n=0;i<e.length;i++,n+=4){var f=e[i];"big"===t?(r[n]=f>>>24,r[n+1]=f>>>16&255,r[n+2]=f>>>8&255,r[n+3]=255&f):(r[n+3]=f>>>24,r[n+2]=f>>>16&255,r[n+1]=f>>>8&255,r[n]=255&f)}return r},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,r){return e+t+r>>>0},t.sum32_4=function(e,t,r,i){return e+t+r+i>>>0},t.sum32_5=function(e,t,r,i,n){return e+t+r+i+n>>>0},t.sum64=function(e,t,r,i){var n=e[t],f=i+e[t+1]>>>0,o=(f<i?1:0)+r+n;e[t]=o>>>0,e[t+1]=f},t.sum64_hi=function(e,t,r,i){return(t+i>>>0<t?1:0)+e+r>>>0},t.sum64_lo=function(e,t,r,i){return t+i>>>0},t.sum64_4_hi=function(e,t,r,i,n,f,o,a){var s=0,d=t;return s+=(d=d+i>>>0)<t?1:0,s+=(d=d+f>>>0)<f?1:0,e+r+n+o+(s+=(d=d+a>>>0)<a?1:0)>>>0},t.sum64_4_lo=function(e,t,r,i,n,f,o,a){return t+i+f+a>>>0},t.sum64_5_hi=function(e,t,r,i,n,f,o,a,s,d){var h=0,c=t;return h+=(c=c+i>>>0)<t?1:0,h+=(c=c+f>>>0)<f?1:0,h+=(c=c+a>>>0)<a?1:0,e+r+n+o+s+(h+=(c=c+d>>>0)<d?1:0)>>>0},t.sum64_5_lo=function(e,t,r,i,n,f,o,a,s,d){return t+i+f+a+d>>>0},t.rotr64_hi=function(e,t,r){return(t<<32-r|e>>>r)>>>0},t.rotr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0},t.shr64_hi=function(e,t,r){return e>>>r},t.shr64_lo=function(e,t,r){return(e<<32-r|t>>>r)>>>0}},2156:(e,t,r)=>{"use strict";var i=r(3715),n=r(4504),f=r(9746);function o(e){if(!(this instanceof o))return new o(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=n.toArray(e.entropy,e.entropyEnc||"hex"),r=n.toArray(e.nonce,e.nonceEnc||"hex"),i=n.toArray(e.pers,e.persEnc||"hex");f(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,r,i)}e.exports=o,o.prototype._init=function(e,t,r){var i=e.concat(t).concat(r);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var n=0;n<this.V.length;n++)this.K[n]=0,this.V[n]=1;this._update(i),this._reseed=1,this.reseedInterval=281474976710656},o.prototype._hmac=function(){return new i.hmac(this.hash,this.K)},o.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},o.prototype.reseed=function(e,t,r,i){"string"!=typeof t&&(i=r,r=t,t=null),e=n.toArray(e,t),r=n.toArray(r,i),f(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(r||[])),this._reseed=1},o.prototype.generate=function(e,t,r,i){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(i=r,r=t,t=null),r&&(r=n.toArray(r,i||"hex"),this._update(r));for(var f=[];f.length<e;)this.V=this._hmac().update(this.V).digest(),f=f.concat(this.V);var o=f.slice(0,e);return this._update(r),this._reseed++,n.encode(o,t)}},5717:e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}},1094:(e,t,r)=>{var i;!function(){"use strict";var n="input is invalid type",f="object"==typeof window,o=f?window:{};o.JS_SHA3_NO_WINDOW&&(f=!1);var a=!f&&"object"==typeof self;!o.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?o=r.g:a&&(o=self);var s=!o.JS_SHA3_NO_COMMON_JS&&e.exports,d=r.amdO,h=!o.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,c="0123456789abcdef".split(""),u=[4,1024,262144,67108864],l=[0,8,16,24],b=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],p=[224,256,384,512],y=[128,256],m=["hex","buffer","arrayBuffer","array","digest"],v={128:168,256:136};!o.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!h||!o.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var g=function(e,t,r){return function(i){return new N(e,t,e).update(i)[r]()}},w=function(e,t,r){return function(i,n){return new N(e,t,n).update(i)[r]()}},_=function(e,t,r){return function(t,i,n,f){return x["cshake"+e].update(t,i,n,f)[r]()}},M=function(e,t,r){return function(t,i,n,f){return x["kmac"+e].update(t,i,n,f)[r]()}},S=function(e,t,r,i){for(var n=0;n<m.length;++n){var f=m[n];e[f]=t(r,i,f)}return e},A=function(e,t){var r=g(e,t,"hex");return r.create=function(){return new N(e,t,e)},r.update=function(e){return r.create().update(e)},S(r,g,e,t)},E=[{name:"keccak",padding:[1,256,65536,16777216],bits:p,createMethod:A},{name:"sha3",padding:[6,1536,393216,100663296],bits:p,createMethod:A},{name:"shake",padding:[31,7936,2031616,520093696],bits:y,createMethod:function(e,t){var r=w(e,t,"hex");return r.create=function(r){return new N(e,t,r)},r.update=function(e,t){return r.create(t).update(e)},S(r,w,e,t)}},{name:"cshake",padding:u,bits:y,createMethod:function(e,t){var r=v[e],i=_(e,0,"hex");return i.create=function(i,n,f){return n||f?new N(e,t,i).bytepad([n,f],r):x["shake"+e].create(i)},i.update=function(e,t,r,n){return i.create(t,r,n).update(e)},S(i,_,e,t)}},{name:"kmac",padding:u,bits:y,createMethod:function(e,t){var r=v[e],i=M(e,0,"hex");return i.create=function(i,n,f){return new R(e,t,n).bytepad(["KMAC",f],r).bytepad([i],r)},i.update=function(e,t,r,n){return i.create(e,r,n).update(t)},S(i,M,e,t)}}],x={},I=[],k=0;k<E.length;++k)for(var L=E[k],P=L.bits,U=0;U<P.length;++U){var C=L.name+"_"+P[U];if(I.push(C),x[C]=L.createMethod(P[U],L.padding),"sha3"!==L.name){var z=L.name+P[U];I.push(z),x[z]=x[C]}}function N(e,t,r){this.blocks=[],this.s=[],this.padding=t,this.outputBits=r,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=r>>5,this.extraBytes=(31&r)>>3;for(var i=0;i<50;++i)this.s[i]=0}function R(e,t,r){N.call(this,e,t,r)}N.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(n);if(null===e)throw new Error(n);if(h&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||h&&ArrayBuffer.isView(e)))throw new Error(n);t=!0}for(var i,f,o=this.blocks,a=this.byteCount,s=e.length,d=this.blockCount,c=0,u=this.s;c<s;){if(this.reset)for(this.reset=!1,o[0]=this.block,i=1;i<d+1;++i)o[i]=0;if(t)for(i=this.start;c<s&&i<a;++c)o[i>>2]|=e[c]<<l[3&i++];else for(i=this.start;c<s&&i<a;++c)(f=e.charCodeAt(c))<128?o[i>>2]|=f<<l[3&i++]:f<2048?(o[i>>2]|=(192|f>>6)<<l[3&i++],o[i>>2]|=(128|63&f)<<l[3&i++]):f<55296||f>=57344?(o[i>>2]|=(224|f>>12)<<l[3&i++],o[i>>2]|=(128|f>>6&63)<<l[3&i++],o[i>>2]|=(128|63&f)<<l[3&i++]):(f=65536+((1023&f)<<10|1023&e.charCodeAt(++c)),o[i>>2]|=(240|f>>18)<<l[3&i++],o[i>>2]|=(128|f>>12&63)<<l[3&i++],o[i>>2]|=(128|f>>6&63)<<l[3&i++],o[i>>2]|=(128|63&f)<<l[3&i++]);if(this.lastByteIndex=i,i>=a){for(this.start=i-a,this.block=o[d],i=0;i<d;++i)u[i]^=o[i];B(u),this.reset=!0}else this.start=i}return this},N.prototype.encode=function(e,t){var r=255&e,i=1,n=[r];for(r=255&(e>>=8);r>0;)n.unshift(r),r=255&(e>>=8),++i;return t?n.push(i):n.unshift(i),this.update(n),n.length},N.prototype.encodeString=function(e){var t,r=typeof e;if("string"!==r){if("object"!==r)throw new Error(n);if(null===e)throw new Error(n);if(h&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||h&&ArrayBuffer.isView(e)))throw new Error(n);t=!0}var i=0,f=e.length;if(t)i=f;else for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);a<128?i+=1:a<2048?i+=2:a<55296||a>=57344?i+=3:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++o)),i+=4)}return i+=this.encode(8*i),this.update(e),i},N.prototype.bytepad=function(e,t){for(var r=this.encode(t),i=0;i<e.length;++i)r+=this.encodeString(e[i]);var n=t-r%t,f=[];return f.length=n,this.update(f),this},N.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,r=this.blockCount,i=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[r],t=1;t<r+1;++t)e[t]=0;for(e[r-1]|=2147483648,t=0;t<r;++t)i[t]^=e[t];B(i)}},N.prototype.toString=N.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,r=this.s,i=this.outputBlocks,n=this.extraBytes,f=0,o=0,a="";o<i;){for(f=0;f<t&&o<i;++f,++o)e=r[f],a+=c[e>>4&15]+c[15&e]+c[e>>12&15]+c[e>>8&15]+c[e>>20&15]+c[e>>16&15]+c[e>>28&15]+c[e>>24&15];o%t==0&&(B(r),f=0)}return n&&(e=r[f],a+=c[e>>4&15]+c[15&e],n>1&&(a+=c[e>>12&15]+c[e>>8&15]),n>2&&(a+=c[e>>20&15]+c[e>>16&15])),a},N.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,r=this.s,i=this.outputBlocks,n=this.extraBytes,f=0,o=0,a=this.outputBits>>3;e=n?new ArrayBuffer(i+1<<2):new ArrayBuffer(a);for(var s=new Uint32Array(e);o<i;){for(f=0;f<t&&o<i;++f,++o)s[o]=r[f];o%t==0&&B(r)}return n&&(s[f]=r[f],e=e.slice(0,a)),e},N.prototype.buffer=N.prototype.arrayBuffer,N.prototype.digest=N.prototype.array=function(){this.finalize();for(var e,t,r=this.blockCount,i=this.s,n=this.outputBlocks,f=this.extraBytes,o=0,a=0,s=[];a<n;){for(o=0;o<r&&a<n;++o,++a)e=a<<2,t=i[o],s[e]=255&t,s[e+1]=t>>8&255,s[e+2]=t>>16&255,s[e+3]=t>>24&255;a%r==0&&B(i)}return f&&(e=a<<2,t=i[o],s[e]=255&t,f>1&&(s[e+1]=t>>8&255),f>2&&(s[e+2]=t>>16&255)),s},R.prototype=new N,R.prototype.finalize=function(){return this.encode(this.outputBits,!0),N.prototype.finalize.call(this)};var B=function(e){var t,r,i,n,f,o,a,s,d,h,c,u,l,p,y,m,v,g,w,_,M,S,A,E,x,I,k,L,P,U,C,z,N,R,B,T,O,D,j,K,q,H,J,F,V,W,$,G,X,Z,Y,Q,ee,te,re,ie,ne,fe,oe,ae,se,de,he;for(i=0;i<48;i+=2)n=e[0]^e[10]^e[20]^e[30]^e[40],f=e[1]^e[11]^e[21]^e[31]^e[41],o=e[2]^e[12]^e[22]^e[32]^e[42],a=e[3]^e[13]^e[23]^e[33]^e[43],s=e[4]^e[14]^e[24]^e[34]^e[44],d=e[5]^e[15]^e[25]^e[35]^e[45],h=e[6]^e[16]^e[26]^e[36]^e[46],c=e[7]^e[17]^e[27]^e[37]^e[47],t=(u=e[8]^e[18]^e[28]^e[38]^e[48])^(o<<1|a>>>31),r=(l=e[9]^e[19]^e[29]^e[39]^e[49])^(a<<1|o>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=n^(s<<1|d>>>31),r=f^(d<<1|s>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=o^(h<<1|c>>>31),r=a^(c<<1|h>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=s^(u<<1|l>>>31),r=d^(l<<1|u>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=h^(n<<1|f>>>31),r=c^(f<<1|n>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,p=e[0],y=e[1],W=e[11]<<4|e[10]>>>28,$=e[10]<<4|e[11]>>>28,L=e[20]<<3|e[21]>>>29,P=e[21]<<3|e[20]>>>29,ae=e[31]<<9|e[30]>>>23,se=e[30]<<9|e[31]>>>23,H=e[40]<<18|e[41]>>>14,J=e[41]<<18|e[40]>>>14,R=e[2]<<1|e[3]>>>31,B=e[3]<<1|e[2]>>>31,m=e[13]<<12|e[12]>>>20,v=e[12]<<12|e[13]>>>20,G=e[22]<<10|e[23]>>>22,X=e[23]<<10|e[22]>>>22,U=e[33]<<13|e[32]>>>19,C=e[32]<<13|e[33]>>>19,de=e[42]<<2|e[43]>>>30,he=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,T=e[14]<<6|e[15]>>>26,O=e[15]<<6|e[14]>>>26,g=e[25]<<11|e[24]>>>21,w=e[24]<<11|e[25]>>>21,Z=e[34]<<15|e[35]>>>17,Y=e[35]<<15|e[34]>>>17,z=e[45]<<29|e[44]>>>3,N=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,x=e[7]<<28|e[6]>>>4,ie=e[17]<<23|e[16]>>>9,ne=e[16]<<23|e[17]>>>9,D=e[26]<<25|e[27]>>>7,j=e[27]<<25|e[26]>>>7,_=e[36]<<21|e[37]>>>11,M=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,F=e[8]<<27|e[9]>>>5,V=e[9]<<27|e[8]>>>5,I=e[18]<<20|e[19]>>>12,k=e[19]<<20|e[18]>>>12,fe=e[29]<<7|e[28]>>>25,oe=e[28]<<7|e[29]>>>25,K=e[38]<<8|e[39]>>>24,q=e[39]<<8|e[38]>>>24,S=e[48]<<14|e[49]>>>18,A=e[49]<<14|e[48]>>>18,e[0]=p^~m&g,e[1]=y^~v&w,e[10]=E^~I&L,e[11]=x^~k&P,e[20]=R^~T&D,e[21]=B^~O&j,e[30]=F^~W&G,e[31]=V^~$&X,e[40]=te^~ie&fe,e[41]=re^~ne&oe,e[2]=m^~g&_,e[3]=v^~w&M,e[12]=I^~L&U,e[13]=k^~P&C,e[22]=T^~D&K,e[23]=O^~j&q,e[32]=W^~G&Z,e[33]=$^~X&Y,e[42]=ie^~fe&ae,e[43]=ne^~oe&se,e[4]=g^~_&S,e[5]=w^~M&A,e[14]=L^~U&z,e[15]=P^~C&N,e[24]=D^~K&H,e[25]=j^~q&J,e[34]=G^~Z&Q,e[35]=X^~Y&ee,e[44]=fe^~ae&de,e[45]=oe^~se&he,e[6]=_^~S&p,e[7]=M^~A&y,e[16]=U^~z&E,e[17]=C^~N&x,e[26]=K^~H&R,e[27]=q^~J&B,e[36]=Z^~Q&F,e[37]=Y^~ee&V,e[46]=ae^~de&te,e[47]=se^~he&re,e[8]=S^~p&m,e[9]=A^~y&v,e[18]=z^~E&I,e[19]=N^~x&k,e[28]=H^~R&T,e[29]=J^~B&O,e[38]=Q^~F&W,e[39]=ee^~V&$,e[48]=de^~te&ie,e[49]=he^~re&ne,e[0]^=b[i],e[1]^=b[i+1]};if(s)e.exports=x;else{for(k=0;k<I.length;++k)o[I[k]]=x[I[k]];d&&(void 0===(i=function(){return x}.call(t,r,t,e))||(e.exports=i))}}()},9746:e=>{function t(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=t,t.equal=function(e,t,r){if(e!=t)throw new Error(r||"Assertion failed: "+e+" != "+t)}},4504:(e,t)=>{"use strict";var r=t;function i(e){return 1===e.length?"0"+e:e}function n(e){for(var t="",r=0;r<e.length;r++)t+=i(e[r].toString(16));return t}r.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if("string"!=typeof e){for(var i=0;i<e.length;i++)r[i]=0|e[i];return r}if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e),i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16));else for(i=0;i<e.length;i++){var n=e.charCodeAt(i),f=n>>8,o=255&n;f?r.push(f,o):r.push(o)}return r},r.zero2=i,r.toHex=n,r.encode=function(e,t){return"hex"===t?n(e):e}},5883:()=>{},6601:()=>{},9214:()=>{},2218:(e,t,r)=>{"use strict";r.r(t),r.d(t,{CID:()=>Fe,bases:()=>it,bytes:()=>i,codecs:()=>ft,digest:()=>p,hasher:()=>y,hashes:()=>nt,varint:()=>b});var i={};r.r(i),r.d(i,{coerce:()=>E,empty:()=>_,equals:()=>A,fromHex:()=>S,fromString:()=>I,isBinary:()=>x,toHex:()=>M,toString:()=>k});var n={};r.r(n),r.d(n,{identity:()=>T});var f={};r.r(f),r.d(f,{base2:()=>O});var o={};r.r(o),r.d(o,{base8:()=>D});var a={};r.r(a),r.d(a,{base10:()=>j});var s={};r.r(s),r.d(s,{base16:()=>K,base16upper:()=>q});var d={};r.r(d),r.d(d,{base32:()=>H,base32hex:()=>W,base32hexpad:()=>G,base32hexpadupper:()=>X,base32hexupper:()=>$,base32pad:()=>F,base32padupper:()=>V,base32upper:()=>J,base32z:()=>Z});var h={};r.r(h),r.d(h,{base36:()=>Y,base36upper:()=>Q});var c={};r.r(c),r.d(c,{base58btc:()=>ee,base58flickr:()=>te});var u={};r.r(u),r.d(u,{base64:()=>re,base64pad:()=>ie,base64url:()=>ne,base64urlpad:()=>fe});var l={};r.r(l),r.d(l,{base256emoji:()=>de});var b={};r.r(b),r.d(b,{decode:()=>_e,encodeTo:()=>Me,encodingLength:()=>Se});var p={};r.r(p),r.d(p,{Digest:()=>Ie,create:()=>Ae,decode:()=>Ee,equals:()=>xe});var y={};r.r(y),r.d(y,{Hasher:()=>Le,from:()=>ke});var m={};r.r(m),r.d(m,{sha256:()=>Ue,sha512:()=>Ce});var v={};r.r(v),r.d(v,{identity:()=>Ne});var g={};r.r(g),r.d(g,{code:()=>Be,decode:()=>Oe,encode:()=>Te,name:()=>Re});var w={};r.r(w),r.d(w,{code:()=>qe,decode:()=>Je,encode:()=>He,name:()=>Ke});const _=new Uint8Array(0),M=e=>e.reduce(((e,t)=>e+t.toString(16).padStart(2,"0")),""),S=e=>{const t=e.match(/../g);return t?new Uint8Array(t.map((e=>parseInt(e,16)))):_},A=(e,t)=>{if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0},E=e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")},x=e=>e instanceof ArrayBuffer||ArrayBuffer.isView(e),I=e=>(new TextEncoder).encode(e),k=e=>(new TextDecoder).decode(e);class L{constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class P{constructor(e,t,r){if(this.name=e,this.prefix=t,void 0===t.codePointAt(0))throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if("string"==typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return C(this,e)}}class U{constructor(e){this.decoders=e}or(e){return C(this,e)}decode(e){const t=e[0],r=this.decoders[t];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const C=(e,t)=>new U({...e.decoders||{[e.prefix]:e},...t.decoders||{[t.prefix]:t}});class z{constructor(e,t,r,i){this.name=e,this.prefix=t,this.baseEncode=r,this.baseDecode=i,this.encoder=new L(e,t,r),this.decoder=new P(e,t,i)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const N=({name:e,prefix:t,encode:r,decode:i})=>new z(e,t,r,i),R=({prefix:e,name:t,alphabet:r})=>{const{encode:i,decode:n}=function(e,t){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),i=0;i<r.length;i++)r[i]=255;for(var n=0;n<e.length;n++){var f=e.charAt(n),o=f.charCodeAt(0);if(255!==r[o])throw new TypeError(f+" is ambiguous");r[o]=n}var a=e.length,s=e.charAt(0),d=Math.log(a)/Math.log(256),h=Math.log(256)/Math.log(a);function c(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var t=0;if(" "!==e[t]){for(var i=0,n=0;e[t]===s;)i++,t++;for(var f=(e.length-t)*d+1>>>0,o=new Uint8Array(f);e[t];){var h=r[e.charCodeAt(t)];if(255===h)return;for(var c=0,u=f-1;(0!==h||c<n)&&-1!==u;u--,c++)h+=a*o[u]>>>0,o[u]=h%256>>>0,h=h/256>>>0;if(0!==h)throw new Error("Non-zero carry");n=c,t++}if(" "!==e[t]){for(var l=f-n;l!==f&&0===o[l];)l++;for(var b=new Uint8Array(i+(f-l)),p=i;l!==f;)b[p++]=o[l++];return b}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,i=0,n=0,f=t.length;n!==f&&0===t[n];)n++,r++;for(var o=(f-n)*h+1>>>0,d=new Uint8Array(o);n!==f;){for(var c=t[n],u=0,l=o-1;(0!==c||u<i)&&-1!==l;l--,u++)c+=256*d[l]>>>0,d[l]=c%a>>>0,c=c/a>>>0;if(0!==c)throw new Error("Non-zero carry");i=u,n++}for(var b=o-i;b!==o&&0===d[b];)b++;for(var p=s.repeat(r);b<o;++b)p+=e.charAt(d[b]);return p},decodeUnsafe:c,decode:function(e){var r=c(e);if(r)return r;throw new Error(`Non-${t} character`)}}}(r,t);return N({prefix:e,name:t,encode:i,decode:e=>E(n(e))})},B=({name:e,prefix:t,bitsPerChar:r,alphabet:i})=>N({prefix:t,name:e,encode:e=>((e,t,r)=>{const i="="===t[t.length-1],n=(1<<r)-1;let f="",o=0,a=0;for(let i=0;i<e.length;++i)for(a=a<<8|e[i],o+=8;o>r;)o-=r,f+=t[n&a>>o];if(o&&(f+=t[n&a<<r-o]),i)for(;f.length*r&7;)f+="=";return f})(e,i,r),decode:t=>((e,t,r,i)=>{const n={};for(let e=0;e<t.length;++e)n[t[e]]=e;let f=e.length;for(;"="===e[f-1];)--f;const o=new Uint8Array(f*r/8|0);let a=0,s=0,d=0;for(let t=0;t<f;++t){const f=n[e[t]];if(void 0===f)throw new SyntaxError(`Non-${i} character`);s=s<<r|f,a+=r,a>=8&&(a-=8,o[d++]=255&s>>a)}if(a>=r||255&s<<8-a)throw new SyntaxError("Unexpected end of data");return o})(t,i,r,e)}),T=N({prefix:"\0",name:"identity",encode:e=>k(e),decode:e=>I(e)}),O=B({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),D=B({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),j=R({prefix:"9",name:"base10",alphabet:"0123456789"}),K=B({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),q=B({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),H=B({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),J=B({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),F=B({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),V=B({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),W=B({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),$=B({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),G=B({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),X=B({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Z=B({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),Y=R({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Q=R({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),ee=R({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),te=R({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),re=B({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),ie=B({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),ne=B({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),fe=B({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),oe=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),ae=oe.reduce(((e,t,r)=>(e[r]=t,e)),[]),se=oe.reduce(((e,t,r)=>(e[t.codePointAt(0)]=r,e)),[]),de=N({prefix:"🚀",name:"base256emoji",encode:function(e){return e.reduce(((e,t)=>e+ae[t]),"")},decode:function(e){const t=[];for(const r of e){const e=se[r.codePointAt(0)];if(void 0===e)throw new Error(`Non-base256emoji character: ${r}`);t.push(e)}return new Uint8Array(t)}});var he=Math.pow(2,31),ce=Math.pow(2,7),ue=Math.pow(2,14),le=Math.pow(2,21),be=Math.pow(2,28),pe=Math.pow(2,35),ye=Math.pow(2,42),me=Math.pow(2,49),ve=Math.pow(2,56),ge=Math.pow(2,63);const we={encode:function e(t,r,i){r=r||[];for(var n=i=i||0;t>=he;)r[i++]=255&t|128,t/=128;for(;-128&t;)r[i++]=255&t|128,t>>>=7;return r[i]=0|t,e.bytes=i-n+1,r},decode:function e(t,r){var i,n=0,f=0,o=r=r||0,a=t.length;do{if(o>=a)throw e.bytes=0,new RangeError("Could not decode varint");i=t[o++],n+=f<28?(127&i)<<f:(127&i)*Math.pow(2,f),f+=7}while(i>=128);return e.bytes=o-r,n},encodingLength:function(e){return e<ce?1:e<ue?2:e<le?3:e<be?4:e<pe?5:e<ye?6:e<me?7:e<ve?8:e<ge?9:10}},_e=(e,t=0)=>[we.decode(e,t),we.decode.bytes],Me=(e,t,r=0)=>(we.encode(e,t,r),t),Se=e=>we.encodingLength(e),Ae=(e,t)=>{const r=t.byteLength,i=Se(e),n=i+Se(r),f=new Uint8Array(n+r);return Me(e,f,0),Me(r,f,i),f.set(t,n),new Ie(e,r,t,f)},Ee=e=>{const t=E(e),[r,i]=_e(t),[n,f]=_e(t.subarray(i)),o=t.subarray(i+f);if(o.byteLength!==n)throw new Error("Incorrect length");return new Ie(r,n,o,t)},xe=(e,t)=>e===t||e.code===t.code&&e.size===t.size&&A(e.bytes,t.bytes);class Ie{constructor(e,t,r,i){this.code=e,this.size=t,this.digest=r,this.bytes=i}}const ke=({name:e,code:t,encode:r})=>new Le(e,t,r);class Le{constructor(e,t,r){this.name=e,this.code=t,this.encode=r}digest(e){if(e instanceof Uint8Array){const t=this.encode(e);return t instanceof Uint8Array?Ae(this.code,t):t.then((e=>Ae(this.code,e)))}throw Error("Unknown type, must be binary type")}}const Pe=e=>async t=>new Uint8Array(await crypto.subtle.digest(e,t)),Ue=ke({name:"sha2-256",code:18,encode:Pe("SHA-256")}),Ce=ke({name:"sha2-512",code:19,encode:Pe("SHA-512")}),ze=E,Ne={code:0,name:"identity",encode:ze,digest:e=>Ae(0,ze(e))},Re="raw",Be=85,Te=e=>E(e),Oe=e=>E(e),De=new TextEncoder,je=new TextDecoder,Ke="json",qe=512,He=e=>De.encode(JSON.stringify(e)),Je=e=>JSON.parse(je.decode(e));class Fe{constructor(e,t,r,i){this.code=t,this.version=e,this.multihash=r,this.bytes=i,this.byteOffset=i.byteOffset,this.byteLength=i.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:et,byteLength:et,code:Qe,version:Qe,multihash:Qe,bytes:Qe,_baseCache:et,asCID:et})}toV0(){if(0===this.version)return this;{const{code:e,multihash:t}=this;if(e!==Ge)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Xe)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return Fe.createV0(t)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,r=Ae(e,t);return Fe.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&xe(this.multihash,e.multihash)}toString(e){const{bytes:t,version:r,_baseCache:i}=this;return 0===r?We(t,i,e||ee.encoder):$e(t,i,e||H.encoder)}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return tt(/^0\.0/,rt),!(!e||!e[Ye]&&e.asCID!==e)}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof Fe)return e;if(null!=e&&e.asCID===e){const{version:t,code:r,multihash:i,bytes:n}=e;return new Fe(t,r,i,n||Ze(t,r,i.bytes))}if(null!=e&&!0===e[Ye]){const{version:t,multihash:r,code:i}=e,n=Ee(r);return Fe.create(t,i,n)}return null}static create(e,t,r){if("number"!=typeof t)throw new Error("String codecs are no longer supported");switch(e){case 0:if(t!==Ge)throw new Error(`Version 0 CID must use dag-pb (code: ${Ge}) block encoding`);return new Fe(e,t,r,r.bytes);case 1:{const i=Ze(e,t,r.bytes);return new Fe(e,t,r,i)}default:throw new Error("Invalid version")}}static createV0(e){return Fe.create(0,Ge,e)}static createV1(e,t){return Fe.create(1,e,t)}static decode(e){const[t,r]=Fe.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=Fe.inspectBytes(e),r=t.size-t.multihashSize,i=E(e.subarray(r,r+t.multihashSize));if(i.byteLength!==t.multihashSize)throw new Error("Incorrect length");const n=i.subarray(t.multihashSize-t.digestSize),f=new Ie(t.multihashCode,t.digestSize,n,i);return[0===t.version?Fe.createV0(f):Fe.createV1(t.codec,f),e.subarray(t.size)]}static inspectBytes(e){let t=0;const r=()=>{const[r,i]=_e(e.subarray(t));return t+=i,r};let i=r(),n=Ge;if(18===i?(i=0,t=0):1===i&&(n=r()),0!==i&&1!==i)throw new RangeError(`Invalid CID version ${i}`);const f=t,o=r(),a=r(),s=t+a;return{version:i,codec:n,multihashCode:o,digestSize:a,multihashSize:s-f,size:s}}static parse(e,t){const[r,i]=Ve(e,t),n=Fe.decode(i);return n._baseCache.set(r,e),n}}const Ve=(e,t)=>{switch(e[0]){case"Q":{const r=t||ee;return[ee.prefix,r.decode(`${ee.prefix}${e}`)]}case ee.prefix:{const r=t||ee;return[ee.prefix,r.decode(e)]}case H.prefix:{const r=t||H;return[H.prefix,r.decode(e)]}default:if(null==t)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],t.decode(e)]}},We=(e,t,r)=>{const{prefix:i}=r;if(i!==ee.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const n=t.get(i);if(null==n){const n=r.encode(e).slice(1);return t.set(i,n),n}return n},$e=(e,t,r)=>{const{prefix:i}=r,n=t.get(i);if(null==n){const n=r.encode(e);return t.set(i,n),n}return n},Ge=112,Xe=18,Ze=(e,t,r)=>{const i=Se(e),n=i+Se(t),f=new Uint8Array(n+r.byteLength);return Me(e,f,0),Me(t,f,i),f.set(r,n),f},Ye=Symbol.for("@ipld/js-cid/CID"),Qe={writable:!1,configurable:!1,enumerable:!0},et={writable:!1,enumerable:!1,configurable:!1},tt=(e,t)=>{if(!e.test("0.0.0-dev"))throw new Error(t);console.warn(t)},rt="CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n",it={...n,...f,...o,...a,...s,...d,...h,...c,...u,...l},nt={...m,...v},ft={raw:g,json:w}},3160:(e,t,r)=>{"use strict";r.d(t,{E:()=>n});var i=r(6867);function n(e=0){return null!=globalThis.Buffer&&null!=globalThis.Buffer.allocUnsafe?(0,i.P)(globalThis.Buffer.allocUnsafe(e)):new Uint8Array(e)}},2217:(e,t,r)=>{"use strict";r.r(t),r.d(t,{fromString:()=>f});var i=r(7645),n=r(6867);function f(e,t="utf8"){const r=i.Z[t];if(!r)throw new Error(`Unsupported encoding "${t}"`);return"utf8"!==t&&"utf-8"!==t||null==globalThis.Buffer||null==globalThis.Buffer.from?r.decoder.decode(`${r.prefix}${e}`):(0,n.P)(globalThis.Buffer.from(e,"utf-8"))}},733:(e,t,r)=>{"use strict";function i(e,t){for(let r=0;r<e.byteLength;r++){if(e[r]<t[r])return-1;if(e[r]>t[r])return 1}return e.byteLength>t.byteLength?1:e.byteLength<t.byteLength?-1:0}r.r(t),r.d(t,{compare:()=>i,concat:()=>o,equals:()=>a,fromString:()=>s.fromString,toString:()=>h,xor:()=>c});var n=r(3160),f=r(6867);function o(e,t){t||(t=e.reduce(((e,t)=>e+t.length),0));const r=(0,n.E)(t);let i=0;for(const t of e)r.set(t,i),i+=t.length;return(0,f.P)(r)}function a(e,t){if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==t[r])return!1;return!0}var s=r(2217),d=r(7645);function h(e,t="utf8"){const r=d.Z[t];if(!r)throw new Error(`Unsupported encoding "${t}"`);return"utf8"!==t&&"utf-8"!==t||null==globalThis.Buffer||null==globalThis.Buffer.from?r.encoder.encode(e).substring(1):globalThis.Buffer.from(e.buffer,e.byteOffset,e.byteLength).toString("utf8")}function c(e,t){if(e.length!==t.length)throw new Error("Inputs should have the same length");const r=(0,n.E)(e.length);for(let i=0;i<e.length;i++)r[i]=e[i]^t[i];return(0,f.P)(r)}},6867:(e,t,r)=>{"use strict";function i(e){return null!=globalThis.Buffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e}r.d(t,{P:()=>i})},7645:(e,t,r)=>{"use strict";r.d(t,{Z:()=>s});var i=r(2218),n=r(3160);function f(e,t,r,i){return{name:e,prefix:t,encoder:{name:e,prefix:t,encode:r},decoder:{decode:i}}}const o=f("utf8","u",(e=>"u"+new TextDecoder("utf8").decode(e)),(e=>(new TextEncoder).encode(e.substring(1)))),a=f("ascii","a",(e=>{let t="a";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}),(e=>{e=e.substring(1);const t=(0,n.E)(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t})),s={utf8:o,"utf-8":o,hex:i.bases.base16,latin1:a,ascii:a,binary:a,...i.bases}},8597:e=>{"use strict";e.exports={i8:"6.5.4"}}},t={};function r(i){var n=t[i];if(void 0!==n)return n.exports;var f=t[i]={id:i,loaded:!1,exports:{}};return e[i].call(f.exports,f,f.exports,r),f.loaded=!0,f.exports}r.amdO={},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var i={};return(()=>{var e=i,t=r(733),n=r(2218),f=r(3294),o=r(1094),a=r(6266),s=r(1050),d=r(5456),h=r(7715),c=r(7664),u=r(9375),l=r(1416),b=r(2217);function p(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function y(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var i=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,i.get?i:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,t}var m=y(t),v=p(o),g=p(a),w=p(d);function _(e){return m.toString(e,"base64url")}function M(e){const t=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"");return m.fromString(t,"base64url")}function S(e){return m.fromString(e,"base58btc")}function A(e){const t=e.startsWith("0x")?e.substring(2):e;return m.fromString(t.toLowerCase(),"base16")}function E(e){return _(m.fromString(e))}function x(e){return m.toString(M(e))}function I(e){return m.toString(e,"base16")}function k(e){return m.fromString(e)}function L({r:e,s:t,recoveryParam:r},i){const n=new Uint8Array(i?65:64);if(n.set(m.fromString(e,"base16"),0),n.set(m.fromString(t,"base16"),32),i){if(void 0===r)throw new Error("Signer did not return a recoveryParam");n[64]=r}return _(n)}function P(e){const t=M(e);if(t.length<64||t.length>65)throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${t.length}`);return{r:I(t.slice(0,32)),s:I(t.slice(32,64)),recoveryParam:65===t.length?t[64]:void 0}}function U(e,t){return m.concat([M(e),M(t)])}function C(e,t=64){return e.length===t?e:"0".repeat(t-e.length)+e}const z=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],N=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],R=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],B=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],T=[0,1518500249,1859775393,2400959708,2840853838],O=[1352829926,1548603684,1836072691,2053994217,0];function D(e,t){return e<<t|e>>>32-t}function j(e,t,r,i,n,f,o,a){return D(e+(t^r^i)+f+o|0,a)+n|0}function K(e,t,r,i,n,f,o,a){return D(e+(t&r|~t&i)+f+o|0,a)+n|0}function q(e,t,r,i,n,f,o,a){return D(e+((t|~r)^i)+f+o|0,a)+n|0}function H(e,t,r,i,n,f,o,a){return D(e+(t&i|r&~i)+f+o|0,a)+n|0}function J(e,t,r,i,n,f,o,a){return D(e+(t^(r|~i))+f+o|0,a)+n|0}class F{constructor(e=64){this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this._blockOffset=0,this._block=void 0,this._blockSize=void 0,this._length=[0,0,0,0],this._finalized=void 0,this.update=e=>{if(this._finalized)throw new Error("Digest already called");const t=this._block;let r=0;for(;this._blockOffset+e.length-r>=this._blockSize;){for(let i=this._blockOffset;i<this._blockSize;)t[i++]=e[r++];this._update(),this._blockOffset=0}for(;r<e.length;)t[this._blockOffset++]=e[r++];for(let t=0,r=8*e.length;r>0;++t)this._length[t]+=r,r=this._length[t]/4294967296|0,r>0&&(this._length[t]-=4294967296*r);return this},this.digest=()=>{if(this._finalized)throw new Error("Digest already called");this._finalized=!0;const e=this._digest();this._block.fill(0),this._blockOffset=0;for(let e=0;e<4;++e)this._length[e]=0;return e},this._update=()=>{const e=new Array(16),t=new DataView(this._block.buffer);for(let r=0;r<16;++r)e[r]=e[r]=t.getInt32(4*r,!0);let r=0|this._a,i=0|this._b,n=0|this._c,f=0|this._d,o=0|this._e,a=0|this._a,s=0|this._b,d=0|this._c,h=0|this._d,c=0|this._e;for(let t=0;t<80;t+=1){let u,l;t<16?(u=j(r,i,n,f,o,e[z[t]],T[0],R[t]),l=J(a,s,d,h,c,e[N[t]],O[0],B[t])):t<32?(u=K(r,i,n,f,o,e[z[t]],T[1],R[t]),l=H(a,s,d,h,c,e[N[t]],O[1],B[t])):t<48?(u=q(r,i,n,f,o,e[z[t]],T[2],R[t]),l=q(a,s,d,h,c,e[N[t]],O[2],B[t])):t<64?(u=H(r,i,n,f,o,e[z[t]],T[3],R[t]),l=K(a,s,d,h,c,e[N[t]],O[3],B[t])):(u=J(r,i,n,f,o,e[z[t]],T[4],R[t]),l=j(a,s,d,h,c,e[N[t]],O[4],B[t])),r=o,o=f,f=D(n,10),n=i,i=u,a=c,c=h,h=D(d,10),d=s,s=l}const u=this._b+n+h|0;this._b=this._c+f+c|0,this._c=this._d+o+a|0,this._d=this._e+r+s|0,this._e=this._a+i+d|0,this._a=u},this._digest=()=>{this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56);const e=new DataView(this._block.buffer);e.setUint32(56,this._length[0],!0),e.setUint32(60,this._length[1],!0),this._block=new Uint8Array(e.buffer),this._update();const t=new DataView(new Uint8Array(20).buffer);return t.setInt32(0,this._a,!0),t.setInt32(4,this._b,!0),t.setInt32(8,this._c,!0),t.setInt32(12,this._d,!0),t.setInt32(16,this._e,!0),new Uint8Array(t.buffer)},this._block=new Uint8Array(e),this._blockSize=e,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}}function V(e){const t="string"==typeof e?m.fromString(e):e;return f.hash(t)}function W(e){const t=m.fromString(e.slice(2),"base16");return`0x${m.toString((r=t,new Uint8Array(v.default.keccak_256.arrayBuffer(r))).slice(-20),"base16")}`;var r}function $(e){return(new F).update(e).digest()}function G(e,t=new Uint8Array(4)){const r=m.fromString(e.toString(),"base10");return t.set(r,4-r.length),t}const X=e=>m.concat([G(e.length),e]);function Z(e,t,r,i,n){if(256!==t)throw new Error(`Unsupported key length: ${t}`);const f=m.concat([X(m.fromString(r)),X(void 0===i?new Uint8Array(0):i),X(void 0===n?new Uint8Array(0):n),G(t)]);return V(m.concat([G(1),e,f]))}const Y=new g.default.ec("secp256k1");function Q(e,t=!1){const r=e;if(32!==r.length)throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${r.length}`);const i=Y.keyFromPrivate(r);return function(e){try{const{r,s:n,recoveryParam:f}=i.sign(V(e));return Promise.resolve(L({r:C(r.toString("hex")),s:C(n.toString("hex")),recoveryParam:f},t))}catch(e){return Promise.reject(e)}}}function ee(e){const t=e;if(64!==t.length)throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${t.length}`);return function(e){try{const r="string"==typeof e?k(e):e,i=s.sign(t,r);return Promise.resolve(_(i))}catch(e){return Promise.reject(e)}}}const te=new g.default.ec("p256");function re(e){return"object"==typeof e&&"r"in e&&"s"in e}function ie(e){return function(t,r){try{return Promise.resolve(r(t)).then((function(t){if(re(t))return L(t,e);if(e&&void 0===P(t).recoveryParam)throw new Error("not_supported: ES256K-R not supported when signer doesn't provide a recovery param");return t}))}catch(e){return Promise.reject(e)}}}function ne(){return function(e,t){try{return Promise.resolve(t(e)).then((function(e){if(re(e))throw new Error("invalid_config: expected a signer function that returns a string instead of signature object");return e}))}catch(e){return Promise.reject(e)}}}const fe={ES256:function(e,t){try{return Promise.resolve(t(e)).then((function(e){return re(e)?L(e):e}))}catch(e){return Promise.reject(e)}},ES256K:ie(),"ES256K-R":ie(!0),Ed25519:ne(),EdDSA:ne()},oe=g.default.ec,ae=(e,t)=>{if(t){const r=t.split(":");switch(r[0]){case"bip122":r[r.length-1]=((e,t)=>{const r=m.toString(S(t).slice(0,1),"hex"),i=$(V(m.fromString(e,"hex"))),n=r+m.toString(i,"hex"),f=V(m.fromString(n,"hex")),o=V(f),a=n+m.toString(o,"hex").substring(0,8);return s=m.fromString(a,"hex"),m.toString(s,"base58btc");var s})(e,r[r.length-1]);break;case"cosmos":r[r.length-1]=((e,t)=>{const r=new oe("secp256k1").keyFromPublic(e,"hex").getPublic().encode("hex",!0),i=$(V(m.fromString(r,"hex"))),n=h.bech32.toWords(i);return h.bech32.encode(t,n).replace(t,"")})(e,r[1]);break;case"eip155":r[r.length-1]=W(e);break;default:return!1}return r.join(":").toLowerCase()===t.toLowerCase()}return!1},se=new g.default.ec("secp256k1"),de=new g.default.ec("p256");function he(e,t=!1){const r=M(e);if(r.length!==(t?65:64))throw new Error("wrong signature length");const i={r:I(r.slice(0,32)),s:I(r.slice(32,64))};return t&&(i.recoveryParam=r[64]),i}function ce(e){if(e.publicKeyBase58)return S(e.publicKeyBase58);if(e.publicKeyBase64)return M(e.publicKeyBase64);if(e.publicKeyHex)return A(e.publicKeyHex);if(e.publicKeyJwk&&"secp256k1"===e.publicKeyJwk.crv&&e.publicKeyJwk.x&&e.publicKeyJwk.y)return A(se.keyFromPublic({x:I(M(e.publicKeyJwk.x)),y:I(M(e.publicKeyJwk.y))}).getPublic("hex"));if(e.publicKeyJwk&&"P-256"===e.publicKeyJwk.crv&&e.publicKeyJwk.x&&e.publicKeyJwk.y)return A(de.keyFromPublic({x:I(M(e.publicKeyJwk.x)),y:I(M(e.publicKeyJwk.y))}).getPublic("hex"));if(e.publicKeyJwk&&"OKP"===e.publicKeyJwk.kty&&"Ed25519"===e.publicKeyJwk.crv&&e.publicKeyJwk.x)return M(e.publicKeyJwk.x);if(e.publicKeyMultibase){const{base16:t,base58btc:r,base64:i,base64url:f}=n.bases;return t.decoder.or(r.decoder.or(i.decoder.or(f.decoder))).decode(e.publicKeyMultibase)}return new Uint8Array}function ue(e,t,r){let i;if(t.length>86)i=[he(t,!0)];else{const e=he(t,!1);i=[{...e,recoveryParam:0},{...e,recoveryParam:1}]}const n=i.map((t=>{const i=V(e),n=se.recoverPubKey(i,t,t.recoveryParam),f=n.encode("hex"),o=n.encode("hex",!0),a=W(f).toLowerCase();return r.find((e=>{var t,r,i;const n=I(ce(e));return n===f||n===o||(null==(t=e.ethereumAddress)?void 0:t.toLowerCase())===a||(null==(r=e.blockchainAccountId)||null==(i=r.split("@eip155"))?void 0:i[0].toLowerCase())===a||ae(f,e.blockchainAccountId)}))})).filter((e=>void 0!==e));if(0===n.length)throw new Error("invalid_signature: Signature invalid for JWT");return n[0]}function le(e,t,r){const i=k(e),n=M(t),f=r.find((e=>s.verify(ce(e),i,n)));if(!f)throw new Error("invalid_signature: Signature invalid for JWT");return f}const be={ES256:function(e,t,r){const i=V(e),n=he(t),f=r.filter((({ethereumAddress:e,blockchainAccountId:t})=>void 0===e&&void 0===t)).find((e=>{try{const t=ce(e);return de.keyFromPublic(t).verify(i,n)}catch(e){return!1}}));if(!f)throw new Error("invalid_signature: Signature invalid for JWT");return f},ES256K:function(e,t,r){const i=V(e),n=he(t),f=r.filter((({ethereumAddress:e,blockchainAccountId:t})=>void 0===e&&void 0===t)),o=r.filter((({ethereumAddress:e,blockchainAccountId:t})=>void 0!==e||void 0!==t));let a=f.find((e=>{try{const t=ce(e);return se.keyFromPublic(t).verify(i,n)}catch(e){return!1}}));if(!a&&o.length>0&&(a=ue(e,t,o)),!a)throw new Error("invalid_signature: Signature invalid for JWT");return a},"ES256K-R":ue,Ed25519:le,EdDSA:le};function pe(e){const t=be[e];if(!t)throw new Error(`not_supported: Unsupported algorithm ${e}`);return t}pe.toSignatureObject=he;const ye={INVALID_JWT:"invalid_jwt",INVALID_AUDIENCE:"invalid_config",INVALID_SIGNATURE:"invalid_signature",NO_SUITABLE_KEYS:"no_suitable_keys",NOT_SUPPORTED:"not_supported",RESOLVER_ERROR:"resolver_error"},me=function(e,t,r={},i={}){try{r.alg||(r.alg=ge);const n="string"==typeof e?e:_e(e,i.canonicalize),f=[_e(r,i.canonicalize),n].join("."),o=function(e){const t=fe[e];if(!t)throw new Error(`not_supported: Unsupported algorithm ${e}`);return t}(r.alg);return Promise.resolve(o(f,t)).then((function(e){return[f,e].join(".")}))}catch(e){return Promise.reject(e)}},ve={ES256:["JsonWebKey2020"],ES256K:["EcdsaSecp256k1VerificationKey2019","EcdsaSecp256k1RecoveryMethod2020","Secp256k1VerificationKey2018","Secp256k1SignatureVerificationKey2018","EcdsaPublicKeySecp256k1","JsonWebKey2020"],"ES256K-R":["EcdsaSecp256k1VerificationKey2019","EcdsaSecp256k1RecoveryMethod2020","Secp256k1VerificationKey2018","Secp256k1SignatureVerificationKey2018","EcdsaPublicKeySecp256k1","JsonWebKey2020"],Ed25519:["ED25519SignatureVerification","Ed25519VerificationKey2018","Ed25519VerificationKey2020","JsonWebKey2020"],EdDSA:["ED25519SignatureVerification","Ed25519VerificationKey2018","Ed25519VerificationKey2020","JsonWebKey2020"]},ge="ES256K",we="application/did+json";function _e(e,t=!1){return E(t?w.default(e):JSON.stringify(e))}function Me(e){const t=e.match(/^([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/);if(t)return{header:JSON.parse(x(t[1])),payload:t[2],signature:t[3],data:`${t[1]}.${t[2]}`};throw new Error("invalid_argument: Incorrect format JWS")}function Se(e){if(!e)throw new Error("invalid_argument: no JWT passed into decodeJWT");try{const t=Me(e);return Object.assign(t,{payload:JSON.parse(x(t.payload))})}catch(e){throw new Error("invalid_argument: Incorrect format JWT")}}function Ae({header:e,data:t,signature:r},i){return Array.isArray(i)||(i=[i]),pe(e.alg)(t,r,i)}const Ee="undefined"!=typeof Symbol?Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator")):"@@iterator";function xe(e,t,r){if(!e.s){if(r instanceof Ie){if(!r.s)return void(r.o=xe.bind(null,e,t));1&t&&(t=r.s),r=r.v}if(r&&r.then)return void r.then(xe.bind(null,e,t),xe.bind(null,e,2));e.s=t,e.v=r;const i=e.o;i&&i(e)}}const Ie=function(){function e(){}return e.prototype.then=function(t,r){const i=new e,n=this.s;if(n){const e=1&n?t:r;if(e){try{xe(i,1,e(this.v))}catch(e){xe(i,2,e)}return i}return this}return this.o=function(e){try{const n=e.v;1&e.s?xe(i,1,t?t(n):n):r?xe(i,1,r(n)):xe(i,2,n)}catch(e){xe(i,2,e)}},i},e}();function ke(e){return e instanceof Ie&&1&e.s}function Le({ciphertext:e,tag:t,iv:r,protectedHeader:i,recipient:n},f){const o={protected:i,iv:_(r),ciphertext:_(e),tag:_(t)};return f&&(o.aad=_(f)),n&&(o.recipients=[n]),o}function Pe(e){const t=new u.XChaCha20Poly1305(e);return(e,r)=>{const i=l.randomBytes(t.nonceLength),n=t.seal(i,e,r);return{ciphertext:n.subarray(0,n.length-t.tagLength),tag:n.subarray(n.length-t.tagLength),iv:i}}}function Ue(e){const t=Pe(e),r="XC20P";return{alg:"dir",enc:r,encrypt:function(e,i={},n){try{const f=E(JSON.stringify(Object.assign({alg:"dir"},i,{enc:r}))),o=b.fromString(n?`${f}.${_(n)}`:f);return Promise.resolve({...t(e,o),protectedHeader:f})}catch(e){return Promise.reject(e)}}}}function Ce(e){const t=new u.XChaCha20Poly1305(e);return{alg:"dir",enc:"XC20P",decrypt:function(e,r,i){try{return Promise.resolve(t.open(r,e,i))}catch(e){return Promise.reject(e)}}}}function ze(e,t){const r=function(r){try{const o=c.generateKeyPair(),a=Pe(Z(c.sharedKey(o.secretKey,e),n,i))(r),s={encrypted_key:_(a.ciphertext),header:{alg:i,iv:_(a.iv),tag:_(a.tag),epk:{kty:"OKP",crv:f,x:_(o.publicKey)}}};return t&&(s.header.kid=t),Promise.resolve(s)}catch(e){return Promise.reject(e)}},i="ECDH-ES+XC20PKW",n=256,f="X25519";return{alg:i,enc:"XC20P",encrypt:function(e,t={},i){try{Object.assign(t,{alg:void 0});const n=l.randomBytes(32);return Promise.resolve(Ue(n).encrypt(e,t,i)).then((function(e){return Promise.resolve(r(n)).then((function(t){return{...e,recipient:t,cek:n}}))}))}catch(e){return Promise.reject(e)}},encryptCek:r}}function Ne(e,t,r={}){const i=function(i){try{function d(){const e=new Uint8Array(u.length+l.length);e.set(u),e.set(l,u.length);const t=Pe(Z(e,f,n,a,s))(i),d={encrypted_key:_(t.ciphertext),header:{alg:n,iv:_(t.iv),tag:_(t.tag),epk:{kty:"OKP",crv:o,x:_(h.publicKey)}}};return r.kid&&(d.header.kid=r.kid),r.apu&&(d.header.apu=r.apu),r.apv&&(d.header.apv=r.apv),d}const h=c.generateKeyPair(),u=c.sharedKey(h.secretKey,e);let l;const b=function(){if(!(t instanceof Uint8Array))return Promise.resolve(t(e)).then((function(e){l=e}));l=c.sharedKey(t,e)}();return Promise.resolve(b&&b.then?b.then(d):d())}catch(p){return Promise.reject(p)}},n="ECDH-1PU+XC20PKW",f=256,o="X25519";let a,s;return void 0!==r.apu&&(a=M(r.apu)),void 0!==r.apv&&(s=M(r.apv)),{alg:n,enc:"XC20P",encrypt:function(e,t={},r){try{Object.assign(t,{alg:void 0});const n=l.randomBytes(32);return Promise.resolve(Ue(n).encrypt(e,t,r)).then((function(e){return Promise.resolve(i(n)).then((function(t){return{...e,recipient:t,cek:n}}))}))}catch(e){return Promise.reject(e)}},encryptCek:i}}function Re(e){if(!(e&&e.epk&&e.iv&&e.tag))throw new Error("bad_jwe: malformed header")}function Be(e){const t="ECDH-ES+XC20PKW";return{alg:t,enc:"XC20P",decrypt:function(r,i,n,f){try{var o,a;function s(){const e=Z(h,256,t),o=U(f.encrypted_key,f.header.tag);return Promise.resolve(Ce(e).decrypt(o,M(f.header.iv))).then((function(e){return null===e?null:Ce(e).decrypt(r,i,n)}))}if(Re(null==(o=f)?void 0:o.header),"X25519"!==(null==(a=f.header.epk)?void 0:a.crv)||void 0===f.header.epk.x)return Promise.resolve(null);const d=M(f.header.epk.x);let h;const u=function(){if(!(e instanceof Uint8Array))return Promise.resolve(e(d)).then((function(e){h=e}));h=c.sharedKey(e,d)}();return Promise.resolve(u&&u.then?u.then(s):s())}catch(l){return Promise.reject(l)}}}}function Te(e,t){const r="ECDH-1PU+XC20PKW";return{alg:r,enc:"XC20P",decrypt:function(i,n,f,o){try{var a;function s(){const e=new Uint8Array(h.length+u.length);let t,a;e.set(h),e.set(u,h.length),o.header.apu&&(t=M(o.header.apu)),o.header.apv&&(a=M(o.header.apv));const s=Z(e,256,r,t,a),d=U(o.encrypted_key,o.header.tag);return Promise.resolve(Ce(s).decrypt(d,M(o.header.iv))).then((function(e){return null===e?null:Ce(e).decrypt(i,n,f)}))}if(Re(o.header),"X25519"!==(null==(a=o.header.epk)?void 0:a.crv)||void 0===o.header.epk.x)return Promise.resolve(null);const d=M(o.header.epk.x);let h,u;const l=function(){if(!(e instanceof Uint8Array))return Promise.resolve(e(d)).then((function(r){return h=r,Promise.resolve(e(t)).then((function(e){u=e}))}));h=c.sharedKey(e,d),u=c.sharedKey(e,t)}();return Promise.resolve(l&&l.then?l.then(s):s())}catch(b){return Promise.reject(b)}}}}e.ES256KSigner=Q,e.ES256Signer=function(e){const t=e;if(32!==t.length)throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${t.length}`);const r=te.keyFromPrivate(t);return function(e){try{const{r:t,s:i}=r.sign(V(e));return Promise.resolve(L({r:C(t.toString("hex")),s:C(i.toString("hex"))}))}catch(e){return Promise.reject(e)}}},e.EdDSASigner=ee,e.EllipticSigner=function(e){return Q(A(e))},e.JWT_ERROR=ye,e.NaclSigner=function(e){return ee(M(e))},e.SimpleSigner=function(e){const t=Q(A(e),!0);return function(e){try{return Promise.resolve(t(e)).then(P)}catch(e){return Promise.reject(e)}}},e.base58ToBytes=S,e.base64ToBytes=M,e.createAnonDecrypter=function(e){return Be(e)},e.createAnonEncrypter=function(e,t={}){return ze(e,null==t?void 0:t.kid)},e.createAuthDecrypter=function(e,t){return Te(e,t)},e.createAuthEncrypter=function(e,t,r={}){return Ne(e,t,r)},e.createJWE=function(e,t,r={},i){try{if("dir"===t[0].alg){if(t.length>1)throw new Error('not_supported: Can only do "dir" encryption to one key.');return Promise.resolve(t[0].encrypt(e,r,i)).then((function(e){return Le(e,i)}))}{const n=t[0].enc;if(!t.reduce(((e,t)=>e&&t.enc===n),!0))throw new Error("invalid_argument: Incompatible encrypters passed");let f,o;const a=function(e,t,r){if("function"==typeof e[Ee]){var i,n,f,o=e[Ee]();if(function e(a){try{for(;!((i=o.next()).done||r&&r());)if((a=t(i.value))&&a.then){if(!ke(a))return void a.then(e,f||(f=xe.bind(null,n=new Ie,2)));a=a.v}n?xe(n,1,a):n=a}catch(e){xe(n||(n=new Ie),2,e)}}(),o.return){var a=function(e){try{i.done||o.return()}catch(e){}return e};if(n&&n.then)return n.then(a,(function(e){throw a(e)}));a()}return n}if(!("length"in e))throw new TypeError("Object is not iterable");for(var s=[],d=0;d<e.length;d++)s.push(e[d]);return function(e,t,r){var i,n,f=-1;return function o(a){try{for(;++f<e.length&&(!r||!r());)if((a=t(f))&&a.then){if(!ke(a))return void a.then(o,n||(n=xe.bind(null,i=new Ie,2)));a=a.v}i?xe(i,1,a):i=a}catch(e){xe(i||(i=new Ie),2,e)}}(),i}(s,(function(e){return t(s[e])}),r)}(t,(function(t){const n=f?Promise.resolve(null==t.encryptCek?void 0:t.encryptCek(f)).then((function(e){var t,r;e&&(null==(t=o)||null==(r=t.recipients)||r.push(e))})):Promise.resolve(t.encrypt(e,r,i)).then((function(e){f=e.cek,o=Le(e,i)}));if(n&&n.then)return n.then((function(){}))}));return Promise.resolve(a&&a.then?a.then((function(){return o})):o)}}catch(e){return Promise.reject(e)}},e.createJWS=me,e.createJWT=function(e,{issuer:t,signer:r,alg:i,expiresIn:n,canonicalize:f},o={}){try{if(!r)throw new Error("missing_signer: No Signer functionality has been configured");if(!t)throw new Error("missing_issuer: No issuing DID has been configured");o.typ||(o.typ="JWT"),o.alg||(o.alg=i);const a={iat:Math.floor(Date.now()/1e3),exp:void 0};if(n){if("number"!=typeof n)throw new Error("invalid_argument: JWT expiresIn is not a number");a.exp=(e.nbf||a.iat)+Math.floor(n)}const s={...a,...e,iss:t};return me(s,r,o,{canonicalize:f})}catch(e){return Promise.reject(e)}},e.createX25519ECDH=function(e){if(32!==e.length)throw new Error("invalid_argument: incorrect secret key length for X25519");return function(t){try{if(32!==t.length)throw new Error("invalid_argument: incorrect publicKey key length for X25519");return Promise.resolve(c.sharedKey(e,t))}catch(e){return Promise.reject(e)}}},e.decodeJWT=Se,e.decryptJWE=function(e,r){try{function i(e){if(null===a)throw new Error("failure: Failed to decrypt");return a}!function(e){if(!(e.protected&&e.iv&&e.ciphertext&&e.tag))throw new Error("bad_jwe: missing properties");e.recipients&&e.recipients.map((e=>{if(!e.header||!e.encrypted_key)throw new Error("bad_jwe: malformed recipients")}))}(e);const n=JSON.parse(x(e.protected));if(n.enc!==r.enc)throw new Error(`not_supported: Decrypter does not supported: '${n.enc}'`);const f=U(e.ciphertext,e.tag),o=t.fromString(e.aad?`${e.protected}.${e.aad}`:e.protected);let a=null;const s="dir"===n.alg&&"dir"===r.alg?Promise.resolve(r.decrypt(f,M(e.iv),o)).then((function(e){a=e})):function(){if(e.recipients&&0!==e.recipients.length){let t=0;return function(e,t,r){for(var i;;){var n=e();if(ke(n)&&(n=n.v),!n)return f;if(n.then){i=0;break}var f=r();if(f&&f.then){if(!ke(f)){i=1;break}f=f.s}if(t){var o=t();if(o&&o.then&&!ke(o)){i=2;break}}}var a=new Ie,s=xe.bind(null,a,2);return(0===i?n.then(h):1===i?f.then(d):o.then(c)).then(void 0,s),a;function d(i){f=i;do{if(t&&(o=t())&&o.then&&!ke(o))return void o.then(c).then(void 0,s);if(!(n=e())||ke(n)&&!n.v)return void xe(a,1,f);if(n.then)return void n.then(h).then(void 0,s);ke(f=r())&&(f=f.v)}while(!f||!f.then);f.then(d).then(void 0,s)}function h(e){e?(f=r())&&f.then?f.then(d).then(void 0,s):d(f):xe(a,1,f)}function c(){(n=e())?n.then?n.then(h).then(void 0,s):h(n):xe(a,1,f)}}((function(){return!a&&t<e.recipients.length}),(function(){return t++}),(function(){const i=e.recipients[t];Object.assign(i.header,n);const s=function(){if(i.header.alg===r.alg)return Promise.resolve(r.decrypt(f,M(e.iv),o,i)).then((function(e){a=e}))}();if(s&&s.then)return s.then((function(){}))}))}throw new Error("bad_jwe: missing recipients")}();return Promise.resolve(s&&s.then?s.then(i):i())}catch(d){return Promise.reject(d)}},e.hexToBytes=A,e.resolveX25519Encrypters=function(e,t){try{const r=function(e,i=[]){try{return Promise.resolve(t.resolve(e)).then((function({didResolutionMetadata:t,didDocument:n}){function f(){var t,r;const i=null==(t=n.keyAgreement)||null==(r=t.map((e=>"string"==typeof e?[...n.publicKey||[],...n.verificationMethod||[]].find((t=>t.id===e)):e)))?void 0:r.filter((e=>void 0!==e)),f=(null==i?void 0:i.filter((e=>"X25519KeyAgreementKey2019"===e.type&&Boolean(e.publicKeyBase58))))||[];if(!f.length&&!o.length)throw new Error(`no_suitable_keys: Could not find x25519 key for ${e}`);return f.map((e=>ze(S(e.publicKeyBase58),e.id))).concat(...o)}if(i.push(e),null!=t&&t.error||null==n)throw new Error(`resolver_error: Could not resolve ${e}: ${t.error}, ${t.message}`);let o=[];if(!n.controller&&!n.keyAgreement)throw new Error(`no_suitable_keys: Could not find x25519 key for ${e}`);const a=function(){if(n.controller){let e=Array.isArray(n.controller)?n.controller:[n.controller];e=e.filter((e=>!i.includes(e)));const t=e.map((e=>r(e,i).catch((()=>[]))));return Promise.resolve(Promise.all(t)).then((function(e){o=[].concat(...e)}))}}();return a&&a.then?a.then(f):f()}))}catch(e){return Promise.reject(e)}},i=e.map((e=>r(e)));return Promise.resolve(Promise.all(i)).then((function(e){return[].concat(...e)}))}catch(e){return Promise.reject(e)}},e.toEthereumAddress=W,e.verifyJWS=function(e,t){return Ae(Me(e),t)},e.verifyJWT=function(e,t={resolver:void 0,auth:void 0,audience:void 0,callbackUrl:void 0,skewTime:void 0,proofPurpose:void 0,policies:{}}){try{if(!t.resolver)throw new Error("missing_resolver: No DID resolver has been configured");const{payload:r,header:i,signature:n,data:f}=Se(e),o=Object.prototype.hasOwnProperty.call(t,"auth")?t.auth?"authentication":void 0:t.proofPurpose;let a;if(!r.iss&&!r.client_id)throw new Error(`${ye.INVALID_JWT}: JWT iss or client_id are required`);if("https://self-issued.me/v2"===r.iss||"https://self-issued.me/v2/openid-vc"===r.iss){if(!r.sub)throw new Error(`${ye.INVALID_JWT}: JWT sub is required`);a=void 0===r.sub_jwk?r.sub:(i.kid||"").split("#")[0]}else if("https://self-issued.me"===r.iss){if(!r.did)throw new Error(`${ye.INVALID_JWT}: JWT did is required`);a=r.did}else if(!r.iss&&"openid"===r.scope&&r.redirect_uri){if(!r.client_id)throw new Error(`${ye.INVALID_JWT}: JWT client_id is required`);a=r.client_id}else a=r.iss;if(!a)throw new Error(`${ye.INVALID_JWT}: No DID has been found in the JWT`);return Promise.resolve(function(e,t,r,i){try{const n=ve[t];if(!n||0===n.length)throw new Error(`${ye.NOT_SUPPORTED}: No supported signature types for algorithm ${t}`);let f;return Promise.resolve(e.resolve(r,{accept:we})).then((function(e){var o,a,s,d,h;if(f=-1===Object.getOwnPropertyNames(e).indexOf("didDocument")?{didDocument:e,didDocumentMetadata:{},didResolutionMetadata:{contentType:we}}:e,null!=(o=f.didResolutionMetadata)&&o.error||null==f.didDocument){const{error:e,message:t}=f.didResolutionMetadata;throw new Error(`${ye.RESOLVER_ERROR}: Unable to resolve DID document for ${r}: ${e}, ${t||""}`)}const c=(e,t)=>{const r=e.filter((({id:e})=>t===e));return r.length>0?r[0]:null};let u=[...(null==(a=f)||null==(s=a.didDocument)?void 0:s.verificationMethod)||[],...(null==(d=f)||null==(h=d.didDocument)?void 0:h.publicKey)||[]];var l;"string"==typeof i&&(i.startsWith("assertion")&&!Object.getOwnPropertyNames(null==(l=f)?void 0:l.didDocument).includes("assertionMethod")&&(f.didDocument={...f.didDocument},f.didDocument.assertionMethod=[...u.map((e=>e.id))]),u=(f.didDocument[i]||[]).map((e=>"string"==typeof e?c(u,e):"string"==typeof e.publicKey?c(u,e.publicKey):e)).filter((e=>null!=e)));const b=u.filter((({type:e})=>n.find((t=>t===e))));if("string"==typeof i&&(!b||0===b.length))throw new Error(`${ye.NO_SUITABLE_KEYS}: DID document for ${r} does not have public keys suitable for ${t} with ${i} purpose`);if(!b||0===b.length)throw new Error(`${ye.NO_SUITABLE_KEYS}: DID document for ${r} does not have public keys for ${t}`);return{authenticators:b,issuer:r,didResolutionResult:f}}))}catch(e){return Promise.reject(e)}}(t.resolver,i.alg,a,o)).then((function({didResolutionResult:o,authenticators:a,issuer:s}){return Promise.resolve(Ae({header:i,data:f,signature:n},a)).then((function(i){var n;const f="number"==typeof(null==(n=t.policies)?void 0:n.now)?t.policies.now:Math.floor(Date.now()/1e3),a=void 0!==t.skewTime&&t.skewTime>=0?t.skewTime:300;if(i){var d,h,c,u;const n=f+a;if(!1!==(null==(d=t.policies)?void 0:d.nbf)&&r.nbf){if(r.nbf>n)throw new Error(`${ye.INVALID_JWT}: JWT not valid before nbf: ${r.nbf}`)}else if(!1!==(null==(h=t.policies)?void 0:h.iat)&&r.iat&&r.iat>n)throw new Error(`${ye.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${r.iat}`);if(!1!==(null==(c=t.policies)?void 0:c.exp)&&r.exp&&r.exp<=f-a)throw new Error(`${ye.INVALID_JWT}: JWT has expired: exp: ${r.exp} < now: ${f}`);if(!1!==(null==(u=t.policies)?void 0:u.aud)&&r.aud){if(!t.audience&&!t.callbackUrl)throw new Error(`${ye.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`);if(void 0===(Array.isArray(r.aud)?r.aud:[r.aud]).find((e=>t.audience===e||t.callbackUrl===e)))throw new Error(`${ye.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)}return{verified:!0,payload:r,didResolutionResult:o,issuer:s,signer:i,jwt:e,policies:t.policies}}throw new Error(`${ye.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`)}))}))}catch(e){return Promise.reject(e)}},e.x25519Decrypter=Be,e.x25519Encrypter=ze,e.xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2=Te,e.xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2=Ne,e.xc20pDirDecrypter=Ce,e.xc20pDirEncrypter=Ue})(),i})()));
\ No newline at end of file
+(function webpackUniversalModuleDefinition(root, factory) {
+	if(typeof exports === 'object' && typeof module === 'object')
+		module.exports = factory();
+	else if(typeof define === 'function' && define.amd)
+		define("DID-JWT", [], factory);
+	else if(typeof exports === 'object')
+		exports["DID-JWT"] = factory();
+	else
+		root["DID-JWT"] = factory();
+})(self, () => {
+return /******/ (() => { // webpackBootstrap
+/******/ 	var __webpack_modules__ = ({
+
+/***/ 8099:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Package binary provides functions for encoding and decoding numbers in byte arrays.
+ */
+var int_1 = __webpack_require__(7117);
+// TODO(dchest): add asserts for correct value ranges and array offsets.
+/**
+ * Reads 2 bytes from array starting at offset as big-endian
+ * signed 16-bit integer and returns it.
+ */
+function readInt16BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;
+}
+exports.readInt16BE = readInt16BE;
+/**
+ * Reads 2 bytes from array starting at offset as big-endian
+ * unsigned 16-bit integer and returns it.
+ */
+function readUint16BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;
+}
+exports.readUint16BE = readUint16BE;
+/**
+ * Reads 2 bytes from array starting at offset as little-endian
+ * signed 16-bit integer and returns it.
+ */
+function readInt16LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;
+}
+exports.readInt16LE = readInt16LE;
+/**
+ * Reads 2 bytes from array starting at offset as little-endian
+ * unsigned 16-bit integer and returns it.
+ */
+function readUint16LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return ((array[offset + 1] << 8) | array[offset]) >>> 0;
+}
+exports.readUint16LE = readUint16LE;
+/**
+ * Writes 2-byte big-endian representation of 16-bit unsigned
+ * value to byte array starting at offset.
+ *
+ * If byte array is not given, creates a new 2-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeUint16BE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(2); }
+    if (offset === void 0) { offset = 0; }
+    out[offset + 0] = value >>> 8;
+    out[offset + 1] = value >>> 0;
+    return out;
+}
+exports.writeUint16BE = writeUint16BE;
+exports.writeInt16BE = writeUint16BE;
+/**
+ * Writes 2-byte little-endian representation of 16-bit unsigned
+ * value to array starting at offset.
+ *
+ * If byte array is not given, creates a new 2-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeUint16LE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(2); }
+    if (offset === void 0) { offset = 0; }
+    out[offset + 0] = value >>> 0;
+    out[offset + 1] = value >>> 8;
+    return out;
+}
+exports.writeUint16LE = writeUint16LE;
+exports.writeInt16LE = writeUint16LE;
+/**
+ * Reads 4 bytes from array starting at offset as big-endian
+ * signed 32-bit integer and returns it.
+ */
+function readInt32BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return (array[offset] << 24) |
+        (array[offset + 1] << 16) |
+        (array[offset + 2] << 8) |
+        array[offset + 3];
+}
+exports.readInt32BE = readInt32BE;
+/**
+ * Reads 4 bytes from array starting at offset as big-endian
+ * unsigned 32-bit integer and returns it.
+ */
+function readUint32BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return ((array[offset] << 24) |
+        (array[offset + 1] << 16) |
+        (array[offset + 2] << 8) |
+        array[offset + 3]) >>> 0;
+}
+exports.readUint32BE = readUint32BE;
+/**
+ * Reads 4 bytes from array starting at offset as little-endian
+ * signed 32-bit integer and returns it.
+ */
+function readInt32LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return (array[offset + 3] << 24) |
+        (array[offset + 2] << 16) |
+        (array[offset + 1] << 8) |
+        array[offset];
+}
+exports.readInt32LE = readInt32LE;
+/**
+ * Reads 4 bytes from array starting at offset as little-endian
+ * unsigned 32-bit integer and returns it.
+ */
+function readUint32LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    return ((array[offset + 3] << 24) |
+        (array[offset + 2] << 16) |
+        (array[offset + 1] << 8) |
+        array[offset]) >>> 0;
+}
+exports.readUint32LE = readUint32LE;
+/**
+ * Writes 4-byte big-endian representation of 32-bit unsigned
+ * value to byte array starting at offset.
+ *
+ * If byte array is not given, creates a new 4-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeUint32BE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(4); }
+    if (offset === void 0) { offset = 0; }
+    out[offset + 0] = value >>> 24;
+    out[offset + 1] = value >>> 16;
+    out[offset + 2] = value >>> 8;
+    out[offset + 3] = value >>> 0;
+    return out;
+}
+exports.writeUint32BE = writeUint32BE;
+exports.writeInt32BE = writeUint32BE;
+/**
+ * Writes 4-byte little-endian representation of 32-bit unsigned
+ * value to array starting at offset.
+ *
+ * If byte array is not given, creates a new 4-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeUint32LE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(4); }
+    if (offset === void 0) { offset = 0; }
+    out[offset + 0] = value >>> 0;
+    out[offset + 1] = value >>> 8;
+    out[offset + 2] = value >>> 16;
+    out[offset + 3] = value >>> 24;
+    return out;
+}
+exports.writeUint32LE = writeUint32LE;
+exports.writeInt32LE = writeUint32LE;
+/**
+ * Reads 8 bytes from array starting at offset as big-endian
+ * signed 64-bit integer and returns it.
+ *
+ * IMPORTANT: due to JavaScript limitation, supports exact
+ * numbers in range -9007199254740991 to 9007199254740991.
+ * If the number stored in the byte array is outside this range,
+ * the result is not exact.
+ */
+function readInt64BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var hi = readInt32BE(array, offset);
+    var lo = readInt32BE(array, offset + 4);
+    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);
+}
+exports.readInt64BE = readInt64BE;
+/**
+ * Reads 8 bytes from array starting at offset as big-endian
+ * unsigned 64-bit integer and returns it.
+ *
+ * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.
+ */
+function readUint64BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var hi = readUint32BE(array, offset);
+    var lo = readUint32BE(array, offset + 4);
+    return hi * 0x100000000 + lo;
+}
+exports.readUint64BE = readUint64BE;
+/**
+ * Reads 8 bytes from array starting at offset as little-endian
+ * signed 64-bit integer and returns it.
+ *
+ * IMPORTANT: due to JavaScript limitation, supports exact
+ * numbers in range -9007199254740991 to 9007199254740991.
+ * If the number stored in the byte array is outside this range,
+ * the result is not exact.
+ */
+function readInt64LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var lo = readInt32LE(array, offset);
+    var hi = readInt32LE(array, offset + 4);
+    return hi * 0x100000000 + lo - ((lo >> 31) * 0x100000000);
+}
+exports.readInt64LE = readInt64LE;
+/**
+ * Reads 8 bytes from array starting at offset as little-endian
+ * unsigned 64-bit integer and returns it.
+ *
+ * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.
+ */
+function readUint64LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var lo = readUint32LE(array, offset);
+    var hi = readUint32LE(array, offset + 4);
+    return hi * 0x100000000 + lo;
+}
+exports.readUint64LE = readUint64LE;
+/**
+ * Writes 8-byte big-endian representation of 64-bit unsigned
+ * value to byte array starting at offset.
+ *
+ * Due to JavaScript limitation, supports values up to 2^53-1.
+ *
+ * If byte array is not given, creates a new 8-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeUint64BE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(8); }
+    if (offset === void 0) { offset = 0; }
+    writeUint32BE(value / 0x100000000 >>> 0, out, offset);
+    writeUint32BE(value >>> 0, out, offset + 4);
+    return out;
+}
+exports.writeUint64BE = writeUint64BE;
+exports.writeInt64BE = writeUint64BE;
+/**
+ * Writes 8-byte little-endian representation of 64-bit unsigned
+ * value to byte array starting at offset.
+ *
+ * Due to JavaScript limitation, supports values up to 2^53-1.
+ *
+ * If byte array is not given, creates a new 8-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeUint64LE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(8); }
+    if (offset === void 0) { offset = 0; }
+    writeUint32LE(value >>> 0, out, offset);
+    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);
+    return out;
+}
+exports.writeUint64LE = writeUint64LE;
+exports.writeInt64LE = writeUint64LE;
+/**
+ * Reads bytes from array starting at offset as big-endian
+ * unsigned bitLen-bit integer and returns it.
+ *
+ * Supports bit lengths divisible by 8, up to 48.
+ */
+function readUintBE(bitLength, array, offset) {
+    if (offset === void 0) { offset = 0; }
+    // TODO(dchest): implement support for bitLengths non-divisible by 8
+    if (bitLength % 8 !== 0) {
+        throw new Error("readUintBE supports only bitLengths divisible by 8");
+    }
+    if (bitLength / 8 > array.length - offset) {
+        throw new Error("readUintBE: array is too short for the given bitLength");
+    }
+    var result = 0;
+    var mul = 1;
+    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {
+        result += array[i] * mul;
+        mul *= 256;
+    }
+    return result;
+}
+exports.readUintBE = readUintBE;
+/**
+ * Reads bytes from array starting at offset as little-endian
+ * unsigned bitLen-bit integer and returns it.
+ *
+ * Supports bit lengths divisible by 8, up to 48.
+ */
+function readUintLE(bitLength, array, offset) {
+    if (offset === void 0) { offset = 0; }
+    // TODO(dchest): implement support for bitLengths non-divisible by 8
+    if (bitLength % 8 !== 0) {
+        throw new Error("readUintLE supports only bitLengths divisible by 8");
+    }
+    if (bitLength / 8 > array.length - offset) {
+        throw new Error("readUintLE: array is too short for the given bitLength");
+    }
+    var result = 0;
+    var mul = 1;
+    for (var i = offset; i < offset + bitLength / 8; i++) {
+        result += array[i] * mul;
+        mul *= 256;
+    }
+    return result;
+}
+exports.readUintLE = readUintLE;
+/**
+ * Writes a big-endian representation of bitLen-bit unsigned
+ * value to array starting at offset.
+ *
+ * Supports bit lengths divisible by 8, up to 48.
+ *
+ * If byte array is not given, creates a new one.
+ *
+ * Returns the output byte array.
+ */
+function writeUintBE(bitLength, value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(bitLength / 8); }
+    if (offset === void 0) { offset = 0; }
+    // TODO(dchest): implement support for bitLengths non-divisible by 8
+    if (bitLength % 8 !== 0) {
+        throw new Error("writeUintBE supports only bitLengths divisible by 8");
+    }
+    if (!int_1.isSafeInteger(value)) {
+        throw new Error("writeUintBE value must be an integer");
+    }
+    var div = 1;
+    for (var i = bitLength / 8 + offset - 1; i >= offset; i--) {
+        out[i] = (value / div) & 0xff;
+        div *= 256;
+    }
+    return out;
+}
+exports.writeUintBE = writeUintBE;
+/**
+ * Writes a little-endian representation of bitLen-bit unsigned
+ * value to array starting at offset.
+ *
+ * Supports bit lengths divisible by 8, up to 48.
+ *
+ * If byte array is not given, creates a new one.
+ *
+ * Returns the output byte array.
+ */
+function writeUintLE(bitLength, value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(bitLength / 8); }
+    if (offset === void 0) { offset = 0; }
+    // TODO(dchest): implement support for bitLengths non-divisible by 8
+    if (bitLength % 8 !== 0) {
+        throw new Error("writeUintLE supports only bitLengths divisible by 8");
+    }
+    if (!int_1.isSafeInteger(value)) {
+        throw new Error("writeUintLE value must be an integer");
+    }
+    var div = 1;
+    for (var i = offset; i < offset + bitLength / 8; i++) {
+        out[i] = (value / div) & 0xff;
+        div *= 256;
+    }
+    return out;
+}
+exports.writeUintLE = writeUintLE;
+/**
+ * Reads 4 bytes from array starting at offset as big-endian
+ * 32-bit floating-point number and returns it.
+ */
+function readFloat32BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
+    return view.getFloat32(offset);
+}
+exports.readFloat32BE = readFloat32BE;
+/**
+ * Reads 4 bytes from array starting at offset as little-endian
+ * 32-bit floating-point number and returns it.
+ */
+function readFloat32LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
+    return view.getFloat32(offset, true);
+}
+exports.readFloat32LE = readFloat32LE;
+/**
+ * Reads 8 bytes from array starting at offset as big-endian
+ * 64-bit floating-point number ("double") and returns it.
+ */
+function readFloat64BE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
+    return view.getFloat64(offset);
+}
+exports.readFloat64BE = readFloat64BE;
+/**
+ * Reads 8 bytes from array starting at offset as little-endian
+ * 64-bit floating-point number ("double") and returns it.
+ */
+function readFloat64LE(array, offset) {
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
+    return view.getFloat64(offset, true);
+}
+exports.readFloat64LE = readFloat64LE;
+/**
+ * Writes 4-byte big-endian floating-point representation of value
+ * to byte array starting at offset.
+ *
+ * If byte array is not given, creates a new 4-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeFloat32BE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(4); }
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
+    view.setFloat32(offset, value);
+    return out;
+}
+exports.writeFloat32BE = writeFloat32BE;
+/**
+ * Writes 4-byte little-endian floating-point representation of value
+ * to byte array starting at offset.
+ *
+ * If byte array is not given, creates a new 4-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeFloat32LE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(4); }
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
+    view.setFloat32(offset, value, true);
+    return out;
+}
+exports.writeFloat32LE = writeFloat32LE;
+/**
+ * Writes 8-byte big-endian floating-point representation of value
+ * to byte array starting at offset.
+ *
+ * If byte array is not given, creates a new 8-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeFloat64BE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(8); }
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
+    view.setFloat64(offset, value);
+    return out;
+}
+exports.writeFloat64BE = writeFloat64BE;
+/**
+ * Writes 8-byte little-endian floating-point representation of value
+ * to byte array starting at offset.
+ *
+ * If byte array is not given, creates a new 8-byte one.
+ *
+ * Returns the output byte array.
+ */
+function writeFloat64LE(value, out, offset) {
+    if (out === void 0) { out = new Uint8Array(8); }
+    if (offset === void 0) { offset = 0; }
+    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
+    view.setFloat64(offset, value, true);
+    return out;
+}
+exports.writeFloat64LE = writeFloat64LE;
+//# sourceMappingURL=binary.js.map
+
+/***/ }),
+
+/***/ 5501:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+var chacha_1 = __webpack_require__(5439);
+var poly1305_1 = __webpack_require__(3027);
+var wipe_1 = __webpack_require__(7309);
+var binary_1 = __webpack_require__(8099);
+var constant_time_1 = __webpack_require__(4153);
+exports.KEY_LENGTH = 32;
+exports.NONCE_LENGTH = 12;
+exports.TAG_LENGTH = 16;
+var ZEROS = new Uint8Array(16);
+/**
+ * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.
+ *
+ * Defined in RFC7539.
+ */
+var ChaCha20Poly1305 = /** @class */ (function () {
+    /**
+     * Creates a new instance with the given 32-byte key.
+     */
+    function ChaCha20Poly1305(key) {
+        this.nonceLength = exports.NONCE_LENGTH;
+        this.tagLength = exports.TAG_LENGTH;
+        if (key.length !== exports.KEY_LENGTH) {
+            throw new Error("ChaCha20Poly1305 needs 32-byte key");
+        }
+        // Copy key.
+        this._key = new Uint8Array(key);
+    }
+    /**
+     * Encrypts and authenticates plaintext, authenticates associated data,
+     * and returns sealed ciphertext, which includes authentication tag.
+     *
+     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce
+     * ("IV"), or full 16-byte counter (called "32-bit fixed-common part")
+     * and nonce.
+     *
+     * If dst is given (it must be the size of plaintext + the size of tag
+     * length) the result will be put into it. Dst and plaintext must not
+     * overlap.
+     */
+    ChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {
+        if (nonce.length > 16) {
+            throw new Error("ChaCha20Poly1305: incorrect nonce length");
+        }
+        // Allocate space for counter, and set nonce as last bytes of it.
+        var counter = new Uint8Array(16);
+        counter.set(nonce, counter.length - nonce.length);
+        // Generate authentication key by taking first 32-bytes of stream.
+        // We pass full counter, which has 12-byte nonce and 4-byte block counter,
+        // and it will get incremented after generating the block, which is
+        // exactly what we need: we only use the first 32 bytes of 64-byte
+        // ChaCha block and discard the next 32 bytes.
+        var authKey = new Uint8Array(32);
+        chacha_1.stream(this._key, counter, authKey, 4);
+        // Allocate space for sealed ciphertext.
+        var resultLength = plaintext.length + this.tagLength;
+        var result;
+        if (dst) {
+            if (dst.length !== resultLength) {
+                throw new Error("ChaCha20Poly1305: incorrect destination length");
+            }
+            result = dst;
+        }
+        else {
+            result = new Uint8Array(resultLength);
+        }
+        // Encrypt plaintext.
+        chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
+        // Authenticate.
+        // XXX: can "simplify" here: pass full result (which is already padded
+        // due to zeroes prepared for tag), and ciphertext length instead of
+        // subarray of result.
+        this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
+        // Cleanup.
+        wipe_1.wipe(counter);
+        return result;
+    };
+    /**
+     * Authenticates sealed ciphertext (which includes authentication tag) and
+     * associated data, decrypts ciphertext and returns decrypted plaintext.
+     *
+     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce
+     * ("IV"), or full 16-byte counter (called "32-bit fixed-common part")
+     * and nonce.
+     *
+     * If authentication fails, it returns null.
+     *
+     * If dst is given (it must be of ciphertext length minus tag length),
+     * the result will be put into it. Dst and plaintext must not overlap.
+     */
+    ChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {
+        if (nonce.length > 16) {
+            throw new Error("ChaCha20Poly1305: incorrect nonce length");
+        }
+        // Sealed ciphertext should at least contain tag.
+        if (sealed.length < this.tagLength) {
+            // TODO(dchest): should we throw here instead?
+            return null;
+        }
+        // Allocate space for counter, and set nonce as last bytes of it.
+        var counter = new Uint8Array(16);
+        counter.set(nonce, counter.length - nonce.length);
+        // Generate authentication key by taking first 32-bytes of stream.
+        var authKey = new Uint8Array(32);
+        chacha_1.stream(this._key, counter, authKey, 4);
+        // Authenticate.
+        // XXX: can simplify and avoid allocation: since authenticate()
+        // already allocates tag (from Poly1305.digest(), it can return)
+        // it instead of copying to calculatedTag. But then in seal()
+        // we'll need to copy it.
+        var calculatedTag = new Uint8Array(this.tagLength);
+        this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
+        // Constant-time compare tags and return null if they differ.
+        if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
+            return null;
+        }
+        // Allocate space for decrypted plaintext.
+        var resultLength = sealed.length - this.tagLength;
+        var result;
+        if (dst) {
+            if (dst.length !== resultLength) {
+                throw new Error("ChaCha20Poly1305: incorrect destination length");
+            }
+            result = dst;
+        }
+        else {
+            result = new Uint8Array(resultLength);
+        }
+        // Decrypt.
+        chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
+        // Cleanup.
+        wipe_1.wipe(counter);
+        return result;
+    };
+    ChaCha20Poly1305.prototype.clean = function () {
+        wipe_1.wipe(this._key);
+        return this;
+    };
+    ChaCha20Poly1305.prototype._authenticate = function (tagOut, authKey, ciphertext, associatedData) {
+        // Initialize Poly1305 with authKey.
+        var h = new poly1305_1.Poly1305(authKey);
+        // Authenticate padded associated data.
+        if (associatedData) {
+            h.update(associatedData);
+            if (associatedData.length % 16 > 0) {
+                h.update(ZEROS.subarray(associatedData.length % 16));
+            }
+        }
+        // Authenticate padded ciphertext.
+        h.update(ciphertext);
+        if (ciphertext.length % 16 > 0) {
+            h.update(ZEROS.subarray(ciphertext.length % 16));
+        }
+        // Authenticate length of associated data.
+        // XXX: can avoid allocation here?
+        var length = new Uint8Array(8);
+        if (associatedData) {
+            binary_1.writeUint64LE(associatedData.length, length);
+        }
+        h.update(length);
+        // Authenticate length of ciphertext.
+        binary_1.writeUint64LE(ciphertext.length, length);
+        h.update(length);
+        // Get tag and copy it into tagOut.
+        var tag = h.digest();
+        for (var i = 0; i < tag.length; i++) {
+            tagOut[i] = tag[i];
+        }
+        // Cleanup.
+        h.clean();
+        wipe_1.wipe(tag);
+        wipe_1.wipe(length);
+    };
+    return ChaCha20Poly1305;
+}());
+exports.ChaCha20Poly1305 = ChaCha20Poly1305;
+//# sourceMappingURL=chacha20poly1305.js.map
+
+/***/ }),
+
+/***/ 5439:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Package chacha implements ChaCha stream cipher.
+ */
+var binary_1 = __webpack_require__(8099);
+var wipe_1 = __webpack_require__(7309);
+// Number of ChaCha rounds (ChaCha20).
+var ROUNDS = 20;
+// Applies the ChaCha core function to 16-byte input,
+// 32-byte key key, and puts the result into 64-byte array out.
+function core(out, input, key) {
+    var j0 = 0x61707865; // "expa"  -- ChaCha's "sigma" constant
+    var j1 = 0x3320646E; // "nd 3"     for 32-byte keys
+    var j2 = 0x79622D32; // "2-by"
+    var j3 = 0x6B206574; // "te k"
+    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];
+    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];
+    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];
+    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];
+    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];
+    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];
+    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];
+    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];
+    var j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];
+    var j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];
+    var j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];
+    var j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];
+    var x0 = j0;
+    var x1 = j1;
+    var x2 = j2;
+    var x3 = j3;
+    var x4 = j4;
+    var x5 = j5;
+    var x6 = j6;
+    var x7 = j7;
+    var x8 = j8;
+    var x9 = j9;
+    var x10 = j10;
+    var x11 = j11;
+    var x12 = j12;
+    var x13 = j13;
+    var x14 = j14;
+    var x15 = j15;
+    for (var i = 0; i < ROUNDS; i += 2) {
+        x0 = x0 + x4 | 0;
+        x12 ^= x0;
+        x12 = x12 >>> (32 - 16) | x12 << 16;
+        x8 = x8 + x12 | 0;
+        x4 ^= x8;
+        x4 = x4 >>> (32 - 12) | x4 << 12;
+        x1 = x1 + x5 | 0;
+        x13 ^= x1;
+        x13 = x13 >>> (32 - 16) | x13 << 16;
+        x9 = x9 + x13 | 0;
+        x5 ^= x9;
+        x5 = x5 >>> (32 - 12) | x5 << 12;
+        x2 = x2 + x6 | 0;
+        x14 ^= x2;
+        x14 = x14 >>> (32 - 16) | x14 << 16;
+        x10 = x10 + x14 | 0;
+        x6 ^= x10;
+        x6 = x6 >>> (32 - 12) | x6 << 12;
+        x3 = x3 + x7 | 0;
+        x15 ^= x3;
+        x15 = x15 >>> (32 - 16) | x15 << 16;
+        x11 = x11 + x15 | 0;
+        x7 ^= x11;
+        x7 = x7 >>> (32 - 12) | x7 << 12;
+        x2 = x2 + x6 | 0;
+        x14 ^= x2;
+        x14 = x14 >>> (32 - 8) | x14 << 8;
+        x10 = x10 + x14 | 0;
+        x6 ^= x10;
+        x6 = x6 >>> (32 - 7) | x6 << 7;
+        x3 = x3 + x7 | 0;
+        x15 ^= x3;
+        x15 = x15 >>> (32 - 8) | x15 << 8;
+        x11 = x11 + x15 | 0;
+        x7 ^= x11;
+        x7 = x7 >>> (32 - 7) | x7 << 7;
+        x1 = x1 + x5 | 0;
+        x13 ^= x1;
+        x13 = x13 >>> (32 - 8) | x13 << 8;
+        x9 = x9 + x13 | 0;
+        x5 ^= x9;
+        x5 = x5 >>> (32 - 7) | x5 << 7;
+        x0 = x0 + x4 | 0;
+        x12 ^= x0;
+        x12 = x12 >>> (32 - 8) | x12 << 8;
+        x8 = x8 + x12 | 0;
+        x4 ^= x8;
+        x4 = x4 >>> (32 - 7) | x4 << 7;
+        x0 = x0 + x5 | 0;
+        x15 ^= x0;
+        x15 = x15 >>> (32 - 16) | x15 << 16;
+        x10 = x10 + x15 | 0;
+        x5 ^= x10;
+        x5 = x5 >>> (32 - 12) | x5 << 12;
+        x1 = x1 + x6 | 0;
+        x12 ^= x1;
+        x12 = x12 >>> (32 - 16) | x12 << 16;
+        x11 = x11 + x12 | 0;
+        x6 ^= x11;
+        x6 = x6 >>> (32 - 12) | x6 << 12;
+        x2 = x2 + x7 | 0;
+        x13 ^= x2;
+        x13 = x13 >>> (32 - 16) | x13 << 16;
+        x8 = x8 + x13 | 0;
+        x7 ^= x8;
+        x7 = x7 >>> (32 - 12) | x7 << 12;
+        x3 = x3 + x4 | 0;
+        x14 ^= x3;
+        x14 = x14 >>> (32 - 16) | x14 << 16;
+        x9 = x9 + x14 | 0;
+        x4 ^= x9;
+        x4 = x4 >>> (32 - 12) | x4 << 12;
+        x2 = x2 + x7 | 0;
+        x13 ^= x2;
+        x13 = x13 >>> (32 - 8) | x13 << 8;
+        x8 = x8 + x13 | 0;
+        x7 ^= x8;
+        x7 = x7 >>> (32 - 7) | x7 << 7;
+        x3 = x3 + x4 | 0;
+        x14 ^= x3;
+        x14 = x14 >>> (32 - 8) | x14 << 8;
+        x9 = x9 + x14 | 0;
+        x4 ^= x9;
+        x4 = x4 >>> (32 - 7) | x4 << 7;
+        x1 = x1 + x6 | 0;
+        x12 ^= x1;
+        x12 = x12 >>> (32 - 8) | x12 << 8;
+        x11 = x11 + x12 | 0;
+        x6 ^= x11;
+        x6 = x6 >>> (32 - 7) | x6 << 7;
+        x0 = x0 + x5 | 0;
+        x15 ^= x0;
+        x15 = x15 >>> (32 - 8) | x15 << 8;
+        x10 = x10 + x15 | 0;
+        x5 ^= x10;
+        x5 = x5 >>> (32 - 7) | x5 << 7;
+    }
+    binary_1.writeUint32LE(x0 + j0 | 0, out, 0);
+    binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
+    binary_1.writeUint32LE(x2 + j2 | 0, out, 8);
+    binary_1.writeUint32LE(x3 + j3 | 0, out, 12);
+    binary_1.writeUint32LE(x4 + j4 | 0, out, 16);
+    binary_1.writeUint32LE(x5 + j5 | 0, out, 20);
+    binary_1.writeUint32LE(x6 + j6 | 0, out, 24);
+    binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
+    binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
+    binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
+    binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
+    binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
+    binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
+    binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
+    binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
+    binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
+}
+/**
+ * Encrypt src with ChaCha20 stream generated for the given 32-byte key and
+ * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and
+ * write the result into dst and return it.
+ *
+ * dst and src may be the same, but otherwise must not overlap.
+ *
+ * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the
+ * same key and nonce, otherwise the stream will repeat. The function will
+ * throw error if counter overflows to prevent this.
+ *
+ * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which
+ * is more than a million petabytes). However, it is not recommended to
+ * generate 8-byte nonces randomly, as the chance of collision is high.
+ *
+ * Never use the same key and nonce to encrypt more than one message.
+ *
+ * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte
+ * array with stream counter in first nonceInplaceCounterLength bytes and nonce
+ * in the last remaining bytes. The counter will be incremented inplace for
+ * each ChaCha block. This is useful if you need to encrypt one stream of data
+ * in chunks.
+ */
+function streamXOR(key, nonce, src, dst, nonceInplaceCounterLength) {
+    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }
+    // We only support 256-bit keys.
+    if (key.length !== 32) {
+        throw new Error("ChaCha: key size must be 32 bytes");
+    }
+    if (dst.length < src.length) {
+        throw new Error("ChaCha: destination is shorter than source");
+    }
+    var nc;
+    var counterLength;
+    if (nonceInplaceCounterLength === 0) {
+        if (nonce.length !== 8 && nonce.length !== 12) {
+            throw new Error("ChaCha nonce must be 8 or 12 bytes");
+        }
+        nc = new Uint8Array(16);
+        // First counterLength bytes of nc are counter, starting with zero.
+        counterLength = nc.length - nonce.length;
+        // Last bytes of nc after counterLength are nonce, set them.
+        nc.set(nonce, counterLength);
+    }
+    else {
+        if (nonce.length !== 16) {
+            throw new Error("ChaCha nonce with counter must be 16 bytes");
+        }
+        // This will update passed nonce with counter inplace.
+        nc = nonce;
+        counterLength = nonceInplaceCounterLength;
+    }
+    // Allocate temporary space for ChaCha block.
+    var block = new Uint8Array(64);
+    for (var i = 0; i < src.length; i += 64) {
+        // Generate a block.
+        core(block, nc, key);
+        // XOR block bytes with src into dst.
+        for (var j = i; j < i + 64 && j < src.length; j++) {
+            dst[j] = src[j] ^ block[j - i];
+        }
+        // Increment counter.
+        incrementCounter(nc, 0, counterLength);
+    }
+    // Cleanup temporary space.
+    wipe_1.wipe(block);
+    if (nonceInplaceCounterLength === 0) {
+        // Cleanup counter.
+        wipe_1.wipe(nc);
+    }
+    return dst;
+}
+exports.streamXOR = streamXOR;
+/**
+ * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte
+ * nonce and write it into dst and return it.
+ *
+ * Never use the same key and nonce to generate more than one stream.
+ *
+ * If nonceInplaceCounterLength is not 0, it behaves the same with respect to
+ * the nonce as described in the streamXOR documentation.
+ *
+ * stream is like streamXOR with all-zero src.
+ */
+function stream(key, nonce, dst, nonceInplaceCounterLength) {
+    if (nonceInplaceCounterLength === void 0) { nonceInplaceCounterLength = 0; }
+    wipe_1.wipe(dst);
+    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
+}
+exports.stream = stream;
+function incrementCounter(counter, pos, len) {
+    var carry = 1;
+    while (len--) {
+        carry = carry + (counter[pos] & 0xff) | 0;
+        counter[pos] = carry & 0xff;
+        carry >>>= 8;
+        pos++;
+    }
+    if (carry > 0) {
+        throw new Error("ChaCha: counter overflow");
+    }
+}
+//# sourceMappingURL=chacha.js.map
+
+/***/ }),
+
+/***/ 4153:
+/***/ ((__unused_webpack_module, exports) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Package constant-time provides functions for performing algorithmically constant-time operations.
+ */
+/**
+ * NOTE! Due to the inability to guarantee real constant time evaluation of
+ * anything in JavaScript VM, this is module is the best effort.
+ */
+/**
+ * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.
+ *
+ * Supports only 32-bit integers, so resultIfOne or resultIfZero are not
+ * integers, they'll be converted to them with bitwise operations.
+ */
+function select(subject, resultIfOne, resultIfZero) {
+    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);
+}
+exports.select = select;
+/**
+ * Returns 1 if a <= b, or 0 if not.
+ * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.
+ */
+function lessOrEqual(a, b) {
+    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;
+}
+exports.lessOrEqual = lessOrEqual;
+/**
+ * Returns 1 if a and b are of equal length and their contents
+ * are equal, or 0 otherwise.
+ *
+ * Note that unlike in equal(), zero-length inputs are considered
+ * the same, so this function will return 1.
+ */
+function compare(a, b) {
+    if (a.length !== b.length) {
+        return 0;
+    }
+    var result = 0;
+    for (var i = 0; i < a.length; i++) {
+        result |= a[i] ^ b[i];
+    }
+    return (1 & ((result - 1) >>> 8));
+}
+exports.compare = compare;
+/**
+ * Returns true if a and b are of equal non-zero length,
+ * and their contents are equal, or false otherwise.
+ *
+ * Note that unlike in compare() zero-length inputs are considered
+ * _not_ equal, so this function will return false.
+ */
+function equal(a, b) {
+    if (a.length === 0 || b.length === 0) {
+        return false;
+    }
+    return compare(a, b) !== 0;
+}
+exports.equal = equal;
+//# sourceMappingURL=constant-time.js.map
+
+/***/ }),
+
+/***/ 1050:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.convertSecretKeyToX25519 = exports.convertPublicKeyToX25519 = exports.verify = exports.sign = exports.extractPublicKeyFromSecretKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.SEED_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = exports.SIGNATURE_LENGTH = void 0;
+/**
+ * Package ed25519 implements Ed25519 public-key signature algorithm.
+ */
+const random_1 = __webpack_require__(1416);
+const sha512_1 = __webpack_require__(3350);
+const wipe_1 = __webpack_require__(7309);
+exports.SIGNATURE_LENGTH = 64;
+exports.PUBLIC_KEY_LENGTH = 32;
+exports.SECRET_KEY_LENGTH = 64;
+exports.SEED_LENGTH = 32;
+// Returns new zero-filled 16-element GF (Float64Array).
+// If passed an array of numbers, prefills the returned
+// array with them.
+//
+// We use Float64Array, because we need 48-bit numbers
+// for this implementation.
+function gf(init) {
+    const r = new Float64Array(16);
+    if (init) {
+        for (let i = 0; i < init.length; i++) {
+            r[i] = init[i];
+        }
+    }
+    return r;
+}
+// Base point.
+const _9 = new Uint8Array(32);
+_9[0] = 9;
+const gf0 = gf();
+const gf1 = gf([1]);
+const D = gf([
+    0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,
+    0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203
+]);
+const D2 = gf([
+    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,
+    0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406
+]);
+const X = gf([
+    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,
+    0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169
+]);
+const Y = gf([
+    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,
+    0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666
+]);
+const I = gf([
+    0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,
+    0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83
+]);
+function set25519(r, a) {
+    for (let i = 0; i < 16; i++) {
+        r[i] = a[i] | 0;
+    }
+}
+function car25519(o) {
+    let c = 1;
+    for (let i = 0; i < 16; i++) {
+        let v = o[i] + c + 65535;
+        c = Math.floor(v / 65536);
+        o[i] = v - c * 65536;
+    }
+    o[0] += c - 1 + 37 * (c - 1);
+}
+function sel25519(p, q, b) {
+    const c = ~(b - 1);
+    for (let i = 0; i < 16; i++) {
+        const t = c & (p[i] ^ q[i]);
+        p[i] ^= t;
+        q[i] ^= t;
+    }
+}
+function pack25519(o, n) {
+    const m = gf();
+    const t = gf();
+    for (let i = 0; i < 16; i++) {
+        t[i] = n[i];
+    }
+    car25519(t);
+    car25519(t);
+    car25519(t);
+    for (let j = 0; j < 2; j++) {
+        m[0] = t[0] - 0xffed;
+        for (let i = 1; i < 15; i++) {
+            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);
+            m[i - 1] &= 0xffff;
+        }
+        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);
+        const b = (m[15] >> 16) & 1;
+        m[14] &= 0xffff;
+        sel25519(t, m, 1 - b);
+    }
+    for (let i = 0; i < 16; i++) {
+        o[2 * i] = t[i] & 0xff;
+        o[2 * i + 1] = t[i] >> 8;
+    }
+}
+function verify32(x, y) {
+    let d = 0;
+    for (let i = 0; i < 32; i++) {
+        d |= x[i] ^ y[i];
+    }
+    return (1 & ((d - 1) >>> 8)) - 1;
+}
+function neq25519(a, b) {
+    const c = new Uint8Array(32);
+    const d = new Uint8Array(32);
+    pack25519(c, a);
+    pack25519(d, b);
+    return verify32(c, d);
+}
+function par25519(a) {
+    const d = new Uint8Array(32);
+    pack25519(d, a);
+    return d[0] & 1;
+}
+function unpack25519(o, n) {
+    for (let i = 0; i < 16; i++) {
+        o[i] = n[2 * i] + (n[2 * i + 1] << 8);
+    }
+    o[15] &= 0x7fff;
+}
+function add(o, a, b) {
+    for (let i = 0; i < 16; i++) {
+        o[i] = a[i] + b[i];
+    }
+}
+function sub(o, a, b) {
+    for (let i = 0; i < 16; i++) {
+        o[i] = a[i] - b[i];
+    }
+}
+function mul(o, a, b) {
+    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];
+    v = a[0];
+    t0 += v * b0;
+    t1 += v * b1;
+    t2 += v * b2;
+    t3 += v * b3;
+    t4 += v * b4;
+    t5 += v * b5;
+    t6 += v * b6;
+    t7 += v * b7;
+    t8 += v * b8;
+    t9 += v * b9;
+    t10 += v * b10;
+    t11 += v * b11;
+    t12 += v * b12;
+    t13 += v * b13;
+    t14 += v * b14;
+    t15 += v * b15;
+    v = a[1];
+    t1 += v * b0;
+    t2 += v * b1;
+    t3 += v * b2;
+    t4 += v * b3;
+    t5 += v * b4;
+    t6 += v * b5;
+    t7 += v * b6;
+    t8 += v * b7;
+    t9 += v * b8;
+    t10 += v * b9;
+    t11 += v * b10;
+    t12 += v * b11;
+    t13 += v * b12;
+    t14 += v * b13;
+    t15 += v * b14;
+    t16 += v * b15;
+    v = a[2];
+    t2 += v * b0;
+    t3 += v * b1;
+    t4 += v * b2;
+    t5 += v * b3;
+    t6 += v * b4;
+    t7 += v * b5;
+    t8 += v * b6;
+    t9 += v * b7;
+    t10 += v * b8;
+    t11 += v * b9;
+    t12 += v * b10;
+    t13 += v * b11;
+    t14 += v * b12;
+    t15 += v * b13;
+    t16 += v * b14;
+    t17 += v * b15;
+    v = a[3];
+    t3 += v * b0;
+    t4 += v * b1;
+    t5 += v * b2;
+    t6 += v * b3;
+    t7 += v * b4;
+    t8 += v * b5;
+    t9 += v * b6;
+    t10 += v * b7;
+    t11 += v * b8;
+    t12 += v * b9;
+    t13 += v * b10;
+    t14 += v * b11;
+    t15 += v * b12;
+    t16 += v * b13;
+    t17 += v * b14;
+    t18 += v * b15;
+    v = a[4];
+    t4 += v * b0;
+    t5 += v * b1;
+    t6 += v * b2;
+    t7 += v * b3;
+    t8 += v * b4;
+    t9 += v * b5;
+    t10 += v * b6;
+    t11 += v * b7;
+    t12 += v * b8;
+    t13 += v * b9;
+    t14 += v * b10;
+    t15 += v * b11;
+    t16 += v * b12;
+    t17 += v * b13;
+    t18 += v * b14;
+    t19 += v * b15;
+    v = a[5];
+    t5 += v * b0;
+    t6 += v * b1;
+    t7 += v * b2;
+    t8 += v * b3;
+    t9 += v * b4;
+    t10 += v * b5;
+    t11 += v * b6;
+    t12 += v * b7;
+    t13 += v * b8;
+    t14 += v * b9;
+    t15 += v * b10;
+    t16 += v * b11;
+    t17 += v * b12;
+    t18 += v * b13;
+    t19 += v * b14;
+    t20 += v * b15;
+    v = a[6];
+    t6 += v * b0;
+    t7 += v * b1;
+    t8 += v * b2;
+    t9 += v * b3;
+    t10 += v * b4;
+    t11 += v * b5;
+    t12 += v * b6;
+    t13 += v * b7;
+    t14 += v * b8;
+    t15 += v * b9;
+    t16 += v * b10;
+    t17 += v * b11;
+    t18 += v * b12;
+    t19 += v * b13;
+    t20 += v * b14;
+    t21 += v * b15;
+    v = a[7];
+    t7 += v * b0;
+    t8 += v * b1;
+    t9 += v * b2;
+    t10 += v * b3;
+    t11 += v * b4;
+    t12 += v * b5;
+    t13 += v * b6;
+    t14 += v * b7;
+    t15 += v * b8;
+    t16 += v * b9;
+    t17 += v * b10;
+    t18 += v * b11;
+    t19 += v * b12;
+    t20 += v * b13;
+    t21 += v * b14;
+    t22 += v * b15;
+    v = a[8];
+    t8 += v * b0;
+    t9 += v * b1;
+    t10 += v * b2;
+    t11 += v * b3;
+    t12 += v * b4;
+    t13 += v * b5;
+    t14 += v * b6;
+    t15 += v * b7;
+    t16 += v * b8;
+    t17 += v * b9;
+    t18 += v * b10;
+    t19 += v * b11;
+    t20 += v * b12;
+    t21 += v * b13;
+    t22 += v * b14;
+    t23 += v * b15;
+    v = a[9];
+    t9 += v * b0;
+    t10 += v * b1;
+    t11 += v * b2;
+    t12 += v * b3;
+    t13 += v * b4;
+    t14 += v * b5;
+    t15 += v * b6;
+    t16 += v * b7;
+    t17 += v * b8;
+    t18 += v * b9;
+    t19 += v * b10;
+    t20 += v * b11;
+    t21 += v * b12;
+    t22 += v * b13;
+    t23 += v * b14;
+    t24 += v * b15;
+    v = a[10];
+    t10 += v * b0;
+    t11 += v * b1;
+    t12 += v * b2;
+    t13 += v * b3;
+    t14 += v * b4;
+    t15 += v * b5;
+    t16 += v * b6;
+    t17 += v * b7;
+    t18 += v * b8;
+    t19 += v * b9;
+    t20 += v * b10;
+    t21 += v * b11;
+    t22 += v * b12;
+    t23 += v * b13;
+    t24 += v * b14;
+    t25 += v * b15;
+    v = a[11];
+    t11 += v * b0;
+    t12 += v * b1;
+    t13 += v * b2;
+    t14 += v * b3;
+    t15 += v * b4;
+    t16 += v * b5;
+    t17 += v * b6;
+    t18 += v * b7;
+    t19 += v * b8;
+    t20 += v * b9;
+    t21 += v * b10;
+    t22 += v * b11;
+    t23 += v * b12;
+    t24 += v * b13;
+    t25 += v * b14;
+    t26 += v * b15;
+    v = a[12];
+    t12 += v * b0;
+    t13 += v * b1;
+    t14 += v * b2;
+    t15 += v * b3;
+    t16 += v * b4;
+    t17 += v * b5;
+    t18 += v * b6;
+    t19 += v * b7;
+    t20 += v * b8;
+    t21 += v * b9;
+    t22 += v * b10;
+    t23 += v * b11;
+    t24 += v * b12;
+    t25 += v * b13;
+    t26 += v * b14;
+    t27 += v * b15;
+    v = a[13];
+    t13 += v * b0;
+    t14 += v * b1;
+    t15 += v * b2;
+    t16 += v * b3;
+    t17 += v * b4;
+    t18 += v * b5;
+    t19 += v * b6;
+    t20 += v * b7;
+    t21 += v * b8;
+    t22 += v * b9;
+    t23 += v * b10;
+    t24 += v * b11;
+    t25 += v * b12;
+    t26 += v * b13;
+    t27 += v * b14;
+    t28 += v * b15;
+    v = a[14];
+    t14 += v * b0;
+    t15 += v * b1;
+    t16 += v * b2;
+    t17 += v * b3;
+    t18 += v * b4;
+    t19 += v * b5;
+    t20 += v * b6;
+    t21 += v * b7;
+    t22 += v * b8;
+    t23 += v * b9;
+    t24 += v * b10;
+    t25 += v * b11;
+    t26 += v * b12;
+    t27 += v * b13;
+    t28 += v * b14;
+    t29 += v * b15;
+    v = a[15];
+    t15 += v * b0;
+    t16 += v * b1;
+    t17 += v * b2;
+    t18 += v * b3;
+    t19 += v * b4;
+    t20 += v * b5;
+    t21 += v * b6;
+    t22 += v * b7;
+    t23 += v * b8;
+    t24 += v * b9;
+    t25 += v * b10;
+    t26 += v * b11;
+    t27 += v * b12;
+    t28 += v * b13;
+    t29 += v * b14;
+    t30 += v * b15;
+    t0 += 38 * t16;
+    t1 += 38 * t17;
+    t2 += 38 * t18;
+    t3 += 38 * t19;
+    t4 += 38 * t20;
+    t5 += 38 * t21;
+    t6 += 38 * t22;
+    t7 += 38 * t23;
+    t8 += 38 * t24;
+    t9 += 38 * t25;
+    t10 += 38 * t26;
+    t11 += 38 * t27;
+    t12 += 38 * t28;
+    t13 += 38 * t29;
+    t14 += 38 * t30;
+    // t15 left as is
+    // first car
+    c = 1;
+    v = t0 + c + 65535;
+    c = Math.floor(v / 65536);
+    t0 = v - c * 65536;
+    v = t1 + c + 65535;
+    c = Math.floor(v / 65536);
+    t1 = v - c * 65536;
+    v = t2 + c + 65535;
+    c = Math.floor(v / 65536);
+    t2 = v - c * 65536;
+    v = t3 + c + 65535;
+    c = Math.floor(v / 65536);
+    t3 = v - c * 65536;
+    v = t4 + c + 65535;
+    c = Math.floor(v / 65536);
+    t4 = v - c * 65536;
+    v = t5 + c + 65535;
+    c = Math.floor(v / 65536);
+    t5 = v - c * 65536;
+    v = t6 + c + 65535;
+    c = Math.floor(v / 65536);
+    t6 = v - c * 65536;
+    v = t7 + c + 65535;
+    c = Math.floor(v / 65536);
+    t7 = v - c * 65536;
+    v = t8 + c + 65535;
+    c = Math.floor(v / 65536);
+    t8 = v - c * 65536;
+    v = t9 + c + 65535;
+    c = Math.floor(v / 65536);
+    t9 = v - c * 65536;
+    v = t10 + c + 65535;
+    c = Math.floor(v / 65536);
+    t10 = v - c * 65536;
+    v = t11 + c + 65535;
+    c = Math.floor(v / 65536);
+    t11 = v - c * 65536;
+    v = t12 + c + 65535;
+    c = Math.floor(v / 65536);
+    t12 = v - c * 65536;
+    v = t13 + c + 65535;
+    c = Math.floor(v / 65536);
+    t13 = v - c * 65536;
+    v = t14 + c + 65535;
+    c = Math.floor(v / 65536);
+    t14 = v - c * 65536;
+    v = t15 + c + 65535;
+    c = Math.floor(v / 65536);
+    t15 = v - c * 65536;
+    t0 += c - 1 + 37 * (c - 1);
+    // second car
+    c = 1;
+    v = t0 + c + 65535;
+    c = Math.floor(v / 65536);
+    t0 = v - c * 65536;
+    v = t1 + c + 65535;
+    c = Math.floor(v / 65536);
+    t1 = v - c * 65536;
+    v = t2 + c + 65535;
+    c = Math.floor(v / 65536);
+    t2 = v - c * 65536;
+    v = t3 + c + 65535;
+    c = Math.floor(v / 65536);
+    t3 = v - c * 65536;
+    v = t4 + c + 65535;
+    c = Math.floor(v / 65536);
+    t4 = v - c * 65536;
+    v = t5 + c + 65535;
+    c = Math.floor(v / 65536);
+    t5 = v - c * 65536;
+    v = t6 + c + 65535;
+    c = Math.floor(v / 65536);
+    t6 = v - c * 65536;
+    v = t7 + c + 65535;
+    c = Math.floor(v / 65536);
+    t7 = v - c * 65536;
+    v = t8 + c + 65535;
+    c = Math.floor(v / 65536);
+    t8 = v - c * 65536;
+    v = t9 + c + 65535;
+    c = Math.floor(v / 65536);
+    t9 = v - c * 65536;
+    v = t10 + c + 65535;
+    c = Math.floor(v / 65536);
+    t10 = v - c * 65536;
+    v = t11 + c + 65535;
+    c = Math.floor(v / 65536);
+    t11 = v - c * 65536;
+    v = t12 + c + 65535;
+    c = Math.floor(v / 65536);
+    t12 = v - c * 65536;
+    v = t13 + c + 65535;
+    c = Math.floor(v / 65536);
+    t13 = v - c * 65536;
+    v = t14 + c + 65535;
+    c = Math.floor(v / 65536);
+    t14 = v - c * 65536;
+    v = t15 + c + 65535;
+    c = Math.floor(v / 65536);
+    t15 = v - c * 65536;
+    t0 += c - 1 + 37 * (c - 1);
+    o[0] = t0;
+    o[1] = t1;
+    o[2] = t2;
+    o[3] = t3;
+    o[4] = t4;
+    o[5] = t5;
+    o[6] = t6;
+    o[7] = t7;
+    o[8] = t8;
+    o[9] = t9;
+    o[10] = t10;
+    o[11] = t11;
+    o[12] = t12;
+    o[13] = t13;
+    o[14] = t14;
+    o[15] = t15;
+}
+function square(o, a) {
+    mul(o, a, a);
+}
+function inv25519(o, i) {
+    const c = gf();
+    let a;
+    for (a = 0; a < 16; a++) {
+        c[a] = i[a];
+    }
+    for (a = 253; a >= 0; a--) {
+        square(c, c);
+        if (a !== 2 && a !== 4) {
+            mul(c, c, i);
+        }
+    }
+    for (a = 0; a < 16; a++) {
+        o[a] = c[a];
+    }
+}
+function pow2523(o, i) {
+    const c = gf();
+    let a;
+    for (a = 0; a < 16; a++) {
+        c[a] = i[a];
+    }
+    for (a = 250; a >= 0; a--) {
+        square(c, c);
+        if (a !== 1) {
+            mul(c, c, i);
+        }
+    }
+    for (a = 0; a < 16; a++) {
+        o[a] = c[a];
+    }
+}
+function edadd(p, q) {
+    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();
+    sub(a, p[1], p[0]);
+    sub(t, q[1], q[0]);
+    mul(a, a, t);
+    add(b, p[0], p[1]);
+    add(t, q[0], q[1]);
+    mul(b, b, t);
+    mul(c, p[3], q[3]);
+    mul(c, c, D2);
+    mul(d, p[2], q[2]);
+    add(d, d, d);
+    sub(e, b, a);
+    sub(f, d, c);
+    add(g, d, c);
+    add(h, b, a);
+    mul(p[0], e, f);
+    mul(p[1], h, g);
+    mul(p[2], g, f);
+    mul(p[3], e, h);
+}
+function cswap(p, q, b) {
+    for (let i = 0; i < 4; i++) {
+        sel25519(p[i], q[i], b);
+    }
+}
+function pack(r, p) {
+    const tx = gf(), ty = gf(), zi = gf();
+    inv25519(zi, p[2]);
+    mul(tx, p[0], zi);
+    mul(ty, p[1], zi);
+    pack25519(r, ty);
+    r[31] ^= par25519(tx) << 7;
+}
+function scalarmult(p, q, s) {
+    set25519(p[0], gf0);
+    set25519(p[1], gf1);
+    set25519(p[2], gf1);
+    set25519(p[3], gf0);
+    for (let i = 255; i >= 0; --i) {
+        const b = (s[(i / 8) | 0] >> (i & 7)) & 1;
+        cswap(p, q, b);
+        edadd(q, p);
+        edadd(p, p);
+        cswap(p, q, b);
+    }
+}
+function scalarbase(p, s) {
+    const q = [gf(), gf(), gf(), gf()];
+    set25519(q[0], X);
+    set25519(q[1], Y);
+    set25519(q[2], gf1);
+    mul(q[3], X, Y);
+    scalarmult(p, q, s);
+}
+// Generates key pair from secret 32-byte seed.
+function generateKeyPairFromSeed(seed) {
+    if (seed.length !== exports.SEED_LENGTH) {
+        throw new Error(`ed25519: seed must be ${exports.SEED_LENGTH} bytes`);
+    }
+    const d = (0, sha512_1.hash)(seed);
+    d[0] &= 248;
+    d[31] &= 127;
+    d[31] |= 64;
+    const publicKey = new Uint8Array(32);
+    const p = [gf(), gf(), gf(), gf()];
+    scalarbase(p, d);
+    pack(publicKey, p);
+    const secretKey = new Uint8Array(64);
+    secretKey.set(seed);
+    secretKey.set(publicKey, 32);
+    return {
+        publicKey,
+        secretKey
+    };
+}
+exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
+function generateKeyPair(prng) {
+    const seed = (0, random_1.randomBytes)(32, prng);
+    const result = generateKeyPairFromSeed(seed);
+    (0, wipe_1.wipe)(seed);
+    return result;
+}
+exports.generateKeyPair = generateKeyPair;
+function extractPublicKeyFromSecretKey(secretKey) {
+    if (secretKey.length !== exports.SECRET_KEY_LENGTH) {
+        throw new Error(`ed25519: secret key must be ${exports.SECRET_KEY_LENGTH} bytes`);
+    }
+    return new Uint8Array(secretKey.subarray(32));
+}
+exports.extractPublicKeyFromSecretKey = extractPublicKeyFromSecretKey;
+const L = new Float64Array([
+    0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2,
+    0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10
+]);
+function modL(r, x) {
+    let carry;
+    let i;
+    let j;
+    let k;
+    for (i = 63; i >= 32; --i) {
+        carry = 0;
+        for (j = i - 32, k = i - 12; j < k; ++j) {
+            x[j] += carry - 16 * x[i] * L[j - (i - 32)];
+            carry = Math.floor((x[j] + 128) / 256);
+            x[j] -= carry * 256;
+        }
+        x[j] += carry;
+        x[i] = 0;
+    }
+    carry = 0;
+    for (j = 0; j < 32; j++) {
+        x[j] += carry - (x[31] >> 4) * L[j];
+        carry = x[j] >> 8;
+        x[j] &= 255;
+    }
+    for (j = 0; j < 32; j++) {
+        x[j] -= carry * L[j];
+    }
+    for (i = 0; i < 32; i++) {
+        x[i + 1] += x[i] >> 8;
+        r[i] = x[i] & 255;
+    }
+}
+function reduce(r) {
+    const x = new Float64Array(64);
+    for (let i = 0; i < 64; i++) {
+        x[i] = r[i];
+    }
+    for (let i = 0; i < 64; i++) {
+        r[i] = 0;
+    }
+    modL(r, x);
+}
+// Returns 64-byte signature of the message under the 64-byte secret key.
+function sign(secretKey, message) {
+    const x = new Float64Array(64);
+    const p = [gf(), gf(), gf(), gf()];
+    const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));
+    d[0] &= 248;
+    d[31] &= 127;
+    d[31] |= 64;
+    const signature = new Uint8Array(64);
+    signature.set(d.subarray(32), 32);
+    const hs = new sha512_1.SHA512();
+    hs.update(signature.subarray(32));
+    hs.update(message);
+    const r = hs.digest();
+    hs.clean();
+    reduce(r);
+    scalarbase(p, r);
+    pack(signature, p);
+    hs.reset();
+    hs.update(signature.subarray(0, 32));
+    hs.update(secretKey.subarray(32));
+    hs.update(message);
+    const h = hs.digest();
+    reduce(h);
+    for (let i = 0; i < 32; i++) {
+        x[i] = r[i];
+    }
+    for (let i = 0; i < 32; i++) {
+        for (let j = 0; j < 32; j++) {
+            x[i + j] += h[i] * d[j];
+        }
+    }
+    modL(signature.subarray(32), x);
+    return signature;
+}
+exports.sign = sign;
+function unpackneg(r, p) {
+    const t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();
+    set25519(r[2], gf1);
+    unpack25519(r[1], p);
+    square(num, r[1]);
+    mul(den, num, D);
+    sub(num, num, r[2]);
+    add(den, r[2], den);
+    square(den2, den);
+    square(den4, den2);
+    mul(den6, den4, den2);
+    mul(t, den6, num);
+    mul(t, t, den);
+    pow2523(t, t);
+    mul(t, t, num);
+    mul(t, t, den);
+    mul(t, t, den);
+    mul(r[0], t, den);
+    square(chk, r[0]);
+    mul(chk, chk, den);
+    if (neq25519(chk, num)) {
+        mul(r[0], r[0], I);
+    }
+    square(chk, r[0]);
+    mul(chk, chk, den);
+    if (neq25519(chk, num)) {
+        return -1;
+    }
+    if (par25519(r[0]) === (p[31] >> 7)) {
+        sub(r[0], gf0, r[0]);
+    }
+    mul(r[3], r[0], r[1]);
+    return 0;
+}
+function verify(publicKey, message, signature) {
+    const t = new Uint8Array(32);
+    const p = [gf(), gf(), gf(), gf()];
+    const q = [gf(), gf(), gf(), gf()];
+    if (signature.length !== exports.SIGNATURE_LENGTH) {
+        throw new Error(`ed25519: signature must be ${exports.SIGNATURE_LENGTH} bytes`);
+    }
+    if (unpackneg(q, publicKey)) {
+        return false;
+    }
+    const hs = new sha512_1.SHA512();
+    hs.update(signature.subarray(0, 32));
+    hs.update(publicKey);
+    hs.update(message);
+    const h = hs.digest();
+    reduce(h);
+    scalarmult(p, q, h);
+    scalarbase(q, signature.subarray(32));
+    edadd(p, q);
+    pack(t, p);
+    if (verify32(signature, t)) {
+        return false;
+    }
+    return true;
+}
+exports.verify = verify;
+/**
+ * Convert Ed25519 public key to X25519 public key.
+ *
+ * Throws if given an invalid public key.
+ */
+function convertPublicKeyToX25519(publicKey) {
+    let q = [gf(), gf(), gf(), gf()];
+    if (unpackneg(q, publicKey)) {
+        throw new Error("Ed25519: invalid public key");
+    }
+    // Formula: montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p
+    let a = gf();
+    let b = gf();
+    let y = q[1];
+    add(a, gf1, y);
+    sub(b, gf1, y);
+    inv25519(b, b);
+    mul(a, a, b);
+    let z = new Uint8Array(32);
+    pack25519(z, a);
+    return z;
+}
+exports.convertPublicKeyToX25519 = convertPublicKeyToX25519;
+/**
+ *  Convert Ed25519 secret (private) key to X25519 secret key.
+ */
+function convertSecretKeyToX25519(secretKey) {
+    const d = (0, sha512_1.hash)(secretKey.subarray(0, 32));
+    d[0] &= 248;
+    d[31] &= 127;
+    d[31] |= 64;
+    const o = new Uint8Array(d.subarray(0, 32));
+    (0, wipe_1.wipe)(d);
+    return o;
+}
+exports.convertSecretKeyToX25519 = convertSecretKeyToX25519;
+//# sourceMappingURL=ed25519.js.map
+
+/***/ }),
+
+/***/ 7117:
+/***/ ((__unused_webpack_module, exports) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Package int provides helper functions for integerss.
+ */
+// Shim using 16-bit pieces.
+function imulShim(a, b) {
+    var ah = (a >>> 16) & 0xffff, al = a & 0xffff;
+    var bh = (b >>> 16) & 0xffff, bl = b & 0xffff;
+    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);
+}
+/** 32-bit integer multiplication.  */
+// Use system Math.imul if available, otherwise use our shim.
+exports.mul = Math.imul || imulShim;
+/** 32-bit integer addition.  */
+function add(a, b) {
+    return (a + b) | 0;
+}
+exports.add = add;
+/**  32-bit integer subtraction.  */
+function sub(a, b) {
+    return (a - b) | 0;
+}
+exports.sub = sub;
+/** 32-bit integer left rotation */
+function rotl(x, n) {
+    return x << n | x >>> (32 - n);
+}
+exports.rotl = rotl;
+/** 32-bit integer left rotation */
+function rotr(x, n) {
+    return x << (32 - n) | x >>> n;
+}
+exports.rotr = rotr;
+function isIntegerShim(n) {
+    return typeof n === "number" && isFinite(n) && Math.floor(n) === n;
+}
+/**
+ * Returns true if the argument is an integer number.
+ *
+ * In ES2015, Number.isInteger.
+ */
+exports.isInteger = Number.isInteger || isIntegerShim;
+/**
+ *  Math.pow(2, 53) - 1
+ *
+ *  In ES2015 Number.MAX_SAFE_INTEGER.
+ */
+exports.MAX_SAFE_INTEGER = 9007199254740991;
+/**
+ * Returns true if the argument is a safe integer number
+ * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)
+ *
+ * In ES2015, Number.isSafeInteger.
+ */
+exports.isSafeInteger = function (n) {
+    return exports.isInteger(n) && (n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER);
+};
+//# sourceMappingURL=int.js.map
+
+/***/ }),
+
+/***/ 3027:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Package poly1305 implements Poly1305 one-time message authentication algorithm.
+ */
+var constant_time_1 = __webpack_require__(4153);
+var wipe_1 = __webpack_require__(7309);
+exports.DIGEST_LENGTH = 16;
+// Port of Andrew Moon's Poly1305-donna-16. Public domain.
+// https://github.com/floodyberry/poly1305-donna
+/**
+ * Poly1305 computes 16-byte authenticator of message using
+ * a one-time 32-byte key.
+ *
+ * Important: key should be used for only one message,
+ * it should never repeat.
+ */
+var Poly1305 = /** @class */ (function () {
+    function Poly1305(key) {
+        this.digestLength = exports.DIGEST_LENGTH;
+        this._buffer = new Uint8Array(16);
+        this._r = new Uint16Array(10);
+        this._h = new Uint16Array(10);
+        this._pad = new Uint16Array(8);
+        this._leftover = 0;
+        this._fin = 0;
+        this._finished = false;
+        var t0 = key[0] | key[1] << 8;
+        this._r[0] = (t0) & 0x1fff;
+        var t1 = key[2] | key[3] << 8;
+        this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;
+        var t2 = key[4] | key[5] << 8;
+        this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;
+        var t3 = key[6] | key[7] << 8;
+        this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;
+        var t4 = key[8] | key[9] << 8;
+        this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;
+        this._r[5] = ((t4 >>> 1)) & 0x1ffe;
+        var t5 = key[10] | key[11] << 8;
+        this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;
+        var t6 = key[12] | key[13] << 8;
+        this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;
+        var t7 = key[14] | key[15] << 8;
+        this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;
+        this._r[9] = ((t7 >>> 5)) & 0x007f;
+        this._pad[0] = key[16] | key[17] << 8;
+        this._pad[1] = key[18] | key[19] << 8;
+        this._pad[2] = key[20] | key[21] << 8;
+        this._pad[3] = key[22] | key[23] << 8;
+        this._pad[4] = key[24] | key[25] << 8;
+        this._pad[5] = key[26] | key[27] << 8;
+        this._pad[6] = key[28] | key[29] << 8;
+        this._pad[7] = key[30] | key[31] << 8;
+    }
+    Poly1305.prototype._blocks = function (m, mpos, bytes) {
+        var hibit = this._fin ? 0 : 1 << 11;
+        var h0 = this._h[0], h1 = this._h[1], h2 = this._h[2], h3 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
+        var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
+        while (bytes >= 16) {
+            var t0 = m[mpos + 0] | m[mpos + 1] << 8;
+            h0 += (t0) & 0x1fff;
+            var t1 = m[mpos + 2] | m[mpos + 3] << 8;
+            h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;
+            var t2 = m[mpos + 4] | m[mpos + 5] << 8;
+            h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;
+            var t3 = m[mpos + 6] | m[mpos + 7] << 8;
+            h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;
+            var t4 = m[mpos + 8] | m[mpos + 9] << 8;
+            h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;
+            h5 += ((t4 >>> 1)) & 0x1fff;
+            var t5 = m[mpos + 10] | m[mpos + 11] << 8;
+            h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;
+            var t6 = m[mpos + 12] | m[mpos + 13] << 8;
+            h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;
+            var t7 = m[mpos + 14] | m[mpos + 15] << 8;
+            h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;
+            h9 += ((t7 >>> 5)) | hibit;
+            var c = 0;
+            var d0 = c;
+            d0 += h0 * r0;
+            d0 += h1 * (5 * r9);
+            d0 += h2 * (5 * r8);
+            d0 += h3 * (5 * r7);
+            d0 += h4 * (5 * r6);
+            c = (d0 >>> 13);
+            d0 &= 0x1fff;
+            d0 += h5 * (5 * r5);
+            d0 += h6 * (5 * r4);
+            d0 += h7 * (5 * r3);
+            d0 += h8 * (5 * r2);
+            d0 += h9 * (5 * r1);
+            c += (d0 >>> 13);
+            d0 &= 0x1fff;
+            var d1 = c;
+            d1 += h0 * r1;
+            d1 += h1 * r0;
+            d1 += h2 * (5 * r9);
+            d1 += h3 * (5 * r8);
+            d1 += h4 * (5 * r7);
+            c = (d1 >>> 13);
+            d1 &= 0x1fff;
+            d1 += h5 * (5 * r6);
+            d1 += h6 * (5 * r5);
+            d1 += h7 * (5 * r4);
+            d1 += h8 * (5 * r3);
+            d1 += h9 * (5 * r2);
+            c += (d1 >>> 13);
+            d1 &= 0x1fff;
+            var d2 = c;
+            d2 += h0 * r2;
+            d2 += h1 * r1;
+            d2 += h2 * r0;
+            d2 += h3 * (5 * r9);
+            d2 += h4 * (5 * r8);
+            c = (d2 >>> 13);
+            d2 &= 0x1fff;
+            d2 += h5 * (5 * r7);
+            d2 += h6 * (5 * r6);
+            d2 += h7 * (5 * r5);
+            d2 += h8 * (5 * r4);
+            d2 += h9 * (5 * r3);
+            c += (d2 >>> 13);
+            d2 &= 0x1fff;
+            var d3 = c;
+            d3 += h0 * r3;
+            d3 += h1 * r2;
+            d3 += h2 * r1;
+            d3 += h3 * r0;
+            d3 += h4 * (5 * r9);
+            c = (d3 >>> 13);
+            d3 &= 0x1fff;
+            d3 += h5 * (5 * r8);
+            d3 += h6 * (5 * r7);
+            d3 += h7 * (5 * r6);
+            d3 += h8 * (5 * r5);
+            d3 += h9 * (5 * r4);
+            c += (d3 >>> 13);
+            d3 &= 0x1fff;
+            var d4 = c;
+            d4 += h0 * r4;
+            d4 += h1 * r3;
+            d4 += h2 * r2;
+            d4 += h3 * r1;
+            d4 += h4 * r0;
+            c = (d4 >>> 13);
+            d4 &= 0x1fff;
+            d4 += h5 * (5 * r9);
+            d4 += h6 * (5 * r8);
+            d4 += h7 * (5 * r7);
+            d4 += h8 * (5 * r6);
+            d4 += h9 * (5 * r5);
+            c += (d4 >>> 13);
+            d4 &= 0x1fff;
+            var d5 = c;
+            d5 += h0 * r5;
+            d5 += h1 * r4;
+            d5 += h2 * r3;
+            d5 += h3 * r2;
+            d5 += h4 * r1;
+            c = (d5 >>> 13);
+            d5 &= 0x1fff;
+            d5 += h5 * r0;
+            d5 += h6 * (5 * r9);
+            d5 += h7 * (5 * r8);
+            d5 += h8 * (5 * r7);
+            d5 += h9 * (5 * r6);
+            c += (d5 >>> 13);
+            d5 &= 0x1fff;
+            var d6 = c;
+            d6 += h0 * r6;
+            d6 += h1 * r5;
+            d6 += h2 * r4;
+            d6 += h3 * r3;
+            d6 += h4 * r2;
+            c = (d6 >>> 13);
+            d6 &= 0x1fff;
+            d6 += h5 * r1;
+            d6 += h6 * r0;
+            d6 += h7 * (5 * r9);
+            d6 += h8 * (5 * r8);
+            d6 += h9 * (5 * r7);
+            c += (d6 >>> 13);
+            d6 &= 0x1fff;
+            var d7 = c;
+            d7 += h0 * r7;
+            d7 += h1 * r6;
+            d7 += h2 * r5;
+            d7 += h3 * r4;
+            d7 += h4 * r3;
+            c = (d7 >>> 13);
+            d7 &= 0x1fff;
+            d7 += h5 * r2;
+            d7 += h6 * r1;
+            d7 += h7 * r0;
+            d7 += h8 * (5 * r9);
+            d7 += h9 * (5 * r8);
+            c += (d7 >>> 13);
+            d7 &= 0x1fff;
+            var d8 = c;
+            d8 += h0 * r8;
+            d8 += h1 * r7;
+            d8 += h2 * r6;
+            d8 += h3 * r5;
+            d8 += h4 * r4;
+            c = (d8 >>> 13);
+            d8 &= 0x1fff;
+            d8 += h5 * r3;
+            d8 += h6 * r2;
+            d8 += h7 * r1;
+            d8 += h8 * r0;
+            d8 += h9 * (5 * r9);
+            c += (d8 >>> 13);
+            d8 &= 0x1fff;
+            var d9 = c;
+            d9 += h0 * r9;
+            d9 += h1 * r8;
+            d9 += h2 * r7;
+            d9 += h3 * r6;
+            d9 += h4 * r5;
+            c = (d9 >>> 13);
+            d9 &= 0x1fff;
+            d9 += h5 * r4;
+            d9 += h6 * r3;
+            d9 += h7 * r2;
+            d9 += h8 * r1;
+            d9 += h9 * r0;
+            c += (d9 >>> 13);
+            d9 &= 0x1fff;
+            c = (((c << 2) + c)) | 0;
+            c = (c + d0) | 0;
+            d0 = c & 0x1fff;
+            c = (c >>> 13);
+            d1 += c;
+            h0 = d0;
+            h1 = d1;
+            h2 = d2;
+            h3 = d3;
+            h4 = d4;
+            h5 = d5;
+            h6 = d6;
+            h7 = d7;
+            h8 = d8;
+            h9 = d9;
+            mpos += 16;
+            bytes -= 16;
+        }
+        this._h[0] = h0;
+        this._h[1] = h1;
+        this._h[2] = h2;
+        this._h[3] = h3;
+        this._h[4] = h4;
+        this._h[5] = h5;
+        this._h[6] = h6;
+        this._h[7] = h7;
+        this._h[8] = h8;
+        this._h[9] = h9;
+    };
+    Poly1305.prototype.finish = function (mac, macpos) {
+        if (macpos === void 0) { macpos = 0; }
+        var g = new Uint16Array(10);
+        var c;
+        var mask;
+        var f;
+        var i;
+        if (this._leftover) {
+            i = this._leftover;
+            this._buffer[i++] = 1;
+            for (; i < 16; i++) {
+                this._buffer[i] = 0;
+            }
+            this._fin = 1;
+            this._blocks(this._buffer, 0, 16);
+        }
+        c = this._h[1] >>> 13;
+        this._h[1] &= 0x1fff;
+        for (i = 2; i < 10; i++) {
+            this._h[i] += c;
+            c = this._h[i] >>> 13;
+            this._h[i] &= 0x1fff;
+        }
+        this._h[0] += (c * 5);
+        c = this._h[0] >>> 13;
+        this._h[0] &= 0x1fff;
+        this._h[1] += c;
+        c = this._h[1] >>> 13;
+        this._h[1] &= 0x1fff;
+        this._h[2] += c;
+        g[0] = this._h[0] + 5;
+        c = g[0] >>> 13;
+        g[0] &= 0x1fff;
+        for (i = 1; i < 10; i++) {
+            g[i] = this._h[i] + c;
+            c = g[i] >>> 13;
+            g[i] &= 0x1fff;
+        }
+        g[9] -= (1 << 13);
+        mask = (c ^ 1) - 1;
+        for (i = 0; i < 10; i++) {
+            g[i] &= mask;
+        }
+        mask = ~mask;
+        for (i = 0; i < 10; i++) {
+            this._h[i] = (this._h[i] & mask) | g[i];
+        }
+        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;
+        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;
+        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;
+        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;
+        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;
+        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;
+        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;
+        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;
+        f = this._h[0] + this._pad[0];
+        this._h[0] = f & 0xffff;
+        for (i = 1; i < 8; i++) {
+            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;
+            this._h[i] = f & 0xffff;
+        }
+        mac[macpos + 0] = this._h[0] >>> 0;
+        mac[macpos + 1] = this._h[0] >>> 8;
+        mac[macpos + 2] = this._h[1] >>> 0;
+        mac[macpos + 3] = this._h[1] >>> 8;
+        mac[macpos + 4] = this._h[2] >>> 0;
+        mac[macpos + 5] = this._h[2] >>> 8;
+        mac[macpos + 6] = this._h[3] >>> 0;
+        mac[macpos + 7] = this._h[3] >>> 8;
+        mac[macpos + 8] = this._h[4] >>> 0;
+        mac[macpos + 9] = this._h[4] >>> 8;
+        mac[macpos + 10] = this._h[5] >>> 0;
+        mac[macpos + 11] = this._h[5] >>> 8;
+        mac[macpos + 12] = this._h[6] >>> 0;
+        mac[macpos + 13] = this._h[6] >>> 8;
+        mac[macpos + 14] = this._h[7] >>> 0;
+        mac[macpos + 15] = this._h[7] >>> 8;
+        this._finished = true;
+        return this;
+    };
+    Poly1305.prototype.update = function (m) {
+        var mpos = 0;
+        var bytes = m.length;
+        var want;
+        if (this._leftover) {
+            want = (16 - this._leftover);
+            if (want > bytes) {
+                want = bytes;
+            }
+            for (var i = 0; i < want; i++) {
+                this._buffer[this._leftover + i] = m[mpos + i];
+            }
+            bytes -= want;
+            mpos += want;
+            this._leftover += want;
+            if (this._leftover < 16) {
+                return this;
+            }
+            this._blocks(this._buffer, 0, 16);
+            this._leftover = 0;
+        }
+        if (bytes >= 16) {
+            want = bytes - (bytes % 16);
+            this._blocks(m, mpos, want);
+            mpos += want;
+            bytes -= want;
+        }
+        if (bytes) {
+            for (var i = 0; i < bytes; i++) {
+                this._buffer[this._leftover + i] = m[mpos + i];
+            }
+            this._leftover += bytes;
+        }
+        return this;
+    };
+    Poly1305.prototype.digest = function () {
+        // TODO(dchest): it behaves differently than other hashes/HMAC,
+        // because it throws when finished — others just return saved result.
+        if (this._finished) {
+            throw new Error("Poly1305 was finished");
+        }
+        var mac = new Uint8Array(16);
+        this.finish(mac);
+        return mac;
+    };
+    Poly1305.prototype.clean = function () {
+        wipe_1.wipe(this._buffer);
+        wipe_1.wipe(this._r);
+        wipe_1.wipe(this._h);
+        wipe_1.wipe(this._pad);
+        this._leftover = 0;
+        this._fin = 0;
+        this._finished = true; // mark as finished even if not
+        return this;
+    };
+    return Poly1305;
+}());
+exports.Poly1305 = Poly1305;
+/**
+ * Returns 16-byte authenticator of data using a one-time 32-byte key.
+ *
+ * Important: key should be used for only one message, it should never repeat.
+ */
+function oneTimeAuth(key, data) {
+    var h = new Poly1305(key);
+    h.update(data);
+    var digest = h.digest();
+    h.clean();
+    return digest;
+}
+exports.oneTimeAuth = oneTimeAuth;
+/**
+ * Returns true if two authenticators are 16-byte long and equal.
+ * Uses contant-time comparison to avoid leaking timing information.
+ */
+function equal(a, b) {
+    if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {
+        return false;
+    }
+    return constant_time_1.equal(a, b);
+}
+exports.equal = equal;
+//# sourceMappingURL=poly1305.js.map
+
+/***/ }),
+
+/***/ 1416:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
+const system_1 = __webpack_require__(6008);
+const binary_1 = __webpack_require__(8099);
+const wipe_1 = __webpack_require__(7309);
+exports.defaultRandomSource = new system_1.SystemRandomSource();
+function randomBytes(length, prng = exports.defaultRandomSource) {
+    return prng.randomBytes(length);
+}
+exports.randomBytes = randomBytes;
+/**
+ * Returns a uniformly random unsigned 32-bit integer.
+ */
+function randomUint32(prng = exports.defaultRandomSource) {
+    // Generate 4-byte random buffer.
+    const buf = randomBytes(4, prng);
+    // Convert bytes from buffer into a 32-bit integer.
+    // It's not important which byte order to use, since
+    // the result is random.
+    const result = (0, binary_1.readUint32LE)(buf);
+    // Clean the buffer.
+    (0, wipe_1.wipe)(buf);
+    return result;
+}
+exports.randomUint32 = randomUint32;
+/** 62 alphanumeric characters for default charset of randomString() */
+const ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
+/**
+ * Returns a uniform random string of the given length
+ * with characters from the given charset.
+ *
+ * Charset must not have more than 256 characters.
+ *
+ * Default charset generates case-sensitive alphanumeric
+ * strings (0-9, A-Z, a-z).
+ */
+function randomString(length, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
+    if (charset.length < 2) {
+        throw new Error("randomString charset is too short");
+    }
+    if (charset.length > 256) {
+        throw new Error("randomString charset is too long");
+    }
+    let out = '';
+    const charsLen = charset.length;
+    const maxByte = 256 - (256 % charsLen);
+    while (length > 0) {
+        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);
+        for (let i = 0; i < buf.length && length > 0; i++) {
+            const randomByte = buf[i];
+            if (randomByte < maxByte) {
+                out += charset.charAt(randomByte % charsLen);
+                length--;
+            }
+        }
+        (0, wipe_1.wipe)(buf);
+    }
+    return out;
+}
+exports.randomString = randomString;
+/**
+ * Returns uniform random string containing at least the given
+ * number of bits of entropy.
+ *
+ * For example, randomStringForEntropy(128) will return a 22-character
+ * alphanumeric string, while randomStringForEntropy(128, "0123456789")
+ * will return a 39-character numeric string, both will contain at
+ * least 128 bits of entropy.
+ *
+ * Default charset generates case-sensitive alphanumeric
+ * strings (0-9, A-Z, a-z).
+ */
+function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
+    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
+    return randomString(length, charset, prng);
+}
+exports.randomStringForEntropy = randomStringForEntropy;
+//# sourceMappingURL=random.js.map
+
+/***/ }),
+
+/***/ 5455:
+/***/ ((__unused_webpack_module, exports) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.BrowserRandomSource = void 0;
+const QUOTA = 65536;
+class BrowserRandomSource {
+    constructor() {
+        this.isAvailable = false;
+        this.isInstantiated = false;
+        const browserCrypto = typeof self !== 'undefined'
+            ? (self.crypto || self.msCrypto) // IE11 has msCrypto
+            : null;
+        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {
+            this._crypto = browserCrypto;
+            this.isAvailable = true;
+            this.isInstantiated = true;
+        }
+    }
+    randomBytes(length) {
+        if (!this.isAvailable || !this._crypto) {
+            throw new Error("Browser random byte generator is not available.");
+        }
+        const out = new Uint8Array(length);
+        for (let i = 0; i < out.length; i += QUOTA) {
+            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));
+        }
+        return out;
+    }
+}
+exports.BrowserRandomSource = BrowserRandomSource;
+//# sourceMappingURL=browser.js.map
+
+/***/ }),
+
+/***/ 8871:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.NodeRandomSource = void 0;
+const wipe_1 = __webpack_require__(7309);
+class NodeRandomSource {
+    constructor() {
+        this.isAvailable = false;
+        this.isInstantiated = false;
+        if (true) {
+            const nodeCrypto = __webpack_require__(5883);
+            if (nodeCrypto && nodeCrypto.randomBytes) {
+                this._crypto = nodeCrypto;
+                this.isAvailable = true;
+                this.isInstantiated = true;
+            }
+        }
+    }
+    randomBytes(length) {
+        if (!this.isAvailable || !this._crypto) {
+            throw new Error("Node.js random byte generator is not available.");
+        }
+        // Get random bytes (result is Buffer).
+        let buffer = this._crypto.randomBytes(length);
+        // Make sure we got the length that we requested.
+        if (buffer.length !== length) {
+            throw new Error("NodeRandomSource: got fewer bytes than requested");
+        }
+        // Allocate output array.
+        const out = new Uint8Array(length);
+        // Copy bytes from buffer to output.
+        for (let i = 0; i < out.length; i++) {
+            out[i] = buffer[i];
+        }
+        // Cleanup.
+        (0, wipe_1.wipe)(buffer);
+        return out;
+    }
+}
+exports.NodeRandomSource = NodeRandomSource;
+//# sourceMappingURL=node.js.map
+
+/***/ }),
+
+/***/ 6008:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.SystemRandomSource = void 0;
+const browser_1 = __webpack_require__(5455);
+const node_1 = __webpack_require__(8871);
+class SystemRandomSource {
+    constructor() {
+        this.isAvailable = false;
+        this.name = "";
+        // Try browser.
+        this._source = new browser_1.BrowserRandomSource();
+        if (this._source.isAvailable) {
+            this.isAvailable = true;
+            this.name = "Browser";
+            return;
+        }
+        // If no browser source, try Node.
+        this._source = new node_1.NodeRandomSource();
+        if (this._source.isAvailable) {
+            this.isAvailable = true;
+            this.name = "Node";
+            return;
+        }
+        // No sources, we're out of options.
+    }
+    randomBytes(length) {
+        if (!this.isAvailable) {
+            throw new Error("System random byte generator is not available.");
+        }
+        return this._source.randomBytes(length);
+    }
+}
+exports.SystemRandomSource = SystemRandomSource;
+//# sourceMappingURL=system.js.map
+
+/***/ }),
+
+/***/ 3294:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+var binary_1 = __webpack_require__(8099);
+var wipe_1 = __webpack_require__(7309);
+exports.DIGEST_LENGTH = 32;
+exports.BLOCK_SIZE = 64;
+/**
+ * SHA2-256 cryptographic hash algorithm.
+ */
+var SHA256 = /** @class */ (function () {
+    function SHA256() {
+        /** Length of hash output */
+        this.digestLength = exports.DIGEST_LENGTH;
+        /** Block size */
+        this.blockSize = exports.BLOCK_SIZE;
+        // Note: Int32Array is used instead of Uint32Array for performance reasons.
+        this._state = new Int32Array(8); // hash state
+        this._temp = new Int32Array(64); // temporary state
+        this._buffer = new Uint8Array(128); // buffer for data to hash
+        this._bufferLength = 0; // number of bytes in buffer
+        this._bytesHashed = 0; // number of total bytes hashed
+        this._finished = false; // indicates whether the hash was finalized
+        this.reset();
+    }
+    SHA256.prototype._initState = function () {
+        this._state[0] = 0x6a09e667;
+        this._state[1] = 0xbb67ae85;
+        this._state[2] = 0x3c6ef372;
+        this._state[3] = 0xa54ff53a;
+        this._state[4] = 0x510e527f;
+        this._state[5] = 0x9b05688c;
+        this._state[6] = 0x1f83d9ab;
+        this._state[7] = 0x5be0cd19;
+    };
+    /**
+     * Resets hash state making it possible
+     * to re-use this instance to hash other data.
+     */
+    SHA256.prototype.reset = function () {
+        this._initState();
+        this._bufferLength = 0;
+        this._bytesHashed = 0;
+        this._finished = false;
+        return this;
+    };
+    /**
+     * Cleans internal buffers and resets hash state.
+     */
+    SHA256.prototype.clean = function () {
+        wipe_1.wipe(this._buffer);
+        wipe_1.wipe(this._temp);
+        this.reset();
+    };
+    /**
+     * Updates hash state with the given data.
+     *
+     * Throws error when trying to update already finalized hash:
+     * instance must be reset to update it again.
+     */
+    SHA256.prototype.update = function (data, dataLength) {
+        if (dataLength === void 0) { dataLength = data.length; }
+        if (this._finished) {
+            throw new Error("SHA256: can't update because hash was finished.");
+        }
+        var dataPos = 0;
+        this._bytesHashed += dataLength;
+        if (this._bufferLength > 0) {
+            while (this._bufferLength < this.blockSize && dataLength > 0) {
+                this._buffer[this._bufferLength++] = data[dataPos++];
+                dataLength--;
+            }
+            if (this._bufferLength === this.blockSize) {
+                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
+                this._bufferLength = 0;
+            }
+        }
+        if (dataLength >= this.blockSize) {
+            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
+            dataLength %= this.blockSize;
+        }
+        while (dataLength > 0) {
+            this._buffer[this._bufferLength++] = data[dataPos++];
+            dataLength--;
+        }
+        return this;
+    };
+    /**
+     * Finalizes hash state and puts hash into out.
+     * If hash was already finalized, puts the same value.
+     */
+    SHA256.prototype.finish = function (out) {
+        if (!this._finished) {
+            var bytesHashed = this._bytesHashed;
+            var left = this._bufferLength;
+            var bitLenHi = (bytesHashed / 0x20000000) | 0;
+            var bitLenLo = bytesHashed << 3;
+            var padLength = (bytesHashed % 64 < 56) ? 64 : 128;
+            this._buffer[left] = 0x80;
+            for (var i = left + 1; i < padLength - 8; i++) {
+                this._buffer[i] = 0;
+            }
+            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
+            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
+            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
+            this._finished = true;
+        }
+        for (var i = 0; i < this.digestLength / 4; i++) {
+            binary_1.writeUint32BE(this._state[i], out, i * 4);
+        }
+        return this;
+    };
+    /**
+     * Returns the final hash digest.
+     */
+    SHA256.prototype.digest = function () {
+        var out = new Uint8Array(this.digestLength);
+        this.finish(out);
+        return out;
+    };
+    /**
+     * Function useful for HMAC/PBKDF2 optimization.
+     * Returns hash state to be used with restoreState().
+     * Only chain value is saved, not buffers or other
+     * state variables.
+     */
+    SHA256.prototype.saveState = function () {
+        if (this._finished) {
+            throw new Error("SHA256: cannot save finished state");
+        }
+        return {
+            state: new Int32Array(this._state),
+            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,
+            bufferLength: this._bufferLength,
+            bytesHashed: this._bytesHashed
+        };
+    };
+    /**
+     * Function useful for HMAC/PBKDF2 optimization.
+     * Restores state saved by saveState() and sets bytesHashed
+     * to the given value.
+     */
+    SHA256.prototype.restoreState = function (savedState) {
+        this._state.set(savedState.state);
+        this._bufferLength = savedState.bufferLength;
+        if (savedState.buffer) {
+            this._buffer.set(savedState.buffer);
+        }
+        this._bytesHashed = savedState.bytesHashed;
+        this._finished = false;
+        return this;
+    };
+    /**
+     * Cleans state returned by saveState().
+     */
+    SHA256.prototype.cleanSavedState = function (savedState) {
+        wipe_1.wipe(savedState.state);
+        if (savedState.buffer) {
+            wipe_1.wipe(savedState.buffer);
+        }
+        savedState.bufferLength = 0;
+        savedState.bytesHashed = 0;
+    };
+    return SHA256;
+}());
+exports.SHA256 = SHA256;
+// Constants
+var K = new Int32Array([
+    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
+    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
+    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
+    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
+    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,
+    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,
+    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,
+    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
+    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,
+    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,
+    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,
+    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
+    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
+]);
+function hashBlocks(w, v, p, pos, len) {
+    while (len >= 64) {
+        var a = v[0];
+        var b = v[1];
+        var c = v[2];
+        var d = v[3];
+        var e = v[4];
+        var f = v[5];
+        var g = v[6];
+        var h = v[7];
+        for (var i = 0; i < 16; i++) {
+            var j = pos + i * 4;
+            w[i] = binary_1.readUint32BE(p, j);
+        }
+        for (var i = 16; i < 64; i++) {
+            var u = w[i - 2];
+            var t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);
+            u = w[i - 15];
+            var t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);
+            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);
+        }
+        for (var i = 0; i < 64; i++) {
+            var t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^
+                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +
+                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;
+            var t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^
+                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;
+            h = g;
+            g = f;
+            f = e;
+            e = (d + t1) | 0;
+            d = c;
+            c = b;
+            b = a;
+            a = (t1 + t2) | 0;
+        }
+        v[0] += a;
+        v[1] += b;
+        v[2] += c;
+        v[3] += d;
+        v[4] += e;
+        v[5] += f;
+        v[6] += g;
+        v[7] += h;
+        pos += 64;
+        len -= 64;
+    }
+    return pos;
+}
+function hash(data) {
+    var h = new SHA256();
+    h.update(data);
+    var digest = h.digest();
+    h.clean();
+    return digest;
+}
+exports.hash = hash;
+//# sourceMappingURL=sha256.js.map
+
+/***/ }),
+
+/***/ 3350:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+var binary_1 = __webpack_require__(8099);
+var wipe_1 = __webpack_require__(7309);
+exports.DIGEST_LENGTH = 64;
+exports.BLOCK_SIZE = 128;
+/**
+ * SHA-2-512 cryptographic hash algorithm.
+ */
+var SHA512 = /** @class */ (function () {
+    function SHA512() {
+        /** Length of hash output */
+        this.digestLength = exports.DIGEST_LENGTH;
+        /** Block size */
+        this.blockSize = exports.BLOCK_SIZE;
+        // Note: Int32Array is used instead of Uint32Array for performance reasons.
+        this._stateHi = new Int32Array(8); // hash state, high bytes
+        this._stateLo = new Int32Array(8); // hash state, low bytes
+        this._tempHi = new Int32Array(16); // temporary state, high bytes
+        this._tempLo = new Int32Array(16); // temporary state, low bytes
+        this._buffer = new Uint8Array(256); // buffer for data to hash
+        this._bufferLength = 0; // number of bytes in buffer
+        this._bytesHashed = 0; // number of total bytes hashed
+        this._finished = false; // indicates whether the hash was finalized
+        this.reset();
+    }
+    SHA512.prototype._initState = function () {
+        this._stateHi[0] = 0x6a09e667;
+        this._stateHi[1] = 0xbb67ae85;
+        this._stateHi[2] = 0x3c6ef372;
+        this._stateHi[3] = 0xa54ff53a;
+        this._stateHi[4] = 0x510e527f;
+        this._stateHi[5] = 0x9b05688c;
+        this._stateHi[6] = 0x1f83d9ab;
+        this._stateHi[7] = 0x5be0cd19;
+        this._stateLo[0] = 0xf3bcc908;
+        this._stateLo[1] = 0x84caa73b;
+        this._stateLo[2] = 0xfe94f82b;
+        this._stateLo[3] = 0x5f1d36f1;
+        this._stateLo[4] = 0xade682d1;
+        this._stateLo[5] = 0x2b3e6c1f;
+        this._stateLo[6] = 0xfb41bd6b;
+        this._stateLo[7] = 0x137e2179;
+    };
+    /**
+     * Resets hash state making it possible
+     * to re-use this instance to hash other data.
+     */
+    SHA512.prototype.reset = function () {
+        this._initState();
+        this._bufferLength = 0;
+        this._bytesHashed = 0;
+        this._finished = false;
+        return this;
+    };
+    /**
+     * Cleans internal buffers and resets hash state.
+     */
+    SHA512.prototype.clean = function () {
+        wipe_1.wipe(this._buffer);
+        wipe_1.wipe(this._tempHi);
+        wipe_1.wipe(this._tempLo);
+        this.reset();
+    };
+    /**
+     * Updates hash state with the given data.
+     *
+     * Throws error when trying to update already finalized hash:
+     * instance must be reset to update it again.
+     */
+    SHA512.prototype.update = function (data, dataLength) {
+        if (dataLength === void 0) { dataLength = data.length; }
+        if (this._finished) {
+            throw new Error("SHA512: can't update because hash was finished.");
+        }
+        var dataPos = 0;
+        this._bytesHashed += dataLength;
+        if (this._bufferLength > 0) {
+            while (this._bufferLength < exports.BLOCK_SIZE && dataLength > 0) {
+                this._buffer[this._bufferLength++] = data[dataPos++];
+                dataLength--;
+            }
+            if (this._bufferLength === this.blockSize) {
+                hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize);
+                this._bufferLength = 0;
+            }
+        }
+        if (dataLength >= this.blockSize) {
+            dataPos = hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, data, dataPos, dataLength);
+            dataLength %= this.blockSize;
+        }
+        while (dataLength > 0) {
+            this._buffer[this._bufferLength++] = data[dataPos++];
+            dataLength--;
+        }
+        return this;
+    };
+    /**
+     * Finalizes hash state and puts hash into out.
+     * If hash was already finalized, puts the same value.
+     */
+    SHA512.prototype.finish = function (out) {
+        if (!this._finished) {
+            var bytesHashed = this._bytesHashed;
+            var left = this._bufferLength;
+            var bitLenHi = (bytesHashed / 0x20000000) | 0;
+            var bitLenLo = bytesHashed << 3;
+            var padLength = (bytesHashed % 128 < 112) ? 128 : 256;
+            this._buffer[left] = 0x80;
+            for (var i = left + 1; i < padLength - 8; i++) {
+                this._buffer[i] = 0;
+            }
+            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
+            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
+            hashBlocks(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, padLength);
+            this._finished = true;
+        }
+        for (var i = 0; i < this.digestLength / 8; i++) {
+            binary_1.writeUint32BE(this._stateHi[i], out, i * 8);
+            binary_1.writeUint32BE(this._stateLo[i], out, i * 8 + 4);
+        }
+        return this;
+    };
+    /**
+     * Returns the final hash digest.
+     */
+    SHA512.prototype.digest = function () {
+        var out = new Uint8Array(this.digestLength);
+        this.finish(out);
+        return out;
+    };
+    /**
+     * Function useful for HMAC/PBKDF2 optimization. Returns hash state to be
+     * used with restoreState(). Only chain value is saved, not buffers or
+     * other state variables.
+     */
+    SHA512.prototype.saveState = function () {
+        if (this._finished) {
+            throw new Error("SHA256: cannot save finished state");
+        }
+        return {
+            stateHi: new Int32Array(this._stateHi),
+            stateLo: new Int32Array(this._stateLo),
+            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,
+            bufferLength: this._bufferLength,
+            bytesHashed: this._bytesHashed
+        };
+    };
+    /**
+     * Function useful for HMAC/PBKDF2 optimization. Restores state saved by
+     * saveState() and sets bytesHashed to the given value.
+     */
+    SHA512.prototype.restoreState = function (savedState) {
+        this._stateHi.set(savedState.stateHi);
+        this._stateLo.set(savedState.stateLo);
+        this._bufferLength = savedState.bufferLength;
+        if (savedState.buffer) {
+            this._buffer.set(savedState.buffer);
+        }
+        this._bytesHashed = savedState.bytesHashed;
+        this._finished = false;
+        return this;
+    };
+    /**
+     * Cleans state returned by saveState().
+     */
+    SHA512.prototype.cleanSavedState = function (savedState) {
+        wipe_1.wipe(savedState.stateHi);
+        wipe_1.wipe(savedState.stateLo);
+        if (savedState.buffer) {
+            wipe_1.wipe(savedState.buffer);
+        }
+        savedState.bufferLength = 0;
+        savedState.bytesHashed = 0;
+    };
+    return SHA512;
+}());
+exports.SHA512 = SHA512;
+// Constants
+var K = new Int32Array([
+    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
+    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
+    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
+    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
+    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
+    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
+    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
+    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
+    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
+    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
+    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
+    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
+    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
+    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
+    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
+    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
+    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
+    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
+    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
+    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
+    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
+    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
+    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
+    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
+    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
+    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
+    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
+    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
+    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
+    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
+    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
+    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
+    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
+    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
+    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
+    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
+    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
+    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
+    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
+    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
+]);
+function hashBlocks(wh, wl, hh, hl, m, pos, len) {
+    var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
+    var h, l;
+    var th, tl;
+    var a, b, c, d;
+    while (len >= 128) {
+        for (var i = 0; i < 16; i++) {
+            var j = 8 * i + pos;
+            wh[i] = binary_1.readUint32BE(m, j);
+            wl[i] = binary_1.readUint32BE(m, j + 4);
+        }
+        for (var i = 0; i < 80; i++) {
+            var bh0 = ah0;
+            var bh1 = ah1;
+            var bh2 = ah2;
+            var bh3 = ah3;
+            var bh4 = ah4;
+            var bh5 = ah5;
+            var bh6 = ah6;
+            var bh7 = ah7;
+            var bl0 = al0;
+            var bl1 = al1;
+            var bl2 = al2;
+            var bl3 = al3;
+            var bl4 = al4;
+            var bl5 = al5;
+            var bl6 = al6;
+            var bl7 = al7;
+            // add
+            h = ah7;
+            l = al7;
+            a = l & 0xffff;
+            b = l >>> 16;
+            c = h & 0xffff;
+            d = h >>> 16;
+            // Sigma1
+            h = ((ah4 >>> 14) | (al4 << (32 - 14))) ^ ((ah4 >>> 18) |
+                (al4 << (32 - 18))) ^ ((al4 >>> (41 - 32)) | (ah4 << (32 - (41 - 32))));
+            l = ((al4 >>> 14) | (ah4 << (32 - 14))) ^ ((al4 >>> 18) |
+                (ah4 << (32 - 18))) ^ ((ah4 >>> (41 - 32)) | (al4 << (32 - (41 - 32))));
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            // Ch
+            h = (ah4 & ah5) ^ (~ah4 & ah6);
+            l = (al4 & al5) ^ (~al4 & al6);
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            // K
+            h = K[i * 2];
+            l = K[i * 2 + 1];
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            // w
+            h = wh[i % 16];
+            l = wl[i % 16];
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            b += a >>> 16;
+            c += b >>> 16;
+            d += c >>> 16;
+            th = c & 0xffff | d << 16;
+            tl = a & 0xffff | b << 16;
+            // add
+            h = th;
+            l = tl;
+            a = l & 0xffff;
+            b = l >>> 16;
+            c = h & 0xffff;
+            d = h >>> 16;
+            // Sigma0
+            h = ((ah0 >>> 28) | (al0 << (32 - 28))) ^ ((al0 >>> (34 - 32)) |
+                (ah0 << (32 - (34 - 32)))) ^ ((al0 >>> (39 - 32)) | (ah0 << (32 - (39 - 32))));
+            l = ((al0 >>> 28) | (ah0 << (32 - 28))) ^ ((ah0 >>> (34 - 32)) |
+                (al0 << (32 - (34 - 32)))) ^ ((ah0 >>> (39 - 32)) | (al0 << (32 - (39 - 32))));
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            // Maj
+            h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
+            l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            b += a >>> 16;
+            c += b >>> 16;
+            d += c >>> 16;
+            bh7 = (c & 0xffff) | (d << 16);
+            bl7 = (a & 0xffff) | (b << 16);
+            // add
+            h = bh3;
+            l = bl3;
+            a = l & 0xffff;
+            b = l >>> 16;
+            c = h & 0xffff;
+            d = h >>> 16;
+            h = th;
+            l = tl;
+            a += l & 0xffff;
+            b += l >>> 16;
+            c += h & 0xffff;
+            d += h >>> 16;
+            b += a >>> 16;
+            c += b >>> 16;
+            d += c >>> 16;
+            bh3 = (c & 0xffff) | (d << 16);
+            bl3 = (a & 0xffff) | (b << 16);
+            ah1 = bh0;
+            ah2 = bh1;
+            ah3 = bh2;
+            ah4 = bh3;
+            ah5 = bh4;
+            ah6 = bh5;
+            ah7 = bh6;
+            ah0 = bh7;
+            al1 = bl0;
+            al2 = bl1;
+            al3 = bl2;
+            al4 = bl3;
+            al5 = bl4;
+            al6 = bl5;
+            al7 = bl6;
+            al0 = bl7;
+            if (i % 16 === 15) {
+                for (var j = 0; j < 16; j++) {
+                    // add
+                    h = wh[j];
+                    l = wl[j];
+                    a = l & 0xffff;
+                    b = l >>> 16;
+                    c = h & 0xffff;
+                    d = h >>> 16;
+                    h = wh[(j + 9) % 16];
+                    l = wl[(j + 9) % 16];
+                    a += l & 0xffff;
+                    b += l >>> 16;
+                    c += h & 0xffff;
+                    d += h >>> 16;
+                    // sigma0
+                    th = wh[(j + 1) % 16];
+                    tl = wl[(j + 1) % 16];
+                    h = ((th >>> 1) | (tl << (32 - 1))) ^ ((th >>> 8) |
+                        (tl << (32 - 8))) ^ (th >>> 7);
+                    l = ((tl >>> 1) | (th << (32 - 1))) ^ ((tl >>> 8) |
+                        (th << (32 - 8))) ^ ((tl >>> 7) | (th << (32 - 7)));
+                    a += l & 0xffff;
+                    b += l >>> 16;
+                    c += h & 0xffff;
+                    d += h >>> 16;
+                    // sigma1
+                    th = wh[(j + 14) % 16];
+                    tl = wl[(j + 14) % 16];
+                    h = ((th >>> 19) | (tl << (32 - 19))) ^ ((tl >>> (61 - 32)) |
+                        (th << (32 - (61 - 32)))) ^ (th >>> 6);
+                    l = ((tl >>> 19) | (th << (32 - 19))) ^ ((th >>> (61 - 32)) |
+                        (tl << (32 - (61 - 32)))) ^ ((tl >>> 6) | (th << (32 - 6)));
+                    a += l & 0xffff;
+                    b += l >>> 16;
+                    c += h & 0xffff;
+                    d += h >>> 16;
+                    b += a >>> 16;
+                    c += b >>> 16;
+                    d += c >>> 16;
+                    wh[j] = (c & 0xffff) | (d << 16);
+                    wl[j] = (a & 0xffff) | (b << 16);
+                }
+            }
+        }
+        // add
+        h = ah0;
+        l = al0;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[0];
+        l = hl[0];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[0] = ah0 = (c & 0xffff) | (d << 16);
+        hl[0] = al0 = (a & 0xffff) | (b << 16);
+        h = ah1;
+        l = al1;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[1];
+        l = hl[1];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[1] = ah1 = (c & 0xffff) | (d << 16);
+        hl[1] = al1 = (a & 0xffff) | (b << 16);
+        h = ah2;
+        l = al2;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[2];
+        l = hl[2];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[2] = ah2 = (c & 0xffff) | (d << 16);
+        hl[2] = al2 = (a & 0xffff) | (b << 16);
+        h = ah3;
+        l = al3;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[3];
+        l = hl[3];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[3] = ah3 = (c & 0xffff) | (d << 16);
+        hl[3] = al3 = (a & 0xffff) | (b << 16);
+        h = ah4;
+        l = al4;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[4];
+        l = hl[4];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[4] = ah4 = (c & 0xffff) | (d << 16);
+        hl[4] = al4 = (a & 0xffff) | (b << 16);
+        h = ah5;
+        l = al5;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[5];
+        l = hl[5];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[5] = ah5 = (c & 0xffff) | (d << 16);
+        hl[5] = al5 = (a & 0xffff) | (b << 16);
+        h = ah6;
+        l = al6;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[6];
+        l = hl[6];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[6] = ah6 = (c & 0xffff) | (d << 16);
+        hl[6] = al6 = (a & 0xffff) | (b << 16);
+        h = ah7;
+        l = al7;
+        a = l & 0xffff;
+        b = l >>> 16;
+        c = h & 0xffff;
+        d = h >>> 16;
+        h = hh[7];
+        l = hl[7];
+        a += l & 0xffff;
+        b += l >>> 16;
+        c += h & 0xffff;
+        d += h >>> 16;
+        b += a >>> 16;
+        c += b >>> 16;
+        d += c >>> 16;
+        hh[7] = ah7 = (c & 0xffff) | (d << 16);
+        hl[7] = al7 = (a & 0xffff) | (b << 16);
+        pos += 128;
+        len -= 128;
+    }
+    return pos;
+}
+function hash(data) {
+    var h = new SHA512();
+    h.update(data);
+    var digest = h.digest();
+    h.clean();
+    return digest;
+}
+exports.hash = hash;
+//# sourceMappingURL=sha512.js.map
+
+/***/ }),
+
+/***/ 7309:
+/***/ ((__unused_webpack_module, exports) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Sets all values in the given array to zero and returns it.
+ *
+ * The fact that it sets bytes to zero can be relied on.
+ *
+ * There is no guarantee that this function makes data disappear from memory,
+ * as runtime implementation can, for example, have copying garbage collector
+ * that will make copies of sensitive data before we wipe it. Or that an
+ * operating system will write our data to swap or sleep image. Another thing
+ * is that an optimizing compiler can remove calls to this function or make it
+ * no-op. There's nothing we can do with it, so we just do our best and hope
+ * that everything will be okay and good will triumph over evil.
+ */
+function wipe(array) {
+    // Right now it's similar to array.fill(0). If it turns
+    // out that runtimes optimize this call away, maybe
+    // we can try something else.
+    for (var i = 0; i < array.length; i++) {
+        array[i] = 0;
+    }
+    return array;
+}
+exports.wipe = wipe;
+//# sourceMappingURL=wipe.js.map
+
+/***/ }),
+
+/***/ 7664:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2016 Dmitry Chestnykh
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
+/**
+ * Package x25519 implements X25519 key agreement.
+ */
+const random_1 = __webpack_require__(1416);
+const wipe_1 = __webpack_require__(7309);
+exports.PUBLIC_KEY_LENGTH = 32;
+exports.SECRET_KEY_LENGTH = 32;
+exports.SHARED_KEY_LENGTH = 32;
+// Returns new zero-filled 16-element GF (Float64Array).
+// If passed an array of numbers, prefills the returned
+// array with them.
+//
+// We use Float64Array, because we need 48-bit numbers
+// for this implementation.
+function gf(init) {
+    const r = new Float64Array(16);
+    if (init) {
+        for (let i = 0; i < init.length; i++) {
+            r[i] = init[i];
+        }
+    }
+    return r;
+}
+// Base point.
+const _9 = new Uint8Array(32);
+_9[0] = 9;
+const _121665 = gf([0xdb41, 1]);
+function car25519(o) {
+    let c = 1;
+    for (let i = 0; i < 16; i++) {
+        let v = o[i] + c + 65535;
+        c = Math.floor(v / 65536);
+        o[i] = v - c * 65536;
+    }
+    o[0] += c - 1 + 37 * (c - 1);
+}
+function sel25519(p, q, b) {
+    const c = ~(b - 1);
+    for (let i = 0; i < 16; i++) {
+        const t = c & (p[i] ^ q[i]);
+        p[i] ^= t;
+        q[i] ^= t;
+    }
+}
+function pack25519(o, n) {
+    const m = gf();
+    const t = gf();
+    for (let i = 0; i < 16; i++) {
+        t[i] = n[i];
+    }
+    car25519(t);
+    car25519(t);
+    car25519(t);
+    for (let j = 0; j < 2; j++) {
+        m[0] = t[0] - 0xffed;
+        for (let i = 1; i < 15; i++) {
+            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);
+            m[i - 1] &= 0xffff;
+        }
+        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);
+        const b = (m[15] >> 16) & 1;
+        m[14] &= 0xffff;
+        sel25519(t, m, 1 - b);
+    }
+    for (let i = 0; i < 16; i++) {
+        o[2 * i] = t[i] & 0xff;
+        o[2 * i + 1] = t[i] >> 8;
+    }
+}
+function unpack25519(o, n) {
+    for (let i = 0; i < 16; i++) {
+        o[i] = n[2 * i] + (n[2 * i + 1] << 8);
+    }
+    o[15] &= 0x7fff;
+}
+function add(o, a, b) {
+    for (let i = 0; i < 16; i++) {
+        o[i] = a[i] + b[i];
+    }
+}
+function sub(o, a, b) {
+    for (let i = 0; i < 16; i++) {
+        o[i] = a[i] - b[i];
+    }
+}
+function mul(o, a, b) {
+    let v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];
+    v = a[0];
+    t0 += v * b0;
+    t1 += v * b1;
+    t2 += v * b2;
+    t3 += v * b3;
+    t4 += v * b4;
+    t5 += v * b5;
+    t6 += v * b6;
+    t7 += v * b7;
+    t8 += v * b8;
+    t9 += v * b9;
+    t10 += v * b10;
+    t11 += v * b11;
+    t12 += v * b12;
+    t13 += v * b13;
+    t14 += v * b14;
+    t15 += v * b15;
+    v = a[1];
+    t1 += v * b0;
+    t2 += v * b1;
+    t3 += v * b2;
+    t4 += v * b3;
+    t5 += v * b4;
+    t6 += v * b5;
+    t7 += v * b6;
+    t8 += v * b7;
+    t9 += v * b8;
+    t10 += v * b9;
+    t11 += v * b10;
+    t12 += v * b11;
+    t13 += v * b12;
+    t14 += v * b13;
+    t15 += v * b14;
+    t16 += v * b15;
+    v = a[2];
+    t2 += v * b0;
+    t3 += v * b1;
+    t4 += v * b2;
+    t5 += v * b3;
+    t6 += v * b4;
+    t7 += v * b5;
+    t8 += v * b6;
+    t9 += v * b7;
+    t10 += v * b8;
+    t11 += v * b9;
+    t12 += v * b10;
+    t13 += v * b11;
+    t14 += v * b12;
+    t15 += v * b13;
+    t16 += v * b14;
+    t17 += v * b15;
+    v = a[3];
+    t3 += v * b0;
+    t4 += v * b1;
+    t5 += v * b2;
+    t6 += v * b3;
+    t7 += v * b4;
+    t8 += v * b5;
+    t9 += v * b6;
+    t10 += v * b7;
+    t11 += v * b8;
+    t12 += v * b9;
+    t13 += v * b10;
+    t14 += v * b11;
+    t15 += v * b12;
+    t16 += v * b13;
+    t17 += v * b14;
+    t18 += v * b15;
+    v = a[4];
+    t4 += v * b0;
+    t5 += v * b1;
+    t6 += v * b2;
+    t7 += v * b3;
+    t8 += v * b4;
+    t9 += v * b5;
+    t10 += v * b6;
+    t11 += v * b7;
+    t12 += v * b8;
+    t13 += v * b9;
+    t14 += v * b10;
+    t15 += v * b11;
+    t16 += v * b12;
+    t17 += v * b13;
+    t18 += v * b14;
+    t19 += v * b15;
+    v = a[5];
+    t5 += v * b0;
+    t6 += v * b1;
+    t7 += v * b2;
+    t8 += v * b3;
+    t9 += v * b4;
+    t10 += v * b5;
+    t11 += v * b6;
+    t12 += v * b7;
+    t13 += v * b8;
+    t14 += v * b9;
+    t15 += v * b10;
+    t16 += v * b11;
+    t17 += v * b12;
+    t18 += v * b13;
+    t19 += v * b14;
+    t20 += v * b15;
+    v = a[6];
+    t6 += v * b0;
+    t7 += v * b1;
+    t8 += v * b2;
+    t9 += v * b3;
+    t10 += v * b4;
+    t11 += v * b5;
+    t12 += v * b6;
+    t13 += v * b7;
+    t14 += v * b8;
+    t15 += v * b9;
+    t16 += v * b10;
+    t17 += v * b11;
+    t18 += v * b12;
+    t19 += v * b13;
+    t20 += v * b14;
+    t21 += v * b15;
+    v = a[7];
+    t7 += v * b0;
+    t8 += v * b1;
+    t9 += v * b2;
+    t10 += v * b3;
+    t11 += v * b4;
+    t12 += v * b5;
+    t13 += v * b6;
+    t14 += v * b7;
+    t15 += v * b8;
+    t16 += v * b9;
+    t17 += v * b10;
+    t18 += v * b11;
+    t19 += v * b12;
+    t20 += v * b13;
+    t21 += v * b14;
+    t22 += v * b15;
+    v = a[8];
+    t8 += v * b0;
+    t9 += v * b1;
+    t10 += v * b2;
+    t11 += v * b3;
+    t12 += v * b4;
+    t13 += v * b5;
+    t14 += v * b6;
+    t15 += v * b7;
+    t16 += v * b8;
+    t17 += v * b9;
+    t18 += v * b10;
+    t19 += v * b11;
+    t20 += v * b12;
+    t21 += v * b13;
+    t22 += v * b14;
+    t23 += v * b15;
+    v = a[9];
+    t9 += v * b0;
+    t10 += v * b1;
+    t11 += v * b2;
+    t12 += v * b3;
+    t13 += v * b4;
+    t14 += v * b5;
+    t15 += v * b6;
+    t16 += v * b7;
+    t17 += v * b8;
+    t18 += v * b9;
+    t19 += v * b10;
+    t20 += v * b11;
+    t21 += v * b12;
+    t22 += v * b13;
+    t23 += v * b14;
+    t24 += v * b15;
+    v = a[10];
+    t10 += v * b0;
+    t11 += v * b1;
+    t12 += v * b2;
+    t13 += v * b3;
+    t14 += v * b4;
+    t15 += v * b5;
+    t16 += v * b6;
+    t17 += v * b7;
+    t18 += v * b8;
+    t19 += v * b9;
+    t20 += v * b10;
+    t21 += v * b11;
+    t22 += v * b12;
+    t23 += v * b13;
+    t24 += v * b14;
+    t25 += v * b15;
+    v = a[11];
+    t11 += v * b0;
+    t12 += v * b1;
+    t13 += v * b2;
+    t14 += v * b3;
+    t15 += v * b4;
+    t16 += v * b5;
+    t17 += v * b6;
+    t18 += v * b7;
+    t19 += v * b8;
+    t20 += v * b9;
+    t21 += v * b10;
+    t22 += v * b11;
+    t23 += v * b12;
+    t24 += v * b13;
+    t25 += v * b14;
+    t26 += v * b15;
+    v = a[12];
+    t12 += v * b0;
+    t13 += v * b1;
+    t14 += v * b2;
+    t15 += v * b3;
+    t16 += v * b4;
+    t17 += v * b5;
+    t18 += v * b6;
+    t19 += v * b7;
+    t20 += v * b8;
+    t21 += v * b9;
+    t22 += v * b10;
+    t23 += v * b11;
+    t24 += v * b12;
+    t25 += v * b13;
+    t26 += v * b14;
+    t27 += v * b15;
+    v = a[13];
+    t13 += v * b0;
+    t14 += v * b1;
+    t15 += v * b2;
+    t16 += v * b3;
+    t17 += v * b4;
+    t18 += v * b5;
+    t19 += v * b6;
+    t20 += v * b7;
+    t21 += v * b8;
+    t22 += v * b9;
+    t23 += v * b10;
+    t24 += v * b11;
+    t25 += v * b12;
+    t26 += v * b13;
+    t27 += v * b14;
+    t28 += v * b15;
+    v = a[14];
+    t14 += v * b0;
+    t15 += v * b1;
+    t16 += v * b2;
+    t17 += v * b3;
+    t18 += v * b4;
+    t19 += v * b5;
+    t20 += v * b6;
+    t21 += v * b7;
+    t22 += v * b8;
+    t23 += v * b9;
+    t24 += v * b10;
+    t25 += v * b11;
+    t26 += v * b12;
+    t27 += v * b13;
+    t28 += v * b14;
+    t29 += v * b15;
+    v = a[15];
+    t15 += v * b0;
+    t16 += v * b1;
+    t17 += v * b2;
+    t18 += v * b3;
+    t19 += v * b4;
+    t20 += v * b5;
+    t21 += v * b6;
+    t22 += v * b7;
+    t23 += v * b8;
+    t24 += v * b9;
+    t25 += v * b10;
+    t26 += v * b11;
+    t27 += v * b12;
+    t28 += v * b13;
+    t29 += v * b14;
+    t30 += v * b15;
+    t0 += 38 * t16;
+    t1 += 38 * t17;
+    t2 += 38 * t18;
+    t3 += 38 * t19;
+    t4 += 38 * t20;
+    t5 += 38 * t21;
+    t6 += 38 * t22;
+    t7 += 38 * t23;
+    t8 += 38 * t24;
+    t9 += 38 * t25;
+    t10 += 38 * t26;
+    t11 += 38 * t27;
+    t12 += 38 * t28;
+    t13 += 38 * t29;
+    t14 += 38 * t30;
+    // t15 left as is
+    // first car
+    c = 1;
+    v = t0 + c + 65535;
+    c = Math.floor(v / 65536);
+    t0 = v - c * 65536;
+    v = t1 + c + 65535;
+    c = Math.floor(v / 65536);
+    t1 = v - c * 65536;
+    v = t2 + c + 65535;
+    c = Math.floor(v / 65536);
+    t2 = v - c * 65536;
+    v = t3 + c + 65535;
+    c = Math.floor(v / 65536);
+    t3 = v - c * 65536;
+    v = t4 + c + 65535;
+    c = Math.floor(v / 65536);
+    t4 = v - c * 65536;
+    v = t5 + c + 65535;
+    c = Math.floor(v / 65536);
+    t5 = v - c * 65536;
+    v = t6 + c + 65535;
+    c = Math.floor(v / 65536);
+    t6 = v - c * 65536;
+    v = t7 + c + 65535;
+    c = Math.floor(v / 65536);
+    t7 = v - c * 65536;
+    v = t8 + c + 65535;
+    c = Math.floor(v / 65536);
+    t8 = v - c * 65536;
+    v = t9 + c + 65535;
+    c = Math.floor(v / 65536);
+    t9 = v - c * 65536;
+    v = t10 + c + 65535;
+    c = Math.floor(v / 65536);
+    t10 = v - c * 65536;
+    v = t11 + c + 65535;
+    c = Math.floor(v / 65536);
+    t11 = v - c * 65536;
+    v = t12 + c + 65535;
+    c = Math.floor(v / 65536);
+    t12 = v - c * 65536;
+    v = t13 + c + 65535;
+    c = Math.floor(v / 65536);
+    t13 = v - c * 65536;
+    v = t14 + c + 65535;
+    c = Math.floor(v / 65536);
+    t14 = v - c * 65536;
+    v = t15 + c + 65535;
+    c = Math.floor(v / 65536);
+    t15 = v - c * 65536;
+    t0 += c - 1 + 37 * (c - 1);
+    // second car
+    c = 1;
+    v = t0 + c + 65535;
+    c = Math.floor(v / 65536);
+    t0 = v - c * 65536;
+    v = t1 + c + 65535;
+    c = Math.floor(v / 65536);
+    t1 = v - c * 65536;
+    v = t2 + c + 65535;
+    c = Math.floor(v / 65536);
+    t2 = v - c * 65536;
+    v = t3 + c + 65535;
+    c = Math.floor(v / 65536);
+    t3 = v - c * 65536;
+    v = t4 + c + 65535;
+    c = Math.floor(v / 65536);
+    t4 = v - c * 65536;
+    v = t5 + c + 65535;
+    c = Math.floor(v / 65536);
+    t5 = v - c * 65536;
+    v = t6 + c + 65535;
+    c = Math.floor(v / 65536);
+    t6 = v - c * 65536;
+    v = t7 + c + 65535;
+    c = Math.floor(v / 65536);
+    t7 = v - c * 65536;
+    v = t8 + c + 65535;
+    c = Math.floor(v / 65536);
+    t8 = v - c * 65536;
+    v = t9 + c + 65535;
+    c = Math.floor(v / 65536);
+    t9 = v - c * 65536;
+    v = t10 + c + 65535;
+    c = Math.floor(v / 65536);
+    t10 = v - c * 65536;
+    v = t11 + c + 65535;
+    c = Math.floor(v / 65536);
+    t11 = v - c * 65536;
+    v = t12 + c + 65535;
+    c = Math.floor(v / 65536);
+    t12 = v - c * 65536;
+    v = t13 + c + 65535;
+    c = Math.floor(v / 65536);
+    t13 = v - c * 65536;
+    v = t14 + c + 65535;
+    c = Math.floor(v / 65536);
+    t14 = v - c * 65536;
+    v = t15 + c + 65535;
+    c = Math.floor(v / 65536);
+    t15 = v - c * 65536;
+    t0 += c - 1 + 37 * (c - 1);
+    o[0] = t0;
+    o[1] = t1;
+    o[2] = t2;
+    o[3] = t3;
+    o[4] = t4;
+    o[5] = t5;
+    o[6] = t6;
+    o[7] = t7;
+    o[8] = t8;
+    o[9] = t9;
+    o[10] = t10;
+    o[11] = t11;
+    o[12] = t12;
+    o[13] = t13;
+    o[14] = t14;
+    o[15] = t15;
+}
+function square(o, a) {
+    mul(o, a, a);
+}
+function inv25519(o, inp) {
+    const c = gf();
+    for (let i = 0; i < 16; i++) {
+        c[i] = inp[i];
+    }
+    for (let i = 253; i >= 0; i--) {
+        square(c, c);
+        if (i !== 2 && i !== 4) {
+            mul(c, c, inp);
+        }
+    }
+    for (let i = 0; i < 16; i++) {
+        o[i] = c[i];
+    }
+}
+function scalarMult(n, p) {
+    const z = new Uint8Array(32);
+    const x = new Float64Array(80);
+    const a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();
+    for (let i = 0; i < 31; i++) {
+        z[i] = n[i];
+    }
+    z[31] = (n[31] & 127) | 64;
+    z[0] &= 248;
+    unpack25519(x, p);
+    for (let i = 0; i < 16; i++) {
+        b[i] = x[i];
+    }
+    a[0] = d[0] = 1;
+    for (let i = 254; i >= 0; --i) {
+        const r = (z[i >>> 3] >>> (i & 7)) & 1;
+        sel25519(a, b, r);
+        sel25519(c, d, r);
+        add(e, a, c);
+        sub(a, a, c);
+        add(c, b, d);
+        sub(b, b, d);
+        square(d, e);
+        square(f, a);
+        mul(a, c, a);
+        mul(c, b, e);
+        add(e, a, c);
+        sub(a, a, c);
+        square(b, a);
+        sub(c, d, f);
+        mul(a, c, _121665);
+        add(a, a, d);
+        mul(c, c, a);
+        mul(a, d, f);
+        mul(d, b, x);
+        square(b, e);
+        sel25519(a, b, r);
+        sel25519(c, d, r);
+    }
+    for (let i = 0; i < 16; i++) {
+        x[i + 16] = a[i];
+        x[i + 32] = c[i];
+        x[i + 48] = b[i];
+        x[i + 64] = d[i];
+    }
+    const x32 = x.subarray(32);
+    const x16 = x.subarray(16);
+    inv25519(x32, x32);
+    mul(x16, x16, x32);
+    const q = new Uint8Array(32);
+    pack25519(q, x16);
+    return q;
+}
+exports.scalarMult = scalarMult;
+function scalarMultBase(n) {
+    return scalarMult(n, _9);
+}
+exports.scalarMultBase = scalarMultBase;
+function generateKeyPairFromSeed(seed) {
+    if (seed.length !== exports.SECRET_KEY_LENGTH) {
+        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
+    }
+    const secretKey = new Uint8Array(seed);
+    const publicKey = scalarMultBase(secretKey);
+    return {
+        publicKey,
+        secretKey
+    };
+}
+exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
+function generateKeyPair(prng) {
+    const seed = (0, random_1.randomBytes)(32, prng);
+    const result = generateKeyPairFromSeed(seed);
+    (0, wipe_1.wipe)(seed);
+    return result;
+}
+exports.generateKeyPair = generateKeyPair;
+/**
+ * Returns a shared key between our secret key and a peer's public key.
+ *
+ * Throws an error if the given keys are of wrong length.
+ *
+ * If rejectZero is true throws if the calculated shared key is all-zero.
+ * From RFC 7748:
+ *
+ * > Protocol designers using Diffie-Hellman over the curves defined in
+ * > this document must not assume "contributory behavior".  Specially,
+ * > contributory behavior means that both parties' private keys
+ * > contribute to the resulting shared key.  Since curve25519 and
+ * > curve448 have cofactors of 8 and 4 (respectively), an input point of
+ * > small order will eliminate any contribution from the other party's
+ * > private key.  This situation can be detected by checking for the all-
+ * > zero output, which implementations MAY do, as specified in Section 6.
+ * > However, a large number of existing implementations do not do this.
+ *
+ * IMPORTANT: the returned key is a raw result of scalar multiplication.
+ * To use it as a key material, hash it with a cryptographic hash function.
+ */
+function sharedKey(mySecretKey, theirPublicKey, rejectZero = false) {
+    if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
+        throw new Error("X25519: incorrect secret key length");
+    }
+    if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
+        throw new Error("X25519: incorrect public key length");
+    }
+    const result = scalarMult(mySecretKey, theirPublicKey);
+    if (rejectZero) {
+        let zeros = 0;
+        for (let i = 0; i < result.length; i++) {
+            zeros |= result[i];
+        }
+        if (zeros === 0) {
+            throw new Error("X25519: invalid shared key");
+        }
+    }
+    return result;
+}
+exports.sharedKey = sharedKey;
+//# sourceMappingURL=x25519.js.map
+
+/***/ }),
+
+/***/ 5753:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2019 Kyle Den Hartog
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+/**
+ * Package xchacha20 implements XChaCha20 stream cipher.
+ */
+var binary_1 = __webpack_require__(8099);
+var wipe_1 = __webpack_require__(7309);
+var chacha_1 = __webpack_require__(5439);
+// Number of ChaCha rounds (ChaCha20).
+var ROUNDS = 20;
+/**
+ * Encrypt src with XChaCha20 stream generated for the given 32-byte key and
+ * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and
+ * write the result into dst and return it.
+ *
+ * dst and src may be the same, but otherwise must not overlap.
+ *
+ * Nonce length is set in such a way that given it's generated via a CSPRNG
+ * then there's little concern of collision for roughly 2^96 messages while
+ * reusing a secret key and not encountering nonce reuse vulnerabilities.
+ */
+function streamXOR(key, nonce, src, dst) {
+    if (nonce.length !== 24) {
+        throw new Error("XChaCha20 nonce must be 24 bytes");
+    }
+    // Use HChaCha one-way function to transform first 16 bytes of
+    // 24-byte extended nonce and key into a new key for Salsa
+    // stream -- "subkey".
+    var subkey = hchacha(key, nonce.subarray(0, 16), new Uint8Array(32));
+    // Use last 8 bytes of 24-byte extended nonce as an actual nonce prefixed by 4 zero bytes,
+    // and a subkey derived in the previous step as key to encrypt.
+    var modifiedNonce = new Uint8Array(12);
+    modifiedNonce.set(nonce.subarray(16), 4);
+    // If nonceInplaceCounterLength > 0, we'll still pass the correct
+    // nonce || counter, as we don't limit the end of nonce subarray.
+    var result = chacha_1.streamXOR(subkey, modifiedNonce, src, dst);
+    // Clean subkey.
+    wipe_1.wipe(subkey);
+    return result;
+}
+exports.streamXOR = streamXOR;
+/**
+ * Generate XChaCha20 stream for the given 32-byte key and 12-byte
+ * nonce (last 8 bytes of 24 byte nonce prefixed with 4 zero bytes)
+ * and write it into dst and return it.
+ *
+ * Nonces MUST be generated using an CSPRNG to generate a sufficiently
+ * random nonce such that a collision is highly unlikely to occur.
+ *
+ * stream is like streamXOR with all-zero src.
+ */
+function stream(key, nonce, dst) {
+    wipe_1.wipe(dst);
+    return streamXOR(key, nonce, dst, dst);
+}
+exports.stream = stream;
+/**
+ * HChaCha is a one-way function used in XChaCha to extend nonce.
+ *
+ * It takes 32-byte key and 16-byte src and writes 32-byte result
+ * into dst and returns it.
+ */
+function hchacha(key, src, dst) {
+    var j0 = 0x61707865; // "expa"  -- ChaCha's "sigma" constant
+    var j1 = 0x3320646e; // "nd 3"     for 32-byte keys
+    var j2 = 0x79622d32; // "2-by"
+    var j3 = 0x6b206574; // "te k"
+    var j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];
+    var j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];
+    var j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];
+    var j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];
+    var j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];
+    var j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];
+    var j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];
+    var j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];
+    var j12 = (src[3] << 24) | (src[2] << 16) | (src[1] << 8) | src[0];
+    var j13 = (src[7] << 24) | (src[6] << 16) | (src[5] << 8) | src[4];
+    var j14 = (src[11] << 24) | (src[10] << 16) | (src[9] << 8) | src[8];
+    var j15 = (src[15] << 24) | (src[14] << 16) | (src[13] << 8) | src[12];
+    var x0 = j0;
+    var x1 = j1;
+    var x2 = j2;
+    var x3 = j3;
+    var x4 = j4;
+    var x5 = j5;
+    var x6 = j6;
+    var x7 = j7;
+    var x8 = j8;
+    var x9 = j9;
+    var x10 = j10;
+    var x11 = j11;
+    var x12 = j12;
+    var x13 = j13;
+    var x14 = j14;
+    var x15 = j15;
+    for (var i = 0; i < ROUNDS; i += 2) {
+        x0 = (x0 + x4) | 0;
+        x12 ^= x0;
+        x12 = (x12 >>> (32 - 16)) | (x12 << 16);
+        x8 = (x8 + x12) | 0;
+        x4 ^= x8;
+        x4 = (x4 >>> (32 - 12)) | (x4 << 12);
+        x1 = (x1 + x5) | 0;
+        x13 ^= x1;
+        x13 = (x13 >>> (32 - 16)) | (x13 << 16);
+        x9 = (x9 + x13) | 0;
+        x5 ^= x9;
+        x5 = (x5 >>> (32 - 12)) | (x5 << 12);
+        x2 = (x2 + x6) | 0;
+        x14 ^= x2;
+        x14 = (x14 >>> (32 - 16)) | (x14 << 16);
+        x10 = (x10 + x14) | 0;
+        x6 ^= x10;
+        x6 = (x6 >>> (32 - 12)) | (x6 << 12);
+        x3 = (x3 + x7) | 0;
+        x15 ^= x3;
+        x15 = (x15 >>> (32 - 16)) | (x15 << 16);
+        x11 = (x11 + x15) | 0;
+        x7 ^= x11;
+        x7 = (x7 >>> (32 - 12)) | (x7 << 12);
+        x2 = (x2 + x6) | 0;
+        x14 ^= x2;
+        x14 = (x14 >>> (32 - 8)) | (x14 << 8);
+        x10 = (x10 + x14) | 0;
+        x6 ^= x10;
+        x6 = (x6 >>> (32 - 7)) | (x6 << 7);
+        x3 = (x3 + x7) | 0;
+        x15 ^= x3;
+        x15 = (x15 >>> (32 - 8)) | (x15 << 8);
+        x11 = (x11 + x15) | 0;
+        x7 ^= x11;
+        x7 = (x7 >>> (32 - 7)) | (x7 << 7);
+        x1 = (x1 + x5) | 0;
+        x13 ^= x1;
+        x13 = (x13 >>> (32 - 8)) | (x13 << 8);
+        x9 = (x9 + x13) | 0;
+        x5 ^= x9;
+        x5 = (x5 >>> (32 - 7)) | (x5 << 7);
+        x0 = (x0 + x4) | 0;
+        x12 ^= x0;
+        x12 = (x12 >>> (32 - 8)) | (x12 << 8);
+        x8 = (x8 + x12) | 0;
+        x4 ^= x8;
+        x4 = (x4 >>> (32 - 7)) | (x4 << 7);
+        x0 = (x0 + x5) | 0;
+        x15 ^= x0;
+        x15 = (x15 >>> (32 - 16)) | (x15 << 16);
+        x10 = (x10 + x15) | 0;
+        x5 ^= x10;
+        x5 = (x5 >>> (32 - 12)) | (x5 << 12);
+        x1 = (x1 + x6) | 0;
+        x12 ^= x1;
+        x12 = (x12 >>> (32 - 16)) | (x12 << 16);
+        x11 = (x11 + x12) | 0;
+        x6 ^= x11;
+        x6 = (x6 >>> (32 - 12)) | (x6 << 12);
+        x2 = (x2 + x7) | 0;
+        x13 ^= x2;
+        x13 = (x13 >>> (32 - 16)) | (x13 << 16);
+        x8 = (x8 + x13) | 0;
+        x7 ^= x8;
+        x7 = (x7 >>> (32 - 12)) | (x7 << 12);
+        x3 = (x3 + x4) | 0;
+        x14 ^= x3;
+        x14 = (x14 >>> (32 - 16)) | (x14 << 16);
+        x9 = (x9 + x14) | 0;
+        x4 ^= x9;
+        x4 = (x4 >>> (32 - 12)) | (x4 << 12);
+        x2 = (x2 + x7) | 0;
+        x13 ^= x2;
+        x13 = (x13 >>> (32 - 8)) | (x13 << 8);
+        x8 = (x8 + x13) | 0;
+        x7 ^= x8;
+        x7 = (x7 >>> (32 - 7)) | (x7 << 7);
+        x3 = (x3 + x4) | 0;
+        x14 ^= x3;
+        x14 = (x14 >>> (32 - 8)) | (x14 << 8);
+        x9 = (x9 + x14) | 0;
+        x4 ^= x9;
+        x4 = (x4 >>> (32 - 7)) | (x4 << 7);
+        x1 = (x1 + x6) | 0;
+        x12 ^= x1;
+        x12 = (x12 >>> (32 - 8)) | (x12 << 8);
+        x11 = (x11 + x12) | 0;
+        x6 ^= x11;
+        x6 = (x6 >>> (32 - 7)) | (x6 << 7);
+        x0 = (x0 + x5) | 0;
+        x15 ^= x0;
+        x15 = (x15 >>> (32 - 8)) | (x15 << 8);
+        x10 = (x10 + x15) | 0;
+        x5 ^= x10;
+        x5 = (x5 >>> (32 - 7)) | (x5 << 7);
+    }
+    binary_1.writeUint32LE(x0, dst, 0);
+    binary_1.writeUint32LE(x1, dst, 4);
+    binary_1.writeUint32LE(x2, dst, 8);
+    binary_1.writeUint32LE(x3, dst, 12);
+    binary_1.writeUint32LE(x12, dst, 16);
+    binary_1.writeUint32LE(x13, dst, 20);
+    binary_1.writeUint32LE(x14, dst, 24);
+    binary_1.writeUint32LE(x15, dst, 28);
+    return dst;
+}
+exports.hchacha = hchacha;
+//# sourceMappingURL=xchacha20.js.map
+
+/***/ }),
+
+/***/ 9375:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+// Copyright (C) 2019 Kyle Den Hartog
+// MIT License. See LICENSE file for details.
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+var xchacha20_1 = __webpack_require__(5753);
+var chacha20poly1305_1 = __webpack_require__(5501);
+var wipe_1 = __webpack_require__(7309);
+exports.KEY_LENGTH = 32;
+exports.NONCE_LENGTH = 24;
+exports.TAG_LENGTH = 16;
+/**
+ * XChaCha20-Poly1305 Authenticated Encryption with Associated Data.
+ *
+ * Defined in draft-irtf-cfrg-xchacha-01.
+ * See https://tools.ietf.org/html/draft-irtf-cfrg-xchacha-01
+ */
+var XChaCha20Poly1305 = /** @class */ (function () {
+    /**
+     * Creates a new instance with the given 32-byte key.
+     */
+    function XChaCha20Poly1305(key) {
+        this.nonceLength = exports.NONCE_LENGTH;
+        this.tagLength = exports.TAG_LENGTH;
+        if (key.length !== exports.KEY_LENGTH) {
+            throw new Error("ChaCha20Poly1305 needs 32-byte key");
+        }
+        // Copy key.
+        this._key = new Uint8Array(key);
+    }
+    /**
+     * Encrypts and authenticates plaintext, authenticates associated data,
+     * and returns sealed ciphertext, which includes authentication tag.
+     *
+     * draft-irtf-cfrg-xchacha-01 defines a 24 byte nonce (192 bits) which
+     * uses the first 16 bytes of the nonce and the secret key with
+     * HChaCha to generate an initial subkey. The last 8 bytes of the nonce
+     * are then prefixed with 4 zero bytes and then provided with the subkey
+     * to the ChaCha20Poly1305 implementation.
+     *
+     * If dst is given (it must be the size of plaintext + the size of tag
+     * length) the result will be put into it. Dst and plaintext must not
+     * overlap.
+     */
+    XChaCha20Poly1305.prototype.seal = function (nonce, plaintext, associatedData, dst) {
+        if (nonce.length !== 24) {
+            throw new Error("XChaCha20Poly1305: incorrect nonce length");
+        }
+        // Use HSalsa one-way function to transform first 16 bytes of
+        // 24-byte extended nonce and key into a new key for Salsa
+        // stream -- "subkey".
+        var subKey = xchacha20_1.hchacha(this._key, nonce.subarray(0, 16), new Uint8Array(32));
+        // Use last 8 bytes of 24-byte extended nonce as an actual nonce prefixed by 4 zero bytes,
+        // and a subkey derived in the previous step as key to encrypt.
+        var modifiedNonce = new Uint8Array(12);
+        modifiedNonce.set(nonce.subarray(16), 4);
+        var chaChaPoly = new chacha20poly1305_1.ChaCha20Poly1305(subKey);
+        var result = chaChaPoly.seal(modifiedNonce, plaintext, associatedData, dst);
+        wipe_1.wipe(subKey);
+        wipe_1.wipe(modifiedNonce);
+        chaChaPoly.clean();
+        return result;
+    };
+    /**
+     * Authenticates sealed ciphertext (which includes authentication tag) and
+     * associated data, decrypts ciphertext and returns decrypted plaintext.
+     *
+     * draft-irtf-cfrg-xchacha-01 defines a 24 byte nonce (192 bits) which
+     * then uses the first 16 bytes of the nonce and the secret key with
+     * Hchacha to generate an initial subkey. The last 8 bytes of the nonce
+     * are then prefixed with 4 zero bytes and then provided with the subkey
+     * to the chacha20poly1305 implementation.
+     *
+     * If authentication fails, it returns null.
+     *
+     * If dst is given (it must be the size of plaintext + the size of tag
+     * length) the result will be put into it. Dst and plaintext must not
+     * overlap.
+     */
+    XChaCha20Poly1305.prototype.open = function (nonce, sealed, associatedData, dst) {
+        if (nonce.length !== 24) {
+            throw new Error("XChaCha20Poly1305: incorrect nonce length");
+        }
+        // Sealed ciphertext should at least contain tag.
+        if (sealed.length < this.tagLength) {
+            // TODO(dchest): should we throw here instead?
+            return null;
+        }
+        /**
+        * Generate subKey by using HChaCha20 function as defined
+        * in section 2 step 1 of draft-irtf-cfrg-xchacha-01
+        */
+        var subKey = xchacha20_1.hchacha(this._key, nonce.subarray(0, 16), new Uint8Array(32));
+        /**
+        * Generate Nonce as defined - remaining 8 bytes of the nonce prefixed with
+        * 4 zero bytes
+        */
+        var modifiedNonce = new Uint8Array(12);
+        modifiedNonce.set(nonce.subarray(16), 4);
+        /**
+         * Authenticate and decrypt by calling into chacha20poly1305.
+         */
+        var chaChaPoly = new chacha20poly1305_1.ChaCha20Poly1305(subKey);
+        var result = chaChaPoly.open(modifiedNonce, sealed, associatedData, dst);
+        wipe_1.wipe(subKey);
+        wipe_1.wipe(modifiedNonce);
+        chaChaPoly.clean();
+        return result;
+    };
+    XChaCha20Poly1305.prototype.clean = function () {
+        wipe_1.wipe(this._key);
+        return this;
+    };
+    return XChaCha20Poly1305;
+}());
+exports.XChaCha20Poly1305 = XChaCha20Poly1305;
+//# sourceMappingURL=xchacha20poly1305.js.map
+
+/***/ }),
+
+/***/ 7715:
+/***/ ((__unused_webpack_module, exports) => {
+
+"use strict";
+
+Object.defineProperty(exports, "__esModule", ({ value: true }));
+exports.bech32m = exports.bech32 = void 0;
+const ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';
+const ALPHABET_MAP = {};
+for (let z = 0; z < ALPHABET.length; z++) {
+    const x = ALPHABET.charAt(z);
+    ALPHABET_MAP[x] = z;
+}
+function polymodStep(pre) {
+    const b = pre >> 25;
+    return (((pre & 0x1ffffff) << 5) ^
+        (-((b >> 0) & 1) & 0x3b6a57b2) ^
+        (-((b >> 1) & 1) & 0x26508e6d) ^
+        (-((b >> 2) & 1) & 0x1ea119fa) ^
+        (-((b >> 3) & 1) & 0x3d4233dd) ^
+        (-((b >> 4) & 1) & 0x2a1462b3));
+}
+function prefixChk(prefix) {
+    let chk = 1;
+    for (let i = 0; i < prefix.length; ++i) {
+        const c = prefix.charCodeAt(i);
+        if (c < 33 || c > 126)
+            return 'Invalid prefix (' + prefix + ')';
+        chk = polymodStep(chk) ^ (c >> 5);
+    }
+    chk = polymodStep(chk);
+    for (let i = 0; i < prefix.length; ++i) {
+        const v = prefix.charCodeAt(i);
+        chk = polymodStep(chk) ^ (v & 0x1f);
+    }
+    return chk;
+}
+function convert(data, inBits, outBits, pad) {
+    let value = 0;
+    let bits = 0;
+    const maxV = (1 << outBits) - 1;
+    const result = [];
+    for (let i = 0; i < data.length; ++i) {
+        value = (value << inBits) | data[i];
+        bits += inBits;
+        while (bits >= outBits) {
+            bits -= outBits;
+            result.push((value >> bits) & maxV);
+        }
+    }
+    if (pad) {
+        if (bits > 0) {
+            result.push((value << (outBits - bits)) & maxV);
+        }
+    }
+    else {
+        if (bits >= inBits)
+            return 'Excess padding';
+        if ((value << (outBits - bits)) & maxV)
+            return 'Non-zero padding';
+    }
+    return result;
+}
+function toWords(bytes) {
+    return convert(bytes, 8, 5, true);
+}
+function fromWordsUnsafe(words) {
+    const res = convert(words, 5, 8, false);
+    if (Array.isArray(res))
+        return res;
+}
+function fromWords(words) {
+    const res = convert(words, 5, 8, false);
+    if (Array.isArray(res))
+        return res;
+    throw new Error(res);
+}
+function getLibraryFromEncoding(encoding) {
+    let ENCODING_CONST;
+    if (encoding === 'bech32') {
+        ENCODING_CONST = 1;
+    }
+    else {
+        ENCODING_CONST = 0x2bc830a3;
+    }
+    function encode(prefix, words, LIMIT) {
+        LIMIT = LIMIT || 90;
+        if (prefix.length + 7 + words.length > LIMIT)
+            throw new TypeError('Exceeds length limit');
+        prefix = prefix.toLowerCase();
+        // determine chk mod
+        let chk = prefixChk(prefix);
+        if (typeof chk === 'string')
+            throw new Error(chk);
+        let result = prefix + '1';
+        for (let i = 0; i < words.length; ++i) {
+            const x = words[i];
+            if (x >> 5 !== 0)
+                throw new Error('Non 5-bit word');
+            chk = polymodStep(chk) ^ x;
+            result += ALPHABET.charAt(x);
+        }
+        for (let i = 0; i < 6; ++i) {
+            chk = polymodStep(chk);
+        }
+        chk ^= ENCODING_CONST;
+        for (let i = 0; i < 6; ++i) {
+            const v = (chk >> ((5 - i) * 5)) & 0x1f;
+            result += ALPHABET.charAt(v);
+        }
+        return result;
+    }
+    function __decode(str, LIMIT) {
+        LIMIT = LIMIT || 90;
+        if (str.length < 8)
+            return str + ' too short';
+        if (str.length > LIMIT)
+            return 'Exceeds length limit';
+        // don't allow mixed case
+        const lowered = str.toLowerCase();
+        const uppered = str.toUpperCase();
+        if (str !== lowered && str !== uppered)
+            return 'Mixed-case string ' + str;
+        str = lowered;
+        const split = str.lastIndexOf('1');
+        if (split === -1)
+            return 'No separator character for ' + str;
+        if (split === 0)
+            return 'Missing prefix for ' + str;
+        const prefix = str.slice(0, split);
+        const wordChars = str.slice(split + 1);
+        if (wordChars.length < 6)
+            return 'Data too short';
+        let chk = prefixChk(prefix);
+        if (typeof chk === 'string')
+            return chk;
+        const words = [];
+        for (let i = 0; i < wordChars.length; ++i) {
+            const c = wordChars.charAt(i);
+            const v = ALPHABET_MAP[c];
+            if (v === undefined)
+                return 'Unknown character ' + c;
+            chk = polymodStep(chk) ^ v;
+            // not in the checksum?
+            if (i + 6 >= wordChars.length)
+                continue;
+            words.push(v);
+        }
+        if (chk !== ENCODING_CONST)
+            return 'Invalid checksum for ' + str;
+        return { prefix, words };
+    }
+    function decodeUnsafe(str, LIMIT) {
+        const res = __decode(str, LIMIT);
+        if (typeof res === 'object')
+            return res;
+    }
+    function decode(str, LIMIT) {
+        const res = __decode(str, LIMIT);
+        if (typeof res === 'object')
+            return res;
+        throw new Error(res);
+    }
+    return {
+        decodeUnsafe,
+        decode,
+        encode,
+        toWords,
+        fromWordsUnsafe,
+        fromWords,
+    };
+}
+exports.bech32 = getLibraryFromEncoding('bech32');
+exports.bech32m = getLibraryFromEncoding('bech32m');
+
+
+/***/ }),
+
+/***/ 3550:
+/***/ (function(module, __unused_webpack_exports, __webpack_require__) {
+
+/* module decorator */ module = __webpack_require__.nmd(module);
+(function (module, exports) {
+  'use strict';
+
+  // Utils
+  function assert (val, msg) {
+    if (!val) throw new Error(msg || 'Assertion failed');
+  }
+
+  // Could use `inherits` module, but don't want to move from single file
+  // architecture yet.
+  function inherits (ctor, superCtor) {
+    ctor.super_ = superCtor;
+    var TempCtor = function () {};
+    TempCtor.prototype = superCtor.prototype;
+    ctor.prototype = new TempCtor();
+    ctor.prototype.constructor = ctor;
+  }
+
+  // BN
+
+  function BN (number, base, endian) {
+    if (BN.isBN(number)) {
+      return number;
+    }
+
+    this.negative = 0;
+    this.words = null;
+    this.length = 0;
+
+    // Reduction context
+    this.red = null;
+
+    if (number !== null) {
+      if (base === 'le' || base === 'be') {
+        endian = base;
+        base = 10;
+      }
+
+      this._init(number || 0, base || 10, endian || 'be');
+    }
+  }
+  if (typeof module === 'object') {
+    module.exports = BN;
+  } else {
+    exports.BN = BN;
+  }
+
+  BN.BN = BN;
+  BN.wordSize = 26;
+
+  var Buffer;
+  try {
+    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
+      Buffer = window.Buffer;
+    } else {
+      Buffer = (__webpack_require__(6601).Buffer);
+    }
+  } catch (e) {
+  }
+
+  BN.isBN = function isBN (num) {
+    if (num instanceof BN) {
+      return true;
+    }
+
+    return num !== null && typeof num === 'object' &&
+      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
+  };
+
+  BN.max = function max (left, right) {
+    if (left.cmp(right) > 0) return left;
+    return right;
+  };
+
+  BN.min = function min (left, right) {
+    if (left.cmp(right) < 0) return left;
+    return right;
+  };
+
+  BN.prototype._init = function init (number, base, endian) {
+    if (typeof number === 'number') {
+      return this._initNumber(number, base, endian);
+    }
+
+    if (typeof number === 'object') {
+      return this._initArray(number, base, endian);
+    }
+
+    if (base === 'hex') {
+      base = 16;
+    }
+    assert(base === (base | 0) && base >= 2 && base <= 36);
+
+    number = number.toString().replace(/\s+/g, '');
+    var start = 0;
+    if (number[0] === '-') {
+      start++;
+      this.negative = 1;
+    }
+
+    if (start < number.length) {
+      if (base === 16) {
+        this._parseHex(number, start, endian);
+      } else {
+        this._parseBase(number, base, start);
+        if (endian === 'le') {
+          this._initArray(this.toArray(), base, endian);
+        }
+      }
+    }
+  };
+
+  BN.prototype._initNumber = function _initNumber (number, base, endian) {
+    if (number < 0) {
+      this.negative = 1;
+      number = -number;
+    }
+    if (number < 0x4000000) {
+      this.words = [ number & 0x3ffffff ];
+      this.length = 1;
+    } else if (number < 0x10000000000000) {
+      this.words = [
+        number & 0x3ffffff,
+        (number / 0x4000000) & 0x3ffffff
+      ];
+      this.length = 2;
+    } else {
+      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
+      this.words = [
+        number & 0x3ffffff,
+        (number / 0x4000000) & 0x3ffffff,
+        1
+      ];
+      this.length = 3;
+    }
+
+    if (endian !== 'le') return;
+
+    // Reverse the bytes
+    this._initArray(this.toArray(), base, endian);
+  };
+
+  BN.prototype._initArray = function _initArray (number, base, endian) {
+    // Perhaps a Uint8Array
+    assert(typeof number.length === 'number');
+    if (number.length <= 0) {
+      this.words = [ 0 ];
+      this.length = 1;
+      return this;
+    }
+
+    this.length = Math.ceil(number.length / 3);
+    this.words = new Array(this.length);
+    for (var i = 0; i < this.length; i++) {
+      this.words[i] = 0;
+    }
+
+    var j, w;
+    var off = 0;
+    if (endian === 'be') {
+      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
+        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
+        this.words[j] |= (w << off) & 0x3ffffff;
+        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
+        off += 24;
+        if (off >= 26) {
+          off -= 26;
+          j++;
+        }
+      }
+    } else if (endian === 'le') {
+      for (i = 0, j = 0; i < number.length; i += 3) {
+        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
+        this.words[j] |= (w << off) & 0x3ffffff;
+        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
+        off += 24;
+        if (off >= 26) {
+          off -= 26;
+          j++;
+        }
+      }
+    }
+    return this.strip();
+  };
+
+  function parseHex4Bits (string, index) {
+    var c = string.charCodeAt(index);
+    // 'A' - 'F'
+    if (c >= 65 && c <= 70) {
+      return c - 55;
+    // 'a' - 'f'
+    } else if (c >= 97 && c <= 102) {
+      return c - 87;
+    // '0' - '9'
+    } else {
+      return (c - 48) & 0xf;
+    }
+  }
+
+  function parseHexByte (string, lowerBound, index) {
+    var r = parseHex4Bits(string, index);
+    if (index - 1 >= lowerBound) {
+      r |= parseHex4Bits(string, index - 1) << 4;
+    }
+    return r;
+  }
+
+  BN.prototype._parseHex = function _parseHex (number, start, endian) {
+    // Create possibly bigger array to ensure that it fits the number
+    this.length = Math.ceil((number.length - start) / 6);
+    this.words = new Array(this.length);
+    for (var i = 0; i < this.length; i++) {
+      this.words[i] = 0;
+    }
+
+    // 24-bits chunks
+    var off = 0;
+    var j = 0;
+
+    var w;
+    if (endian === 'be') {
+      for (i = number.length - 1; i >= start; i -= 2) {
+        w = parseHexByte(number, start, i) << off;
+        this.words[j] |= w & 0x3ffffff;
+        if (off >= 18) {
+          off -= 18;
+          j += 1;
+          this.words[j] |= w >>> 26;
+        } else {
+          off += 8;
+        }
+      }
+    } else {
+      var parseLength = number.length - start;
+      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
+        w = parseHexByte(number, start, i) << off;
+        this.words[j] |= w & 0x3ffffff;
+        if (off >= 18) {
+          off -= 18;
+          j += 1;
+          this.words[j] |= w >>> 26;
+        } else {
+          off += 8;
+        }
+      }
+    }
+
+    this.strip();
+  };
+
+  function parseBase (str, start, end, mul) {
+    var r = 0;
+    var len = Math.min(str.length, end);
+    for (var i = start; i < len; i++) {
+      var c = str.charCodeAt(i) - 48;
+
+      r *= mul;
+
+      // 'a'
+      if (c >= 49) {
+        r += c - 49 + 0xa;
+
+      // 'A'
+      } else if (c >= 17) {
+        r += c - 17 + 0xa;
+
+      // '0' - '9'
+      } else {
+        r += c;
+      }
+    }
+    return r;
+  }
+
+  BN.prototype._parseBase = function _parseBase (number, base, start) {
+    // Initialize as zero
+    this.words = [ 0 ];
+    this.length = 1;
+
+    // Find length of limb in base
+    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
+      limbLen++;
+    }
+    limbLen--;
+    limbPow = (limbPow / base) | 0;
+
+    var total = number.length - start;
+    var mod = total % limbLen;
+    var end = Math.min(total, total - mod) + start;
+
+    var word = 0;
+    for (var i = start; i < end; i += limbLen) {
+      word = parseBase(number, i, i + limbLen, base);
+
+      this.imuln(limbPow);
+      if (this.words[0] + word < 0x4000000) {
+        this.words[0] += word;
+      } else {
+        this._iaddn(word);
+      }
+    }
+
+    if (mod !== 0) {
+      var pow = 1;
+      word = parseBase(number, i, number.length, base);
+
+      for (i = 0; i < mod; i++) {
+        pow *= base;
+      }
+
+      this.imuln(pow);
+      if (this.words[0] + word < 0x4000000) {
+        this.words[0] += word;
+      } else {
+        this._iaddn(word);
+      }
+    }
+
+    this.strip();
+  };
+
+  BN.prototype.copy = function copy (dest) {
+    dest.words = new Array(this.length);
+    for (var i = 0; i < this.length; i++) {
+      dest.words[i] = this.words[i];
+    }
+    dest.length = this.length;
+    dest.negative = this.negative;
+    dest.red = this.red;
+  };
+
+  BN.prototype.clone = function clone () {
+    var r = new BN(null);
+    this.copy(r);
+    return r;
+  };
+
+  BN.prototype._expand = function _expand (size) {
+    while (this.length < size) {
+      this.words[this.length++] = 0;
+    }
+    return this;
+  };
+
+  // Remove leading `0` from `this`
+  BN.prototype.strip = function strip () {
+    while (this.length > 1 && this.words[this.length - 1] === 0) {
+      this.length--;
+    }
+    return this._normSign();
+  };
+
+  BN.prototype._normSign = function _normSign () {
+    // -0 = 0
+    if (this.length === 1 && this.words[0] === 0) {
+      this.negative = 0;
+    }
+    return this;
+  };
+
+  BN.prototype.inspect = function inspect () {
+    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
+  };
+
+  /*
+
+  var zeros = [];
+  var groupSizes = [];
+  var groupBases = [];
+
+  var s = '';
+  var i = -1;
+  while (++i < BN.wordSize) {
+    zeros[i] = s;
+    s += '0';
+  }
+  groupSizes[0] = 0;
+  groupSizes[1] = 0;
+  groupBases[0] = 0;
+  groupBases[1] = 0;
+  var base = 2 - 1;
+  while (++base < 36 + 1) {
+    var groupSize = 0;
+    var groupBase = 1;
+    while (groupBase < (1 << BN.wordSize) / base) {
+      groupBase *= base;
+      groupSize += 1;
+    }
+    groupSizes[base] = groupSize;
+    groupBases[base] = groupBase;
+  }
+
+  */
+
+  var zeros = [
+    '',
+    '0',
+    '00',
+    '000',
+    '0000',
+    '00000',
+    '000000',
+    '0000000',
+    '00000000',
+    '000000000',
+    '0000000000',
+    '00000000000',
+    '000000000000',
+    '0000000000000',
+    '00000000000000',
+    '000000000000000',
+    '0000000000000000',
+    '00000000000000000',
+    '000000000000000000',
+    '0000000000000000000',
+    '00000000000000000000',
+    '000000000000000000000',
+    '0000000000000000000000',
+    '00000000000000000000000',
+    '000000000000000000000000',
+    '0000000000000000000000000'
+  ];
+
+  var groupSizes = [
+    0, 0,
+    25, 16, 12, 11, 10, 9, 8,
+    8, 7, 7, 7, 7, 6, 6,
+    6, 6, 6, 6, 6, 5, 5,
+    5, 5, 5, 5, 5, 5, 5,
+    5, 5, 5, 5, 5, 5, 5
+  ];
+
+  var groupBases = [
+    0, 0,
+    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
+    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
+    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
+    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
+    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
+  ];
+
+  BN.prototype.toString = function toString (base, padding) {
+    base = base || 10;
+    padding = padding | 0 || 1;
+
+    var out;
+    if (base === 16 || base === 'hex') {
+      out = '';
+      var off = 0;
+      var carry = 0;
+      for (var i = 0; i < this.length; i++) {
+        var w = this.words[i];
+        var word = (((w << off) | carry) & 0xffffff).toString(16);
+        carry = (w >>> (24 - off)) & 0xffffff;
+        if (carry !== 0 || i !== this.length - 1) {
+          out = zeros[6 - word.length] + word + out;
+        } else {
+          out = word + out;
+        }
+        off += 2;
+        if (off >= 26) {
+          off -= 26;
+          i--;
+        }
+      }
+      if (carry !== 0) {
+        out = carry.toString(16) + out;
+      }
+      while (out.length % padding !== 0) {
+        out = '0' + out;
+      }
+      if (this.negative !== 0) {
+        out = '-' + out;
+      }
+      return out;
+    }
+
+    if (base === (base | 0) && base >= 2 && base <= 36) {
+      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
+      var groupSize = groupSizes[base];
+      // var groupBase = Math.pow(base, groupSize);
+      var groupBase = groupBases[base];
+      out = '';
+      var c = this.clone();
+      c.negative = 0;
+      while (!c.isZero()) {
+        var r = c.modn(groupBase).toString(base);
+        c = c.idivn(groupBase);
+
+        if (!c.isZero()) {
+          out = zeros[groupSize - r.length] + r + out;
+        } else {
+          out = r + out;
+        }
+      }
+      if (this.isZero()) {
+        out = '0' + out;
+      }
+      while (out.length % padding !== 0) {
+        out = '0' + out;
+      }
+      if (this.negative !== 0) {
+        out = '-' + out;
+      }
+      return out;
+    }
+
+    assert(false, 'Base should be between 2 and 36');
+  };
+
+  BN.prototype.toNumber = function toNumber () {
+    var ret = this.words[0];
+    if (this.length === 2) {
+      ret += this.words[1] * 0x4000000;
+    } else if (this.length === 3 && this.words[2] === 0x01) {
+      // NOTE: at this stage it is known that the top bit is set
+      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
+    } else if (this.length > 2) {
+      assert(false, 'Number can only safely store up to 53 bits');
+    }
+    return (this.negative !== 0) ? -ret : ret;
+  };
+
+  BN.prototype.toJSON = function toJSON () {
+    return this.toString(16);
+  };
+
+  BN.prototype.toBuffer = function toBuffer (endian, length) {
+    assert(typeof Buffer !== 'undefined');
+    return this.toArrayLike(Buffer, endian, length);
+  };
+
+  BN.prototype.toArray = function toArray (endian, length) {
+    return this.toArrayLike(Array, endian, length);
+  };
+
+  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
+    var byteLength = this.byteLength();
+    var reqLength = length || Math.max(1, byteLength);
+    assert(byteLength <= reqLength, 'byte array longer than desired length');
+    assert(reqLength > 0, 'Requested array length <= 0');
+
+    this.strip();
+    var littleEndian = endian === 'le';
+    var res = new ArrayType(reqLength);
+
+    var b, i;
+    var q = this.clone();
+    if (!littleEndian) {
+      // Assume big-endian
+      for (i = 0; i < reqLength - byteLength; i++) {
+        res[i] = 0;
+      }
+
+      for (i = 0; !q.isZero(); i++) {
+        b = q.andln(0xff);
+        q.iushrn(8);
+
+        res[reqLength - i - 1] = b;
+      }
+    } else {
+      for (i = 0; !q.isZero(); i++) {
+        b = q.andln(0xff);
+        q.iushrn(8);
+
+        res[i] = b;
+      }
+
+      for (; i < reqLength; i++) {
+        res[i] = 0;
+      }
+    }
+
+    return res;
+  };
+
+  if (Math.clz32) {
+    BN.prototype._countBits = function _countBits (w) {
+      return 32 - Math.clz32(w);
+    };
+  } else {
+    BN.prototype._countBits = function _countBits (w) {
+      var t = w;
+      var r = 0;
+      if (t >= 0x1000) {
+        r += 13;
+        t >>>= 13;
+      }
+      if (t >= 0x40) {
+        r += 7;
+        t >>>= 7;
+      }
+      if (t >= 0x8) {
+        r += 4;
+        t >>>= 4;
+      }
+      if (t >= 0x02) {
+        r += 2;
+        t >>>= 2;
+      }
+      return r + t;
+    };
+  }
+
+  BN.prototype._zeroBits = function _zeroBits (w) {
+    // Short-cut
+    if (w === 0) return 26;
+
+    var t = w;
+    var r = 0;
+    if ((t & 0x1fff) === 0) {
+      r += 13;
+      t >>>= 13;
+    }
+    if ((t & 0x7f) === 0) {
+      r += 7;
+      t >>>= 7;
+    }
+    if ((t & 0xf) === 0) {
+      r += 4;
+      t >>>= 4;
+    }
+    if ((t & 0x3) === 0) {
+      r += 2;
+      t >>>= 2;
+    }
+    if ((t & 0x1) === 0) {
+      r++;
+    }
+    return r;
+  };
+
+  // Return number of used bits in a BN
+  BN.prototype.bitLength = function bitLength () {
+    var w = this.words[this.length - 1];
+    var hi = this._countBits(w);
+    return (this.length - 1) * 26 + hi;
+  };
+
+  function toBitArray (num) {
+    var w = new Array(num.bitLength());
+
+    for (var bit = 0; bit < w.length; bit++) {
+      var off = (bit / 26) | 0;
+      var wbit = bit % 26;
+
+      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
+    }
+
+    return w;
+  }
+
+  // Number of trailing zero bits
+  BN.prototype.zeroBits = function zeroBits () {
+    if (this.isZero()) return 0;
+
+    var r = 0;
+    for (var i = 0; i < this.length; i++) {
+      var b = this._zeroBits(this.words[i]);
+      r += b;
+      if (b !== 26) break;
+    }
+    return r;
+  };
+
+  BN.prototype.byteLength = function byteLength () {
+    return Math.ceil(this.bitLength() / 8);
+  };
+
+  BN.prototype.toTwos = function toTwos (width) {
+    if (this.negative !== 0) {
+      return this.abs().inotn(width).iaddn(1);
+    }
+    return this.clone();
+  };
+
+  BN.prototype.fromTwos = function fromTwos (width) {
+    if (this.testn(width - 1)) {
+      return this.notn(width).iaddn(1).ineg();
+    }
+    return this.clone();
+  };
+
+  BN.prototype.isNeg = function isNeg () {
+    return this.negative !== 0;
+  };
+
+  // Return negative clone of `this`
+  BN.prototype.neg = function neg () {
+    return this.clone().ineg();
+  };
+
+  BN.prototype.ineg = function ineg () {
+    if (!this.isZero()) {
+      this.negative ^= 1;
+    }
+
+    return this;
+  };
+
+  // Or `num` with `this` in-place
+  BN.prototype.iuor = function iuor (num) {
+    while (this.length < num.length) {
+      this.words[this.length++] = 0;
+    }
+
+    for (var i = 0; i < num.length; i++) {
+      this.words[i] = this.words[i] | num.words[i];
+    }
+
+    return this.strip();
+  };
+
+  BN.prototype.ior = function ior (num) {
+    assert((this.negative | num.negative) === 0);
+    return this.iuor(num);
+  };
+
+  // Or `num` with `this`
+  BN.prototype.or = function or (num) {
+    if (this.length > num.length) return this.clone().ior(num);
+    return num.clone().ior(this);
+  };
+
+  BN.prototype.uor = function uor (num) {
+    if (this.length > num.length) return this.clone().iuor(num);
+    return num.clone().iuor(this);
+  };
+
+  // And `num` with `this` in-place
+  BN.prototype.iuand = function iuand (num) {
+    // b = min-length(num, this)
+    var b;
+    if (this.length > num.length) {
+      b = num;
+    } else {
+      b = this;
+    }
+
+    for (var i = 0; i < b.length; i++) {
+      this.words[i] = this.words[i] & num.words[i];
+    }
+
+    this.length = b.length;
+
+    return this.strip();
+  };
+
+  BN.prototype.iand = function iand (num) {
+    assert((this.negative | num.negative) === 0);
+    return this.iuand(num);
+  };
+
+  // And `num` with `this`
+  BN.prototype.and = function and (num) {
+    if (this.length > num.length) return this.clone().iand(num);
+    return num.clone().iand(this);
+  };
+
+  BN.prototype.uand = function uand (num) {
+    if (this.length > num.length) return this.clone().iuand(num);
+    return num.clone().iuand(this);
+  };
+
+  // Xor `num` with `this` in-place
+  BN.prototype.iuxor = function iuxor (num) {
+    // a.length > b.length
+    var a;
+    var b;
+    if (this.length > num.length) {
+      a = this;
+      b = num;
+    } else {
+      a = num;
+      b = this;
+    }
+
+    for (var i = 0; i < b.length; i++) {
+      this.words[i] = a.words[i] ^ b.words[i];
+    }
+
+    if (this !== a) {
+      for (; i < a.length; i++) {
+        this.words[i] = a.words[i];
+      }
+    }
+
+    this.length = a.length;
+
+    return this.strip();
+  };
+
+  BN.prototype.ixor = function ixor (num) {
+    assert((this.negative | num.negative) === 0);
+    return this.iuxor(num);
+  };
+
+  // Xor `num` with `this`
+  BN.prototype.xor = function xor (num) {
+    if (this.length > num.length) return this.clone().ixor(num);
+    return num.clone().ixor(this);
+  };
+
+  BN.prototype.uxor = function uxor (num) {
+    if (this.length > num.length) return this.clone().iuxor(num);
+    return num.clone().iuxor(this);
+  };
+
+  // Not ``this`` with ``width`` bitwidth
+  BN.prototype.inotn = function inotn (width) {
+    assert(typeof width === 'number' && width >= 0);
+
+    var bytesNeeded = Math.ceil(width / 26) | 0;
+    var bitsLeft = width % 26;
+
+    // Extend the buffer with leading zeroes
+    this._expand(bytesNeeded);
+
+    if (bitsLeft > 0) {
+      bytesNeeded--;
+    }
+
+    // Handle complete words
+    for (var i = 0; i < bytesNeeded; i++) {
+      this.words[i] = ~this.words[i] & 0x3ffffff;
+    }
+
+    // Handle the residue
+    if (bitsLeft > 0) {
+      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
+    }
+
+    // And remove leading zeroes
+    return this.strip();
+  };
+
+  BN.prototype.notn = function notn (width) {
+    return this.clone().inotn(width);
+  };
+
+  // Set `bit` of `this`
+  BN.prototype.setn = function setn (bit, val) {
+    assert(typeof bit === 'number' && bit >= 0);
+
+    var off = (bit / 26) | 0;
+    var wbit = bit % 26;
+
+    this._expand(off + 1);
+
+    if (val) {
+      this.words[off] = this.words[off] | (1 << wbit);
+    } else {
+      this.words[off] = this.words[off] & ~(1 << wbit);
+    }
+
+    return this.strip();
+  };
+
+  // Add `num` to `this` in-place
+  BN.prototype.iadd = function iadd (num) {
+    var r;
+
+    // negative + positive
+    if (this.negative !== 0 && num.negative === 0) {
+      this.negative = 0;
+      r = this.isub(num);
+      this.negative ^= 1;
+      return this._normSign();
+
+    // positive + negative
+    } else if (this.negative === 0 && num.negative !== 0) {
+      num.negative = 0;
+      r = this.isub(num);
+      num.negative = 1;
+      return r._normSign();
+    }
+
+    // a.length > b.length
+    var a, b;
+    if (this.length > num.length) {
+      a = this;
+      b = num;
+    } else {
+      a = num;
+      b = this;
+    }
+
+    var carry = 0;
+    for (var i = 0; i < b.length; i++) {
+      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
+      this.words[i] = r & 0x3ffffff;
+      carry = r >>> 26;
+    }
+    for (; carry !== 0 && i < a.length; i++) {
+      r = (a.words[i] | 0) + carry;
+      this.words[i] = r & 0x3ffffff;
+      carry = r >>> 26;
+    }
+
+    this.length = a.length;
+    if (carry !== 0) {
+      this.words[this.length] = carry;
+      this.length++;
+    // Copy the rest of the words
+    } else if (a !== this) {
+      for (; i < a.length; i++) {
+        this.words[i] = a.words[i];
+      }
+    }
+
+    return this;
+  };
+
+  // Add `num` to `this`
+  BN.prototype.add = function add (num) {
+    var res;
+    if (num.negative !== 0 && this.negative === 0) {
+      num.negative = 0;
+      res = this.sub(num);
+      num.negative ^= 1;
+      return res;
+    } else if (num.negative === 0 && this.negative !== 0) {
+      this.negative = 0;
+      res = num.sub(this);
+      this.negative = 1;
+      return res;
+    }
+
+    if (this.length > num.length) return this.clone().iadd(num);
+
+    return num.clone().iadd(this);
+  };
+
+  // Subtract `num` from `this` in-place
+  BN.prototype.isub = function isub (num) {
+    // this - (-num) = this + num
+    if (num.negative !== 0) {
+      num.negative = 0;
+      var r = this.iadd(num);
+      num.negative = 1;
+      return r._normSign();
+
+    // -this - num = -(this + num)
+    } else if (this.negative !== 0) {
+      this.negative = 0;
+      this.iadd(num);
+      this.negative = 1;
+      return this._normSign();
+    }
+
+    // At this point both numbers are positive
+    var cmp = this.cmp(num);
+
+    // Optimization - zeroify
+    if (cmp === 0) {
+      this.negative = 0;
+      this.length = 1;
+      this.words[0] = 0;
+      return this;
+    }
+
+    // a > b
+    var a, b;
+    if (cmp > 0) {
+      a = this;
+      b = num;
+    } else {
+      a = num;
+      b = this;
+    }
+
+    var carry = 0;
+    for (var i = 0; i < b.length; i++) {
+      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
+      carry = r >> 26;
+      this.words[i] = r & 0x3ffffff;
+    }
+    for (; carry !== 0 && i < a.length; i++) {
+      r = (a.words[i] | 0) + carry;
+      carry = r >> 26;
+      this.words[i] = r & 0x3ffffff;
+    }
+
+    // Copy rest of the words
+    if (carry === 0 && i < a.length && a !== this) {
+      for (; i < a.length; i++) {
+        this.words[i] = a.words[i];
+      }
+    }
+
+    this.length = Math.max(this.length, i);
+
+    if (a !== this) {
+      this.negative = 1;
+    }
+
+    return this.strip();
+  };
+
+  // Subtract `num` from `this`
+  BN.prototype.sub = function sub (num) {
+    return this.clone().isub(num);
+  };
+
+  function smallMulTo (self, num, out) {
+    out.negative = num.negative ^ self.negative;
+    var len = (self.length + num.length) | 0;
+    out.length = len;
+    len = (len - 1) | 0;
+
+    // Peel one iteration (compiler can't do it, because of code complexity)
+    var a = self.words[0] | 0;
+    var b = num.words[0] | 0;
+    var r = a * b;
+
+    var lo = r & 0x3ffffff;
+    var carry = (r / 0x4000000) | 0;
+    out.words[0] = lo;
+
+    for (var k = 1; k < len; k++) {
+      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
+      // note that ncarry could be >= 0x3ffffff
+      var ncarry = carry >>> 26;
+      var rword = carry & 0x3ffffff;
+      var maxJ = Math.min(k, num.length - 1);
+      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
+        var i = (k - j) | 0;
+        a = self.words[i] | 0;
+        b = num.words[j] | 0;
+        r = a * b + rword;
+        ncarry += (r / 0x4000000) | 0;
+        rword = r & 0x3ffffff;
+      }
+      out.words[k] = rword | 0;
+      carry = ncarry | 0;
+    }
+    if (carry !== 0) {
+      out.words[k] = carry | 0;
+    } else {
+      out.length--;
+    }
+
+    return out.strip();
+  }
+
+  // TODO(indutny): it may be reasonable to omit it for users who don't need
+  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
+  // multiplication (like elliptic secp256k1).
+  var comb10MulTo = function comb10MulTo (self, num, out) {
+    var a = self.words;
+    var b = num.words;
+    var o = out.words;
+    var c = 0;
+    var lo;
+    var mid;
+    var hi;
+    var a0 = a[0] | 0;
+    var al0 = a0 & 0x1fff;
+    var ah0 = a0 >>> 13;
+    var a1 = a[1] | 0;
+    var al1 = a1 & 0x1fff;
+    var ah1 = a1 >>> 13;
+    var a2 = a[2] | 0;
+    var al2 = a2 & 0x1fff;
+    var ah2 = a2 >>> 13;
+    var a3 = a[3] | 0;
+    var al3 = a3 & 0x1fff;
+    var ah3 = a3 >>> 13;
+    var a4 = a[4] | 0;
+    var al4 = a4 & 0x1fff;
+    var ah4 = a4 >>> 13;
+    var a5 = a[5] | 0;
+    var al5 = a5 & 0x1fff;
+    var ah5 = a5 >>> 13;
+    var a6 = a[6] | 0;
+    var al6 = a6 & 0x1fff;
+    var ah6 = a6 >>> 13;
+    var a7 = a[7] | 0;
+    var al7 = a7 & 0x1fff;
+    var ah7 = a7 >>> 13;
+    var a8 = a[8] | 0;
+    var al8 = a8 & 0x1fff;
+    var ah8 = a8 >>> 13;
+    var a9 = a[9] | 0;
+    var al9 = a9 & 0x1fff;
+    var ah9 = a9 >>> 13;
+    var b0 = b[0] | 0;
+    var bl0 = b0 & 0x1fff;
+    var bh0 = b0 >>> 13;
+    var b1 = b[1] | 0;
+    var bl1 = b1 & 0x1fff;
+    var bh1 = b1 >>> 13;
+    var b2 = b[2] | 0;
+    var bl2 = b2 & 0x1fff;
+    var bh2 = b2 >>> 13;
+    var b3 = b[3] | 0;
+    var bl3 = b3 & 0x1fff;
+    var bh3 = b3 >>> 13;
+    var b4 = b[4] | 0;
+    var bl4 = b4 & 0x1fff;
+    var bh4 = b4 >>> 13;
+    var b5 = b[5] | 0;
+    var bl5 = b5 & 0x1fff;
+    var bh5 = b5 >>> 13;
+    var b6 = b[6] | 0;
+    var bl6 = b6 & 0x1fff;
+    var bh6 = b6 >>> 13;
+    var b7 = b[7] | 0;
+    var bl7 = b7 & 0x1fff;
+    var bh7 = b7 >>> 13;
+    var b8 = b[8] | 0;
+    var bl8 = b8 & 0x1fff;
+    var bh8 = b8 >>> 13;
+    var b9 = b[9] | 0;
+    var bl9 = b9 & 0x1fff;
+    var bh9 = b9 >>> 13;
+
+    out.negative = self.negative ^ num.negative;
+    out.length = 19;
+    /* k = 0 */
+    lo = Math.imul(al0, bl0);
+    mid = Math.imul(al0, bh0);
+    mid = (mid + Math.imul(ah0, bl0)) | 0;
+    hi = Math.imul(ah0, bh0);
+    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
+    w0 &= 0x3ffffff;
+    /* k = 1 */
+    lo = Math.imul(al1, bl0);
+    mid = Math.imul(al1, bh0);
+    mid = (mid + Math.imul(ah1, bl0)) | 0;
+    hi = Math.imul(ah1, bh0);
+    lo = (lo + Math.imul(al0, bl1)) | 0;
+    mid = (mid + Math.imul(al0, bh1)) | 0;
+    mid = (mid + Math.imul(ah0, bl1)) | 0;
+    hi = (hi + Math.imul(ah0, bh1)) | 0;
+    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
+    w1 &= 0x3ffffff;
+    /* k = 2 */
+    lo = Math.imul(al2, bl0);
+    mid = Math.imul(al2, bh0);
+    mid = (mid + Math.imul(ah2, bl0)) | 0;
+    hi = Math.imul(ah2, bh0);
+    lo = (lo + Math.imul(al1, bl1)) | 0;
+    mid = (mid + Math.imul(al1, bh1)) | 0;
+    mid = (mid + Math.imul(ah1, bl1)) | 0;
+    hi = (hi + Math.imul(ah1, bh1)) | 0;
+    lo = (lo + Math.imul(al0, bl2)) | 0;
+    mid = (mid + Math.imul(al0, bh2)) | 0;
+    mid = (mid + Math.imul(ah0, bl2)) | 0;
+    hi = (hi + Math.imul(ah0, bh2)) | 0;
+    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
+    w2 &= 0x3ffffff;
+    /* k = 3 */
+    lo = Math.imul(al3, bl0);
+    mid = Math.imul(al3, bh0);
+    mid = (mid + Math.imul(ah3, bl0)) | 0;
+    hi = Math.imul(ah3, bh0);
+    lo = (lo + Math.imul(al2, bl1)) | 0;
+    mid = (mid + Math.imul(al2, bh1)) | 0;
+    mid = (mid + Math.imul(ah2, bl1)) | 0;
+    hi = (hi + Math.imul(ah2, bh1)) | 0;
+    lo = (lo + Math.imul(al1, bl2)) | 0;
+    mid = (mid + Math.imul(al1, bh2)) | 0;
+    mid = (mid + Math.imul(ah1, bl2)) | 0;
+    hi = (hi + Math.imul(ah1, bh2)) | 0;
+    lo = (lo + Math.imul(al0, bl3)) | 0;
+    mid = (mid + Math.imul(al0, bh3)) | 0;
+    mid = (mid + Math.imul(ah0, bl3)) | 0;
+    hi = (hi + Math.imul(ah0, bh3)) | 0;
+    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
+    w3 &= 0x3ffffff;
+    /* k = 4 */
+    lo = Math.imul(al4, bl0);
+    mid = Math.imul(al4, bh0);
+    mid = (mid + Math.imul(ah4, bl0)) | 0;
+    hi = Math.imul(ah4, bh0);
+    lo = (lo + Math.imul(al3, bl1)) | 0;
+    mid = (mid + Math.imul(al3, bh1)) | 0;
+    mid = (mid + Math.imul(ah3, bl1)) | 0;
+    hi = (hi + Math.imul(ah3, bh1)) | 0;
+    lo = (lo + Math.imul(al2, bl2)) | 0;
+    mid = (mid + Math.imul(al2, bh2)) | 0;
+    mid = (mid + Math.imul(ah2, bl2)) | 0;
+    hi = (hi + Math.imul(ah2, bh2)) | 0;
+    lo = (lo + Math.imul(al1, bl3)) | 0;
+    mid = (mid + Math.imul(al1, bh3)) | 0;
+    mid = (mid + Math.imul(ah1, bl3)) | 0;
+    hi = (hi + Math.imul(ah1, bh3)) | 0;
+    lo = (lo + Math.imul(al0, bl4)) | 0;
+    mid = (mid + Math.imul(al0, bh4)) | 0;
+    mid = (mid + Math.imul(ah0, bl4)) | 0;
+    hi = (hi + Math.imul(ah0, bh4)) | 0;
+    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
+    w4 &= 0x3ffffff;
+    /* k = 5 */
+    lo = Math.imul(al5, bl0);
+    mid = Math.imul(al5, bh0);
+    mid = (mid + Math.imul(ah5, bl0)) | 0;
+    hi = Math.imul(ah5, bh0);
+    lo = (lo + Math.imul(al4, bl1)) | 0;
+    mid = (mid + Math.imul(al4, bh1)) | 0;
+    mid = (mid + Math.imul(ah4, bl1)) | 0;
+    hi = (hi + Math.imul(ah4, bh1)) | 0;
+    lo = (lo + Math.imul(al3, bl2)) | 0;
+    mid = (mid + Math.imul(al3, bh2)) | 0;
+    mid = (mid + Math.imul(ah3, bl2)) | 0;
+    hi = (hi + Math.imul(ah3, bh2)) | 0;
+    lo = (lo + Math.imul(al2, bl3)) | 0;
+    mid = (mid + Math.imul(al2, bh3)) | 0;
+    mid = (mid + Math.imul(ah2, bl3)) | 0;
+    hi = (hi + Math.imul(ah2, bh3)) | 0;
+    lo = (lo + Math.imul(al1, bl4)) | 0;
+    mid = (mid + Math.imul(al1, bh4)) | 0;
+    mid = (mid + Math.imul(ah1, bl4)) | 0;
+    hi = (hi + Math.imul(ah1, bh4)) | 0;
+    lo = (lo + Math.imul(al0, bl5)) | 0;
+    mid = (mid + Math.imul(al0, bh5)) | 0;
+    mid = (mid + Math.imul(ah0, bl5)) | 0;
+    hi = (hi + Math.imul(ah0, bh5)) | 0;
+    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
+    w5 &= 0x3ffffff;
+    /* k = 6 */
+    lo = Math.imul(al6, bl0);
+    mid = Math.imul(al6, bh0);
+    mid = (mid + Math.imul(ah6, bl0)) | 0;
+    hi = Math.imul(ah6, bh0);
+    lo = (lo + Math.imul(al5, bl1)) | 0;
+    mid = (mid + Math.imul(al5, bh1)) | 0;
+    mid = (mid + Math.imul(ah5, bl1)) | 0;
+    hi = (hi + Math.imul(ah5, bh1)) | 0;
+    lo = (lo + Math.imul(al4, bl2)) | 0;
+    mid = (mid + Math.imul(al4, bh2)) | 0;
+    mid = (mid + Math.imul(ah4, bl2)) | 0;
+    hi = (hi + Math.imul(ah4, bh2)) | 0;
+    lo = (lo + Math.imul(al3, bl3)) | 0;
+    mid = (mid + Math.imul(al3, bh3)) | 0;
+    mid = (mid + Math.imul(ah3, bl3)) | 0;
+    hi = (hi + Math.imul(ah3, bh3)) | 0;
+    lo = (lo + Math.imul(al2, bl4)) | 0;
+    mid = (mid + Math.imul(al2, bh4)) | 0;
+    mid = (mid + Math.imul(ah2, bl4)) | 0;
+    hi = (hi + Math.imul(ah2, bh4)) | 0;
+    lo = (lo + Math.imul(al1, bl5)) | 0;
+    mid = (mid + Math.imul(al1, bh5)) | 0;
+    mid = (mid + Math.imul(ah1, bl5)) | 0;
+    hi = (hi + Math.imul(ah1, bh5)) | 0;
+    lo = (lo + Math.imul(al0, bl6)) | 0;
+    mid = (mid + Math.imul(al0, bh6)) | 0;
+    mid = (mid + Math.imul(ah0, bl6)) | 0;
+    hi = (hi + Math.imul(ah0, bh6)) | 0;
+    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
+    w6 &= 0x3ffffff;
+    /* k = 7 */
+    lo = Math.imul(al7, bl0);
+    mid = Math.imul(al7, bh0);
+    mid = (mid + Math.imul(ah7, bl0)) | 0;
+    hi = Math.imul(ah7, bh0);
+    lo = (lo + Math.imul(al6, bl1)) | 0;
+    mid = (mid + Math.imul(al6, bh1)) | 0;
+    mid = (mid + Math.imul(ah6, bl1)) | 0;
+    hi = (hi + Math.imul(ah6, bh1)) | 0;
+    lo = (lo + Math.imul(al5, bl2)) | 0;
+    mid = (mid + Math.imul(al5, bh2)) | 0;
+    mid = (mid + Math.imul(ah5, bl2)) | 0;
+    hi = (hi + Math.imul(ah5, bh2)) | 0;
+    lo = (lo + Math.imul(al4, bl3)) | 0;
+    mid = (mid + Math.imul(al4, bh3)) | 0;
+    mid = (mid + Math.imul(ah4, bl3)) | 0;
+    hi = (hi + Math.imul(ah4, bh3)) | 0;
+    lo = (lo + Math.imul(al3, bl4)) | 0;
+    mid = (mid + Math.imul(al3, bh4)) | 0;
+    mid = (mid + Math.imul(ah3, bl4)) | 0;
+    hi = (hi + Math.imul(ah3, bh4)) | 0;
+    lo = (lo + Math.imul(al2, bl5)) | 0;
+    mid = (mid + Math.imul(al2, bh5)) | 0;
+    mid = (mid + Math.imul(ah2, bl5)) | 0;
+    hi = (hi + Math.imul(ah2, bh5)) | 0;
+    lo = (lo + Math.imul(al1, bl6)) | 0;
+    mid = (mid + Math.imul(al1, bh6)) | 0;
+    mid = (mid + Math.imul(ah1, bl6)) | 0;
+    hi = (hi + Math.imul(ah1, bh6)) | 0;
+    lo = (lo + Math.imul(al0, bl7)) | 0;
+    mid = (mid + Math.imul(al0, bh7)) | 0;
+    mid = (mid + Math.imul(ah0, bl7)) | 0;
+    hi = (hi + Math.imul(ah0, bh7)) | 0;
+    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
+    w7 &= 0x3ffffff;
+    /* k = 8 */
+    lo = Math.imul(al8, bl0);
+    mid = Math.imul(al8, bh0);
+    mid = (mid + Math.imul(ah8, bl0)) | 0;
+    hi = Math.imul(ah8, bh0);
+    lo = (lo + Math.imul(al7, bl1)) | 0;
+    mid = (mid + Math.imul(al7, bh1)) | 0;
+    mid = (mid + Math.imul(ah7, bl1)) | 0;
+    hi = (hi + Math.imul(ah7, bh1)) | 0;
+    lo = (lo + Math.imul(al6, bl2)) | 0;
+    mid = (mid + Math.imul(al6, bh2)) | 0;
+    mid = (mid + Math.imul(ah6, bl2)) | 0;
+    hi = (hi + Math.imul(ah6, bh2)) | 0;
+    lo = (lo + Math.imul(al5, bl3)) | 0;
+    mid = (mid + Math.imul(al5, bh3)) | 0;
+    mid = (mid + Math.imul(ah5, bl3)) | 0;
+    hi = (hi + Math.imul(ah5, bh3)) | 0;
+    lo = (lo + Math.imul(al4, bl4)) | 0;
+    mid = (mid + Math.imul(al4, bh4)) | 0;
+    mid = (mid + Math.imul(ah4, bl4)) | 0;
+    hi = (hi + Math.imul(ah4, bh4)) | 0;
+    lo = (lo + Math.imul(al3, bl5)) | 0;
+    mid = (mid + Math.imul(al3, bh5)) | 0;
+    mid = (mid + Math.imul(ah3, bl5)) | 0;
+    hi = (hi + Math.imul(ah3, bh5)) | 0;
+    lo = (lo + Math.imul(al2, bl6)) | 0;
+    mid = (mid + Math.imul(al2, bh6)) | 0;
+    mid = (mid + Math.imul(ah2, bl6)) | 0;
+    hi = (hi + Math.imul(ah2, bh6)) | 0;
+    lo = (lo + Math.imul(al1, bl7)) | 0;
+    mid = (mid + Math.imul(al1, bh7)) | 0;
+    mid = (mid + Math.imul(ah1, bl7)) | 0;
+    hi = (hi + Math.imul(ah1, bh7)) | 0;
+    lo = (lo + Math.imul(al0, bl8)) | 0;
+    mid = (mid + Math.imul(al0, bh8)) | 0;
+    mid = (mid + Math.imul(ah0, bl8)) | 0;
+    hi = (hi + Math.imul(ah0, bh8)) | 0;
+    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
+    w8 &= 0x3ffffff;
+    /* k = 9 */
+    lo = Math.imul(al9, bl0);
+    mid = Math.imul(al9, bh0);
+    mid = (mid + Math.imul(ah9, bl0)) | 0;
+    hi = Math.imul(ah9, bh0);
+    lo = (lo + Math.imul(al8, bl1)) | 0;
+    mid = (mid + Math.imul(al8, bh1)) | 0;
+    mid = (mid + Math.imul(ah8, bl1)) | 0;
+    hi = (hi + Math.imul(ah8, bh1)) | 0;
+    lo = (lo + Math.imul(al7, bl2)) | 0;
+    mid = (mid + Math.imul(al7, bh2)) | 0;
+    mid = (mid + Math.imul(ah7, bl2)) | 0;
+    hi = (hi + Math.imul(ah7, bh2)) | 0;
+    lo = (lo + Math.imul(al6, bl3)) | 0;
+    mid = (mid + Math.imul(al6, bh3)) | 0;
+    mid = (mid + Math.imul(ah6, bl3)) | 0;
+    hi = (hi + Math.imul(ah6, bh3)) | 0;
+    lo = (lo + Math.imul(al5, bl4)) | 0;
+    mid = (mid + Math.imul(al5, bh4)) | 0;
+    mid = (mid + Math.imul(ah5, bl4)) | 0;
+    hi = (hi + Math.imul(ah5, bh4)) | 0;
+    lo = (lo + Math.imul(al4, bl5)) | 0;
+    mid = (mid + Math.imul(al4, bh5)) | 0;
+    mid = (mid + Math.imul(ah4, bl5)) | 0;
+    hi = (hi + Math.imul(ah4, bh5)) | 0;
+    lo = (lo + Math.imul(al3, bl6)) | 0;
+    mid = (mid + Math.imul(al3, bh6)) | 0;
+    mid = (mid + Math.imul(ah3, bl6)) | 0;
+    hi = (hi + Math.imul(ah3, bh6)) | 0;
+    lo = (lo + Math.imul(al2, bl7)) | 0;
+    mid = (mid + Math.imul(al2, bh7)) | 0;
+    mid = (mid + Math.imul(ah2, bl7)) | 0;
+    hi = (hi + Math.imul(ah2, bh7)) | 0;
+    lo = (lo + Math.imul(al1, bl8)) | 0;
+    mid = (mid + Math.imul(al1, bh8)) | 0;
+    mid = (mid + Math.imul(ah1, bl8)) | 0;
+    hi = (hi + Math.imul(ah1, bh8)) | 0;
+    lo = (lo + Math.imul(al0, bl9)) | 0;
+    mid = (mid + Math.imul(al0, bh9)) | 0;
+    mid = (mid + Math.imul(ah0, bl9)) | 0;
+    hi = (hi + Math.imul(ah0, bh9)) | 0;
+    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
+    w9 &= 0x3ffffff;
+    /* k = 10 */
+    lo = Math.imul(al9, bl1);
+    mid = Math.imul(al9, bh1);
+    mid = (mid + Math.imul(ah9, bl1)) | 0;
+    hi = Math.imul(ah9, bh1);
+    lo = (lo + Math.imul(al8, bl2)) | 0;
+    mid = (mid + Math.imul(al8, bh2)) | 0;
+    mid = (mid + Math.imul(ah8, bl2)) | 0;
+    hi = (hi + Math.imul(ah8, bh2)) | 0;
+    lo = (lo + Math.imul(al7, bl3)) | 0;
+    mid = (mid + Math.imul(al7, bh3)) | 0;
+    mid = (mid + Math.imul(ah7, bl3)) | 0;
+    hi = (hi + Math.imul(ah7, bh3)) | 0;
+    lo = (lo + Math.imul(al6, bl4)) | 0;
+    mid = (mid + Math.imul(al6, bh4)) | 0;
+    mid = (mid + Math.imul(ah6, bl4)) | 0;
+    hi = (hi + Math.imul(ah6, bh4)) | 0;
+    lo = (lo + Math.imul(al5, bl5)) | 0;
+    mid = (mid + Math.imul(al5, bh5)) | 0;
+    mid = (mid + Math.imul(ah5, bl5)) | 0;
+    hi = (hi + Math.imul(ah5, bh5)) | 0;
+    lo = (lo + Math.imul(al4, bl6)) | 0;
+    mid = (mid + Math.imul(al4, bh6)) | 0;
+    mid = (mid + Math.imul(ah4, bl6)) | 0;
+    hi = (hi + Math.imul(ah4, bh6)) | 0;
+    lo = (lo + Math.imul(al3, bl7)) | 0;
+    mid = (mid + Math.imul(al3, bh7)) | 0;
+    mid = (mid + Math.imul(ah3, bl7)) | 0;
+    hi = (hi + Math.imul(ah3, bh7)) | 0;
+    lo = (lo + Math.imul(al2, bl8)) | 0;
+    mid = (mid + Math.imul(al2, bh8)) | 0;
+    mid = (mid + Math.imul(ah2, bl8)) | 0;
+    hi = (hi + Math.imul(ah2, bh8)) | 0;
+    lo = (lo + Math.imul(al1, bl9)) | 0;
+    mid = (mid + Math.imul(al1, bh9)) | 0;
+    mid = (mid + Math.imul(ah1, bl9)) | 0;
+    hi = (hi + Math.imul(ah1, bh9)) | 0;
+    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
+    w10 &= 0x3ffffff;
+    /* k = 11 */
+    lo = Math.imul(al9, bl2);
+    mid = Math.imul(al9, bh2);
+    mid = (mid + Math.imul(ah9, bl2)) | 0;
+    hi = Math.imul(ah9, bh2);
+    lo = (lo + Math.imul(al8, bl3)) | 0;
+    mid = (mid + Math.imul(al8, bh3)) | 0;
+    mid = (mid + Math.imul(ah8, bl3)) | 0;
+    hi = (hi + Math.imul(ah8, bh3)) | 0;
+    lo = (lo + Math.imul(al7, bl4)) | 0;
+    mid = (mid + Math.imul(al7, bh4)) | 0;
+    mid = (mid + Math.imul(ah7, bl4)) | 0;
+    hi = (hi + Math.imul(ah7, bh4)) | 0;
+    lo = (lo + Math.imul(al6, bl5)) | 0;
+    mid = (mid + Math.imul(al6, bh5)) | 0;
+    mid = (mid + Math.imul(ah6, bl5)) | 0;
+    hi = (hi + Math.imul(ah6, bh5)) | 0;
+    lo = (lo + Math.imul(al5, bl6)) | 0;
+    mid = (mid + Math.imul(al5, bh6)) | 0;
+    mid = (mid + Math.imul(ah5, bl6)) | 0;
+    hi = (hi + Math.imul(ah5, bh6)) | 0;
+    lo = (lo + Math.imul(al4, bl7)) | 0;
+    mid = (mid + Math.imul(al4, bh7)) | 0;
+    mid = (mid + Math.imul(ah4, bl7)) | 0;
+    hi = (hi + Math.imul(ah4, bh7)) | 0;
+    lo = (lo + Math.imul(al3, bl8)) | 0;
+    mid = (mid + Math.imul(al3, bh8)) | 0;
+    mid = (mid + Math.imul(ah3, bl8)) | 0;
+    hi = (hi + Math.imul(ah3, bh8)) | 0;
+    lo = (lo + Math.imul(al2, bl9)) | 0;
+    mid = (mid + Math.imul(al2, bh9)) | 0;
+    mid = (mid + Math.imul(ah2, bl9)) | 0;
+    hi = (hi + Math.imul(ah2, bh9)) | 0;
+    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
+    w11 &= 0x3ffffff;
+    /* k = 12 */
+    lo = Math.imul(al9, bl3);
+    mid = Math.imul(al9, bh3);
+    mid = (mid + Math.imul(ah9, bl3)) | 0;
+    hi = Math.imul(ah9, bh3);
+    lo = (lo + Math.imul(al8, bl4)) | 0;
+    mid = (mid + Math.imul(al8, bh4)) | 0;
+    mid = (mid + Math.imul(ah8, bl4)) | 0;
+    hi = (hi + Math.imul(ah8, bh4)) | 0;
+    lo = (lo + Math.imul(al7, bl5)) | 0;
+    mid = (mid + Math.imul(al7, bh5)) | 0;
+    mid = (mid + Math.imul(ah7, bl5)) | 0;
+    hi = (hi + Math.imul(ah7, bh5)) | 0;
+    lo = (lo + Math.imul(al6, bl6)) | 0;
+    mid = (mid + Math.imul(al6, bh6)) | 0;
+    mid = (mid + Math.imul(ah6, bl6)) | 0;
+    hi = (hi + Math.imul(ah6, bh6)) | 0;
+    lo = (lo + Math.imul(al5, bl7)) | 0;
+    mid = (mid + Math.imul(al5, bh7)) | 0;
+    mid = (mid + Math.imul(ah5, bl7)) | 0;
+    hi = (hi + Math.imul(ah5, bh7)) | 0;
+    lo = (lo + Math.imul(al4, bl8)) | 0;
+    mid = (mid + Math.imul(al4, bh8)) | 0;
+    mid = (mid + Math.imul(ah4, bl8)) | 0;
+    hi = (hi + Math.imul(ah4, bh8)) | 0;
+    lo = (lo + Math.imul(al3, bl9)) | 0;
+    mid = (mid + Math.imul(al3, bh9)) | 0;
+    mid = (mid + Math.imul(ah3, bl9)) | 0;
+    hi = (hi + Math.imul(ah3, bh9)) | 0;
+    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
+    w12 &= 0x3ffffff;
+    /* k = 13 */
+    lo = Math.imul(al9, bl4);
+    mid = Math.imul(al9, bh4);
+    mid = (mid + Math.imul(ah9, bl4)) | 0;
+    hi = Math.imul(ah9, bh4);
+    lo = (lo + Math.imul(al8, bl5)) | 0;
+    mid = (mid + Math.imul(al8, bh5)) | 0;
+    mid = (mid + Math.imul(ah8, bl5)) | 0;
+    hi = (hi + Math.imul(ah8, bh5)) | 0;
+    lo = (lo + Math.imul(al7, bl6)) | 0;
+    mid = (mid + Math.imul(al7, bh6)) | 0;
+    mid = (mid + Math.imul(ah7, bl6)) | 0;
+    hi = (hi + Math.imul(ah7, bh6)) | 0;
+    lo = (lo + Math.imul(al6, bl7)) | 0;
+    mid = (mid + Math.imul(al6, bh7)) | 0;
+    mid = (mid + Math.imul(ah6, bl7)) | 0;
+    hi = (hi + Math.imul(ah6, bh7)) | 0;
+    lo = (lo + Math.imul(al5, bl8)) | 0;
+    mid = (mid + Math.imul(al5, bh8)) | 0;
+    mid = (mid + Math.imul(ah5, bl8)) | 0;
+    hi = (hi + Math.imul(ah5, bh8)) | 0;
+    lo = (lo + Math.imul(al4, bl9)) | 0;
+    mid = (mid + Math.imul(al4, bh9)) | 0;
+    mid = (mid + Math.imul(ah4, bl9)) | 0;
+    hi = (hi + Math.imul(ah4, bh9)) | 0;
+    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
+    w13 &= 0x3ffffff;
+    /* k = 14 */
+    lo = Math.imul(al9, bl5);
+    mid = Math.imul(al9, bh5);
+    mid = (mid + Math.imul(ah9, bl5)) | 0;
+    hi = Math.imul(ah9, bh5);
+    lo = (lo + Math.imul(al8, bl6)) | 0;
+    mid = (mid + Math.imul(al8, bh6)) | 0;
+    mid = (mid + Math.imul(ah8, bl6)) | 0;
+    hi = (hi + Math.imul(ah8, bh6)) | 0;
+    lo = (lo + Math.imul(al7, bl7)) | 0;
+    mid = (mid + Math.imul(al7, bh7)) | 0;
+    mid = (mid + Math.imul(ah7, bl7)) | 0;
+    hi = (hi + Math.imul(ah7, bh7)) | 0;
+    lo = (lo + Math.imul(al6, bl8)) | 0;
+    mid = (mid + Math.imul(al6, bh8)) | 0;
+    mid = (mid + Math.imul(ah6, bl8)) | 0;
+    hi = (hi + Math.imul(ah6, bh8)) | 0;
+    lo = (lo + Math.imul(al5, bl9)) | 0;
+    mid = (mid + Math.imul(al5, bh9)) | 0;
+    mid = (mid + Math.imul(ah5, bl9)) | 0;
+    hi = (hi + Math.imul(ah5, bh9)) | 0;
+    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
+    w14 &= 0x3ffffff;
+    /* k = 15 */
+    lo = Math.imul(al9, bl6);
+    mid = Math.imul(al9, bh6);
+    mid = (mid + Math.imul(ah9, bl6)) | 0;
+    hi = Math.imul(ah9, bh6);
+    lo = (lo + Math.imul(al8, bl7)) | 0;
+    mid = (mid + Math.imul(al8, bh7)) | 0;
+    mid = (mid + Math.imul(ah8, bl7)) | 0;
+    hi = (hi + Math.imul(ah8, bh7)) | 0;
+    lo = (lo + Math.imul(al7, bl8)) | 0;
+    mid = (mid + Math.imul(al7, bh8)) | 0;
+    mid = (mid + Math.imul(ah7, bl8)) | 0;
+    hi = (hi + Math.imul(ah7, bh8)) | 0;
+    lo = (lo + Math.imul(al6, bl9)) | 0;
+    mid = (mid + Math.imul(al6, bh9)) | 0;
+    mid = (mid + Math.imul(ah6, bl9)) | 0;
+    hi = (hi + Math.imul(ah6, bh9)) | 0;
+    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
+    w15 &= 0x3ffffff;
+    /* k = 16 */
+    lo = Math.imul(al9, bl7);
+    mid = Math.imul(al9, bh7);
+    mid = (mid + Math.imul(ah9, bl7)) | 0;
+    hi = Math.imul(ah9, bh7);
+    lo = (lo + Math.imul(al8, bl8)) | 0;
+    mid = (mid + Math.imul(al8, bh8)) | 0;
+    mid = (mid + Math.imul(ah8, bl8)) | 0;
+    hi = (hi + Math.imul(ah8, bh8)) | 0;
+    lo = (lo + Math.imul(al7, bl9)) | 0;
+    mid = (mid + Math.imul(al7, bh9)) | 0;
+    mid = (mid + Math.imul(ah7, bl9)) | 0;
+    hi = (hi + Math.imul(ah7, bh9)) | 0;
+    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
+    w16 &= 0x3ffffff;
+    /* k = 17 */
+    lo = Math.imul(al9, bl8);
+    mid = Math.imul(al9, bh8);
+    mid = (mid + Math.imul(ah9, bl8)) | 0;
+    hi = Math.imul(ah9, bh8);
+    lo = (lo + Math.imul(al8, bl9)) | 0;
+    mid = (mid + Math.imul(al8, bh9)) | 0;
+    mid = (mid + Math.imul(ah8, bl9)) | 0;
+    hi = (hi + Math.imul(ah8, bh9)) | 0;
+    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
+    w17 &= 0x3ffffff;
+    /* k = 18 */
+    lo = Math.imul(al9, bl9);
+    mid = Math.imul(al9, bh9);
+    mid = (mid + Math.imul(ah9, bl9)) | 0;
+    hi = Math.imul(ah9, bh9);
+    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
+    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
+    w18 &= 0x3ffffff;
+    o[0] = w0;
+    o[1] = w1;
+    o[2] = w2;
+    o[3] = w3;
+    o[4] = w4;
+    o[5] = w5;
+    o[6] = w6;
+    o[7] = w7;
+    o[8] = w8;
+    o[9] = w9;
+    o[10] = w10;
+    o[11] = w11;
+    o[12] = w12;
+    o[13] = w13;
+    o[14] = w14;
+    o[15] = w15;
+    o[16] = w16;
+    o[17] = w17;
+    o[18] = w18;
+    if (c !== 0) {
+      o[19] = c;
+      out.length++;
+    }
+    return out;
+  };
+
+  // Polyfill comb
+  if (!Math.imul) {
+    comb10MulTo = smallMulTo;
+  }
+
+  function bigMulTo (self, num, out) {
+    out.negative = num.negative ^ self.negative;
+    out.length = self.length + num.length;
+
+    var carry = 0;
+    var hncarry = 0;
+    for (var k = 0; k < out.length - 1; k++) {
+      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
+      // note that ncarry could be >= 0x3ffffff
+      var ncarry = hncarry;
+      hncarry = 0;
+      var rword = carry & 0x3ffffff;
+      var maxJ = Math.min(k, num.length - 1);
+      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
+        var i = k - j;
+        var a = self.words[i] | 0;
+        var b = num.words[j] | 0;
+        var r = a * b;
+
+        var lo = r & 0x3ffffff;
+        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
+        lo = (lo + rword) | 0;
+        rword = lo & 0x3ffffff;
+        ncarry = (ncarry + (lo >>> 26)) | 0;
+
+        hncarry += ncarry >>> 26;
+        ncarry &= 0x3ffffff;
+      }
+      out.words[k] = rword;
+      carry = ncarry;
+      ncarry = hncarry;
+    }
+    if (carry !== 0) {
+      out.words[k] = carry;
+    } else {
+      out.length--;
+    }
+
+    return out.strip();
+  }
+
+  function jumboMulTo (self, num, out) {
+    var fftm = new FFTM();
+    return fftm.mulp(self, num, out);
+  }
+
+  BN.prototype.mulTo = function mulTo (num, out) {
+    var res;
+    var len = this.length + num.length;
+    if (this.length === 10 && num.length === 10) {
+      res = comb10MulTo(this, num, out);
+    } else if (len < 63) {
+      res = smallMulTo(this, num, out);
+    } else if (len < 1024) {
+      res = bigMulTo(this, num, out);
+    } else {
+      res = jumboMulTo(this, num, out);
+    }
+
+    return res;
+  };
+
+  // Cooley-Tukey algorithm for FFT
+  // slightly revisited to rely on looping instead of recursion
+
+  function FFTM (x, y) {
+    this.x = x;
+    this.y = y;
+  }
+
+  FFTM.prototype.makeRBT = function makeRBT (N) {
+    var t = new Array(N);
+    var l = BN.prototype._countBits(N) - 1;
+    for (var i = 0; i < N; i++) {
+      t[i] = this.revBin(i, l, N);
+    }
+
+    return t;
+  };
+
+  // Returns binary-reversed representation of `x`
+  FFTM.prototype.revBin = function revBin (x, l, N) {
+    if (x === 0 || x === N - 1) return x;
+
+    var rb = 0;
+    for (var i = 0; i < l; i++) {
+      rb |= (x & 1) << (l - i - 1);
+      x >>= 1;
+    }
+
+    return rb;
+  };
+
+  // Performs "tweedling" phase, therefore 'emulating'
+  // behaviour of the recursive algorithm
+  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
+    for (var i = 0; i < N; i++) {
+      rtws[i] = rws[rbt[i]];
+      itws[i] = iws[rbt[i]];
+    }
+  };
+
+  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
+    this.permute(rbt, rws, iws, rtws, itws, N);
+
+    for (var s = 1; s < N; s <<= 1) {
+      var l = s << 1;
+
+      var rtwdf = Math.cos(2 * Math.PI / l);
+      var itwdf = Math.sin(2 * Math.PI / l);
+
+      for (var p = 0; p < N; p += l) {
+        var rtwdf_ = rtwdf;
+        var itwdf_ = itwdf;
+
+        for (var j = 0; j < s; j++) {
+          var re = rtws[p + j];
+          var ie = itws[p + j];
+
+          var ro = rtws[p + j + s];
+          var io = itws[p + j + s];
+
+          var rx = rtwdf_ * ro - itwdf_ * io;
+
+          io = rtwdf_ * io + itwdf_ * ro;
+          ro = rx;
+
+          rtws[p + j] = re + ro;
+          itws[p + j] = ie + io;
+
+          rtws[p + j + s] = re - ro;
+          itws[p + j + s] = ie - io;
+
+          /* jshint maxdepth : false */
+          if (j !== l) {
+            rx = rtwdf * rtwdf_ - itwdf * itwdf_;
+
+            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
+            rtwdf_ = rx;
+          }
+        }
+      }
+    }
+  };
+
+  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
+    var N = Math.max(m, n) | 1;
+    var odd = N & 1;
+    var i = 0;
+    for (N = N / 2 | 0; N; N = N >>> 1) {
+      i++;
+    }
+
+    return 1 << i + 1 + odd;
+  };
+
+  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
+    if (N <= 1) return;
+
+    for (var i = 0; i < N / 2; i++) {
+      var t = rws[i];
+
+      rws[i] = rws[N - i - 1];
+      rws[N - i - 1] = t;
+
+      t = iws[i];
+
+      iws[i] = -iws[N - i - 1];
+      iws[N - i - 1] = -t;
+    }
+  };
+
+  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
+    var carry = 0;
+    for (var i = 0; i < N / 2; i++) {
+      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
+        Math.round(ws[2 * i] / N) +
+        carry;
+
+      ws[i] = w & 0x3ffffff;
+
+      if (w < 0x4000000) {
+        carry = 0;
+      } else {
+        carry = w / 0x4000000 | 0;
+      }
+    }
+
+    return ws;
+  };
+
+  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
+    var carry = 0;
+    for (var i = 0; i < len; i++) {
+      carry = carry + (ws[i] | 0);
+
+      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
+      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
+    }
+
+    // Pad with zeroes
+    for (i = 2 * len; i < N; ++i) {
+      rws[i] = 0;
+    }
+
+    assert(carry === 0);
+    assert((carry & ~0x1fff) === 0);
+  };
+
+  FFTM.prototype.stub = function stub (N) {
+    var ph = new Array(N);
+    for (var i = 0; i < N; i++) {
+      ph[i] = 0;
+    }
+
+    return ph;
+  };
+
+  FFTM.prototype.mulp = function mulp (x, y, out) {
+    var N = 2 * this.guessLen13b(x.length, y.length);
+
+    var rbt = this.makeRBT(N);
+
+    var _ = this.stub(N);
+
+    var rws = new Array(N);
+    var rwst = new Array(N);
+    var iwst = new Array(N);
+
+    var nrws = new Array(N);
+    var nrwst = new Array(N);
+    var niwst = new Array(N);
+
+    var rmws = out.words;
+    rmws.length = N;
+
+    this.convert13b(x.words, x.length, rws, N);
+    this.convert13b(y.words, y.length, nrws, N);
+
+    this.transform(rws, _, rwst, iwst, N, rbt);
+    this.transform(nrws, _, nrwst, niwst, N, rbt);
+
+    for (var i = 0; i < N; i++) {
+      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
+      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
+      rwst[i] = rx;
+    }
+
+    this.conjugate(rwst, iwst, N);
+    this.transform(rwst, iwst, rmws, _, N, rbt);
+    this.conjugate(rmws, _, N);
+    this.normalize13b(rmws, N);
+
+    out.negative = x.negative ^ y.negative;
+    out.length = x.length + y.length;
+    return out.strip();
+  };
+
+  // Multiply `this` by `num`
+  BN.prototype.mul = function mul (num) {
+    var out = new BN(null);
+    out.words = new Array(this.length + num.length);
+    return this.mulTo(num, out);
+  };
+
+  // Multiply employing FFT
+  BN.prototype.mulf = function mulf (num) {
+    var out = new BN(null);
+    out.words = new Array(this.length + num.length);
+    return jumboMulTo(this, num, out);
+  };
+
+  // In-place Multiplication
+  BN.prototype.imul = function imul (num) {
+    return this.clone().mulTo(num, this);
+  };
+
+  BN.prototype.imuln = function imuln (num) {
+    assert(typeof num === 'number');
+    assert(num < 0x4000000);
+
+    // Carry
+    var carry = 0;
+    for (var i = 0; i < this.length; i++) {
+      var w = (this.words[i] | 0) * num;
+      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
+      carry >>= 26;
+      carry += (w / 0x4000000) | 0;
+      // NOTE: lo is 27bit maximum
+      carry += lo >>> 26;
+      this.words[i] = lo & 0x3ffffff;
+    }
+
+    if (carry !== 0) {
+      this.words[i] = carry;
+      this.length++;
+    }
+
+    return this;
+  };
+
+  BN.prototype.muln = function muln (num) {
+    return this.clone().imuln(num);
+  };
+
+  // `this` * `this`
+  BN.prototype.sqr = function sqr () {
+    return this.mul(this);
+  };
+
+  // `this` * `this` in-place
+  BN.prototype.isqr = function isqr () {
+    return this.imul(this.clone());
+  };
+
+  // Math.pow(`this`, `num`)
+  BN.prototype.pow = function pow (num) {
+    var w = toBitArray(num);
+    if (w.length === 0) return new BN(1);
+
+    // Skip leading zeroes
+    var res = this;
+    for (var i = 0; i < w.length; i++, res = res.sqr()) {
+      if (w[i] !== 0) break;
+    }
+
+    if (++i < w.length) {
+      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
+        if (w[i] === 0) continue;
+
+        res = res.mul(q);
+      }
+    }
+
+    return res;
+  };
+
+  // Shift-left in-place
+  BN.prototype.iushln = function iushln (bits) {
+    assert(typeof bits === 'number' && bits >= 0);
+    var r = bits % 26;
+    var s = (bits - r) / 26;
+    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
+    var i;
+
+    if (r !== 0) {
+      var carry = 0;
+
+      for (i = 0; i < this.length; i++) {
+        var newCarry = this.words[i] & carryMask;
+        var c = ((this.words[i] | 0) - newCarry) << r;
+        this.words[i] = c | carry;
+        carry = newCarry >>> (26 - r);
+      }
+
+      if (carry) {
+        this.words[i] = carry;
+        this.length++;
+      }
+    }
+
+    if (s !== 0) {
+      for (i = this.length - 1; i >= 0; i--) {
+        this.words[i + s] = this.words[i];
+      }
+
+      for (i = 0; i < s; i++) {
+        this.words[i] = 0;
+      }
+
+      this.length += s;
+    }
+
+    return this.strip();
+  };
+
+  BN.prototype.ishln = function ishln (bits) {
+    // TODO(indutny): implement me
+    assert(this.negative === 0);
+    return this.iushln(bits);
+  };
+
+  // Shift-right in-place
+  // NOTE: `hint` is a lowest bit before trailing zeroes
+  // NOTE: if `extended` is present - it will be filled with destroyed bits
+  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
+    assert(typeof bits === 'number' && bits >= 0);
+    var h;
+    if (hint) {
+      h = (hint - (hint % 26)) / 26;
+    } else {
+      h = 0;
+    }
+
+    var r = bits % 26;
+    var s = Math.min((bits - r) / 26, this.length);
+    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
+    var maskedWords = extended;
+
+    h -= s;
+    h = Math.max(0, h);
+
+    // Extended mode, copy masked part
+    if (maskedWords) {
+      for (var i = 0; i < s; i++) {
+        maskedWords.words[i] = this.words[i];
+      }
+      maskedWords.length = s;
+    }
+
+    if (s === 0) {
+      // No-op, we should not move anything at all
+    } else if (this.length > s) {
+      this.length -= s;
+      for (i = 0; i < this.length; i++) {
+        this.words[i] = this.words[i + s];
+      }
+    } else {
+      this.words[0] = 0;
+      this.length = 1;
+    }
+
+    var carry = 0;
+    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
+      var word = this.words[i] | 0;
+      this.words[i] = (carry << (26 - r)) | (word >>> r);
+      carry = word & mask;
+    }
+
+    // Push carried bits as a mask
+    if (maskedWords && carry !== 0) {
+      maskedWords.words[maskedWords.length++] = carry;
+    }
+
+    if (this.length === 0) {
+      this.words[0] = 0;
+      this.length = 1;
+    }
+
+    return this.strip();
+  };
+
+  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
+    // TODO(indutny): implement me
+    assert(this.negative === 0);
+    return this.iushrn(bits, hint, extended);
+  };
+
+  // Shift-left
+  BN.prototype.shln = function shln (bits) {
+    return this.clone().ishln(bits);
+  };
+
+  BN.prototype.ushln = function ushln (bits) {
+    return this.clone().iushln(bits);
+  };
+
+  // Shift-right
+  BN.prototype.shrn = function shrn (bits) {
+    return this.clone().ishrn(bits);
+  };
+
+  BN.prototype.ushrn = function ushrn (bits) {
+    return this.clone().iushrn(bits);
+  };
+
+  // Test if n bit is set
+  BN.prototype.testn = function testn (bit) {
+    assert(typeof bit === 'number' && bit >= 0);
+    var r = bit % 26;
+    var s = (bit - r) / 26;
+    var q = 1 << r;
+
+    // Fast case: bit is much higher than all existing words
+    if (this.length <= s) return false;
+
+    // Check bit and return
+    var w = this.words[s];
+
+    return !!(w & q);
+  };
+
+  // Return only lowers bits of number (in-place)
+  BN.prototype.imaskn = function imaskn (bits) {
+    assert(typeof bits === 'number' && bits >= 0);
+    var r = bits % 26;
+    var s = (bits - r) / 26;
+
+    assert(this.negative === 0, 'imaskn works only with positive numbers');
+
+    if (this.length <= s) {
+      return this;
+    }
+
+    if (r !== 0) {
+      s++;
+    }
+    this.length = Math.min(s, this.length);
+
+    if (r !== 0) {
+      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
+      this.words[this.length - 1] &= mask;
+    }
+
+    return this.strip();
+  };
+
+  // Return only lowers bits of number
+  BN.prototype.maskn = function maskn (bits) {
+    return this.clone().imaskn(bits);
+  };
+
+  // Add plain number `num` to `this`
+  BN.prototype.iaddn = function iaddn (num) {
+    assert(typeof num === 'number');
+    assert(num < 0x4000000);
+    if (num < 0) return this.isubn(-num);
+
+    // Possible sign change
+    if (this.negative !== 0) {
+      if (this.length === 1 && (this.words[0] | 0) < num) {
+        this.words[0] = num - (this.words[0] | 0);
+        this.negative = 0;
+        return this;
+      }
+
+      this.negative = 0;
+      this.isubn(num);
+      this.negative = 1;
+      return this;
+    }
+
+    // Add without checks
+    return this._iaddn(num);
+  };
+
+  BN.prototype._iaddn = function _iaddn (num) {
+    this.words[0] += num;
+
+    // Carry
+    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
+      this.words[i] -= 0x4000000;
+      if (i === this.length - 1) {
+        this.words[i + 1] = 1;
+      } else {
+        this.words[i + 1]++;
+      }
+    }
+    this.length = Math.max(this.length, i + 1);
+
+    return this;
+  };
+
+  // Subtract plain number `num` from `this`
+  BN.prototype.isubn = function isubn (num) {
+    assert(typeof num === 'number');
+    assert(num < 0x4000000);
+    if (num < 0) return this.iaddn(-num);
+
+    if (this.negative !== 0) {
+      this.negative = 0;
+      this.iaddn(num);
+      this.negative = 1;
+      return this;
+    }
+
+    this.words[0] -= num;
+
+    if (this.length === 1 && this.words[0] < 0) {
+      this.words[0] = -this.words[0];
+      this.negative = 1;
+    } else {
+      // Carry
+      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
+        this.words[i] += 0x4000000;
+        this.words[i + 1] -= 1;
+      }
+    }
+
+    return this.strip();
+  };
+
+  BN.prototype.addn = function addn (num) {
+    return this.clone().iaddn(num);
+  };
+
+  BN.prototype.subn = function subn (num) {
+    return this.clone().isubn(num);
+  };
+
+  BN.prototype.iabs = function iabs () {
+    this.negative = 0;
+
+    return this;
+  };
+
+  BN.prototype.abs = function abs () {
+    return this.clone().iabs();
+  };
+
+  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
+    var len = num.length + shift;
+    var i;
+
+    this._expand(len);
+
+    var w;
+    var carry = 0;
+    for (i = 0; i < num.length; i++) {
+      w = (this.words[i + shift] | 0) + carry;
+      var right = (num.words[i] | 0) * mul;
+      w -= right & 0x3ffffff;
+      carry = (w >> 26) - ((right / 0x4000000) | 0);
+      this.words[i + shift] = w & 0x3ffffff;
+    }
+    for (; i < this.length - shift; i++) {
+      w = (this.words[i + shift] | 0) + carry;
+      carry = w >> 26;
+      this.words[i + shift] = w & 0x3ffffff;
+    }
+
+    if (carry === 0) return this.strip();
+
+    // Subtraction overflow
+    assert(carry === -1);
+    carry = 0;
+    for (i = 0; i < this.length; i++) {
+      w = -(this.words[i] | 0) + carry;
+      carry = w >> 26;
+      this.words[i] = w & 0x3ffffff;
+    }
+    this.negative = 1;
+
+    return this.strip();
+  };
+
+  BN.prototype._wordDiv = function _wordDiv (num, mode) {
+    var shift = this.length - num.length;
+
+    var a = this.clone();
+    var b = num;
+
+    // Normalize
+    var bhi = b.words[b.length - 1] | 0;
+    var bhiBits = this._countBits(bhi);
+    shift = 26 - bhiBits;
+    if (shift !== 0) {
+      b = b.ushln(shift);
+      a.iushln(shift);
+      bhi = b.words[b.length - 1] | 0;
+    }
+
+    // Initialize quotient
+    var m = a.length - b.length;
+    var q;
+
+    if (mode !== 'mod') {
+      q = new BN(null);
+      q.length = m + 1;
+      q.words = new Array(q.length);
+      for (var i = 0; i < q.length; i++) {
+        q.words[i] = 0;
+      }
+    }
+
+    var diff = a.clone()._ishlnsubmul(b, 1, m);
+    if (diff.negative === 0) {
+      a = diff;
+      if (q) {
+        q.words[m] = 1;
+      }
+    }
+
+    for (var j = m - 1; j >= 0; j--) {
+      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
+        (a.words[b.length + j - 1] | 0);
+
+      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
+      // (0x7ffffff)
+      qj = Math.min((qj / bhi) | 0, 0x3ffffff);
+
+      a._ishlnsubmul(b, qj, j);
+      while (a.negative !== 0) {
+        qj--;
+        a.negative = 0;
+        a._ishlnsubmul(b, 1, j);
+        if (!a.isZero()) {
+          a.negative ^= 1;
+        }
+      }
+      if (q) {
+        q.words[j] = qj;
+      }
+    }
+    if (q) {
+      q.strip();
+    }
+    a.strip();
+
+    // Denormalize
+    if (mode !== 'div' && shift !== 0) {
+      a.iushrn(shift);
+    }
+
+    return {
+      div: q || null,
+      mod: a
+    };
+  };
+
+  // NOTE: 1) `mode` can be set to `mod` to request mod only,
+  //       to `div` to request div only, or be absent to
+  //       request both div & mod
+  //       2) `positive` is true if unsigned mod is requested
+  BN.prototype.divmod = function divmod (num, mode, positive) {
+    assert(!num.isZero());
+
+    if (this.isZero()) {
+      return {
+        div: new BN(0),
+        mod: new BN(0)
+      };
+    }
+
+    var div, mod, res;
+    if (this.negative !== 0 && num.negative === 0) {
+      res = this.neg().divmod(num, mode);
+
+      if (mode !== 'mod') {
+        div = res.div.neg();
+      }
+
+      if (mode !== 'div') {
+        mod = res.mod.neg();
+        if (positive && mod.negative !== 0) {
+          mod.iadd(num);
+        }
+      }
+
+      return {
+        div: div,
+        mod: mod
+      };
+    }
+
+    if (this.negative === 0 && num.negative !== 0) {
+      res = this.divmod(num.neg(), mode);
+
+      if (mode !== 'mod') {
+        div = res.div.neg();
+      }
+
+      return {
+        div: div,
+        mod: res.mod
+      };
+    }
+
+    if ((this.negative & num.negative) !== 0) {
+      res = this.neg().divmod(num.neg(), mode);
+
+      if (mode !== 'div') {
+        mod = res.mod.neg();
+        if (positive && mod.negative !== 0) {
+          mod.isub(num);
+        }
+      }
+
+      return {
+        div: res.div,
+        mod: mod
+      };
+    }
+
+    // Both numbers are positive at this point
+
+    // Strip both numbers to approximate shift value
+    if (num.length > this.length || this.cmp(num) < 0) {
+      return {
+        div: new BN(0),
+        mod: this
+      };
+    }
+
+    // Very short reduction
+    if (num.length === 1) {
+      if (mode === 'div') {
+        return {
+          div: this.divn(num.words[0]),
+          mod: null
+        };
+      }
+
+      if (mode === 'mod') {
+        return {
+          div: null,
+          mod: new BN(this.modn(num.words[0]))
+        };
+      }
+
+      return {
+        div: this.divn(num.words[0]),
+        mod: new BN(this.modn(num.words[0]))
+      };
+    }
+
+    return this._wordDiv(num, mode);
+  };
+
+  // Find `this` / `num`
+  BN.prototype.div = function div (num) {
+    return this.divmod(num, 'div', false).div;
+  };
+
+  // Find `this` % `num`
+  BN.prototype.mod = function mod (num) {
+    return this.divmod(num, 'mod', false).mod;
+  };
+
+  BN.prototype.umod = function umod (num) {
+    return this.divmod(num, 'mod', true).mod;
+  };
+
+  // Find Round(`this` / `num`)
+  BN.prototype.divRound = function divRound (num) {
+    var dm = this.divmod(num);
+
+    // Fast case - exact division
+    if (dm.mod.isZero()) return dm.div;
+
+    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
+
+    var half = num.ushrn(1);
+    var r2 = num.andln(1);
+    var cmp = mod.cmp(half);
+
+    // Round down
+    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
+
+    // Round up
+    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
+  };
+
+  BN.prototype.modn = function modn (num) {
+    assert(num <= 0x3ffffff);
+    var p = (1 << 26) % num;
+
+    var acc = 0;
+    for (var i = this.length - 1; i >= 0; i--) {
+      acc = (p * acc + (this.words[i] | 0)) % num;
+    }
+
+    return acc;
+  };
+
+  // In-place division by number
+  BN.prototype.idivn = function idivn (num) {
+    assert(num <= 0x3ffffff);
+
+    var carry = 0;
+    for (var i = this.length - 1; i >= 0; i--) {
+      var w = (this.words[i] | 0) + carry * 0x4000000;
+      this.words[i] = (w / num) | 0;
+      carry = w % num;
+    }
+
+    return this.strip();
+  };
+
+  BN.prototype.divn = function divn (num) {
+    return this.clone().idivn(num);
+  };
+
+  BN.prototype.egcd = function egcd (p) {
+    assert(p.negative === 0);
+    assert(!p.isZero());
+
+    var x = this;
+    var y = p.clone();
+
+    if (x.negative !== 0) {
+      x = x.umod(p);
+    } else {
+      x = x.clone();
+    }
+
+    // A * x + B * y = x
+    var A = new BN(1);
+    var B = new BN(0);
+
+    // C * x + D * y = y
+    var C = new BN(0);
+    var D = new BN(1);
+
+    var g = 0;
+
+    while (x.isEven() && y.isEven()) {
+      x.iushrn(1);
+      y.iushrn(1);
+      ++g;
+    }
+
+    var yp = y.clone();
+    var xp = x.clone();
+
+    while (!x.isZero()) {
+      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
+      if (i > 0) {
+        x.iushrn(i);
+        while (i-- > 0) {
+          if (A.isOdd() || B.isOdd()) {
+            A.iadd(yp);
+            B.isub(xp);
+          }
+
+          A.iushrn(1);
+          B.iushrn(1);
+        }
+      }
+
+      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
+      if (j > 0) {
+        y.iushrn(j);
+        while (j-- > 0) {
+          if (C.isOdd() || D.isOdd()) {
+            C.iadd(yp);
+            D.isub(xp);
+          }
+
+          C.iushrn(1);
+          D.iushrn(1);
+        }
+      }
+
+      if (x.cmp(y) >= 0) {
+        x.isub(y);
+        A.isub(C);
+        B.isub(D);
+      } else {
+        y.isub(x);
+        C.isub(A);
+        D.isub(B);
+      }
+    }
+
+    return {
+      a: C,
+      b: D,
+      gcd: y.iushln(g)
+    };
+  };
+
+  // This is reduced incarnation of the binary EEA
+  // above, designated to invert members of the
+  // _prime_ fields F(p) at a maximal speed
+  BN.prototype._invmp = function _invmp (p) {
+    assert(p.negative === 0);
+    assert(!p.isZero());
+
+    var a = this;
+    var b = p.clone();
+
+    if (a.negative !== 0) {
+      a = a.umod(p);
+    } else {
+      a = a.clone();
+    }
+
+    var x1 = new BN(1);
+    var x2 = new BN(0);
+
+    var delta = b.clone();
+
+    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
+      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
+      if (i > 0) {
+        a.iushrn(i);
+        while (i-- > 0) {
+          if (x1.isOdd()) {
+            x1.iadd(delta);
+          }
+
+          x1.iushrn(1);
+        }
+      }
+
+      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
+      if (j > 0) {
+        b.iushrn(j);
+        while (j-- > 0) {
+          if (x2.isOdd()) {
+            x2.iadd(delta);
+          }
+
+          x2.iushrn(1);
+        }
+      }
+
+      if (a.cmp(b) >= 0) {
+        a.isub(b);
+        x1.isub(x2);
+      } else {
+        b.isub(a);
+        x2.isub(x1);
+      }
+    }
+
+    var res;
+    if (a.cmpn(1) === 0) {
+      res = x1;
+    } else {
+      res = x2;
+    }
+
+    if (res.cmpn(0) < 0) {
+      res.iadd(p);
+    }
+
+    return res;
+  };
+
+  BN.prototype.gcd = function gcd (num) {
+    if (this.isZero()) return num.abs();
+    if (num.isZero()) return this.abs();
+
+    var a = this.clone();
+    var b = num.clone();
+    a.negative = 0;
+    b.negative = 0;
+
+    // Remove common factor of two
+    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
+      a.iushrn(1);
+      b.iushrn(1);
+    }
+
+    do {
+      while (a.isEven()) {
+        a.iushrn(1);
+      }
+      while (b.isEven()) {
+        b.iushrn(1);
+      }
+
+      var r = a.cmp(b);
+      if (r < 0) {
+        // Swap `a` and `b` to make `a` always bigger than `b`
+        var t = a;
+        a = b;
+        b = t;
+      } else if (r === 0 || b.cmpn(1) === 0) {
+        break;
+      }
+
+      a.isub(b);
+    } while (true);
+
+    return b.iushln(shift);
+  };
+
+  // Invert number in the field F(num)
+  BN.prototype.invm = function invm (num) {
+    return this.egcd(num).a.umod(num);
+  };
+
+  BN.prototype.isEven = function isEven () {
+    return (this.words[0] & 1) === 0;
+  };
+
+  BN.prototype.isOdd = function isOdd () {
+    return (this.words[0] & 1) === 1;
+  };
+
+  // And first word and num
+  BN.prototype.andln = function andln (num) {
+    return this.words[0] & num;
+  };
+
+  // Increment at the bit position in-line
+  BN.prototype.bincn = function bincn (bit) {
+    assert(typeof bit === 'number');
+    var r = bit % 26;
+    var s = (bit - r) / 26;
+    var q = 1 << r;
+
+    // Fast case: bit is much higher than all existing words
+    if (this.length <= s) {
+      this._expand(s + 1);
+      this.words[s] |= q;
+      return this;
+    }
+
+    // Add bit and propagate, if needed
+    var carry = q;
+    for (var i = s; carry !== 0 && i < this.length; i++) {
+      var w = this.words[i] | 0;
+      w += carry;
+      carry = w >>> 26;
+      w &= 0x3ffffff;
+      this.words[i] = w;
+    }
+    if (carry !== 0) {
+      this.words[i] = carry;
+      this.length++;
+    }
+    return this;
+  };
+
+  BN.prototype.isZero = function isZero () {
+    return this.length === 1 && this.words[0] === 0;
+  };
+
+  BN.prototype.cmpn = function cmpn (num) {
+    var negative = num < 0;
+
+    if (this.negative !== 0 && !negative) return -1;
+    if (this.negative === 0 && negative) return 1;
+
+    this.strip();
+
+    var res;
+    if (this.length > 1) {
+      res = 1;
+    } else {
+      if (negative) {
+        num = -num;
+      }
+
+      assert(num <= 0x3ffffff, 'Number is too big');
+
+      var w = this.words[0] | 0;
+      res = w === num ? 0 : w < num ? -1 : 1;
+    }
+    if (this.negative !== 0) return -res | 0;
+    return res;
+  };
+
+  // Compare two numbers and return:
+  // 1 - if `this` > `num`
+  // 0 - if `this` == `num`
+  // -1 - if `this` < `num`
+  BN.prototype.cmp = function cmp (num) {
+    if (this.negative !== 0 && num.negative === 0) return -1;
+    if (this.negative === 0 && num.negative !== 0) return 1;
+
+    var res = this.ucmp(num);
+    if (this.negative !== 0) return -res | 0;
+    return res;
+  };
+
+  // Unsigned comparison
+  BN.prototype.ucmp = function ucmp (num) {
+    // At this point both numbers have the same sign
+    if (this.length > num.length) return 1;
+    if (this.length < num.length) return -1;
+
+    var res = 0;
+    for (var i = this.length - 1; i >= 0; i--) {
+      var a = this.words[i] | 0;
+      var b = num.words[i] | 0;
+
+      if (a === b) continue;
+      if (a < b) {
+        res = -1;
+      } else if (a > b) {
+        res = 1;
+      }
+      break;
+    }
+    return res;
+  };
+
+  BN.prototype.gtn = function gtn (num) {
+    return this.cmpn(num) === 1;
+  };
+
+  BN.prototype.gt = function gt (num) {
+    return this.cmp(num) === 1;
+  };
+
+  BN.prototype.gten = function gten (num) {
+    return this.cmpn(num) >= 0;
+  };
+
+  BN.prototype.gte = function gte (num) {
+    return this.cmp(num) >= 0;
+  };
+
+  BN.prototype.ltn = function ltn (num) {
+    return this.cmpn(num) === -1;
+  };
+
+  BN.prototype.lt = function lt (num) {
+    return this.cmp(num) === -1;
+  };
+
+  BN.prototype.lten = function lten (num) {
+    return this.cmpn(num) <= 0;
+  };
+
+  BN.prototype.lte = function lte (num) {
+    return this.cmp(num) <= 0;
+  };
+
+  BN.prototype.eqn = function eqn (num) {
+    return this.cmpn(num) === 0;
+  };
+
+  BN.prototype.eq = function eq (num) {
+    return this.cmp(num) === 0;
+  };
+
+  //
+  // A reduce context, could be using montgomery or something better, depending
+  // on the `m` itself.
+  //
+  BN.red = function red (num) {
+    return new Red(num);
+  };
+
+  BN.prototype.toRed = function toRed (ctx) {
+    assert(!this.red, 'Already a number in reduction context');
+    assert(this.negative === 0, 'red works only with positives');
+    return ctx.convertTo(this)._forceRed(ctx);
+  };
+
+  BN.prototype.fromRed = function fromRed () {
+    assert(this.red, 'fromRed works only with numbers in reduction context');
+    return this.red.convertFrom(this);
+  };
+
+  BN.prototype._forceRed = function _forceRed (ctx) {
+    this.red = ctx;
+    return this;
+  };
+
+  BN.prototype.forceRed = function forceRed (ctx) {
+    assert(!this.red, 'Already a number in reduction context');
+    return this._forceRed(ctx);
+  };
+
+  BN.prototype.redAdd = function redAdd (num) {
+    assert(this.red, 'redAdd works only with red numbers');
+    return this.red.add(this, num);
+  };
+
+  BN.prototype.redIAdd = function redIAdd (num) {
+    assert(this.red, 'redIAdd works only with red numbers');
+    return this.red.iadd(this, num);
+  };
+
+  BN.prototype.redSub = function redSub (num) {
+    assert(this.red, 'redSub works only with red numbers');
+    return this.red.sub(this, num);
+  };
+
+  BN.prototype.redISub = function redISub (num) {
+    assert(this.red, 'redISub works only with red numbers');
+    return this.red.isub(this, num);
+  };
+
+  BN.prototype.redShl = function redShl (num) {
+    assert(this.red, 'redShl works only with red numbers');
+    return this.red.shl(this, num);
+  };
+
+  BN.prototype.redMul = function redMul (num) {
+    assert(this.red, 'redMul works only with red numbers');
+    this.red._verify2(this, num);
+    return this.red.mul(this, num);
+  };
+
+  BN.prototype.redIMul = function redIMul (num) {
+    assert(this.red, 'redMul works only with red numbers');
+    this.red._verify2(this, num);
+    return this.red.imul(this, num);
+  };
+
+  BN.prototype.redSqr = function redSqr () {
+    assert(this.red, 'redSqr works only with red numbers');
+    this.red._verify1(this);
+    return this.red.sqr(this);
+  };
+
+  BN.prototype.redISqr = function redISqr () {
+    assert(this.red, 'redISqr works only with red numbers');
+    this.red._verify1(this);
+    return this.red.isqr(this);
+  };
+
+  // Square root over p
+  BN.prototype.redSqrt = function redSqrt () {
+    assert(this.red, 'redSqrt works only with red numbers');
+    this.red._verify1(this);
+    return this.red.sqrt(this);
+  };
+
+  BN.prototype.redInvm = function redInvm () {
+    assert(this.red, 'redInvm works only with red numbers');
+    this.red._verify1(this);
+    return this.red.invm(this);
+  };
+
+  // Return negative clone of `this` % `red modulo`
+  BN.prototype.redNeg = function redNeg () {
+    assert(this.red, 'redNeg works only with red numbers');
+    this.red._verify1(this);
+    return this.red.neg(this);
+  };
+
+  BN.prototype.redPow = function redPow (num) {
+    assert(this.red && !num.red, 'redPow(normalNum)');
+    this.red._verify1(this);
+    return this.red.pow(this, num);
+  };
+
+  // Prime numbers with efficient reduction
+  var primes = {
+    k256: null,
+    p224: null,
+    p192: null,
+    p25519: null
+  };
+
+  // Pseudo-Mersenne prime
+  function MPrime (name, p) {
+    // P = 2 ^ N - K
+    this.name = name;
+    this.p = new BN(p, 16);
+    this.n = this.p.bitLength();
+    this.k = new BN(1).iushln(this.n).isub(this.p);
+
+    this.tmp = this._tmp();
+  }
+
+  MPrime.prototype._tmp = function _tmp () {
+    var tmp = new BN(null);
+    tmp.words = new Array(Math.ceil(this.n / 13));
+    return tmp;
+  };
+
+  MPrime.prototype.ireduce = function ireduce (num) {
+    // Assumes that `num` is less than `P^2`
+    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
+    var r = num;
+    var rlen;
+
+    do {
+      this.split(r, this.tmp);
+      r = this.imulK(r);
+      r = r.iadd(this.tmp);
+      rlen = r.bitLength();
+    } while (rlen > this.n);
+
+    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
+    if (cmp === 0) {
+      r.words[0] = 0;
+      r.length = 1;
+    } else if (cmp > 0) {
+      r.isub(this.p);
+    } else {
+      if (r.strip !== undefined) {
+        // r is BN v4 instance
+        r.strip();
+      } else {
+        // r is BN v5 instance
+        r._strip();
+      }
+    }
+
+    return r;
+  };
+
+  MPrime.prototype.split = function split (input, out) {
+    input.iushrn(this.n, 0, out);
+  };
+
+  MPrime.prototype.imulK = function imulK (num) {
+    return num.imul(this.k);
+  };
+
+  function K256 () {
+    MPrime.call(
+      this,
+      'k256',
+      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
+  }
+  inherits(K256, MPrime);
+
+  K256.prototype.split = function split (input, output) {
+    // 256 = 9 * 26 + 22
+    var mask = 0x3fffff;
+
+    var outLen = Math.min(input.length, 9);
+    for (var i = 0; i < outLen; i++) {
+      output.words[i] = input.words[i];
+    }
+    output.length = outLen;
+
+    if (input.length <= 9) {
+      input.words[0] = 0;
+      input.length = 1;
+      return;
+    }
+
+    // Shift by 9 limbs
+    var prev = input.words[9];
+    output.words[output.length++] = prev & mask;
+
+    for (i = 10; i < input.length; i++) {
+      var next = input.words[i] | 0;
+      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
+      prev = next;
+    }
+    prev >>>= 22;
+    input.words[i - 10] = prev;
+    if (prev === 0 && input.length > 10) {
+      input.length -= 10;
+    } else {
+      input.length -= 9;
+    }
+  };
+
+  K256.prototype.imulK = function imulK (num) {
+    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
+    num.words[num.length] = 0;
+    num.words[num.length + 1] = 0;
+    num.length += 2;
+
+    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
+    var lo = 0;
+    for (var i = 0; i < num.length; i++) {
+      var w = num.words[i] | 0;
+      lo += w * 0x3d1;
+      num.words[i] = lo & 0x3ffffff;
+      lo = w * 0x40 + ((lo / 0x4000000) | 0);
+    }
+
+    // Fast length reduction
+    if (num.words[num.length - 1] === 0) {
+      num.length--;
+      if (num.words[num.length - 1] === 0) {
+        num.length--;
+      }
+    }
+    return num;
+  };
+
+  function P224 () {
+    MPrime.call(
+      this,
+      'p224',
+      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
+  }
+  inherits(P224, MPrime);
+
+  function P192 () {
+    MPrime.call(
+      this,
+      'p192',
+      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
+  }
+  inherits(P192, MPrime);
+
+  function P25519 () {
+    // 2 ^ 255 - 19
+    MPrime.call(
+      this,
+      '25519',
+      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
+  }
+  inherits(P25519, MPrime);
+
+  P25519.prototype.imulK = function imulK (num) {
+    // K = 0x13
+    var carry = 0;
+    for (var i = 0; i < num.length; i++) {
+      var hi = (num.words[i] | 0) * 0x13 + carry;
+      var lo = hi & 0x3ffffff;
+      hi >>>= 26;
+
+      num.words[i] = lo;
+      carry = hi;
+    }
+    if (carry !== 0) {
+      num.words[num.length++] = carry;
+    }
+    return num;
+  };
+
+  // Exported mostly for testing purposes, use plain name instead
+  BN._prime = function prime (name) {
+    // Cached version of prime
+    if (primes[name]) return primes[name];
+
+    var prime;
+    if (name === 'k256') {
+      prime = new K256();
+    } else if (name === 'p224') {
+      prime = new P224();
+    } else if (name === 'p192') {
+      prime = new P192();
+    } else if (name === 'p25519') {
+      prime = new P25519();
+    } else {
+      throw new Error('Unknown prime ' + name);
+    }
+    primes[name] = prime;
+
+    return prime;
+  };
+
+  //
+  // Base reduction engine
+  //
+  function Red (m) {
+    if (typeof m === 'string') {
+      var prime = BN._prime(m);
+      this.m = prime.p;
+      this.prime = prime;
+    } else {
+      assert(m.gtn(1), 'modulus must be greater than 1');
+      this.m = m;
+      this.prime = null;
+    }
+  }
+
+  Red.prototype._verify1 = function _verify1 (a) {
+    assert(a.negative === 0, 'red works only with positives');
+    assert(a.red, 'red works only with red numbers');
+  };
+
+  Red.prototype._verify2 = function _verify2 (a, b) {
+    assert((a.negative | b.negative) === 0, 'red works only with positives');
+    assert(a.red && a.red === b.red,
+      'red works only with red numbers');
+  };
+
+  Red.prototype.imod = function imod (a) {
+    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
+    return a.umod(this.m)._forceRed(this);
+  };
+
+  Red.prototype.neg = function neg (a) {
+    if (a.isZero()) {
+      return a.clone();
+    }
+
+    return this.m.sub(a)._forceRed(this);
+  };
+
+  Red.prototype.add = function add (a, b) {
+    this._verify2(a, b);
+
+    var res = a.add(b);
+    if (res.cmp(this.m) >= 0) {
+      res.isub(this.m);
+    }
+    return res._forceRed(this);
+  };
+
+  Red.prototype.iadd = function iadd (a, b) {
+    this._verify2(a, b);
+
+    var res = a.iadd(b);
+    if (res.cmp(this.m) >= 0) {
+      res.isub(this.m);
+    }
+    return res;
+  };
+
+  Red.prototype.sub = function sub (a, b) {
+    this._verify2(a, b);
+
+    var res = a.sub(b);
+    if (res.cmpn(0) < 0) {
+      res.iadd(this.m);
+    }
+    return res._forceRed(this);
+  };
+
+  Red.prototype.isub = function isub (a, b) {
+    this._verify2(a, b);
+
+    var res = a.isub(b);
+    if (res.cmpn(0) < 0) {
+      res.iadd(this.m);
+    }
+    return res;
+  };
+
+  Red.prototype.shl = function shl (a, num) {
+    this._verify1(a);
+    return this.imod(a.ushln(num));
+  };
+
+  Red.prototype.imul = function imul (a, b) {
+    this._verify2(a, b);
+    return this.imod(a.imul(b));
+  };
+
+  Red.prototype.mul = function mul (a, b) {
+    this._verify2(a, b);
+    return this.imod(a.mul(b));
+  };
+
+  Red.prototype.isqr = function isqr (a) {
+    return this.imul(a, a.clone());
+  };
+
+  Red.prototype.sqr = function sqr (a) {
+    return this.mul(a, a);
+  };
+
+  Red.prototype.sqrt = function sqrt (a) {
+    if (a.isZero()) return a.clone();
+
+    var mod3 = this.m.andln(3);
+    assert(mod3 % 2 === 1);
+
+    // Fast case
+    if (mod3 === 3) {
+      var pow = this.m.add(new BN(1)).iushrn(2);
+      return this.pow(a, pow);
+    }
+
+    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
+    //
+    // Find Q and S, that Q * 2 ^ S = (P - 1)
+    var q = this.m.subn(1);
+    var s = 0;
+    while (!q.isZero() && q.andln(1) === 0) {
+      s++;
+      q.iushrn(1);
+    }
+    assert(!q.isZero());
+
+    var one = new BN(1).toRed(this);
+    var nOne = one.redNeg();
+
+    // Find quadratic non-residue
+    // NOTE: Max is such because of generalized Riemann hypothesis.
+    var lpow = this.m.subn(1).iushrn(1);
+    var z = this.m.bitLength();
+    z = new BN(2 * z * z).toRed(this);
+
+    while (this.pow(z, lpow).cmp(nOne) !== 0) {
+      z.redIAdd(nOne);
+    }
+
+    var c = this.pow(z, q);
+    var r = this.pow(a, q.addn(1).iushrn(1));
+    var t = this.pow(a, q);
+    var m = s;
+    while (t.cmp(one) !== 0) {
+      var tmp = t;
+      for (var i = 0; tmp.cmp(one) !== 0; i++) {
+        tmp = tmp.redSqr();
+      }
+      assert(i < m);
+      var b = this.pow(c, new BN(1).iushln(m - i - 1));
+
+      r = r.redMul(b);
+      c = b.redSqr();
+      t = t.redMul(c);
+      m = i;
+    }
+
+    return r;
+  };
+
+  Red.prototype.invm = function invm (a) {
+    var inv = a._invmp(this.m);
+    if (inv.negative !== 0) {
+      inv.negative = 0;
+      return this.imod(inv).redNeg();
+    } else {
+      return this.imod(inv);
+    }
+  };
+
+  Red.prototype.pow = function pow (a, num) {
+    if (num.isZero()) return new BN(1).toRed(this);
+    if (num.cmpn(1) === 0) return a.clone();
+
+    var windowSize = 4;
+    var wnd = new Array(1 << windowSize);
+    wnd[0] = new BN(1).toRed(this);
+    wnd[1] = a;
+    for (var i = 2; i < wnd.length; i++) {
+      wnd[i] = this.mul(wnd[i - 1], a);
+    }
+
+    var res = wnd[0];
+    var current = 0;
+    var currentLen = 0;
+    var start = num.bitLength() % 26;
+    if (start === 0) {
+      start = 26;
+    }
+
+    for (i = num.length - 1; i >= 0; i--) {
+      var word = num.words[i];
+      for (var j = start - 1; j >= 0; j--) {
+        var bit = (word >> j) & 1;
+        if (res !== wnd[0]) {
+          res = this.sqr(res);
+        }
+
+        if (bit === 0 && current === 0) {
+          currentLen = 0;
+          continue;
+        }
+
+        current <<= 1;
+        current |= bit;
+        currentLen++;
+        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
+
+        res = this.mul(res, wnd[current]);
+        currentLen = 0;
+        current = 0;
+      }
+      start = 26;
+    }
+
+    return res;
+  };
+
+  Red.prototype.convertTo = function convertTo (num) {
+    var r = num.umod(this.m);
+
+    return r === num ? r.clone() : r;
+  };
+
+  Red.prototype.convertFrom = function convertFrom (num) {
+    var res = num.clone();
+    res.red = null;
+    return res;
+  };
+
+  //
+  // Montgomery method engine
+  //
+
+  BN.mont = function mont (num) {
+    return new Mont(num);
+  };
+
+  function Mont (m) {
+    Red.call(this, m);
+
+    this.shift = this.m.bitLength();
+    if (this.shift % 26 !== 0) {
+      this.shift += 26 - (this.shift % 26);
+    }
+
+    this.r = new BN(1).iushln(this.shift);
+    this.r2 = this.imod(this.r.sqr());
+    this.rinv = this.r._invmp(this.m);
+
+    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
+    this.minv = this.minv.umod(this.r);
+    this.minv = this.r.sub(this.minv);
+  }
+  inherits(Mont, Red);
+
+  Mont.prototype.convertTo = function convertTo (num) {
+    return this.imod(num.ushln(this.shift));
+  };
+
+  Mont.prototype.convertFrom = function convertFrom (num) {
+    var r = this.imod(num.mul(this.rinv));
+    r.red = null;
+    return r;
+  };
+
+  Mont.prototype.imul = function imul (a, b) {
+    if (a.isZero() || b.isZero()) {
+      a.words[0] = 0;
+      a.length = 1;
+      return a;
+    }
+
+    var t = a.imul(b);
+    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
+    var u = t.isub(c).iushrn(this.shift);
+    var res = u;
+
+    if (u.cmp(this.m) >= 0) {
+      res = u.isub(this.m);
+    } else if (u.cmpn(0) < 0) {
+      res = u.iadd(this.m);
+    }
+
+    return res._forceRed(this);
+  };
+
+  Mont.prototype.mul = function mul (a, b) {
+    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
+
+    var t = a.mul(b);
+    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
+    var u = t.isub(c).iushrn(this.shift);
+    var res = u;
+    if (u.cmp(this.m) >= 0) {
+      res = u.isub(this.m);
+    } else if (u.cmpn(0) < 0) {
+      res = u.iadd(this.m);
+    }
+
+    return res._forceRed(this);
+  };
+
+  Mont.prototype.invm = function invm (a) {
+    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
+    var res = this.imod(a._invmp(this.m).mul(this.r2));
+    return res._forceRed(this);
+  };
+})( false || module, this);
+
+
+/***/ }),
+
+/***/ 9931:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+var r;
+
+module.exports = function rand(len) {
+  if (!r)
+    r = new Rand(null);
+
+  return r.generate(len);
+};
+
+function Rand(rand) {
+  this.rand = rand;
+}
+module.exports.Rand = Rand;
+
+Rand.prototype.generate = function generate(len) {
+  return this._rand(len);
+};
+
+// Emulate crypto API using randy
+Rand.prototype._rand = function _rand(n) {
+  if (this.rand.getBytes)
+    return this.rand.getBytes(n);
+
+  var res = new Uint8Array(n);
+  for (var i = 0; i < res.length; i++)
+    res[i] = this.rand.getByte();
+  return res;
+};
+
+if (typeof self === 'object') {
+  if (self.crypto && self.crypto.getRandomValues) {
+    // Modern browsers
+    Rand.prototype._rand = function _rand(n) {
+      var arr = new Uint8Array(n);
+      self.crypto.getRandomValues(arr);
+      return arr;
+    };
+  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
+    // IE
+    Rand.prototype._rand = function _rand(n) {
+      var arr = new Uint8Array(n);
+      self.msCrypto.getRandomValues(arr);
+      return arr;
+    };
+
+  // Safari's WebWorkers do not have `crypto`
+  } else if (typeof window === 'object') {
+    // Old junk
+    Rand.prototype._rand = function() {
+      throw new Error('Not implemented yet');
+    };
+  }
+} else {
+  // Node.js or Web worker with no crypto support
+  try {
+    var crypto = __webpack_require__(9214);
+    if (typeof crypto.randomBytes !== 'function')
+      throw new Error('Not supported');
+
+    Rand.prototype._rand = function _rand(n) {
+      return crypto.randomBytes(n);
+    };
+  } catch (e) {
+  }
+}
+
+
+/***/ }),
+
+/***/ 5456:
+/***/ ((module) => {
+
+"use strict";
+/* jshint esversion: 6 */
+/* jslint node: true */
+
+
+module.exports = function serialize (object) {
+  if (typeof object === 'number' && isNaN(object)) {
+    throw new Error('NaN is not allowed');
+  }
+
+  if (typeof object === 'number' && !isFinite(object)) {
+    throw new Error('Infinity is not allowed');
+  }
+
+  if (object === null || typeof object !== 'object') {
+    return JSON.stringify(object);
+  }
+
+  if (object.toJSON instanceof Function) {
+    return serialize(object.toJSON());
+  }
+
+  if (Array.isArray(object)) {
+    const values = object.reduce((t, cv, ci) => {
+      const comma = ci === 0 ? '' : ',';
+      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;
+      return `${t}${comma}${serialize(value)}`;
+    }, '');
+    return `[${values}]`;
+  }
+
+  const values = Object.keys(object).sort().reduce((t, cv) => {
+    if (object[cv] === undefined ||
+        typeof object[cv] === 'symbol') {
+      return t;
+    }
+    const comma = t.length === 0 ? '' : ',';
+    return `${t}${comma}${serialize(cv)}:${serialize(object[cv])}`;
+  }, '');
+  return `{${values}}`;
+};
+
+
+/***/ }),
+
+/***/ 6266:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var elliptic = exports;
+
+elliptic.version = (__webpack_require__(8597)/* .version */ .i8);
+elliptic.utils = __webpack_require__(953);
+elliptic.rand = __webpack_require__(9931);
+elliptic.curve = __webpack_require__(8254);
+elliptic.curves = __webpack_require__(5427);
+
+// Protocols
+elliptic.ec = __webpack_require__(7954);
+elliptic.eddsa = __webpack_require__(5980);
+
+
+/***/ }),
+
+/***/ 4918:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var BN = __webpack_require__(3550);
+var utils = __webpack_require__(953);
+var getNAF = utils.getNAF;
+var getJSF = utils.getJSF;
+var assert = utils.assert;
+
+function BaseCurve(type, conf) {
+  this.type = type;
+  this.p = new BN(conf.p, 16);
+
+  // Use Montgomery, when there is no fast reduction for the prime
+  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
+
+  // Useful for many curves
+  this.zero = new BN(0).toRed(this.red);
+  this.one = new BN(1).toRed(this.red);
+  this.two = new BN(2).toRed(this.red);
+
+  // Curve configuration, optional
+  this.n = conf.n && new BN(conf.n, 16);
+  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
+
+  // Temporary arrays
+  this._wnafT1 = new Array(4);
+  this._wnafT2 = new Array(4);
+  this._wnafT3 = new Array(4);
+  this._wnafT4 = new Array(4);
+
+  this._bitLength = this.n ? this.n.bitLength() : 0;
+
+  // Generalized Greg Maxwell's trick
+  var adjustCount = this.n && this.p.div(this.n);
+  if (!adjustCount || adjustCount.cmpn(100) > 0) {
+    this.redN = null;
+  } else {
+    this._maxwellTrick = true;
+    this.redN = this.n.toRed(this.red);
+  }
+}
+module.exports = BaseCurve;
+
+BaseCurve.prototype.point = function point() {
+  throw new Error('Not implemented');
+};
+
+BaseCurve.prototype.validate = function validate() {
+  throw new Error('Not implemented');
+};
+
+BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
+  assert(p.precomputed);
+  var doubles = p._getDoubles();
+
+  var naf = getNAF(k, 1, this._bitLength);
+  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
+  I /= 3;
+
+  // Translate into more windowed form
+  var repr = [];
+  var j;
+  var nafW;
+  for (j = 0; j < naf.length; j += doubles.step) {
+    nafW = 0;
+    for (var l = j + doubles.step - 1; l >= j; l--)
+      nafW = (nafW << 1) + naf[l];
+    repr.push(nafW);
+  }
+
+  var a = this.jpoint(null, null, null);
+  var b = this.jpoint(null, null, null);
+  for (var i = I; i > 0; i--) {
+    for (j = 0; j < repr.length; j++) {
+      nafW = repr[j];
+      if (nafW === i)
+        b = b.mixedAdd(doubles.points[j]);
+      else if (nafW === -i)
+        b = b.mixedAdd(doubles.points[j].neg());
+    }
+    a = a.add(b);
+  }
+  return a.toP();
+};
+
+BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
+  var w = 4;
+
+  // Precompute window
+  var nafPoints = p._getNAFPoints(w);
+  w = nafPoints.wnd;
+  var wnd = nafPoints.points;
+
+  // Get NAF form
+  var naf = getNAF(k, w, this._bitLength);
+
+  // Add `this`*(N+1) for every w-NAF index
+  var acc = this.jpoint(null, null, null);
+  for (var i = naf.length - 1; i >= 0; i--) {
+    // Count zeroes
+    for (var l = 0; i >= 0 && naf[i] === 0; i--)
+      l++;
+    if (i >= 0)
+      l++;
+    acc = acc.dblp(l);
+
+    if (i < 0)
+      break;
+    var z = naf[i];
+    assert(z !== 0);
+    if (p.type === 'affine') {
+      // J +- P
+      if (z > 0)
+        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
+      else
+        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
+    } else {
+      // J +- J
+      if (z > 0)
+        acc = acc.add(wnd[(z - 1) >> 1]);
+      else
+        acc = acc.add(wnd[(-z - 1) >> 1].neg());
+    }
+  }
+  return p.type === 'affine' ? acc.toP() : acc;
+};
+
+BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
+  points,
+  coeffs,
+  len,
+  jacobianResult) {
+  var wndWidth = this._wnafT1;
+  var wnd = this._wnafT2;
+  var naf = this._wnafT3;
+
+  // Fill all arrays
+  var max = 0;
+  var i;
+  var j;
+  var p;
+  for (i = 0; i < len; i++) {
+    p = points[i];
+    var nafPoints = p._getNAFPoints(defW);
+    wndWidth[i] = nafPoints.wnd;
+    wnd[i] = nafPoints.points;
+  }
+
+  // Comb small window NAFs
+  for (i = len - 1; i >= 1; i -= 2) {
+    var a = i - 1;
+    var b = i;
+    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
+      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
+      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
+      max = Math.max(naf[a].length, max);
+      max = Math.max(naf[b].length, max);
+      continue;
+    }
+
+    var comb = [
+      points[a], /* 1 */
+      null, /* 3 */
+      null, /* 5 */
+      points[b], /* 7 */
+    ];
+
+    // Try to avoid Projective points, if possible
+    if (points[a].y.cmp(points[b].y) === 0) {
+      comb[1] = points[a].add(points[b]);
+      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
+    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
+      comb[1] = points[a].toJ().mixedAdd(points[b]);
+      comb[2] = points[a].add(points[b].neg());
+    } else {
+      comb[1] = points[a].toJ().mixedAdd(points[b]);
+      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
+    }
+
+    var index = [
+      -3, /* -1 -1 */
+      -1, /* -1 0 */
+      -5, /* -1 1 */
+      -7, /* 0 -1 */
+      0, /* 0 0 */
+      7, /* 0 1 */
+      5, /* 1 -1 */
+      1, /* 1 0 */
+      3,  /* 1 1 */
+    ];
+
+    var jsf = getJSF(coeffs[a], coeffs[b]);
+    max = Math.max(jsf[0].length, max);
+    naf[a] = new Array(max);
+    naf[b] = new Array(max);
+    for (j = 0; j < max; j++) {
+      var ja = jsf[0][j] | 0;
+      var jb = jsf[1][j] | 0;
+
+      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
+      naf[b][j] = 0;
+      wnd[a] = comb;
+    }
+  }
+
+  var acc = this.jpoint(null, null, null);
+  var tmp = this._wnafT4;
+  for (i = max; i >= 0; i--) {
+    var k = 0;
+
+    while (i >= 0) {
+      var zero = true;
+      for (j = 0; j < len; j++) {
+        tmp[j] = naf[j][i] | 0;
+        if (tmp[j] !== 0)
+          zero = false;
+      }
+      if (!zero)
+        break;
+      k++;
+      i--;
+    }
+    if (i >= 0)
+      k++;
+    acc = acc.dblp(k);
+    if (i < 0)
+      break;
+
+    for (j = 0; j < len; j++) {
+      var z = tmp[j];
+      p;
+      if (z === 0)
+        continue;
+      else if (z > 0)
+        p = wnd[j][(z - 1) >> 1];
+      else if (z < 0)
+        p = wnd[j][(-z - 1) >> 1].neg();
+
+      if (p.type === 'affine')
+        acc = acc.mixedAdd(p);
+      else
+        acc = acc.add(p);
+    }
+  }
+  // Zeroify references
+  for (i = 0; i < len; i++)
+    wnd[i] = null;
+
+  if (jacobianResult)
+    return acc;
+  else
+    return acc.toP();
+};
+
+function BasePoint(curve, type) {
+  this.curve = curve;
+  this.type = type;
+  this.precomputed = null;
+}
+BaseCurve.BasePoint = BasePoint;
+
+BasePoint.prototype.eq = function eq(/*other*/) {
+  throw new Error('Not implemented');
+};
+
+BasePoint.prototype.validate = function validate() {
+  return this.curve.validate(this);
+};
+
+BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
+  bytes = utils.toArray(bytes, enc);
+
+  var len = this.p.byteLength();
+
+  // uncompressed, hybrid-odd, hybrid-even
+  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
+      bytes.length - 1 === 2 * len) {
+    if (bytes[0] === 0x06)
+      assert(bytes[bytes.length - 1] % 2 === 0);
+    else if (bytes[0] === 0x07)
+      assert(bytes[bytes.length - 1] % 2 === 1);
+
+    var res =  this.point(bytes.slice(1, 1 + len),
+      bytes.slice(1 + len, 1 + 2 * len));
+
+    return res;
+  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
+              bytes.length - 1 === len) {
+    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
+  }
+  throw new Error('Unknown point format');
+};
+
+BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
+  return this.encode(enc, true);
+};
+
+BasePoint.prototype._encode = function _encode(compact) {
+  var len = this.curve.p.byteLength();
+  var x = this.getX().toArray('be', len);
+
+  if (compact)
+    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);
+
+  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
+};
+
+BasePoint.prototype.encode = function encode(enc, compact) {
+  return utils.encode(this._encode(compact), enc);
+};
+
+BasePoint.prototype.precompute = function precompute(power) {
+  if (this.precomputed)
+    return this;
+
+  var precomputed = {
+    doubles: null,
+    naf: null,
+    beta: null,
+  };
+  precomputed.naf = this._getNAFPoints(8);
+  precomputed.doubles = this._getDoubles(4, power);
+  precomputed.beta = this._getBeta();
+  this.precomputed = precomputed;
+
+  return this;
+};
+
+BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
+  if (!this.precomputed)
+    return false;
+
+  var doubles = this.precomputed.doubles;
+  if (!doubles)
+    return false;
+
+  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
+};
+
+BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
+  if (this.precomputed && this.precomputed.doubles)
+    return this.precomputed.doubles;
+
+  var doubles = [ this ];
+  var acc = this;
+  for (var i = 0; i < power; i += step) {
+    for (var j = 0; j < step; j++)
+      acc = acc.dbl();
+    doubles.push(acc);
+  }
+  return {
+    step: step,
+    points: doubles,
+  };
+};
+
+BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
+  if (this.precomputed && this.precomputed.naf)
+    return this.precomputed.naf;
+
+  var res = [ this ];
+  var max = (1 << wnd) - 1;
+  var dbl = max === 1 ? null : this.dbl();
+  for (var i = 1; i < max; i++)
+    res[i] = res[i - 1].add(dbl);
+  return {
+    wnd: wnd,
+    points: res,
+  };
+};
+
+BasePoint.prototype._getBeta = function _getBeta() {
+  return null;
+};
+
+BasePoint.prototype.dblp = function dblp(k) {
+  var r = this;
+  for (var i = 0; i < k; i++)
+    r = r.dbl();
+  return r;
+};
+
+
+/***/ }),
+
+/***/ 1138:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(953);
+var BN = __webpack_require__(3550);
+var inherits = __webpack_require__(5717);
+var Base = __webpack_require__(4918);
+
+var assert = utils.assert;
+
+function EdwardsCurve(conf) {
+  // NOTE: Important as we are creating point in Base.call()
+  this.twisted = (conf.a | 0) !== 1;
+  this.mOneA = this.twisted && (conf.a | 0) === -1;
+  this.extended = this.mOneA;
+
+  Base.call(this, 'edwards', conf);
+
+  this.a = new BN(conf.a, 16).umod(this.red.m);
+  this.a = this.a.toRed(this.red);
+  this.c = new BN(conf.c, 16).toRed(this.red);
+  this.c2 = this.c.redSqr();
+  this.d = new BN(conf.d, 16).toRed(this.red);
+  this.dd = this.d.redAdd(this.d);
+
+  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
+  this.oneC = (conf.c | 0) === 1;
+}
+inherits(EdwardsCurve, Base);
+module.exports = EdwardsCurve;
+
+EdwardsCurve.prototype._mulA = function _mulA(num) {
+  if (this.mOneA)
+    return num.redNeg();
+  else
+    return this.a.redMul(num);
+};
+
+EdwardsCurve.prototype._mulC = function _mulC(num) {
+  if (this.oneC)
+    return num;
+  else
+    return this.c.redMul(num);
+};
+
+// Just for compatibility with Short curve
+EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
+  return this.point(x, y, z, t);
+};
+
+EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
+  x = new BN(x, 16);
+  if (!x.red)
+    x = x.toRed(this.red);
+
+  var x2 = x.redSqr();
+  var rhs = this.c2.redSub(this.a.redMul(x2));
+  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
+
+  var y2 = rhs.redMul(lhs.redInvm());
+  var y = y2.redSqrt();
+  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
+    throw new Error('invalid point');
+
+  var isOdd = y.fromRed().isOdd();
+  if (odd && !isOdd || !odd && isOdd)
+    y = y.redNeg();
+
+  return this.point(x, y);
+};
+
+EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
+  y = new BN(y, 16);
+  if (!y.red)
+    y = y.toRed(this.red);
+
+  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
+  var y2 = y.redSqr();
+  var lhs = y2.redSub(this.c2);
+  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
+  var x2 = lhs.redMul(rhs.redInvm());
+
+  if (x2.cmp(this.zero) === 0) {
+    if (odd)
+      throw new Error('invalid point');
+    else
+      return this.point(this.zero, y);
+  }
+
+  var x = x2.redSqrt();
+  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
+    throw new Error('invalid point');
+
+  if (x.fromRed().isOdd() !== odd)
+    x = x.redNeg();
+
+  return this.point(x, y);
+};
+
+EdwardsCurve.prototype.validate = function validate(point) {
+  if (point.isInfinity())
+    return true;
+
+  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
+  point.normalize();
+
+  var x2 = point.x.redSqr();
+  var y2 = point.y.redSqr();
+  var lhs = x2.redMul(this.a).redAdd(y2);
+  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
+
+  return lhs.cmp(rhs) === 0;
+};
+
+function Point(curve, x, y, z, t) {
+  Base.BasePoint.call(this, curve, 'projective');
+  if (x === null && y === null && z === null) {
+    this.x = this.curve.zero;
+    this.y = this.curve.one;
+    this.z = this.curve.one;
+    this.t = this.curve.zero;
+    this.zOne = true;
+  } else {
+    this.x = new BN(x, 16);
+    this.y = new BN(y, 16);
+    this.z = z ? new BN(z, 16) : this.curve.one;
+    this.t = t && new BN(t, 16);
+    if (!this.x.red)
+      this.x = this.x.toRed(this.curve.red);
+    if (!this.y.red)
+      this.y = this.y.toRed(this.curve.red);
+    if (!this.z.red)
+      this.z = this.z.toRed(this.curve.red);
+    if (this.t && !this.t.red)
+      this.t = this.t.toRed(this.curve.red);
+    this.zOne = this.z === this.curve.one;
+
+    // Use extended coordinates
+    if (this.curve.extended && !this.t) {
+      this.t = this.x.redMul(this.y);
+      if (!this.zOne)
+        this.t = this.t.redMul(this.z.redInvm());
+    }
+  }
+}
+inherits(Point, Base.BasePoint);
+
+EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
+  return Point.fromJSON(this, obj);
+};
+
+EdwardsCurve.prototype.point = function point(x, y, z, t) {
+  return new Point(this, x, y, z, t);
+};
+
+Point.fromJSON = function fromJSON(curve, obj) {
+  return new Point(curve, obj[0], obj[1], obj[2]);
+};
+
+Point.prototype.inspect = function inspect() {
+  if (this.isInfinity())
+    return '<EC Point Infinity>';
+  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
+      ' y: ' + this.y.fromRed().toString(16, 2) +
+      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
+};
+
+Point.prototype.isInfinity = function isInfinity() {
+  // XXX This code assumes that zero is always zero in red
+  return this.x.cmpn(0) === 0 &&
+    (this.y.cmp(this.z) === 0 ||
+    (this.zOne && this.y.cmp(this.curve.c) === 0));
+};
+
+Point.prototype._extDbl = function _extDbl() {
+  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
+  //     #doubling-dbl-2008-hwcd
+  // 4M + 4S
+
+  // A = X1^2
+  var a = this.x.redSqr();
+  // B = Y1^2
+  var b = this.y.redSqr();
+  // C = 2 * Z1^2
+  var c = this.z.redSqr();
+  c = c.redIAdd(c);
+  // D = a * A
+  var d = this.curve._mulA(a);
+  // E = (X1 + Y1)^2 - A - B
+  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
+  // G = D + B
+  var g = d.redAdd(b);
+  // F = G - C
+  var f = g.redSub(c);
+  // H = D - B
+  var h = d.redSub(b);
+  // X3 = E * F
+  var nx = e.redMul(f);
+  // Y3 = G * H
+  var ny = g.redMul(h);
+  // T3 = E * H
+  var nt = e.redMul(h);
+  // Z3 = F * G
+  var nz = f.redMul(g);
+  return this.curve.point(nx, ny, nz, nt);
+};
+
+Point.prototype._projDbl = function _projDbl() {
+  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
+  //     #doubling-dbl-2008-bbjlp
+  //     #doubling-dbl-2007-bl
+  // and others
+  // Generally 3M + 4S or 2M + 4S
+
+  // B = (X1 + Y1)^2
+  var b = this.x.redAdd(this.y).redSqr();
+  // C = X1^2
+  var c = this.x.redSqr();
+  // D = Y1^2
+  var d = this.y.redSqr();
+
+  var nx;
+  var ny;
+  var nz;
+  var e;
+  var h;
+  var j;
+  if (this.curve.twisted) {
+    // E = a * C
+    e = this.curve._mulA(c);
+    // F = E + D
+    var f = e.redAdd(d);
+    if (this.zOne) {
+      // X3 = (B - C - D) * (F - 2)
+      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
+      // Y3 = F * (E - D)
+      ny = f.redMul(e.redSub(d));
+      // Z3 = F^2 - 2 * F
+      nz = f.redSqr().redSub(f).redSub(f);
+    } else {
+      // H = Z1^2
+      h = this.z.redSqr();
+      // J = F - 2 * H
+      j = f.redSub(h).redISub(h);
+      // X3 = (B-C-D)*J
+      nx = b.redSub(c).redISub(d).redMul(j);
+      // Y3 = F * (E - D)
+      ny = f.redMul(e.redSub(d));
+      // Z3 = F * J
+      nz = f.redMul(j);
+    }
+  } else {
+    // E = C + D
+    e = c.redAdd(d);
+    // H = (c * Z1)^2
+    h = this.curve._mulC(this.z).redSqr();
+    // J = E - 2 * H
+    j = e.redSub(h).redSub(h);
+    // X3 = c * (B - E) * J
+    nx = this.curve._mulC(b.redISub(e)).redMul(j);
+    // Y3 = c * E * (C - D)
+    ny = this.curve._mulC(e).redMul(c.redISub(d));
+    // Z3 = E * J
+    nz = e.redMul(j);
+  }
+  return this.curve.point(nx, ny, nz);
+};
+
+Point.prototype.dbl = function dbl() {
+  if (this.isInfinity())
+    return this;
+
+  // Double in extended coordinates
+  if (this.curve.extended)
+    return this._extDbl();
+  else
+    return this._projDbl();
+};
+
+Point.prototype._extAdd = function _extAdd(p) {
+  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
+  //     #addition-add-2008-hwcd-3
+  // 8M
+
+  // A = (Y1 - X1) * (Y2 - X2)
+  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
+  // B = (Y1 + X1) * (Y2 + X2)
+  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
+  // C = T1 * k * T2
+  var c = this.t.redMul(this.curve.dd).redMul(p.t);
+  // D = Z1 * 2 * Z2
+  var d = this.z.redMul(p.z.redAdd(p.z));
+  // E = B - A
+  var e = b.redSub(a);
+  // F = D - C
+  var f = d.redSub(c);
+  // G = D + C
+  var g = d.redAdd(c);
+  // H = B + A
+  var h = b.redAdd(a);
+  // X3 = E * F
+  var nx = e.redMul(f);
+  // Y3 = G * H
+  var ny = g.redMul(h);
+  // T3 = E * H
+  var nt = e.redMul(h);
+  // Z3 = F * G
+  var nz = f.redMul(g);
+  return this.curve.point(nx, ny, nz, nt);
+};
+
+Point.prototype._projAdd = function _projAdd(p) {
+  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
+  //     #addition-add-2008-bbjlp
+  //     #addition-add-2007-bl
+  // 10M + 1S
+
+  // A = Z1 * Z2
+  var a = this.z.redMul(p.z);
+  // B = A^2
+  var b = a.redSqr();
+  // C = X1 * X2
+  var c = this.x.redMul(p.x);
+  // D = Y1 * Y2
+  var d = this.y.redMul(p.y);
+  // E = d * C * D
+  var e = this.curve.d.redMul(c).redMul(d);
+  // F = B - E
+  var f = b.redSub(e);
+  // G = B + E
+  var g = b.redAdd(e);
+  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
+  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
+  var nx = a.redMul(f).redMul(tmp);
+  var ny;
+  var nz;
+  if (this.curve.twisted) {
+    // Y3 = A * G * (D - a * C)
+    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
+    // Z3 = F * G
+    nz = f.redMul(g);
+  } else {
+    // Y3 = A * G * (D - C)
+    ny = a.redMul(g).redMul(d.redSub(c));
+    // Z3 = c * F * G
+    nz = this.curve._mulC(f).redMul(g);
+  }
+  return this.curve.point(nx, ny, nz);
+};
+
+Point.prototype.add = function add(p) {
+  if (this.isInfinity())
+    return p;
+  if (p.isInfinity())
+    return this;
+
+  if (this.curve.extended)
+    return this._extAdd(p);
+  else
+    return this._projAdd(p);
+};
+
+Point.prototype.mul = function mul(k) {
+  if (this._hasDoubles(k))
+    return this.curve._fixedNafMul(this, k);
+  else
+    return this.curve._wnafMul(this, k);
+};
+
+Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
+  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
+};
+
+Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
+  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
+};
+
+Point.prototype.normalize = function normalize() {
+  if (this.zOne)
+    return this;
+
+  // Normalize coordinates
+  var zi = this.z.redInvm();
+  this.x = this.x.redMul(zi);
+  this.y = this.y.redMul(zi);
+  if (this.t)
+    this.t = this.t.redMul(zi);
+  this.z = this.curve.one;
+  this.zOne = true;
+  return this;
+};
+
+Point.prototype.neg = function neg() {
+  return this.curve.point(this.x.redNeg(),
+    this.y,
+    this.z,
+    this.t && this.t.redNeg());
+};
+
+Point.prototype.getX = function getX() {
+  this.normalize();
+  return this.x.fromRed();
+};
+
+Point.prototype.getY = function getY() {
+  this.normalize();
+  return this.y.fromRed();
+};
+
+Point.prototype.eq = function eq(other) {
+  return this === other ||
+         this.getX().cmp(other.getX()) === 0 &&
+         this.getY().cmp(other.getY()) === 0;
+};
+
+Point.prototype.eqXToP = function eqXToP(x) {
+  var rx = x.toRed(this.curve.red).redMul(this.z);
+  if (this.x.cmp(rx) === 0)
+    return true;
+
+  var xc = x.clone();
+  var t = this.curve.redN.redMul(this.z);
+  for (;;) {
+    xc.iadd(this.curve.n);
+    if (xc.cmp(this.curve.p) >= 0)
+      return false;
+
+    rx.redIAdd(t);
+    if (this.x.cmp(rx) === 0)
+      return true;
+  }
+};
+
+// Compatibility with BaseCurve
+Point.prototype.toP = Point.prototype.normalize;
+Point.prototype.mixedAdd = Point.prototype.add;
+
+
+/***/ }),
+
+/***/ 8254:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var curve = exports;
+
+curve.base = __webpack_require__(4918);
+curve.short = __webpack_require__(6673);
+curve.mont = __webpack_require__(2881);
+curve.edwards = __webpack_require__(1138);
+
+
+/***/ }),
+
+/***/ 2881:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var BN = __webpack_require__(3550);
+var inherits = __webpack_require__(5717);
+var Base = __webpack_require__(4918);
+
+var utils = __webpack_require__(953);
+
+function MontCurve(conf) {
+  Base.call(this, 'mont', conf);
+
+  this.a = new BN(conf.a, 16).toRed(this.red);
+  this.b = new BN(conf.b, 16).toRed(this.red);
+  this.i4 = new BN(4).toRed(this.red).redInvm();
+  this.two = new BN(2).toRed(this.red);
+  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
+}
+inherits(MontCurve, Base);
+module.exports = MontCurve;
+
+MontCurve.prototype.validate = function validate(point) {
+  var x = point.normalize().x;
+  var x2 = x.redSqr();
+  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
+  var y = rhs.redSqrt();
+
+  return y.redSqr().cmp(rhs) === 0;
+};
+
+function Point(curve, x, z) {
+  Base.BasePoint.call(this, curve, 'projective');
+  if (x === null && z === null) {
+    this.x = this.curve.one;
+    this.z = this.curve.zero;
+  } else {
+    this.x = new BN(x, 16);
+    this.z = new BN(z, 16);
+    if (!this.x.red)
+      this.x = this.x.toRed(this.curve.red);
+    if (!this.z.red)
+      this.z = this.z.toRed(this.curve.red);
+  }
+}
+inherits(Point, Base.BasePoint);
+
+MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
+  return this.point(utils.toArray(bytes, enc), 1);
+};
+
+MontCurve.prototype.point = function point(x, z) {
+  return new Point(this, x, z);
+};
+
+MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
+  return Point.fromJSON(this, obj);
+};
+
+Point.prototype.precompute = function precompute() {
+  // No-op
+};
+
+Point.prototype._encode = function _encode() {
+  return this.getX().toArray('be', this.curve.p.byteLength());
+};
+
+Point.fromJSON = function fromJSON(curve, obj) {
+  return new Point(curve, obj[0], obj[1] || curve.one);
+};
+
+Point.prototype.inspect = function inspect() {
+  if (this.isInfinity())
+    return '<EC Point Infinity>';
+  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
+      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
+};
+
+Point.prototype.isInfinity = function isInfinity() {
+  // XXX This code assumes that zero is always zero in red
+  return this.z.cmpn(0) === 0;
+};
+
+Point.prototype.dbl = function dbl() {
+  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
+  // 2M + 2S + 4A
+
+  // A = X1 + Z1
+  var a = this.x.redAdd(this.z);
+  // AA = A^2
+  var aa = a.redSqr();
+  // B = X1 - Z1
+  var b = this.x.redSub(this.z);
+  // BB = B^2
+  var bb = b.redSqr();
+  // C = AA - BB
+  var c = aa.redSub(bb);
+  // X3 = AA * BB
+  var nx = aa.redMul(bb);
+  // Z3 = C * (BB + A24 * C)
+  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
+  return this.curve.point(nx, nz);
+};
+
+Point.prototype.add = function add() {
+  throw new Error('Not supported on Montgomery curve');
+};
+
+Point.prototype.diffAdd = function diffAdd(p, diff) {
+  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
+  // 4M + 2S + 6A
+
+  // A = X2 + Z2
+  var a = this.x.redAdd(this.z);
+  // B = X2 - Z2
+  var b = this.x.redSub(this.z);
+  // C = X3 + Z3
+  var c = p.x.redAdd(p.z);
+  // D = X3 - Z3
+  var d = p.x.redSub(p.z);
+  // DA = D * A
+  var da = d.redMul(a);
+  // CB = C * B
+  var cb = c.redMul(b);
+  // X5 = Z1 * (DA + CB)^2
+  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
+  // Z5 = X1 * (DA - CB)^2
+  var nz = diff.x.redMul(da.redISub(cb).redSqr());
+  return this.curve.point(nx, nz);
+};
+
+Point.prototype.mul = function mul(k) {
+  var t = k.clone();
+  var a = this; // (N / 2) * Q + Q
+  var b = this.curve.point(null, null); // (N / 2) * Q
+  var c = this; // Q
+
+  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
+    bits.push(t.andln(1));
+
+  for (var i = bits.length - 1; i >= 0; i--) {
+    if (bits[i] === 0) {
+      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
+      a = a.diffAdd(b, c);
+      // N * Q = 2 * ((N / 2) * Q + Q))
+      b = b.dbl();
+    } else {
+      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
+      b = a.diffAdd(b, c);
+      // N * Q + Q = 2 * ((N / 2) * Q + Q)
+      a = a.dbl();
+    }
+  }
+  return b;
+};
+
+Point.prototype.mulAdd = function mulAdd() {
+  throw new Error('Not supported on Montgomery curve');
+};
+
+Point.prototype.jumlAdd = function jumlAdd() {
+  throw new Error('Not supported on Montgomery curve');
+};
+
+Point.prototype.eq = function eq(other) {
+  return this.getX().cmp(other.getX()) === 0;
+};
+
+Point.prototype.normalize = function normalize() {
+  this.x = this.x.redMul(this.z.redInvm());
+  this.z = this.curve.one;
+  return this;
+};
+
+Point.prototype.getX = function getX() {
+  // Normalize coordinates
+  this.normalize();
+
+  return this.x.fromRed();
+};
+
+
+/***/ }),
+
+/***/ 6673:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(953);
+var BN = __webpack_require__(3550);
+var inherits = __webpack_require__(5717);
+var Base = __webpack_require__(4918);
+
+var assert = utils.assert;
+
+function ShortCurve(conf) {
+  Base.call(this, 'short', conf);
+
+  this.a = new BN(conf.a, 16).toRed(this.red);
+  this.b = new BN(conf.b, 16).toRed(this.red);
+  this.tinv = this.two.redInvm();
+
+  this.zeroA = this.a.fromRed().cmpn(0) === 0;
+  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
+
+  // If the curve is endomorphic, precalculate beta and lambda
+  this.endo = this._getEndomorphism(conf);
+  this._endoWnafT1 = new Array(4);
+  this._endoWnafT2 = new Array(4);
+}
+inherits(ShortCurve, Base);
+module.exports = ShortCurve;
+
+ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
+  // No efficient endomorphism
+  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
+    return;
+
+  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
+  var beta;
+  var lambda;
+  if (conf.beta) {
+    beta = new BN(conf.beta, 16).toRed(this.red);
+  } else {
+    var betas = this._getEndoRoots(this.p);
+    // Choose the smallest beta
+    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
+    beta = beta.toRed(this.red);
+  }
+  if (conf.lambda) {
+    lambda = new BN(conf.lambda, 16);
+  } else {
+    // Choose the lambda that is matching selected beta
+    var lambdas = this._getEndoRoots(this.n);
+    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
+      lambda = lambdas[0];
+    } else {
+      lambda = lambdas[1];
+      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
+    }
+  }
+
+  // Get basis vectors, used for balanced length-two representation
+  var basis;
+  if (conf.basis) {
+    basis = conf.basis.map(function(vec) {
+      return {
+        a: new BN(vec.a, 16),
+        b: new BN(vec.b, 16),
+      };
+    });
+  } else {
+    basis = this._getEndoBasis(lambda);
+  }
+
+  return {
+    beta: beta,
+    lambda: lambda,
+    basis: basis,
+  };
+};
+
+ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
+  // Find roots of for x^2 + x + 1 in F
+  // Root = (-1 +- Sqrt(-3)) / 2
+  //
+  var red = num === this.p ? this.red : BN.mont(num);
+  var tinv = new BN(2).toRed(red).redInvm();
+  var ntinv = tinv.redNeg();
+
+  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
+
+  var l1 = ntinv.redAdd(s).fromRed();
+  var l2 = ntinv.redSub(s).fromRed();
+  return [ l1, l2 ];
+};
+
+ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
+  // aprxSqrt >= sqrt(this.n)
+  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
+
+  // 3.74
+  // Run EGCD, until r(L + 1) < aprxSqrt
+  var u = lambda;
+  var v = this.n.clone();
+  var x1 = new BN(1);
+  var y1 = new BN(0);
+  var x2 = new BN(0);
+  var y2 = new BN(1);
+
+  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
+  var a0;
+  var b0;
+  // First vector
+  var a1;
+  var b1;
+  // Second vector
+  var a2;
+  var b2;
+
+  var prevR;
+  var i = 0;
+  var r;
+  var x;
+  while (u.cmpn(0) !== 0) {
+    var q = v.div(u);
+    r = v.sub(q.mul(u));
+    x = x2.sub(q.mul(x1));
+    var y = y2.sub(q.mul(y1));
+
+    if (!a1 && r.cmp(aprxSqrt) < 0) {
+      a0 = prevR.neg();
+      b0 = x1;
+      a1 = r.neg();
+      b1 = x;
+    } else if (a1 && ++i === 2) {
+      break;
+    }
+    prevR = r;
+
+    v = u;
+    u = r;
+    x2 = x1;
+    x1 = x;
+    y2 = y1;
+    y1 = y;
+  }
+  a2 = r.neg();
+  b2 = x;
+
+  var len1 = a1.sqr().add(b1.sqr());
+  var len2 = a2.sqr().add(b2.sqr());
+  if (len2.cmp(len1) >= 0) {
+    a2 = a0;
+    b2 = b0;
+  }
+
+  // Normalize signs
+  if (a1.negative) {
+    a1 = a1.neg();
+    b1 = b1.neg();
+  }
+  if (a2.negative) {
+    a2 = a2.neg();
+    b2 = b2.neg();
+  }
+
+  return [
+    { a: a1, b: b1 },
+    { a: a2, b: b2 },
+  ];
+};
+
+ShortCurve.prototype._endoSplit = function _endoSplit(k) {
+  var basis = this.endo.basis;
+  var v1 = basis[0];
+  var v2 = basis[1];
+
+  var c1 = v2.b.mul(k).divRound(this.n);
+  var c2 = v1.b.neg().mul(k).divRound(this.n);
+
+  var p1 = c1.mul(v1.a);
+  var p2 = c2.mul(v2.a);
+  var q1 = c1.mul(v1.b);
+  var q2 = c2.mul(v2.b);
+
+  // Calculate answer
+  var k1 = k.sub(p1).sub(p2);
+  var k2 = q1.add(q2).neg();
+  return { k1: k1, k2: k2 };
+};
+
+ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
+  x = new BN(x, 16);
+  if (!x.red)
+    x = x.toRed(this.red);
+
+  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
+  var y = y2.redSqrt();
+  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
+    throw new Error('invalid point');
+
+  // XXX Is there any way to tell if the number is odd without converting it
+  // to non-red form?
+  var isOdd = y.fromRed().isOdd();
+  if (odd && !isOdd || !odd && isOdd)
+    y = y.redNeg();
+
+  return this.point(x, y);
+};
+
+ShortCurve.prototype.validate = function validate(point) {
+  if (point.inf)
+    return true;
+
+  var x = point.x;
+  var y = point.y;
+
+  var ax = this.a.redMul(x);
+  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
+  return y.redSqr().redISub(rhs).cmpn(0) === 0;
+};
+
+ShortCurve.prototype._endoWnafMulAdd =
+    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
+      var npoints = this._endoWnafT1;
+      var ncoeffs = this._endoWnafT2;
+      for (var i = 0; i < points.length; i++) {
+        var split = this._endoSplit(coeffs[i]);
+        var p = points[i];
+        var beta = p._getBeta();
+
+        if (split.k1.negative) {
+          split.k1.ineg();
+          p = p.neg(true);
+        }
+        if (split.k2.negative) {
+          split.k2.ineg();
+          beta = beta.neg(true);
+        }
+
+        npoints[i * 2] = p;
+        npoints[i * 2 + 1] = beta;
+        ncoeffs[i * 2] = split.k1;
+        ncoeffs[i * 2 + 1] = split.k2;
+      }
+      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
+
+      // Clean-up references to points and coefficients
+      for (var j = 0; j < i * 2; j++) {
+        npoints[j] = null;
+        ncoeffs[j] = null;
+      }
+      return res;
+    };
+
+function Point(curve, x, y, isRed) {
+  Base.BasePoint.call(this, curve, 'affine');
+  if (x === null && y === null) {
+    this.x = null;
+    this.y = null;
+    this.inf = true;
+  } else {
+    this.x = new BN(x, 16);
+    this.y = new BN(y, 16);
+    // Force redgomery representation when loading from JSON
+    if (isRed) {
+      this.x.forceRed(this.curve.red);
+      this.y.forceRed(this.curve.red);
+    }
+    if (!this.x.red)
+      this.x = this.x.toRed(this.curve.red);
+    if (!this.y.red)
+      this.y = this.y.toRed(this.curve.red);
+    this.inf = false;
+  }
+}
+inherits(Point, Base.BasePoint);
+
+ShortCurve.prototype.point = function point(x, y, isRed) {
+  return new Point(this, x, y, isRed);
+};
+
+ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
+  return Point.fromJSON(this, obj, red);
+};
+
+Point.prototype._getBeta = function _getBeta() {
+  if (!this.curve.endo)
+    return;
+
+  var pre = this.precomputed;
+  if (pre && pre.beta)
+    return pre.beta;
+
+  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
+  if (pre) {
+    var curve = this.curve;
+    var endoMul = function(p) {
+      return curve.point(p.x.redMul(curve.endo.beta), p.y);
+    };
+    pre.beta = beta;
+    beta.precomputed = {
+      beta: null,
+      naf: pre.naf && {
+        wnd: pre.naf.wnd,
+        points: pre.naf.points.map(endoMul),
+      },
+      doubles: pre.doubles && {
+        step: pre.doubles.step,
+        points: pre.doubles.points.map(endoMul),
+      },
+    };
+  }
+  return beta;
+};
+
+Point.prototype.toJSON = function toJSON() {
+  if (!this.precomputed)
+    return [ this.x, this.y ];
+
+  return [ this.x, this.y, this.precomputed && {
+    doubles: this.precomputed.doubles && {
+      step: this.precomputed.doubles.step,
+      points: this.precomputed.doubles.points.slice(1),
+    },
+    naf: this.precomputed.naf && {
+      wnd: this.precomputed.naf.wnd,
+      points: this.precomputed.naf.points.slice(1),
+    },
+  } ];
+};
+
+Point.fromJSON = function fromJSON(curve, obj, red) {
+  if (typeof obj === 'string')
+    obj = JSON.parse(obj);
+  var res = curve.point(obj[0], obj[1], red);
+  if (!obj[2])
+    return res;
+
+  function obj2point(obj) {
+    return curve.point(obj[0], obj[1], red);
+  }
+
+  var pre = obj[2];
+  res.precomputed = {
+    beta: null,
+    doubles: pre.doubles && {
+      step: pre.doubles.step,
+      points: [ res ].concat(pre.doubles.points.map(obj2point)),
+    },
+    naf: pre.naf && {
+      wnd: pre.naf.wnd,
+      points: [ res ].concat(pre.naf.points.map(obj2point)),
+    },
+  };
+  return res;
+};
+
+Point.prototype.inspect = function inspect() {
+  if (this.isInfinity())
+    return '<EC Point Infinity>';
+  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
+      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
+};
+
+Point.prototype.isInfinity = function isInfinity() {
+  return this.inf;
+};
+
+Point.prototype.add = function add(p) {
+  // O + P = P
+  if (this.inf)
+    return p;
+
+  // P + O = P
+  if (p.inf)
+    return this;
+
+  // P + P = 2P
+  if (this.eq(p))
+    return this.dbl();
+
+  // P + (-P) = O
+  if (this.neg().eq(p))
+    return this.curve.point(null, null);
+
+  // P + Q = O
+  if (this.x.cmp(p.x) === 0)
+    return this.curve.point(null, null);
+
+  var c = this.y.redSub(p.y);
+  if (c.cmpn(0) !== 0)
+    c = c.redMul(this.x.redSub(p.x).redInvm());
+  var nx = c.redSqr().redISub(this.x).redISub(p.x);
+  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
+  return this.curve.point(nx, ny);
+};
+
+Point.prototype.dbl = function dbl() {
+  if (this.inf)
+    return this;
+
+  // 2P = O
+  var ys1 = this.y.redAdd(this.y);
+  if (ys1.cmpn(0) === 0)
+    return this.curve.point(null, null);
+
+  var a = this.curve.a;
+
+  var x2 = this.x.redSqr();
+  var dyinv = ys1.redInvm();
+  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
+
+  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
+  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
+  return this.curve.point(nx, ny);
+};
+
+Point.prototype.getX = function getX() {
+  return this.x.fromRed();
+};
+
+Point.prototype.getY = function getY() {
+  return this.y.fromRed();
+};
+
+Point.prototype.mul = function mul(k) {
+  k = new BN(k, 16);
+  if (this.isInfinity())
+    return this;
+  else if (this._hasDoubles(k))
+    return this.curve._fixedNafMul(this, k);
+  else if (this.curve.endo)
+    return this.curve._endoWnafMulAdd([ this ], [ k ]);
+  else
+    return this.curve._wnafMul(this, k);
+};
+
+Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
+  var points = [ this, p2 ];
+  var coeffs = [ k1, k2 ];
+  if (this.curve.endo)
+    return this.curve._endoWnafMulAdd(points, coeffs);
+  else
+    return this.curve._wnafMulAdd(1, points, coeffs, 2);
+};
+
+Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
+  var points = [ this, p2 ];
+  var coeffs = [ k1, k2 ];
+  if (this.curve.endo)
+    return this.curve._endoWnafMulAdd(points, coeffs, true);
+  else
+    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
+};
+
+Point.prototype.eq = function eq(p) {
+  return this === p ||
+         this.inf === p.inf &&
+             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
+};
+
+Point.prototype.neg = function neg(_precompute) {
+  if (this.inf)
+    return this;
+
+  var res = this.curve.point(this.x, this.y.redNeg());
+  if (_precompute && this.precomputed) {
+    var pre = this.precomputed;
+    var negate = function(p) {
+      return p.neg();
+    };
+    res.precomputed = {
+      naf: pre.naf && {
+        wnd: pre.naf.wnd,
+        points: pre.naf.points.map(negate),
+      },
+      doubles: pre.doubles && {
+        step: pre.doubles.step,
+        points: pre.doubles.points.map(negate),
+      },
+    };
+  }
+  return res;
+};
+
+Point.prototype.toJ = function toJ() {
+  if (this.inf)
+    return this.curve.jpoint(null, null, null);
+
+  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
+  return res;
+};
+
+function JPoint(curve, x, y, z) {
+  Base.BasePoint.call(this, curve, 'jacobian');
+  if (x === null && y === null && z === null) {
+    this.x = this.curve.one;
+    this.y = this.curve.one;
+    this.z = new BN(0);
+  } else {
+    this.x = new BN(x, 16);
+    this.y = new BN(y, 16);
+    this.z = new BN(z, 16);
+  }
+  if (!this.x.red)
+    this.x = this.x.toRed(this.curve.red);
+  if (!this.y.red)
+    this.y = this.y.toRed(this.curve.red);
+  if (!this.z.red)
+    this.z = this.z.toRed(this.curve.red);
+
+  this.zOne = this.z === this.curve.one;
+}
+inherits(JPoint, Base.BasePoint);
+
+ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
+  return new JPoint(this, x, y, z);
+};
+
+JPoint.prototype.toP = function toP() {
+  if (this.isInfinity())
+    return this.curve.point(null, null);
+
+  var zinv = this.z.redInvm();
+  var zinv2 = zinv.redSqr();
+  var ax = this.x.redMul(zinv2);
+  var ay = this.y.redMul(zinv2).redMul(zinv);
+
+  return this.curve.point(ax, ay);
+};
+
+JPoint.prototype.neg = function neg() {
+  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
+};
+
+JPoint.prototype.add = function add(p) {
+  // O + P = P
+  if (this.isInfinity())
+    return p;
+
+  // P + O = P
+  if (p.isInfinity())
+    return this;
+
+  // 12M + 4S + 7A
+  var pz2 = p.z.redSqr();
+  var z2 = this.z.redSqr();
+  var u1 = this.x.redMul(pz2);
+  var u2 = p.x.redMul(z2);
+  var s1 = this.y.redMul(pz2.redMul(p.z));
+  var s2 = p.y.redMul(z2.redMul(this.z));
+
+  var h = u1.redSub(u2);
+  var r = s1.redSub(s2);
+  if (h.cmpn(0) === 0) {
+    if (r.cmpn(0) !== 0)
+      return this.curve.jpoint(null, null, null);
+    else
+      return this.dbl();
+  }
+
+  var h2 = h.redSqr();
+  var h3 = h2.redMul(h);
+  var v = u1.redMul(h2);
+
+  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
+  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
+  var nz = this.z.redMul(p.z).redMul(h);
+
+  return this.curve.jpoint(nx, ny, nz);
+};
+
+JPoint.prototype.mixedAdd = function mixedAdd(p) {
+  // O + P = P
+  if (this.isInfinity())
+    return p.toJ();
+
+  // P + O = P
+  if (p.isInfinity())
+    return this;
+
+  // 8M + 3S + 7A
+  var z2 = this.z.redSqr();
+  var u1 = this.x;
+  var u2 = p.x.redMul(z2);
+  var s1 = this.y;
+  var s2 = p.y.redMul(z2).redMul(this.z);
+
+  var h = u1.redSub(u2);
+  var r = s1.redSub(s2);
+  if (h.cmpn(0) === 0) {
+    if (r.cmpn(0) !== 0)
+      return this.curve.jpoint(null, null, null);
+    else
+      return this.dbl();
+  }
+
+  var h2 = h.redSqr();
+  var h3 = h2.redMul(h);
+  var v = u1.redMul(h2);
+
+  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
+  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
+  var nz = this.z.redMul(h);
+
+  return this.curve.jpoint(nx, ny, nz);
+};
+
+JPoint.prototype.dblp = function dblp(pow) {
+  if (pow === 0)
+    return this;
+  if (this.isInfinity())
+    return this;
+  if (!pow)
+    return this.dbl();
+
+  var i;
+  if (this.curve.zeroA || this.curve.threeA) {
+    var r = this;
+    for (i = 0; i < pow; i++)
+      r = r.dbl();
+    return r;
+  }
+
+  // 1M + 2S + 1A + N * (4S + 5M + 8A)
+  // N = 1 => 6M + 6S + 9A
+  var a = this.curve.a;
+  var tinv = this.curve.tinv;
+
+  var jx = this.x;
+  var jy = this.y;
+  var jz = this.z;
+  var jz4 = jz.redSqr().redSqr();
+
+  // Reuse results
+  var jyd = jy.redAdd(jy);
+  for (i = 0; i < pow; i++) {
+    var jx2 = jx.redSqr();
+    var jyd2 = jyd.redSqr();
+    var jyd4 = jyd2.redSqr();
+    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
+
+    var t1 = jx.redMul(jyd2);
+    var nx = c.redSqr().redISub(t1.redAdd(t1));
+    var t2 = t1.redISub(nx);
+    var dny = c.redMul(t2);
+    dny = dny.redIAdd(dny).redISub(jyd4);
+    var nz = jyd.redMul(jz);
+    if (i + 1 < pow)
+      jz4 = jz4.redMul(jyd4);
+
+    jx = nx;
+    jz = nz;
+    jyd = dny;
+  }
+
+  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
+};
+
+JPoint.prototype.dbl = function dbl() {
+  if (this.isInfinity())
+    return this;
+
+  if (this.curve.zeroA)
+    return this._zeroDbl();
+  else if (this.curve.threeA)
+    return this._threeDbl();
+  else
+    return this._dbl();
+};
+
+JPoint.prototype._zeroDbl = function _zeroDbl() {
+  var nx;
+  var ny;
+  var nz;
+  // Z = 1
+  if (this.zOne) {
+    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
+    //     #doubling-mdbl-2007-bl
+    // 1M + 5S + 14A
+
+    // XX = X1^2
+    var xx = this.x.redSqr();
+    // YY = Y1^2
+    var yy = this.y.redSqr();
+    // YYYY = YY^2
+    var yyyy = yy.redSqr();
+    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
+    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
+    s = s.redIAdd(s);
+    // M = 3 * XX + a; a = 0
+    var m = xx.redAdd(xx).redIAdd(xx);
+    // T = M ^ 2 - 2*S
+    var t = m.redSqr().redISub(s).redISub(s);
+
+    // 8 * YYYY
+    var yyyy8 = yyyy.redIAdd(yyyy);
+    yyyy8 = yyyy8.redIAdd(yyyy8);
+    yyyy8 = yyyy8.redIAdd(yyyy8);
+
+    // X3 = T
+    nx = t;
+    // Y3 = M * (S - T) - 8 * YYYY
+    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
+    // Z3 = 2*Y1
+    nz = this.y.redAdd(this.y);
+  } else {
+    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
+    //     #doubling-dbl-2009-l
+    // 2M + 5S + 13A
+
+    // A = X1^2
+    var a = this.x.redSqr();
+    // B = Y1^2
+    var b = this.y.redSqr();
+    // C = B^2
+    var c = b.redSqr();
+    // D = 2 * ((X1 + B)^2 - A - C)
+    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
+    d = d.redIAdd(d);
+    // E = 3 * A
+    var e = a.redAdd(a).redIAdd(a);
+    // F = E^2
+    var f = e.redSqr();
+
+    // 8 * C
+    var c8 = c.redIAdd(c);
+    c8 = c8.redIAdd(c8);
+    c8 = c8.redIAdd(c8);
+
+    // X3 = F - 2 * D
+    nx = f.redISub(d).redISub(d);
+    // Y3 = E * (D - X3) - 8 * C
+    ny = e.redMul(d.redISub(nx)).redISub(c8);
+    // Z3 = 2 * Y1 * Z1
+    nz = this.y.redMul(this.z);
+    nz = nz.redIAdd(nz);
+  }
+
+  return this.curve.jpoint(nx, ny, nz);
+};
+
+JPoint.prototype._threeDbl = function _threeDbl() {
+  var nx;
+  var ny;
+  var nz;
+  // Z = 1
+  if (this.zOne) {
+    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
+    //     #doubling-mdbl-2007-bl
+    // 1M + 5S + 15A
+
+    // XX = X1^2
+    var xx = this.x.redSqr();
+    // YY = Y1^2
+    var yy = this.y.redSqr();
+    // YYYY = YY^2
+    var yyyy = yy.redSqr();
+    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
+    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
+    s = s.redIAdd(s);
+    // M = 3 * XX + a
+    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
+    // T = M^2 - 2 * S
+    var t = m.redSqr().redISub(s).redISub(s);
+    // X3 = T
+    nx = t;
+    // Y3 = M * (S - T) - 8 * YYYY
+    var yyyy8 = yyyy.redIAdd(yyyy);
+    yyyy8 = yyyy8.redIAdd(yyyy8);
+    yyyy8 = yyyy8.redIAdd(yyyy8);
+    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
+    // Z3 = 2 * Y1
+    nz = this.y.redAdd(this.y);
+  } else {
+    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
+    // 3M + 5S
+
+    // delta = Z1^2
+    var delta = this.z.redSqr();
+    // gamma = Y1^2
+    var gamma = this.y.redSqr();
+    // beta = X1 * gamma
+    var beta = this.x.redMul(gamma);
+    // alpha = 3 * (X1 - delta) * (X1 + delta)
+    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
+    alpha = alpha.redAdd(alpha).redIAdd(alpha);
+    // X3 = alpha^2 - 8 * beta
+    var beta4 = beta.redIAdd(beta);
+    beta4 = beta4.redIAdd(beta4);
+    var beta8 = beta4.redAdd(beta4);
+    nx = alpha.redSqr().redISub(beta8);
+    // Z3 = (Y1 + Z1)^2 - gamma - delta
+    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
+    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
+    var ggamma8 = gamma.redSqr();
+    ggamma8 = ggamma8.redIAdd(ggamma8);
+    ggamma8 = ggamma8.redIAdd(ggamma8);
+    ggamma8 = ggamma8.redIAdd(ggamma8);
+    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
+  }
+
+  return this.curve.jpoint(nx, ny, nz);
+};
+
+JPoint.prototype._dbl = function _dbl() {
+  var a = this.curve.a;
+
+  // 4M + 6S + 10A
+  var jx = this.x;
+  var jy = this.y;
+  var jz = this.z;
+  var jz4 = jz.redSqr().redSqr();
+
+  var jx2 = jx.redSqr();
+  var jy2 = jy.redSqr();
+
+  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
+
+  var jxd4 = jx.redAdd(jx);
+  jxd4 = jxd4.redIAdd(jxd4);
+  var t1 = jxd4.redMul(jy2);
+  var nx = c.redSqr().redISub(t1.redAdd(t1));
+  var t2 = t1.redISub(nx);
+
+  var jyd8 = jy2.redSqr();
+  jyd8 = jyd8.redIAdd(jyd8);
+  jyd8 = jyd8.redIAdd(jyd8);
+  jyd8 = jyd8.redIAdd(jyd8);
+  var ny = c.redMul(t2).redISub(jyd8);
+  var nz = jy.redAdd(jy).redMul(jz);
+
+  return this.curve.jpoint(nx, ny, nz);
+};
+
+JPoint.prototype.trpl = function trpl() {
+  if (!this.curve.zeroA)
+    return this.dbl().add(this);
+
+  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
+  // 5M + 10S + ...
+
+  // XX = X1^2
+  var xx = this.x.redSqr();
+  // YY = Y1^2
+  var yy = this.y.redSqr();
+  // ZZ = Z1^2
+  var zz = this.z.redSqr();
+  // YYYY = YY^2
+  var yyyy = yy.redSqr();
+  // M = 3 * XX + a * ZZ2; a = 0
+  var m = xx.redAdd(xx).redIAdd(xx);
+  // MM = M^2
+  var mm = m.redSqr();
+  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
+  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
+  e = e.redIAdd(e);
+  e = e.redAdd(e).redIAdd(e);
+  e = e.redISub(mm);
+  // EE = E^2
+  var ee = e.redSqr();
+  // T = 16*YYYY
+  var t = yyyy.redIAdd(yyyy);
+  t = t.redIAdd(t);
+  t = t.redIAdd(t);
+  t = t.redIAdd(t);
+  // U = (M + E)^2 - MM - EE - T
+  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
+  // X3 = 4 * (X1 * EE - 4 * YY * U)
+  var yyu4 = yy.redMul(u);
+  yyu4 = yyu4.redIAdd(yyu4);
+  yyu4 = yyu4.redIAdd(yyu4);
+  var nx = this.x.redMul(ee).redISub(yyu4);
+  nx = nx.redIAdd(nx);
+  nx = nx.redIAdd(nx);
+  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
+  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
+  ny = ny.redIAdd(ny);
+  ny = ny.redIAdd(ny);
+  ny = ny.redIAdd(ny);
+  // Z3 = (Z1 + E)^2 - ZZ - EE
+  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
+
+  return this.curve.jpoint(nx, ny, nz);
+};
+
+JPoint.prototype.mul = function mul(k, kbase) {
+  k = new BN(k, kbase);
+
+  return this.curve._wnafMul(this, k);
+};
+
+JPoint.prototype.eq = function eq(p) {
+  if (p.type === 'affine')
+    return this.eq(p.toJ());
+
+  if (this === p)
+    return true;
+
+  // x1 * z2^2 == x2 * z1^2
+  var z2 = this.z.redSqr();
+  var pz2 = p.z.redSqr();
+  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
+    return false;
+
+  // y1 * z2^3 == y2 * z1^3
+  var z3 = z2.redMul(this.z);
+  var pz3 = pz2.redMul(p.z);
+  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
+};
+
+JPoint.prototype.eqXToP = function eqXToP(x) {
+  var zs = this.z.redSqr();
+  var rx = x.toRed(this.curve.red).redMul(zs);
+  if (this.x.cmp(rx) === 0)
+    return true;
+
+  var xc = x.clone();
+  var t = this.curve.redN.redMul(zs);
+  for (;;) {
+    xc.iadd(this.curve.n);
+    if (xc.cmp(this.curve.p) >= 0)
+      return false;
+
+    rx.redIAdd(t);
+    if (this.x.cmp(rx) === 0)
+      return true;
+  }
+};
+
+JPoint.prototype.inspect = function inspect() {
+  if (this.isInfinity())
+    return '<EC JPoint Infinity>';
+  return '<EC JPoint x: ' + this.x.toString(16, 2) +
+      ' y: ' + this.y.toString(16, 2) +
+      ' z: ' + this.z.toString(16, 2) + '>';
+};
+
+JPoint.prototype.isInfinity = function isInfinity() {
+  // XXX This code assumes that zero is always zero in red
+  return this.z.cmpn(0) === 0;
+};
+
+
+/***/ }),
+
+/***/ 5427:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var curves = exports;
+
+var hash = __webpack_require__(3715);
+var curve = __webpack_require__(8254);
+var utils = __webpack_require__(953);
+
+var assert = utils.assert;
+
+function PresetCurve(options) {
+  if (options.type === 'short')
+    this.curve = new curve.short(options);
+  else if (options.type === 'edwards')
+    this.curve = new curve.edwards(options);
+  else
+    this.curve = new curve.mont(options);
+  this.g = this.curve.g;
+  this.n = this.curve.n;
+  this.hash = options.hash;
+
+  assert(this.g.validate(), 'Invalid curve');
+  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
+}
+curves.PresetCurve = PresetCurve;
+
+function defineCurve(name, options) {
+  Object.defineProperty(curves, name, {
+    configurable: true,
+    enumerable: true,
+    get: function() {
+      var curve = new PresetCurve(options);
+      Object.defineProperty(curves, name, {
+        configurable: true,
+        enumerable: true,
+        value: curve,
+      });
+      return curve;
+    },
+  });
+}
+
+defineCurve('p192', {
+  type: 'short',
+  prime: 'p192',
+  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
+  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
+  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
+  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
+  hash: hash.sha256,
+  gRed: false,
+  g: [
+    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
+    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
+  ],
+});
+
+defineCurve('p224', {
+  type: 'short',
+  prime: 'p224',
+  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
+  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
+  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
+  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
+  hash: hash.sha256,
+  gRed: false,
+  g: [
+    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
+    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
+  ],
+});
+
+defineCurve('p256', {
+  type: 'short',
+  prime: null,
+  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
+  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
+  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
+  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
+  hash: hash.sha256,
+  gRed: false,
+  g: [
+    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
+    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
+  ],
+});
+
+defineCurve('p384', {
+  type: 'short',
+  prime: null,
+  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'fffffffe ffffffff 00000000 00000000 ffffffff',
+  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'fffffffe ffffffff 00000000 00000000 fffffffc',
+  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
+     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
+  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
+     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
+  hash: hash.sha384,
+  gRed: false,
+  g: [
+    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
+    '5502f25d bf55296c 3a545e38 72760ab7',
+    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
+    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
+  ],
+});
+
+defineCurve('p521', {
+  type: 'short',
+  prime: null,
+  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'ffffffff ffffffff ffffffff ffffffff ffffffff',
+  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'ffffffff ffffffff ffffffff ffffffff fffffffc',
+  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
+     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
+     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
+  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
+     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
+     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
+  hash: hash.sha512,
+  gRed: false,
+  g: [
+    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
+    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
+    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
+    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
+    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
+    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
+  ],
+});
+
+defineCurve('curve25519', {
+  type: 'mont',
+  prime: 'p25519',
+  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
+  a: '76d06',
+  b: '1',
+  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
+  hash: hash.sha256,
+  gRed: false,
+  g: [
+    '9',
+  ],
+});
+
+defineCurve('ed25519', {
+  type: 'edwards',
+  prime: 'p25519',
+  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
+  a: '-1',
+  c: '1',
+  // -121665 * (121666^(-1)) (mod P)
+  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
+  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
+  hash: hash.sha256,
+  gRed: false,
+  g: [
+    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',
+
+    // 4/5
+    '6666666666666666666666666666666666666666666666666666666666666658',
+  ],
+});
+
+var pre;
+try {
+  pre = __webpack_require__(1037);
+} catch (e) {
+  pre = undefined;
+}
+
+defineCurve('secp256k1', {
+  type: 'short',
+  prime: 'k256',
+  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
+  a: '0',
+  b: '7',
+  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
+  h: '1',
+  hash: hash.sha256,
+
+  // Precomputed endomorphism
+  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
+  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
+  basis: [
+    {
+      a: '3086d221a7d46bcde86c90e49284eb15',
+      b: '-e4437ed6010e88286f547fa90abfe4c3',
+    },
+    {
+      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
+      b: '3086d221a7d46bcde86c90e49284eb15',
+    },
+  ],
+
+  gRed: false,
+  g: [
+    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
+    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
+    pre,
+  ],
+});
+
+
+/***/ }),
+
+/***/ 7954:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var BN = __webpack_require__(3550);
+var HmacDRBG = __webpack_require__(2156);
+var utils = __webpack_require__(953);
+var curves = __webpack_require__(5427);
+var rand = __webpack_require__(9931);
+var assert = utils.assert;
+
+var KeyPair = __webpack_require__(1251);
+var Signature = __webpack_require__(611);
+
+function EC(options) {
+  if (!(this instanceof EC))
+    return new EC(options);
+
+  // Shortcut `elliptic.ec(curve-name)`
+  if (typeof options === 'string') {
+    assert(Object.prototype.hasOwnProperty.call(curves, options),
+      'Unknown curve ' + options);
+
+    options = curves[options];
+  }
+
+  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
+  if (options instanceof curves.PresetCurve)
+    options = { curve: options };
+
+  this.curve = options.curve.curve;
+  this.n = this.curve.n;
+  this.nh = this.n.ushrn(1);
+  this.g = this.curve.g;
+
+  // Point on curve
+  this.g = options.curve.g;
+  this.g.precompute(options.curve.n.bitLength() + 1);
+
+  // Hash for function for DRBG
+  this.hash = options.hash || options.curve.hash;
+}
+module.exports = EC;
+
+EC.prototype.keyPair = function keyPair(options) {
+  return new KeyPair(this, options);
+};
+
+EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
+  return KeyPair.fromPrivate(this, priv, enc);
+};
+
+EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
+  return KeyPair.fromPublic(this, pub, enc);
+};
+
+EC.prototype.genKeyPair = function genKeyPair(options) {
+  if (!options)
+    options = {};
+
+  // Instantiate Hmac_DRBG
+  var drbg = new HmacDRBG({
+    hash: this.hash,
+    pers: options.pers,
+    persEnc: options.persEnc || 'utf8',
+    entropy: options.entropy || rand(this.hash.hmacStrength),
+    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
+    nonce: this.n.toArray(),
+  });
+
+  var bytes = this.n.byteLength();
+  var ns2 = this.n.sub(new BN(2));
+  for (;;) {
+    var priv = new BN(drbg.generate(bytes));
+    if (priv.cmp(ns2) > 0)
+      continue;
+
+    priv.iaddn(1);
+    return this.keyFromPrivate(priv);
+  }
+};
+
+EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
+  var delta = msg.byteLength() * 8 - this.n.bitLength();
+  if (delta > 0)
+    msg = msg.ushrn(delta);
+  if (!truncOnly && msg.cmp(this.n) >= 0)
+    return msg.sub(this.n);
+  else
+    return msg;
+};
+
+EC.prototype.sign = function sign(msg, key, enc, options) {
+  if (typeof enc === 'object') {
+    options = enc;
+    enc = null;
+  }
+  if (!options)
+    options = {};
+
+  key = this.keyFromPrivate(key, enc);
+  msg = this._truncateToN(new BN(msg, 16));
+
+  // Zero-extend key to provide enough entropy
+  var bytes = this.n.byteLength();
+  var bkey = key.getPrivate().toArray('be', bytes);
+
+  // Zero-extend nonce to have the same byte size as N
+  var nonce = msg.toArray('be', bytes);
+
+  // Instantiate Hmac_DRBG
+  var drbg = new HmacDRBG({
+    hash: this.hash,
+    entropy: bkey,
+    nonce: nonce,
+    pers: options.pers,
+    persEnc: options.persEnc || 'utf8',
+  });
+
+  // Number of bytes to generate
+  var ns1 = this.n.sub(new BN(1));
+
+  for (var iter = 0; ; iter++) {
+    var k = options.k ?
+      options.k(iter) :
+      new BN(drbg.generate(this.n.byteLength()));
+    k = this._truncateToN(k, true);
+    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
+      continue;
+
+    var kp = this.g.mul(k);
+    if (kp.isInfinity())
+      continue;
+
+    var kpX = kp.getX();
+    var r = kpX.umod(this.n);
+    if (r.cmpn(0) === 0)
+      continue;
+
+    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
+    s = s.umod(this.n);
+    if (s.cmpn(0) === 0)
+      continue;
+
+    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
+                        (kpX.cmp(r) !== 0 ? 2 : 0);
+
+    // Use complement of `s`, if it is > `n / 2`
+    if (options.canonical && s.cmp(this.nh) > 0) {
+      s = this.n.sub(s);
+      recoveryParam ^= 1;
+    }
+
+    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
+  }
+};
+
+EC.prototype.verify = function verify(msg, signature, key, enc) {
+  msg = this._truncateToN(new BN(msg, 16));
+  key = this.keyFromPublic(key, enc);
+  signature = new Signature(signature, 'hex');
+
+  // Perform primitive values validation
+  var r = signature.r;
+  var s = signature.s;
+  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
+    return false;
+  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
+    return false;
+
+  // Validate signature
+  var sinv = s.invm(this.n);
+  var u1 = sinv.mul(msg).umod(this.n);
+  var u2 = sinv.mul(r).umod(this.n);
+  var p;
+
+  if (!this.curve._maxwellTrick) {
+    p = this.g.mulAdd(u1, key.getPublic(), u2);
+    if (p.isInfinity())
+      return false;
+
+    return p.getX().umod(this.n).cmp(r) === 0;
+  }
+
+  // NOTE: Greg Maxwell's trick, inspired by:
+  // https://git.io/vad3K
+
+  p = this.g.jmulAdd(u1, key.getPublic(), u2);
+  if (p.isInfinity())
+    return false;
+
+  // Compare `p.x` of Jacobian point with `r`,
+  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
+  // inverse of `p.z^2`
+  return p.eqXToP(r);
+};
+
+EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
+  assert((3 & j) === j, 'The recovery param is more than two bits');
+  signature = new Signature(signature, enc);
+
+  var n = this.n;
+  var e = new BN(msg);
+  var r = signature.r;
+  var s = signature.s;
+
+  // A set LSB signifies that the y-coordinate is odd
+  var isYOdd = j & 1;
+  var isSecondKey = j >> 1;
+  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
+    throw new Error('Unable to find sencond key candinate');
+
+  // 1.1. Let x = r + jn.
+  if (isSecondKey)
+    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
+  else
+    r = this.curve.pointFromX(r, isYOdd);
+
+  var rInv = signature.r.invm(n);
+  var s1 = n.sub(e).mul(rInv).umod(n);
+  var s2 = s.mul(rInv).umod(n);
+
+  // 1.6.1 Compute Q = r^-1 (sR -  eG)
+  //               Q = r^-1 (sR + -eG)
+  return this.g.mulAdd(s1, r, s2);
+};
+
+EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
+  signature = new Signature(signature, enc);
+  if (signature.recoveryParam !== null)
+    return signature.recoveryParam;
+
+  for (var i = 0; i < 4; i++) {
+    var Qprime;
+    try {
+      Qprime = this.recoverPubKey(e, signature, i);
+    } catch (e) {
+      continue;
+    }
+
+    if (Qprime.eq(Q))
+      return i;
+  }
+  throw new Error('Unable to find valid recovery factor');
+};
+
+
+/***/ }),
+
+/***/ 1251:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var BN = __webpack_require__(3550);
+var utils = __webpack_require__(953);
+var assert = utils.assert;
+
+function KeyPair(ec, options) {
+  this.ec = ec;
+  this.priv = null;
+  this.pub = null;
+
+  // KeyPair(ec, { priv: ..., pub: ... })
+  if (options.priv)
+    this._importPrivate(options.priv, options.privEnc);
+  if (options.pub)
+    this._importPublic(options.pub, options.pubEnc);
+}
+module.exports = KeyPair;
+
+KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
+  if (pub instanceof KeyPair)
+    return pub;
+
+  return new KeyPair(ec, {
+    pub: pub,
+    pubEnc: enc,
+  });
+};
+
+KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
+  if (priv instanceof KeyPair)
+    return priv;
+
+  return new KeyPair(ec, {
+    priv: priv,
+    privEnc: enc,
+  });
+};
+
+KeyPair.prototype.validate = function validate() {
+  var pub = this.getPublic();
+
+  if (pub.isInfinity())
+    return { result: false, reason: 'Invalid public key' };
+  if (!pub.validate())
+    return { result: false, reason: 'Public key is not a point' };
+  if (!pub.mul(this.ec.curve.n).isInfinity())
+    return { result: false, reason: 'Public key * N != O' };
+
+  return { result: true, reason: null };
+};
+
+KeyPair.prototype.getPublic = function getPublic(compact, enc) {
+  // compact is optional argument
+  if (typeof compact === 'string') {
+    enc = compact;
+    compact = null;
+  }
+
+  if (!this.pub)
+    this.pub = this.ec.g.mul(this.priv);
+
+  if (!enc)
+    return this.pub;
+
+  return this.pub.encode(enc, compact);
+};
+
+KeyPair.prototype.getPrivate = function getPrivate(enc) {
+  if (enc === 'hex')
+    return this.priv.toString(16, 2);
+  else
+    return this.priv;
+};
+
+KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
+  this.priv = new BN(key, enc || 16);
+
+  // Ensure that the priv won't be bigger than n, otherwise we may fail
+  // in fixed multiplication method
+  this.priv = this.priv.umod(this.ec.curve.n);
+};
+
+KeyPair.prototype._importPublic = function _importPublic(key, enc) {
+  if (key.x || key.y) {
+    // Montgomery points only have an `x` coordinate.
+    // Weierstrass/Edwards points on the other hand have both `x` and
+    // `y` coordinates.
+    if (this.ec.curve.type === 'mont') {
+      assert(key.x, 'Need x coordinate');
+    } else if (this.ec.curve.type === 'short' ||
+               this.ec.curve.type === 'edwards') {
+      assert(key.x && key.y, 'Need both x and y coordinate');
+    }
+    this.pub = this.ec.curve.point(key.x, key.y);
+    return;
+  }
+  this.pub = this.ec.curve.decodePoint(key, enc);
+};
+
+// ECDH
+KeyPair.prototype.derive = function derive(pub) {
+  if(!pub.validate()) {
+    assert(pub.validate(), 'public point not validated');
+  }
+  return pub.mul(this.priv).getX();
+};
+
+// ECDSA
+KeyPair.prototype.sign = function sign(msg, enc, options) {
+  return this.ec.sign(msg, this, enc, options);
+};
+
+KeyPair.prototype.verify = function verify(msg, signature) {
+  return this.ec.verify(msg, signature, this);
+};
+
+KeyPair.prototype.inspect = function inspect() {
+  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
+         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
+};
+
+
+/***/ }),
+
+/***/ 611:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var BN = __webpack_require__(3550);
+
+var utils = __webpack_require__(953);
+var assert = utils.assert;
+
+function Signature(options, enc) {
+  if (options instanceof Signature)
+    return options;
+
+  if (this._importDER(options, enc))
+    return;
+
+  assert(options.r && options.s, 'Signature without r or s');
+  this.r = new BN(options.r, 16);
+  this.s = new BN(options.s, 16);
+  if (options.recoveryParam === undefined)
+    this.recoveryParam = null;
+  else
+    this.recoveryParam = options.recoveryParam;
+}
+module.exports = Signature;
+
+function Position() {
+  this.place = 0;
+}
+
+function getLength(buf, p) {
+  var initial = buf[p.place++];
+  if (!(initial & 0x80)) {
+    return initial;
+  }
+  var octetLen = initial & 0xf;
+
+  // Indefinite length or overflow
+  if (octetLen === 0 || octetLen > 4) {
+    return false;
+  }
+
+  var val = 0;
+  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
+    val <<= 8;
+    val |= buf[off];
+    val >>>= 0;
+  }
+
+  // Leading zeroes
+  if (val <= 0x7f) {
+    return false;
+  }
+
+  p.place = off;
+  return val;
+}
+
+function rmPadding(buf) {
+  var i = 0;
+  var len = buf.length - 1;
+  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
+    i++;
+  }
+  if (i === 0) {
+    return buf;
+  }
+  return buf.slice(i);
+}
+
+Signature.prototype._importDER = function _importDER(data, enc) {
+  data = utils.toArray(data, enc);
+  var p = new Position();
+  if (data[p.place++] !== 0x30) {
+    return false;
+  }
+  var len = getLength(data, p);
+  if (len === false) {
+    return false;
+  }
+  if ((len + p.place) !== data.length) {
+    return false;
+  }
+  if (data[p.place++] !== 0x02) {
+    return false;
+  }
+  var rlen = getLength(data, p);
+  if (rlen === false) {
+    return false;
+  }
+  var r = data.slice(p.place, rlen + p.place);
+  p.place += rlen;
+  if (data[p.place++] !== 0x02) {
+    return false;
+  }
+  var slen = getLength(data, p);
+  if (slen === false) {
+    return false;
+  }
+  if (data.length !== slen + p.place) {
+    return false;
+  }
+  var s = data.slice(p.place, slen + p.place);
+  if (r[0] === 0) {
+    if (r[1] & 0x80) {
+      r = r.slice(1);
+    } else {
+      // Leading zeroes
+      return false;
+    }
+  }
+  if (s[0] === 0) {
+    if (s[1] & 0x80) {
+      s = s.slice(1);
+    } else {
+      // Leading zeroes
+      return false;
+    }
+  }
+
+  this.r = new BN(r);
+  this.s = new BN(s);
+  this.recoveryParam = null;
+
+  return true;
+};
+
+function constructLength(arr, len) {
+  if (len < 0x80) {
+    arr.push(len);
+    return;
+  }
+  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
+  arr.push(octets | 0x80);
+  while (--octets) {
+    arr.push((len >>> (octets << 3)) & 0xff);
+  }
+  arr.push(len);
+}
+
+Signature.prototype.toDER = function toDER(enc) {
+  var r = this.r.toArray();
+  var s = this.s.toArray();
+
+  // Pad values
+  if (r[0] & 0x80)
+    r = [ 0 ].concat(r);
+  // Pad values
+  if (s[0] & 0x80)
+    s = [ 0 ].concat(s);
+
+  r = rmPadding(r);
+  s = rmPadding(s);
+
+  while (!s[0] && !(s[1] & 0x80)) {
+    s = s.slice(1);
+  }
+  var arr = [ 0x02 ];
+  constructLength(arr, r.length);
+  arr = arr.concat(r);
+  arr.push(0x02);
+  constructLength(arr, s.length);
+  var backHalf = arr.concat(s);
+  var res = [ 0x30 ];
+  constructLength(res, backHalf.length);
+  res = res.concat(backHalf);
+  return utils.encode(res, enc);
+};
+
+
+/***/ }),
+
+/***/ 5980:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var hash = __webpack_require__(3715);
+var curves = __webpack_require__(5427);
+var utils = __webpack_require__(953);
+var assert = utils.assert;
+var parseBytes = utils.parseBytes;
+var KeyPair = __webpack_require__(9087);
+var Signature = __webpack_require__(3622);
+
+function EDDSA(curve) {
+  assert(curve === 'ed25519', 'only tested with ed25519 so far');
+
+  if (!(this instanceof EDDSA))
+    return new EDDSA(curve);
+
+  curve = curves[curve].curve;
+  this.curve = curve;
+  this.g = curve.g;
+  this.g.precompute(curve.n.bitLength() + 1);
+
+  this.pointClass = curve.point().constructor;
+  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
+  this.hash = hash.sha512;
+}
+
+module.exports = EDDSA;
+
+/**
+* @param {Array|String} message - message bytes
+* @param {Array|String|KeyPair} secret - secret bytes or a keypair
+* @returns {Signature} - signature
+*/
+EDDSA.prototype.sign = function sign(message, secret) {
+  message = parseBytes(message);
+  var key = this.keyFromSecret(secret);
+  var r = this.hashInt(key.messagePrefix(), message);
+  var R = this.g.mul(r);
+  var Rencoded = this.encodePoint(R);
+  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
+    .mul(key.priv());
+  var S = r.add(s_).umod(this.curve.n);
+  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
+};
+
+/**
+* @param {Array} message - message bytes
+* @param {Array|String|Signature} sig - sig bytes
+* @param {Array|String|Point|KeyPair} pub - public key
+* @returns {Boolean} - true if public key matches sig of message
+*/
+EDDSA.prototype.verify = function verify(message, sig, pub) {
+  message = parseBytes(message);
+  sig = this.makeSignature(sig);
+  var key = this.keyFromPublic(pub);
+  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
+  var SG = this.g.mul(sig.S());
+  var RplusAh = sig.R().add(key.pub().mul(h));
+  return RplusAh.eq(SG);
+};
+
+EDDSA.prototype.hashInt = function hashInt() {
+  var hash = this.hash();
+  for (var i = 0; i < arguments.length; i++)
+    hash.update(arguments[i]);
+  return utils.intFromLE(hash.digest()).umod(this.curve.n);
+};
+
+EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
+  return KeyPair.fromPublic(this, pub);
+};
+
+EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
+  return KeyPair.fromSecret(this, secret);
+};
+
+EDDSA.prototype.makeSignature = function makeSignature(sig) {
+  if (sig instanceof Signature)
+    return sig;
+  return new Signature(this, sig);
+};
+
+/**
+* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
+*
+* EDDSA defines methods for encoding and decoding points and integers. These are
+* helper convenience methods, that pass along to utility functions implied
+* parameters.
+*
+*/
+EDDSA.prototype.encodePoint = function encodePoint(point) {
+  var enc = point.getY().toArray('le', this.encodingLength);
+  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
+  return enc;
+};
+
+EDDSA.prototype.decodePoint = function decodePoint(bytes) {
+  bytes = utils.parseBytes(bytes);
+
+  var lastIx = bytes.length - 1;
+  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
+  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;
+
+  var y = utils.intFromLE(normed);
+  return this.curve.pointFromY(y, xIsOdd);
+};
+
+EDDSA.prototype.encodeInt = function encodeInt(num) {
+  return num.toArray('le', this.encodingLength);
+};
+
+EDDSA.prototype.decodeInt = function decodeInt(bytes) {
+  return utils.intFromLE(bytes);
+};
+
+EDDSA.prototype.isPoint = function isPoint(val) {
+  return val instanceof this.pointClass;
+};
+
+
+/***/ }),
+
+/***/ 9087:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(953);
+var assert = utils.assert;
+var parseBytes = utils.parseBytes;
+var cachedProperty = utils.cachedProperty;
+
+/**
+* @param {EDDSA} eddsa - instance
+* @param {Object} params - public/private key parameters
+*
+* @param {Array<Byte>} [params.secret] - secret seed bytes
+* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
+* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
+*
+*/
+function KeyPair(eddsa, params) {
+  this.eddsa = eddsa;
+  this._secret = parseBytes(params.secret);
+  if (eddsa.isPoint(params.pub))
+    this._pub = params.pub;
+  else
+    this._pubBytes = parseBytes(params.pub);
+}
+
+KeyPair.fromPublic = function fromPublic(eddsa, pub) {
+  if (pub instanceof KeyPair)
+    return pub;
+  return new KeyPair(eddsa, { pub: pub });
+};
+
+KeyPair.fromSecret = function fromSecret(eddsa, secret) {
+  if (secret instanceof KeyPair)
+    return secret;
+  return new KeyPair(eddsa, { secret: secret });
+};
+
+KeyPair.prototype.secret = function secret() {
+  return this._secret;
+};
+
+cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
+  return this.eddsa.encodePoint(this.pub());
+});
+
+cachedProperty(KeyPair, 'pub', function pub() {
+  if (this._pubBytes)
+    return this.eddsa.decodePoint(this._pubBytes);
+  return this.eddsa.g.mul(this.priv());
+});
+
+cachedProperty(KeyPair, 'privBytes', function privBytes() {
+  var eddsa = this.eddsa;
+  var hash = this.hash();
+  var lastIx = eddsa.encodingLength - 1;
+
+  var a = hash.slice(0, eddsa.encodingLength);
+  a[0] &= 248;
+  a[lastIx] &= 127;
+  a[lastIx] |= 64;
+
+  return a;
+});
+
+cachedProperty(KeyPair, 'priv', function priv() {
+  return this.eddsa.decodeInt(this.privBytes());
+});
+
+cachedProperty(KeyPair, 'hash', function hash() {
+  return this.eddsa.hash().update(this.secret()).digest();
+});
+
+cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
+  return this.hash().slice(this.eddsa.encodingLength);
+});
+
+KeyPair.prototype.sign = function sign(message) {
+  assert(this._secret, 'KeyPair can only verify');
+  return this.eddsa.sign(message, this);
+};
+
+KeyPair.prototype.verify = function verify(message, sig) {
+  return this.eddsa.verify(message, sig, this);
+};
+
+KeyPair.prototype.getSecret = function getSecret(enc) {
+  assert(this._secret, 'KeyPair is public only');
+  return utils.encode(this.secret(), enc);
+};
+
+KeyPair.prototype.getPublic = function getPublic(enc) {
+  return utils.encode(this.pubBytes(), enc);
+};
+
+module.exports = KeyPair;
+
+
+/***/ }),
+
+/***/ 3622:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var BN = __webpack_require__(3550);
+var utils = __webpack_require__(953);
+var assert = utils.assert;
+var cachedProperty = utils.cachedProperty;
+var parseBytes = utils.parseBytes;
+
+/**
+* @param {EDDSA} eddsa - eddsa instance
+* @param {Array<Bytes>|Object} sig -
+* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
+* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
+* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
+* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
+*/
+function Signature(eddsa, sig) {
+  this.eddsa = eddsa;
+
+  if (typeof sig !== 'object')
+    sig = parseBytes(sig);
+
+  if (Array.isArray(sig)) {
+    sig = {
+      R: sig.slice(0, eddsa.encodingLength),
+      S: sig.slice(eddsa.encodingLength),
+    };
+  }
+
+  assert(sig.R && sig.S, 'Signature without R or S');
+
+  if (eddsa.isPoint(sig.R))
+    this._R = sig.R;
+  if (sig.S instanceof BN)
+    this._S = sig.S;
+
+  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
+  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
+}
+
+cachedProperty(Signature, 'S', function S() {
+  return this.eddsa.decodeInt(this.Sencoded());
+});
+
+cachedProperty(Signature, 'R', function R() {
+  return this.eddsa.decodePoint(this.Rencoded());
+});
+
+cachedProperty(Signature, 'Rencoded', function Rencoded() {
+  return this.eddsa.encodePoint(this.R());
+});
+
+cachedProperty(Signature, 'Sencoded', function Sencoded() {
+  return this.eddsa.encodeInt(this.S());
+});
+
+Signature.prototype.toBytes = function toBytes() {
+  return this.Rencoded().concat(this.Sencoded());
+};
+
+Signature.prototype.toHex = function toHex() {
+  return utils.encode(this.toBytes(), 'hex').toUpperCase();
+};
+
+module.exports = Signature;
+
+
+/***/ }),
+
+/***/ 1037:
+/***/ ((module) => {
+
+module.exports = {
+  doubles: {
+    step: 4,
+    points: [
+      [
+        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
+        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
+      ],
+      [
+        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
+        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
+      ],
+      [
+        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
+        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
+      ],
+      [
+        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
+        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
+      ],
+      [
+        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
+        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
+      ],
+      [
+        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
+        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
+      ],
+      [
+        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
+        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
+      ],
+      [
+        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
+        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
+      ],
+      [
+        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
+        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
+      ],
+      [
+        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
+        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
+      ],
+      [
+        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
+        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
+      ],
+      [
+        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
+        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
+      ],
+      [
+        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
+        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
+      ],
+      [
+        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
+        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
+      ],
+      [
+        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
+        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
+      ],
+      [
+        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
+        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
+      ],
+      [
+        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
+        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
+      ],
+      [
+        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
+        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
+      ],
+      [
+        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
+        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
+      ],
+      [
+        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
+        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
+      ],
+      [
+        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
+        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
+      ],
+      [
+        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
+        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
+      ],
+      [
+        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
+        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
+      ],
+      [
+        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
+        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
+      ],
+      [
+        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
+        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
+      ],
+      [
+        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
+        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
+      ],
+      [
+        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
+        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
+      ],
+      [
+        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
+        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
+      ],
+      [
+        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
+        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
+      ],
+      [
+        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
+        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
+      ],
+      [
+        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
+        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
+      ],
+      [
+        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
+        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
+      ],
+      [
+        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
+        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
+      ],
+      [
+        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
+        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
+      ],
+      [
+        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
+        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
+      ],
+      [
+        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
+        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
+      ],
+      [
+        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
+        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
+      ],
+      [
+        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
+        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
+      ],
+      [
+        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
+        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
+      ],
+      [
+        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
+        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
+      ],
+      [
+        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
+        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
+      ],
+      [
+        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
+        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
+      ],
+      [
+        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
+        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
+      ],
+      [
+        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
+        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
+      ],
+      [
+        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
+        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
+      ],
+      [
+        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
+        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
+      ],
+      [
+        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
+        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
+      ],
+      [
+        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
+        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
+      ],
+      [
+        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
+        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
+      ],
+      [
+        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
+        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
+      ],
+      [
+        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
+        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
+      ],
+      [
+        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
+        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
+      ],
+      [
+        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
+        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
+      ],
+      [
+        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
+        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
+      ],
+      [
+        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
+        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
+      ],
+      [
+        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
+        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
+      ],
+      [
+        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
+        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
+      ],
+      [
+        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
+        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
+      ],
+      [
+        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
+        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
+      ],
+      [
+        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
+        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
+      ],
+      [
+        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
+        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
+      ],
+      [
+        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
+        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
+      ],
+      [
+        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
+        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
+      ],
+      [
+        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
+        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
+      ],
+      [
+        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
+        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
+      ],
+    ],
+  },
+  naf: {
+    wnd: 7,
+    points: [
+      [
+        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
+        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
+      ],
+      [
+        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
+        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
+      ],
+      [
+        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
+        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
+      ],
+      [
+        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
+        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
+      ],
+      [
+        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
+        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
+      ],
+      [
+        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
+        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
+      ],
+      [
+        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
+        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
+      ],
+      [
+        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
+        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
+      ],
+      [
+        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
+        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
+      ],
+      [
+        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
+        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
+      ],
+      [
+        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
+        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
+      ],
+      [
+        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
+        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
+      ],
+      [
+        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
+        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
+      ],
+      [
+        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
+        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
+      ],
+      [
+        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
+        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
+      ],
+      [
+        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
+        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
+      ],
+      [
+        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
+        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
+      ],
+      [
+        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
+        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
+      ],
+      [
+        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
+        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
+      ],
+      [
+        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
+        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
+      ],
+      [
+        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
+        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
+      ],
+      [
+        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
+        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
+      ],
+      [
+        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
+        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
+      ],
+      [
+        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
+        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
+      ],
+      [
+        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
+        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
+      ],
+      [
+        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
+        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
+      ],
+      [
+        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
+        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
+      ],
+      [
+        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
+        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
+      ],
+      [
+        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
+        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
+      ],
+      [
+        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
+        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
+      ],
+      [
+        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
+        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
+      ],
+      [
+        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
+        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
+      ],
+      [
+        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
+        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
+      ],
+      [
+        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
+        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
+      ],
+      [
+        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
+        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
+      ],
+      [
+        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
+        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
+      ],
+      [
+        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
+        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
+      ],
+      [
+        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
+        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
+      ],
+      [
+        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
+        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
+      ],
+      [
+        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
+        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
+      ],
+      [
+        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
+        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
+      ],
+      [
+        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
+        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
+      ],
+      [
+        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
+        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
+      ],
+      [
+        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
+        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
+      ],
+      [
+        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
+        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
+      ],
+      [
+        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
+        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
+      ],
+      [
+        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
+        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
+      ],
+      [
+        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
+        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
+      ],
+      [
+        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
+        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
+      ],
+      [
+        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
+        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
+      ],
+      [
+        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
+        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
+      ],
+      [
+        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
+        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
+      ],
+      [
+        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
+        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
+      ],
+      [
+        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
+        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
+      ],
+      [
+        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
+        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
+      ],
+      [
+        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
+        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
+      ],
+      [
+        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
+        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
+      ],
+      [
+        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
+        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
+      ],
+      [
+        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
+        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
+      ],
+      [
+        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
+        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
+      ],
+      [
+        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
+        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
+      ],
+      [
+        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
+        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
+      ],
+      [
+        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
+        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
+      ],
+      [
+        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
+        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
+      ],
+      [
+        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
+        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
+      ],
+      [
+        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
+        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
+      ],
+      [
+        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
+        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
+      ],
+      [
+        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
+        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
+      ],
+      [
+        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
+        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
+      ],
+      [
+        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
+        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
+      ],
+      [
+        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
+        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
+      ],
+      [
+        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
+        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
+      ],
+      [
+        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
+        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
+      ],
+      [
+        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
+        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
+      ],
+      [
+        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
+        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
+      ],
+      [
+        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
+        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
+      ],
+      [
+        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
+        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
+      ],
+      [
+        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
+        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
+      ],
+      [
+        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
+        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
+      ],
+      [
+        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
+        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
+      ],
+      [
+        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
+        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
+      ],
+      [
+        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
+        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
+      ],
+      [
+        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
+        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
+      ],
+      [
+        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
+        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
+      ],
+      [
+        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
+        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
+      ],
+      [
+        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
+        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
+      ],
+      [
+        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
+        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
+      ],
+      [
+        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
+        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
+      ],
+      [
+        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
+        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
+      ],
+      [
+        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
+        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
+      ],
+      [
+        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
+        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
+      ],
+      [
+        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
+        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
+      ],
+      [
+        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
+        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
+      ],
+      [
+        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
+        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
+      ],
+      [
+        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
+        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
+      ],
+      [
+        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
+        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
+      ],
+      [
+        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
+        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
+      ],
+      [
+        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
+        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
+      ],
+      [
+        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
+        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
+      ],
+      [
+        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
+        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
+      ],
+      [
+        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
+        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
+      ],
+      [
+        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
+        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
+      ],
+      [
+        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
+        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
+      ],
+      [
+        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
+        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
+      ],
+      [
+        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
+        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
+      ],
+      [
+        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
+        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
+      ],
+      [
+        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
+        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
+      ],
+      [
+        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
+        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
+      ],
+      [
+        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
+        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
+      ],
+      [
+        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
+        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
+      ],
+      [
+        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
+        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
+      ],
+      [
+        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
+        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
+      ],
+      [
+        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
+        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
+      ],
+      [
+        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
+        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
+      ],
+      [
+        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
+        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
+      ],
+      [
+        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
+        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
+      ],
+      [
+        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
+        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
+      ],
+      [
+        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
+        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
+      ],
+      [
+        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
+        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
+      ],
+      [
+        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
+        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
+      ],
+      [
+        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
+        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
+      ],
+      [
+        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
+        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
+      ],
+      [
+        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
+        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
+      ],
+      [
+        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
+        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
+      ],
+      [
+        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
+        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
+      ],
+      [
+        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
+        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
+      ],
+      [
+        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
+        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
+      ],
+    ],
+  },
+};
+
+
+/***/ }),
+
+/***/ 953:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = exports;
+var BN = __webpack_require__(3550);
+var minAssert = __webpack_require__(9746);
+var minUtils = __webpack_require__(4504);
+
+utils.assert = minAssert;
+utils.toArray = minUtils.toArray;
+utils.zero2 = minUtils.zero2;
+utils.toHex = minUtils.toHex;
+utils.encode = minUtils.encode;
+
+// Represent num in a w-NAF form
+function getNAF(num, w, bits) {
+  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
+  naf.fill(0);
+
+  var ws = 1 << (w + 1);
+  var k = num.clone();
+
+  for (var i = 0; i < naf.length; i++) {
+    var z;
+    var mod = k.andln(ws - 1);
+    if (k.isOdd()) {
+      if (mod > (ws >> 1) - 1)
+        z = (ws >> 1) - mod;
+      else
+        z = mod;
+      k.isubn(z);
+    } else {
+      z = 0;
+    }
+
+    naf[i] = z;
+    k.iushrn(1);
+  }
+
+  return naf;
+}
+utils.getNAF = getNAF;
+
+// Represent k1, k2 in a Joint Sparse Form
+function getJSF(k1, k2) {
+  var jsf = [
+    [],
+    [],
+  ];
+
+  k1 = k1.clone();
+  k2 = k2.clone();
+  var d1 = 0;
+  var d2 = 0;
+  var m8;
+  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
+    // First phase
+    var m14 = (k1.andln(3) + d1) & 3;
+    var m24 = (k2.andln(3) + d2) & 3;
+    if (m14 === 3)
+      m14 = -1;
+    if (m24 === 3)
+      m24 = -1;
+    var u1;
+    if ((m14 & 1) === 0) {
+      u1 = 0;
+    } else {
+      m8 = (k1.andln(7) + d1) & 7;
+      if ((m8 === 3 || m8 === 5) && m24 === 2)
+        u1 = -m14;
+      else
+        u1 = m14;
+    }
+    jsf[0].push(u1);
+
+    var u2;
+    if ((m24 & 1) === 0) {
+      u2 = 0;
+    } else {
+      m8 = (k2.andln(7) + d2) & 7;
+      if ((m8 === 3 || m8 === 5) && m14 === 2)
+        u2 = -m24;
+      else
+        u2 = m24;
+    }
+    jsf[1].push(u2);
+
+    // Second phase
+    if (2 * d1 === u1 + 1)
+      d1 = 1 - d1;
+    if (2 * d2 === u2 + 1)
+      d2 = 1 - d2;
+    k1.iushrn(1);
+    k2.iushrn(1);
+  }
+
+  return jsf;
+}
+utils.getJSF = getJSF;
+
+function cachedProperty(obj, name, computer) {
+  var key = '_' + name;
+  obj.prototype[name] = function cachedProperty() {
+    return this[key] !== undefined ? this[key] :
+      this[key] = computer.call(this);
+  };
+}
+utils.cachedProperty = cachedProperty;
+
+function parseBytes(bytes) {
+  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
+    bytes;
+}
+utils.parseBytes = parseBytes;
+
+function intFromLE(bytes) {
+  return new BN(bytes, 'hex', 'le');
+}
+utils.intFromLE = intFromLE;
+
+
+
+/***/ }),
+
+/***/ 3715:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+var hash = exports;
+
+hash.utils = __webpack_require__(6436);
+hash.common = __webpack_require__(5772);
+hash.sha = __webpack_require__(9041);
+hash.ripemd = __webpack_require__(2949);
+hash.hmac = __webpack_require__(2344);
+
+// Proxy hash functions to the main object
+hash.sha1 = hash.sha.sha1;
+hash.sha256 = hash.sha.sha256;
+hash.sha224 = hash.sha.sha224;
+hash.sha384 = hash.sha.sha384;
+hash.sha512 = hash.sha.sha512;
+hash.ripemd160 = hash.ripemd.ripemd160;
+
+
+/***/ }),
+
+/***/ 5772:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var assert = __webpack_require__(9746);
+
+function BlockHash() {
+  this.pending = null;
+  this.pendingTotal = 0;
+  this.blockSize = this.constructor.blockSize;
+  this.outSize = this.constructor.outSize;
+  this.hmacStrength = this.constructor.hmacStrength;
+  this.padLength = this.constructor.padLength / 8;
+  this.endian = 'big';
+
+  this._delta8 = this.blockSize / 8;
+  this._delta32 = this.blockSize / 32;
+}
+exports.BlockHash = BlockHash;
+
+BlockHash.prototype.update = function update(msg, enc) {
+  // Convert message to array, pad it, and join into 32bit blocks
+  msg = utils.toArray(msg, enc);
+  if (!this.pending)
+    this.pending = msg;
+  else
+    this.pending = this.pending.concat(msg);
+  this.pendingTotal += msg.length;
+
+  // Enough data, try updating
+  if (this.pending.length >= this._delta8) {
+    msg = this.pending;
+
+    // Process pending data in blocks
+    var r = msg.length % this._delta8;
+    this.pending = msg.slice(msg.length - r, msg.length);
+    if (this.pending.length === 0)
+      this.pending = null;
+
+    msg = utils.join32(msg, 0, msg.length - r, this.endian);
+    for (var i = 0; i < msg.length; i += this._delta32)
+      this._update(msg, i, i + this._delta32);
+  }
+
+  return this;
+};
+
+BlockHash.prototype.digest = function digest(enc) {
+  this.update(this._pad());
+  assert(this.pending === null);
+
+  return this._digest(enc);
+};
+
+BlockHash.prototype._pad = function pad() {
+  var len = this.pendingTotal;
+  var bytes = this._delta8;
+  var k = bytes - ((len + this.padLength) % bytes);
+  var res = new Array(k + this.padLength);
+  res[0] = 0x80;
+  for (var i = 1; i < k; i++)
+    res[i] = 0;
+
+  // Append length
+  len <<= 3;
+  if (this.endian === 'big') {
+    for (var t = 8; t < this.padLength; t++)
+      res[i++] = 0;
+
+    res[i++] = 0;
+    res[i++] = 0;
+    res[i++] = 0;
+    res[i++] = 0;
+    res[i++] = (len >>> 24) & 0xff;
+    res[i++] = (len >>> 16) & 0xff;
+    res[i++] = (len >>> 8) & 0xff;
+    res[i++] = len & 0xff;
+  } else {
+    res[i++] = len & 0xff;
+    res[i++] = (len >>> 8) & 0xff;
+    res[i++] = (len >>> 16) & 0xff;
+    res[i++] = (len >>> 24) & 0xff;
+    res[i++] = 0;
+    res[i++] = 0;
+    res[i++] = 0;
+    res[i++] = 0;
+
+    for (t = 8; t < this.padLength; t++)
+      res[i++] = 0;
+  }
+
+  return res;
+};
+
+
+/***/ }),
+
+/***/ 2344:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var assert = __webpack_require__(9746);
+
+function Hmac(hash, key, enc) {
+  if (!(this instanceof Hmac))
+    return new Hmac(hash, key, enc);
+  this.Hash = hash;
+  this.blockSize = hash.blockSize / 8;
+  this.outSize = hash.outSize / 8;
+  this.inner = null;
+  this.outer = null;
+
+  this._init(utils.toArray(key, enc));
+}
+module.exports = Hmac;
+
+Hmac.prototype._init = function init(key) {
+  // Shorten key, if needed
+  if (key.length > this.blockSize)
+    key = new this.Hash().update(key).digest();
+  assert(key.length <= this.blockSize);
+
+  // Add padding to key
+  for (var i = key.length; i < this.blockSize; i++)
+    key.push(0);
+
+  for (i = 0; i < key.length; i++)
+    key[i] ^= 0x36;
+  this.inner = new this.Hash().update(key);
+
+  // 0x36 ^ 0x5c = 0x6a
+  for (i = 0; i < key.length; i++)
+    key[i] ^= 0x6a;
+  this.outer = new this.Hash().update(key);
+};
+
+Hmac.prototype.update = function update(msg, enc) {
+  this.inner.update(msg, enc);
+  return this;
+};
+
+Hmac.prototype.digest = function digest(enc) {
+  this.outer.update(this.inner.digest());
+  return this.outer.digest(enc);
+};
+
+
+/***/ }),
+
+/***/ 2949:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var common = __webpack_require__(5772);
+
+var rotl32 = utils.rotl32;
+var sum32 = utils.sum32;
+var sum32_3 = utils.sum32_3;
+var sum32_4 = utils.sum32_4;
+var BlockHash = common.BlockHash;
+
+function RIPEMD160() {
+  if (!(this instanceof RIPEMD160))
+    return new RIPEMD160();
+
+  BlockHash.call(this);
+
+  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
+  this.endian = 'little';
+}
+utils.inherits(RIPEMD160, BlockHash);
+exports.ripemd160 = RIPEMD160;
+
+RIPEMD160.blockSize = 512;
+RIPEMD160.outSize = 160;
+RIPEMD160.hmacStrength = 192;
+RIPEMD160.padLength = 64;
+
+RIPEMD160.prototype._update = function update(msg, start) {
+  var A = this.h[0];
+  var B = this.h[1];
+  var C = this.h[2];
+  var D = this.h[3];
+  var E = this.h[4];
+  var Ah = A;
+  var Bh = B;
+  var Ch = C;
+  var Dh = D;
+  var Eh = E;
+  for (var j = 0; j < 80; j++) {
+    var T = sum32(
+      rotl32(
+        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
+        s[j]),
+      E);
+    A = E;
+    E = D;
+    D = rotl32(C, 10);
+    C = B;
+    B = T;
+    T = sum32(
+      rotl32(
+        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
+        sh[j]),
+      Eh);
+    Ah = Eh;
+    Eh = Dh;
+    Dh = rotl32(Ch, 10);
+    Ch = Bh;
+    Bh = T;
+  }
+  T = sum32_3(this.h[1], C, Dh);
+  this.h[1] = sum32_3(this.h[2], D, Eh);
+  this.h[2] = sum32_3(this.h[3], E, Ah);
+  this.h[3] = sum32_3(this.h[4], A, Bh);
+  this.h[4] = sum32_3(this.h[0], B, Ch);
+  this.h[0] = T;
+};
+
+RIPEMD160.prototype._digest = function digest(enc) {
+  if (enc === 'hex')
+    return utils.toHex32(this.h, 'little');
+  else
+    return utils.split32(this.h, 'little');
+};
+
+function f(j, x, y, z) {
+  if (j <= 15)
+    return x ^ y ^ z;
+  else if (j <= 31)
+    return (x & y) | ((~x) & z);
+  else if (j <= 47)
+    return (x | (~y)) ^ z;
+  else if (j <= 63)
+    return (x & z) | (y & (~z));
+  else
+    return x ^ (y | (~z));
+}
+
+function K(j) {
+  if (j <= 15)
+    return 0x00000000;
+  else if (j <= 31)
+    return 0x5a827999;
+  else if (j <= 47)
+    return 0x6ed9eba1;
+  else if (j <= 63)
+    return 0x8f1bbcdc;
+  else
+    return 0xa953fd4e;
+}
+
+function Kh(j) {
+  if (j <= 15)
+    return 0x50a28be6;
+  else if (j <= 31)
+    return 0x5c4dd124;
+  else if (j <= 47)
+    return 0x6d703ef3;
+  else if (j <= 63)
+    return 0x7a6d76e9;
+  else
+    return 0x00000000;
+}
+
+var r = [
+  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
+  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
+  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
+  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
+  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
+];
+
+var rh = [
+  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
+  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
+  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
+  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
+  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
+];
+
+var s = [
+  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
+  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
+  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
+  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
+  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
+];
+
+var sh = [
+  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
+  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
+  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
+  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
+  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
+];
+
+
+/***/ }),
+
+/***/ 9041:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+exports.sha1 = __webpack_require__(4761);
+exports.sha224 = __webpack_require__(799);
+exports.sha256 = __webpack_require__(9344);
+exports.sha384 = __webpack_require__(772);
+exports.sha512 = __webpack_require__(5900);
+
+
+/***/ }),
+
+/***/ 4761:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var common = __webpack_require__(5772);
+var shaCommon = __webpack_require__(7038);
+
+var rotl32 = utils.rotl32;
+var sum32 = utils.sum32;
+var sum32_5 = utils.sum32_5;
+var ft_1 = shaCommon.ft_1;
+var BlockHash = common.BlockHash;
+
+var sha1_K = [
+  0x5A827999, 0x6ED9EBA1,
+  0x8F1BBCDC, 0xCA62C1D6
+];
+
+function SHA1() {
+  if (!(this instanceof SHA1))
+    return new SHA1();
+
+  BlockHash.call(this);
+  this.h = [
+    0x67452301, 0xefcdab89, 0x98badcfe,
+    0x10325476, 0xc3d2e1f0 ];
+  this.W = new Array(80);
+}
+
+utils.inherits(SHA1, BlockHash);
+module.exports = SHA1;
+
+SHA1.blockSize = 512;
+SHA1.outSize = 160;
+SHA1.hmacStrength = 80;
+SHA1.padLength = 64;
+
+SHA1.prototype._update = function _update(msg, start) {
+  var W = this.W;
+
+  for (var i = 0; i < 16; i++)
+    W[i] = msg[start + i];
+
+  for(; i < W.length; i++)
+    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
+
+  var a = this.h[0];
+  var b = this.h[1];
+  var c = this.h[2];
+  var d = this.h[3];
+  var e = this.h[4];
+
+  for (i = 0; i < W.length; i++) {
+    var s = ~~(i / 20);
+    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
+    e = d;
+    d = c;
+    c = rotl32(b, 30);
+    b = a;
+    a = t;
+  }
+
+  this.h[0] = sum32(this.h[0], a);
+  this.h[1] = sum32(this.h[1], b);
+  this.h[2] = sum32(this.h[2], c);
+  this.h[3] = sum32(this.h[3], d);
+  this.h[4] = sum32(this.h[4], e);
+};
+
+SHA1.prototype._digest = function digest(enc) {
+  if (enc === 'hex')
+    return utils.toHex32(this.h, 'big');
+  else
+    return utils.split32(this.h, 'big');
+};
+
+
+/***/ }),
+
+/***/ 799:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var SHA256 = __webpack_require__(9344);
+
+function SHA224() {
+  if (!(this instanceof SHA224))
+    return new SHA224();
+
+  SHA256.call(this);
+  this.h = [
+    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
+    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
+}
+utils.inherits(SHA224, SHA256);
+module.exports = SHA224;
+
+SHA224.blockSize = 512;
+SHA224.outSize = 224;
+SHA224.hmacStrength = 192;
+SHA224.padLength = 64;
+
+SHA224.prototype._digest = function digest(enc) {
+  // Just truncate output
+  if (enc === 'hex')
+    return utils.toHex32(this.h.slice(0, 7), 'big');
+  else
+    return utils.split32(this.h.slice(0, 7), 'big');
+};
+
+
+
+/***/ }),
+
+/***/ 9344:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var common = __webpack_require__(5772);
+var shaCommon = __webpack_require__(7038);
+var assert = __webpack_require__(9746);
+
+var sum32 = utils.sum32;
+var sum32_4 = utils.sum32_4;
+var sum32_5 = utils.sum32_5;
+var ch32 = shaCommon.ch32;
+var maj32 = shaCommon.maj32;
+var s0_256 = shaCommon.s0_256;
+var s1_256 = shaCommon.s1_256;
+var g0_256 = shaCommon.g0_256;
+var g1_256 = shaCommon.g1_256;
+
+var BlockHash = common.BlockHash;
+
+var sha256_K = [
+  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
+  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
+  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
+  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
+  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
+  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
+  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
+  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
+  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
+  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
+  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
+  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
+  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
+  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
+  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
+  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
+];
+
+function SHA256() {
+  if (!(this instanceof SHA256))
+    return new SHA256();
+
+  BlockHash.call(this);
+  this.h = [
+    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
+    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
+  ];
+  this.k = sha256_K;
+  this.W = new Array(64);
+}
+utils.inherits(SHA256, BlockHash);
+module.exports = SHA256;
+
+SHA256.blockSize = 512;
+SHA256.outSize = 256;
+SHA256.hmacStrength = 192;
+SHA256.padLength = 64;
+
+SHA256.prototype._update = function _update(msg, start) {
+  var W = this.W;
+
+  for (var i = 0; i < 16; i++)
+    W[i] = msg[start + i];
+  for (; i < W.length; i++)
+    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
+
+  var a = this.h[0];
+  var b = this.h[1];
+  var c = this.h[2];
+  var d = this.h[3];
+  var e = this.h[4];
+  var f = this.h[5];
+  var g = this.h[6];
+  var h = this.h[7];
+
+  assert(this.k.length === W.length);
+  for (i = 0; i < W.length; i++) {
+    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
+    var T2 = sum32(s0_256(a), maj32(a, b, c));
+    h = g;
+    g = f;
+    f = e;
+    e = sum32(d, T1);
+    d = c;
+    c = b;
+    b = a;
+    a = sum32(T1, T2);
+  }
+
+  this.h[0] = sum32(this.h[0], a);
+  this.h[1] = sum32(this.h[1], b);
+  this.h[2] = sum32(this.h[2], c);
+  this.h[3] = sum32(this.h[3], d);
+  this.h[4] = sum32(this.h[4], e);
+  this.h[5] = sum32(this.h[5], f);
+  this.h[6] = sum32(this.h[6], g);
+  this.h[7] = sum32(this.h[7], h);
+};
+
+SHA256.prototype._digest = function digest(enc) {
+  if (enc === 'hex')
+    return utils.toHex32(this.h, 'big');
+  else
+    return utils.split32(this.h, 'big');
+};
+
+
+/***/ }),
+
+/***/ 772:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+
+var SHA512 = __webpack_require__(5900);
+
+function SHA384() {
+  if (!(this instanceof SHA384))
+    return new SHA384();
+
+  SHA512.call(this);
+  this.h = [
+    0xcbbb9d5d, 0xc1059ed8,
+    0x629a292a, 0x367cd507,
+    0x9159015a, 0x3070dd17,
+    0x152fecd8, 0xf70e5939,
+    0x67332667, 0xffc00b31,
+    0x8eb44a87, 0x68581511,
+    0xdb0c2e0d, 0x64f98fa7,
+    0x47b5481d, 0xbefa4fa4 ];
+}
+utils.inherits(SHA384, SHA512);
+module.exports = SHA384;
+
+SHA384.blockSize = 1024;
+SHA384.outSize = 384;
+SHA384.hmacStrength = 192;
+SHA384.padLength = 128;
+
+SHA384.prototype._digest = function digest(enc) {
+  if (enc === 'hex')
+    return utils.toHex32(this.h.slice(0, 12), 'big');
+  else
+    return utils.split32(this.h.slice(0, 12), 'big');
+};
+
+
+/***/ }),
+
+/***/ 5900:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var common = __webpack_require__(5772);
+var assert = __webpack_require__(9746);
+
+var rotr64_hi = utils.rotr64_hi;
+var rotr64_lo = utils.rotr64_lo;
+var shr64_hi = utils.shr64_hi;
+var shr64_lo = utils.shr64_lo;
+var sum64 = utils.sum64;
+var sum64_hi = utils.sum64_hi;
+var sum64_lo = utils.sum64_lo;
+var sum64_4_hi = utils.sum64_4_hi;
+var sum64_4_lo = utils.sum64_4_lo;
+var sum64_5_hi = utils.sum64_5_hi;
+var sum64_5_lo = utils.sum64_5_lo;
+
+var BlockHash = common.BlockHash;
+
+var sha512_K = [
+  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
+  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
+  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
+  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
+  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
+  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
+  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
+  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
+  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
+  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
+  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
+  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
+  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
+  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
+  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
+  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
+  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
+  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
+  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
+  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
+  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
+  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
+  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
+  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
+  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
+  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
+  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
+  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
+  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
+  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
+  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
+  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
+  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
+  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
+  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
+  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
+  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
+  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
+  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
+  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
+];
+
+function SHA512() {
+  if (!(this instanceof SHA512))
+    return new SHA512();
+
+  BlockHash.call(this);
+  this.h = [
+    0x6a09e667, 0xf3bcc908,
+    0xbb67ae85, 0x84caa73b,
+    0x3c6ef372, 0xfe94f82b,
+    0xa54ff53a, 0x5f1d36f1,
+    0x510e527f, 0xade682d1,
+    0x9b05688c, 0x2b3e6c1f,
+    0x1f83d9ab, 0xfb41bd6b,
+    0x5be0cd19, 0x137e2179 ];
+  this.k = sha512_K;
+  this.W = new Array(160);
+}
+utils.inherits(SHA512, BlockHash);
+module.exports = SHA512;
+
+SHA512.blockSize = 1024;
+SHA512.outSize = 512;
+SHA512.hmacStrength = 192;
+SHA512.padLength = 128;
+
+SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
+  var W = this.W;
+
+  // 32 x 32bit words
+  for (var i = 0; i < 32; i++)
+    W[i] = msg[start + i];
+  for (; i < W.length; i += 2) {
+    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
+    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
+    var c1_hi = W[i - 14];  // i - 7
+    var c1_lo = W[i - 13];
+    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
+    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
+    var c3_hi = W[i - 32];  // i - 16
+    var c3_lo = W[i - 31];
+
+    W[i] = sum64_4_hi(
+      c0_hi, c0_lo,
+      c1_hi, c1_lo,
+      c2_hi, c2_lo,
+      c3_hi, c3_lo);
+    W[i + 1] = sum64_4_lo(
+      c0_hi, c0_lo,
+      c1_hi, c1_lo,
+      c2_hi, c2_lo,
+      c3_hi, c3_lo);
+  }
+};
+
+SHA512.prototype._update = function _update(msg, start) {
+  this._prepareBlock(msg, start);
+
+  var W = this.W;
+
+  var ah = this.h[0];
+  var al = this.h[1];
+  var bh = this.h[2];
+  var bl = this.h[3];
+  var ch = this.h[4];
+  var cl = this.h[5];
+  var dh = this.h[6];
+  var dl = this.h[7];
+  var eh = this.h[8];
+  var el = this.h[9];
+  var fh = this.h[10];
+  var fl = this.h[11];
+  var gh = this.h[12];
+  var gl = this.h[13];
+  var hh = this.h[14];
+  var hl = this.h[15];
+
+  assert(this.k.length === W.length);
+  for (var i = 0; i < W.length; i += 2) {
+    var c0_hi = hh;
+    var c0_lo = hl;
+    var c1_hi = s1_512_hi(eh, el);
+    var c1_lo = s1_512_lo(eh, el);
+    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
+    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
+    var c3_hi = this.k[i];
+    var c3_lo = this.k[i + 1];
+    var c4_hi = W[i];
+    var c4_lo = W[i + 1];
+
+    var T1_hi = sum64_5_hi(
+      c0_hi, c0_lo,
+      c1_hi, c1_lo,
+      c2_hi, c2_lo,
+      c3_hi, c3_lo,
+      c4_hi, c4_lo);
+    var T1_lo = sum64_5_lo(
+      c0_hi, c0_lo,
+      c1_hi, c1_lo,
+      c2_hi, c2_lo,
+      c3_hi, c3_lo,
+      c4_hi, c4_lo);
+
+    c0_hi = s0_512_hi(ah, al);
+    c0_lo = s0_512_lo(ah, al);
+    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
+    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
+
+    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
+    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
+
+    hh = gh;
+    hl = gl;
+
+    gh = fh;
+    gl = fl;
+
+    fh = eh;
+    fl = el;
+
+    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
+    el = sum64_lo(dl, dl, T1_hi, T1_lo);
+
+    dh = ch;
+    dl = cl;
+
+    ch = bh;
+    cl = bl;
+
+    bh = ah;
+    bl = al;
+
+    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
+    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
+  }
+
+  sum64(this.h, 0, ah, al);
+  sum64(this.h, 2, bh, bl);
+  sum64(this.h, 4, ch, cl);
+  sum64(this.h, 6, dh, dl);
+  sum64(this.h, 8, eh, el);
+  sum64(this.h, 10, fh, fl);
+  sum64(this.h, 12, gh, gl);
+  sum64(this.h, 14, hh, hl);
+};
+
+SHA512.prototype._digest = function digest(enc) {
+  if (enc === 'hex')
+    return utils.toHex32(this.h, 'big');
+  else
+    return utils.split32(this.h, 'big');
+};
+
+function ch64_hi(xh, xl, yh, yl, zh) {
+  var r = (xh & yh) ^ ((~xh) & zh);
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function ch64_lo(xh, xl, yh, yl, zh, zl) {
+  var r = (xl & yl) ^ ((~xl) & zl);
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function maj64_hi(xh, xl, yh, yl, zh) {
+  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function maj64_lo(xh, xl, yh, yl, zh, zl) {
+  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function s0_512_hi(xh, xl) {
+  var c0_hi = rotr64_hi(xh, xl, 28);
+  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
+  var c2_hi = rotr64_hi(xl, xh, 7);  // 39
+
+  var r = c0_hi ^ c1_hi ^ c2_hi;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function s0_512_lo(xh, xl) {
+  var c0_lo = rotr64_lo(xh, xl, 28);
+  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
+  var c2_lo = rotr64_lo(xl, xh, 7);  // 39
+
+  var r = c0_lo ^ c1_lo ^ c2_lo;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function s1_512_hi(xh, xl) {
+  var c0_hi = rotr64_hi(xh, xl, 14);
+  var c1_hi = rotr64_hi(xh, xl, 18);
+  var c2_hi = rotr64_hi(xl, xh, 9);  // 41
+
+  var r = c0_hi ^ c1_hi ^ c2_hi;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function s1_512_lo(xh, xl) {
+  var c0_lo = rotr64_lo(xh, xl, 14);
+  var c1_lo = rotr64_lo(xh, xl, 18);
+  var c2_lo = rotr64_lo(xl, xh, 9);  // 41
+
+  var r = c0_lo ^ c1_lo ^ c2_lo;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function g0_512_hi(xh, xl) {
+  var c0_hi = rotr64_hi(xh, xl, 1);
+  var c1_hi = rotr64_hi(xh, xl, 8);
+  var c2_hi = shr64_hi(xh, xl, 7);
+
+  var r = c0_hi ^ c1_hi ^ c2_hi;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function g0_512_lo(xh, xl) {
+  var c0_lo = rotr64_lo(xh, xl, 1);
+  var c1_lo = rotr64_lo(xh, xl, 8);
+  var c2_lo = shr64_lo(xh, xl, 7);
+
+  var r = c0_lo ^ c1_lo ^ c2_lo;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function g1_512_hi(xh, xl) {
+  var c0_hi = rotr64_hi(xh, xl, 19);
+  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
+  var c2_hi = shr64_hi(xh, xl, 6);
+
+  var r = c0_hi ^ c1_hi ^ c2_hi;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+function g1_512_lo(xh, xl) {
+  var c0_lo = rotr64_lo(xh, xl, 19);
+  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
+  var c2_lo = shr64_lo(xh, xl, 6);
+
+  var r = c0_lo ^ c1_lo ^ c2_lo;
+  if (r < 0)
+    r += 0x100000000;
+  return r;
+}
+
+
+/***/ }),
+
+/***/ 7038:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var utils = __webpack_require__(6436);
+var rotr32 = utils.rotr32;
+
+function ft_1(s, x, y, z) {
+  if (s === 0)
+    return ch32(x, y, z);
+  if (s === 1 || s === 3)
+    return p32(x, y, z);
+  if (s === 2)
+    return maj32(x, y, z);
+}
+exports.ft_1 = ft_1;
+
+function ch32(x, y, z) {
+  return (x & y) ^ ((~x) & z);
+}
+exports.ch32 = ch32;
+
+function maj32(x, y, z) {
+  return (x & y) ^ (x & z) ^ (y & z);
+}
+exports.maj32 = maj32;
+
+function p32(x, y, z) {
+  return x ^ y ^ z;
+}
+exports.p32 = p32;
+
+function s0_256(x) {
+  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
+}
+exports.s0_256 = s0_256;
+
+function s1_256(x) {
+  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
+}
+exports.s1_256 = s1_256;
+
+function g0_256(x) {
+  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
+}
+exports.g0_256 = g0_256;
+
+function g1_256(x) {
+  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
+}
+exports.g1_256 = g1_256;
+
+
+/***/ }),
+
+/***/ 6436:
+/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+"use strict";
+
+
+var assert = __webpack_require__(9746);
+var inherits = __webpack_require__(5717);
+
+exports.inherits = inherits;
+
+function isSurrogatePair(msg, i) {
+  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
+    return false;
+  }
+  if (i < 0 || i + 1 >= msg.length) {
+    return false;
+  }
+  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
+}
+
+function toArray(msg, enc) {
+  if (Array.isArray(msg))
+    return msg.slice();
+  if (!msg)
+    return [];
+  var res = [];
+  if (typeof msg === 'string') {
+    if (!enc) {
+      // Inspired by stringToUtf8ByteArray() in closure-library by Google
+      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
+      // Apache License 2.0
+      // https://github.com/google/closure-library/blob/master/LICENSE
+      var p = 0;
+      for (var i = 0; i < msg.length; i++) {
+        var c = msg.charCodeAt(i);
+        if (c < 128) {
+          res[p++] = c;
+        } else if (c < 2048) {
+          res[p++] = (c >> 6) | 192;
+          res[p++] = (c & 63) | 128;
+        } else if (isSurrogatePair(msg, i)) {
+          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
+          res[p++] = (c >> 18) | 240;
+          res[p++] = ((c >> 12) & 63) | 128;
+          res[p++] = ((c >> 6) & 63) | 128;
+          res[p++] = (c & 63) | 128;
+        } else {
+          res[p++] = (c >> 12) | 224;
+          res[p++] = ((c >> 6) & 63) | 128;
+          res[p++] = (c & 63) | 128;
+        }
+      }
+    } else if (enc === 'hex') {
+      msg = msg.replace(/[^a-z0-9]+/ig, '');
+      if (msg.length % 2 !== 0)
+        msg = '0' + msg;
+      for (i = 0; i < msg.length; i += 2)
+        res.push(parseInt(msg[i] + msg[i + 1], 16));
+    }
+  } else {
+    for (i = 0; i < msg.length; i++)
+      res[i] = msg[i] | 0;
+  }
+  return res;
+}
+exports.toArray = toArray;
+
+function toHex(msg) {
+  var res = '';
+  for (var i = 0; i < msg.length; i++)
+    res += zero2(msg[i].toString(16));
+  return res;
+}
+exports.toHex = toHex;
+
+function htonl(w) {
+  var res = (w >>> 24) |
+            ((w >>> 8) & 0xff00) |
+            ((w << 8) & 0xff0000) |
+            ((w & 0xff) << 24);
+  return res >>> 0;
+}
+exports.htonl = htonl;
+
+function toHex32(msg, endian) {
+  var res = '';
+  for (var i = 0; i < msg.length; i++) {
+    var w = msg[i];
+    if (endian === 'little')
+      w = htonl(w);
+    res += zero8(w.toString(16));
+  }
+  return res;
+}
+exports.toHex32 = toHex32;
+
+function zero2(word) {
+  if (word.length === 1)
+    return '0' + word;
+  else
+    return word;
+}
+exports.zero2 = zero2;
+
+function zero8(word) {
+  if (word.length === 7)
+    return '0' + word;
+  else if (word.length === 6)
+    return '00' + word;
+  else if (word.length === 5)
+    return '000' + word;
+  else if (word.length === 4)
+    return '0000' + word;
+  else if (word.length === 3)
+    return '00000' + word;
+  else if (word.length === 2)
+    return '000000' + word;
+  else if (word.length === 1)
+    return '0000000' + word;
+  else
+    return word;
+}
+exports.zero8 = zero8;
+
+function join32(msg, start, end, endian) {
+  var len = end - start;
+  assert(len % 4 === 0);
+  var res = new Array(len / 4);
+  for (var i = 0, k = start; i < res.length; i++, k += 4) {
+    var w;
+    if (endian === 'big')
+      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
+    else
+      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
+    res[i] = w >>> 0;
+  }
+  return res;
+}
+exports.join32 = join32;
+
+function split32(msg, endian) {
+  var res = new Array(msg.length * 4);
+  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
+    var m = msg[i];
+    if (endian === 'big') {
+      res[k] = m >>> 24;
+      res[k + 1] = (m >>> 16) & 0xff;
+      res[k + 2] = (m >>> 8) & 0xff;
+      res[k + 3] = m & 0xff;
+    } else {
+      res[k + 3] = m >>> 24;
+      res[k + 2] = (m >>> 16) & 0xff;
+      res[k + 1] = (m >>> 8) & 0xff;
+      res[k] = m & 0xff;
+    }
+  }
+  return res;
+}
+exports.split32 = split32;
+
+function rotr32(w, b) {
+  return (w >>> b) | (w << (32 - b));
+}
+exports.rotr32 = rotr32;
+
+function rotl32(w, b) {
+  return (w << b) | (w >>> (32 - b));
+}
+exports.rotl32 = rotl32;
+
+function sum32(a, b) {
+  return (a + b) >>> 0;
+}
+exports.sum32 = sum32;
+
+function sum32_3(a, b, c) {
+  return (a + b + c) >>> 0;
+}
+exports.sum32_3 = sum32_3;
+
+function sum32_4(a, b, c, d) {
+  return (a + b + c + d) >>> 0;
+}
+exports.sum32_4 = sum32_4;
+
+function sum32_5(a, b, c, d, e) {
+  return (a + b + c + d + e) >>> 0;
+}
+exports.sum32_5 = sum32_5;
+
+function sum64(buf, pos, ah, al) {
+  var bh = buf[pos];
+  var bl = buf[pos + 1];
+
+  var lo = (al + bl) >>> 0;
+  var hi = (lo < al ? 1 : 0) + ah + bh;
+  buf[pos] = hi >>> 0;
+  buf[pos + 1] = lo;
+}
+exports.sum64 = sum64;
+
+function sum64_hi(ah, al, bh, bl) {
+  var lo = (al + bl) >>> 0;
+  var hi = (lo < al ? 1 : 0) + ah + bh;
+  return hi >>> 0;
+}
+exports.sum64_hi = sum64_hi;
+
+function sum64_lo(ah, al, bh, bl) {
+  var lo = al + bl;
+  return lo >>> 0;
+}
+exports.sum64_lo = sum64_lo;
+
+function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
+  var carry = 0;
+  var lo = al;
+  lo = (lo + bl) >>> 0;
+  carry += lo < al ? 1 : 0;
+  lo = (lo + cl) >>> 0;
+  carry += lo < cl ? 1 : 0;
+  lo = (lo + dl) >>> 0;
+  carry += lo < dl ? 1 : 0;
+
+  var hi = ah + bh + ch + dh + carry;
+  return hi >>> 0;
+}
+exports.sum64_4_hi = sum64_4_hi;
+
+function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
+  var lo = al + bl + cl + dl;
+  return lo >>> 0;
+}
+exports.sum64_4_lo = sum64_4_lo;
+
+function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
+  var carry = 0;
+  var lo = al;
+  lo = (lo + bl) >>> 0;
+  carry += lo < al ? 1 : 0;
+  lo = (lo + cl) >>> 0;
+  carry += lo < cl ? 1 : 0;
+  lo = (lo + dl) >>> 0;
+  carry += lo < dl ? 1 : 0;
+  lo = (lo + el) >>> 0;
+  carry += lo < el ? 1 : 0;
+
+  var hi = ah + bh + ch + dh + eh + carry;
+  return hi >>> 0;
+}
+exports.sum64_5_hi = sum64_5_hi;
+
+function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
+  var lo = al + bl + cl + dl + el;
+
+  return lo >>> 0;
+}
+exports.sum64_5_lo = sum64_5_lo;
+
+function rotr64_hi(ah, al, num) {
+  var r = (al << (32 - num)) | (ah >>> num);
+  return r >>> 0;
+}
+exports.rotr64_hi = rotr64_hi;
+
+function rotr64_lo(ah, al, num) {
+  var r = (ah << (32 - num)) | (al >>> num);
+  return r >>> 0;
+}
+exports.rotr64_lo = rotr64_lo;
+
+function shr64_hi(ah, al, num) {
+  return ah >>> num;
+}
+exports.shr64_hi = shr64_hi;
+
+function shr64_lo(ah, al, num) {
+  var r = (ah << (32 - num)) | (al >>> num);
+  return r >>> 0;
+}
+exports.shr64_lo = shr64_lo;
+
+
+/***/ }),
+
+/***/ 2156:
+/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+"use strict";
+
+
+var hash = __webpack_require__(3715);
+var utils = __webpack_require__(4504);
+var assert = __webpack_require__(9746);
+
+function HmacDRBG(options) {
+  if (!(this instanceof HmacDRBG))
+    return new HmacDRBG(options);
+  this.hash = options.hash;
+  this.predResist = !!options.predResist;
+
+  this.outLen = this.hash.outSize;
+  this.minEntropy = options.minEntropy || this.hash.hmacStrength;
+
+  this._reseed = null;
+  this.reseedInterval = null;
+  this.K = null;
+  this.V = null;
+
+  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
+  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
+  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
+  assert(entropy.length >= (this.minEntropy / 8),
+         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
+  this._init(entropy, nonce, pers);
+}
+module.exports = HmacDRBG;
+
+HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
+  var seed = entropy.concat(nonce).concat(pers);
+
+  this.K = new Array(this.outLen / 8);
+  this.V = new Array(this.outLen / 8);
+  for (var i = 0; i < this.V.length; i++) {
+    this.K[i] = 0x00;
+    this.V[i] = 0x01;
+  }
+
+  this._update(seed);
+  this._reseed = 1;
+  this.reseedInterval = 0x1000000000000;  // 2^48
+};
+
+HmacDRBG.prototype._hmac = function hmac() {
+  return new hash.hmac(this.hash, this.K);
+};
+
+HmacDRBG.prototype._update = function update(seed) {
+  var kmac = this._hmac()
+                 .update(this.V)
+                 .update([ 0x00 ]);
+  if (seed)
+    kmac = kmac.update(seed);
+  this.K = kmac.digest();
+  this.V = this._hmac().update(this.V).digest();
+  if (!seed)
+    return;
+
+  this.K = this._hmac()
+               .update(this.V)
+               .update([ 0x01 ])
+               .update(seed)
+               .digest();
+  this.V = this._hmac().update(this.V).digest();
+};
+
+HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
+  // Optional entropy enc
+  if (typeof entropyEnc !== 'string') {
+    addEnc = add;
+    add = entropyEnc;
+    entropyEnc = null;
+  }
+
+  entropy = utils.toArray(entropy, entropyEnc);
+  add = utils.toArray(add, addEnc);
+
+  assert(entropy.length >= (this.minEntropy / 8),
+         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
+
+  this._update(entropy.concat(add || []));
+  this._reseed = 1;
+};
+
+HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
+  if (this._reseed > this.reseedInterval)
+    throw new Error('Reseed is required');
+
+  // Optional encoding
+  if (typeof enc !== 'string') {
+    addEnc = add;
+    add = enc;
+    enc = null;
+  }
+
+  // Optional additional data
+  if (add) {
+    add = utils.toArray(add, addEnc || 'hex');
+    this._update(add);
+  }
+
+  var temp = [];
+  while (temp.length < len) {
+    this.V = this._hmac().update(this.V).digest();
+    temp = temp.concat(this.V);
+  }
+
+  var res = temp.slice(0, len);
+  this._update(add);
+  this._reseed++;
+  return utils.encode(res, enc);
+};
+
+
+/***/ }),
+
+/***/ 5717:
+/***/ ((module) => {
+
+if (typeof Object.create === 'function') {
+  // implementation from standard node.js 'util' module
+  module.exports = function inherits(ctor, superCtor) {
+    if (superCtor) {
+      ctor.super_ = superCtor
+      ctor.prototype = Object.create(superCtor.prototype, {
+        constructor: {
+          value: ctor,
+          enumerable: false,
+          writable: true,
+          configurable: true
+        }
+      })
+    }
+  };
+} else {
+  // old school shim for old browsers
+  module.exports = function inherits(ctor, superCtor) {
+    if (superCtor) {
+      ctor.super_ = superCtor
+      var TempCtor = function () {}
+      TempCtor.prototype = superCtor.prototype
+      ctor.prototype = new TempCtor()
+      ctor.prototype.constructor = ctor
+    }
+  }
+}
+
+
+/***/ }),
+
+/***/ 1094:
+/***/ ((module, exports, __webpack_require__) => {
+
+var __WEBPACK_AMD_DEFINE_RESULT__;/**
+ * [js-sha3]{@link https://github.com/emn178/js-sha3}
+ *
+ * @version 0.8.0
+ * @author Chen, Yi-Cyuan [emn178@gmail.com]
+ * @copyright Chen, Yi-Cyuan 2015-2018
+ * @license MIT
+ */
+/*jslint bitwise: true */
+(function () {
+  'use strict';
+
+  var INPUT_ERROR = 'input is invalid type';
+  var FINALIZE_ERROR = 'finalize already called';
+  var WINDOW = typeof window === 'object';
+  var root = WINDOW ? window : {};
+  if (root.JS_SHA3_NO_WINDOW) {
+    WINDOW = false;
+  }
+  var WEB_WORKER = !WINDOW && typeof self === 'object';
+  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
+  if (NODE_JS) {
+    root = __webpack_require__.g;
+  } else if (WEB_WORKER) {
+    root = self;
+  }
+  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && "object" === 'object' && module.exports;
+  var AMD =  true && __webpack_require__.amdO;
+  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
+  var HEX_CHARS = '0123456789abcdef'.split('');
+  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
+  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
+  var KECCAK_PADDING = [1, 256, 65536, 16777216];
+  var PADDING = [6, 1536, 393216, 100663296];
+  var SHIFT = [0, 8, 16, 24];
+  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
+    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,
+    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,
+    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
+    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
+  var BITS = [224, 256, 384, 512];
+  var SHAKE_BITS = [128, 256];
+  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
+  var CSHAKE_BYTEPAD = {
+    '128': 168,
+    '256': 136
+  };
+
+  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
+    Array.isArray = function (obj) {
+      return Object.prototype.toString.call(obj) === '[object Array]';
+    };
+  }
+
+  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
+    ArrayBuffer.isView = function (obj) {
+      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
+    };
+  }
+
+  var createOutputMethod = function (bits, padding, outputType) {
+    return function (message) {
+      return new Keccak(bits, padding, bits).update(message)[outputType]();
+    };
+  };
+
+  var createShakeOutputMethod = function (bits, padding, outputType) {
+    return function (message, outputBits) {
+      return new Keccak(bits, padding, outputBits).update(message)[outputType]();
+    };
+  };
+
+  var createCshakeOutputMethod = function (bits, padding, outputType) {
+    return function (message, outputBits, n, s) {
+      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
+    };
+  };
+
+  var createKmacOutputMethod = function (bits, padding, outputType) {
+    return function (key, message, outputBits, s) {
+      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
+    };
+  };
+
+  var createOutputMethods = function (method, createMethod, bits, padding) {
+    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
+      var type = OUTPUT_TYPES[i];
+      method[type] = createMethod(bits, padding, type);
+    }
+    return method;
+  };
+
+  var createMethod = function (bits, padding) {
+    var method = createOutputMethod(bits, padding, 'hex');
+    method.create = function () {
+      return new Keccak(bits, padding, bits);
+    };
+    method.update = function (message) {
+      return method.create().update(message);
+    };
+    return createOutputMethods(method, createOutputMethod, bits, padding);
+  };
+
+  var createShakeMethod = function (bits, padding) {
+    var method = createShakeOutputMethod(bits, padding, 'hex');
+    method.create = function (outputBits) {
+      return new Keccak(bits, padding, outputBits);
+    };
+    method.update = function (message, outputBits) {
+      return method.create(outputBits).update(message);
+    };
+    return createOutputMethods(method, createShakeOutputMethod, bits, padding);
+  };
+
+  var createCshakeMethod = function (bits, padding) {
+    var w = CSHAKE_BYTEPAD[bits];
+    var method = createCshakeOutputMethod(bits, padding, 'hex');
+    method.create = function (outputBits, n, s) {
+      if (!n && !s) {
+        return methods['shake' + bits].create(outputBits);
+      } else {
+        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
+      }
+    };
+    method.update = function (message, outputBits, n, s) {
+      return method.create(outputBits, n, s).update(message);
+    };
+    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
+  };
+
+  var createKmacMethod = function (bits, padding) {
+    var w = CSHAKE_BYTEPAD[bits];
+    var method = createKmacOutputMethod(bits, padding, 'hex');
+    method.create = function (key, outputBits, s) {
+      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
+    };
+    method.update = function (key, message, outputBits, s) {
+      return method.create(key, outputBits, s).update(message);
+    };
+    return createOutputMethods(method, createKmacOutputMethod, bits, padding);
+  };
+
+  var algorithms = [
+    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },
+    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },
+    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
+    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
+    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
+  ];
+
+  var methods = {}, methodNames = [];
+
+  for (var i = 0; i < algorithms.length; ++i) {
+    var algorithm = algorithms[i];
+    var bits = algorithm.bits;
+    for (var j = 0; j < bits.length; ++j) {
+      var methodName = algorithm.name + '_' + bits[j];
+      methodNames.push(methodName);
+      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
+      if (algorithm.name !== 'sha3') {
+        var newMethodName = algorithm.name + bits[j];
+        methodNames.push(newMethodName);
+        methods[newMethodName] = methods[methodName];
+      }
+    }
+  }
+
+  function Keccak(bits, padding, outputBits) {
+    this.blocks = [];
+    this.s = [];
+    this.padding = padding;
+    this.outputBits = outputBits;
+    this.reset = true;
+    this.finalized = false;
+    this.block = 0;
+    this.start = 0;
+    this.blockCount = (1600 - (bits << 1)) >> 5;
+    this.byteCount = this.blockCount << 2;
+    this.outputBlocks = outputBits >> 5;
+    this.extraBytes = (outputBits & 31) >> 3;
+
+    for (var i = 0; i < 50; ++i) {
+      this.s[i] = 0;
+    }
+  }
+
+  Keccak.prototype.update = function (message) {
+    if (this.finalized) {
+      throw new Error(FINALIZE_ERROR);
+    }
+    var notString, type = typeof message;
+    if (type !== 'string') {
+      if (type === 'object') {
+        if (message === null) {
+          throw new Error(INPUT_ERROR);
+        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
+          message = new Uint8Array(message);
+        } else if (!Array.isArray(message)) {
+          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
+            throw new Error(INPUT_ERROR);
+          }
+        }
+      } else {
+        throw new Error(INPUT_ERROR);
+      }
+      notString = true;
+    }
+    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,
+      blockCount = this.blockCount, index = 0, s = this.s, i, code;
+
+    while (index < length) {
+      if (this.reset) {
+        this.reset = false;
+        blocks[0] = this.block;
+        for (i = 1; i < blockCount + 1; ++i) {
+          blocks[i] = 0;
+        }
+      }
+      if (notString) {
+        for (i = this.start; index < length && i < byteCount; ++index) {
+          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
+        }
+      } else {
+        for (i = this.start; index < length && i < byteCount; ++index) {
+          code = message.charCodeAt(index);
+          if (code < 0x80) {
+            blocks[i >> 2] |= code << SHIFT[i++ & 3];
+          } else if (code < 0x800) {
+            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
+            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
+          } else if (code < 0xd800 || code >= 0xe000) {
+            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
+            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
+            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
+          } else {
+            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
+            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
+            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
+            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
+            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
+          }
+        }
+      }
+      this.lastByteIndex = i;
+      if (i >= byteCount) {
+        this.start = i - byteCount;
+        this.block = blocks[blockCount];
+        for (i = 0; i < blockCount; ++i) {
+          s[i] ^= blocks[i];
+        }
+        f(s);
+        this.reset = true;
+      } else {
+        this.start = i;
+      }
+    }
+    return this;
+  };
+
+  Keccak.prototype.encode = function (x, right) {
+    var o = x & 255, n = 1;
+    var bytes = [o];
+    x = x >> 8;
+    o = x & 255;
+    while (o > 0) {
+      bytes.unshift(o);
+      x = x >> 8;
+      o = x & 255;
+      ++n;
+    }
+    if (right) {
+      bytes.push(n);
+    } else {
+      bytes.unshift(n);
+    }
+    this.update(bytes);
+    return bytes.length;
+  };
+
+  Keccak.prototype.encodeString = function (str) {
+    var notString, type = typeof str;
+    if (type !== 'string') {
+      if (type === 'object') {
+        if (str === null) {
+          throw new Error(INPUT_ERROR);
+        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
+          str = new Uint8Array(str);
+        } else if (!Array.isArray(str)) {
+          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
+            throw new Error(INPUT_ERROR);
+          }
+        }
+      } else {
+        throw new Error(INPUT_ERROR);
+      }
+      notString = true;
+    }
+    var bytes = 0, length = str.length;
+    if (notString) {
+      bytes = length;
+    } else {
+      for (var i = 0; i < str.length; ++i) {
+        var code = str.charCodeAt(i);
+        if (code < 0x80) {
+          bytes += 1;
+        } else if (code < 0x800) {
+          bytes += 2;
+        } else if (code < 0xd800 || code >= 0xe000) {
+          bytes += 3;
+        } else {
+          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));
+          bytes += 4;
+        }
+      }
+    }
+    bytes += this.encode(bytes * 8);
+    this.update(str);
+    return bytes;
+  };
+
+  Keccak.prototype.bytepad = function (strs, w) {
+    var bytes = this.encode(w);
+    for (var i = 0; i < strs.length; ++i) {
+      bytes += this.encodeString(strs[i]);
+    }
+    var paddingBytes = w - bytes % w;
+    var zeros = [];
+    zeros.length = paddingBytes;
+    this.update(zeros);
+    return this;
+  };
+
+  Keccak.prototype.finalize = function () {
+    if (this.finalized) {
+      return;
+    }
+    this.finalized = true;
+    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
+    blocks[i >> 2] |= this.padding[i & 3];
+    if (this.lastByteIndex === this.byteCount) {
+      blocks[0] = blocks[blockCount];
+      for (i = 1; i < blockCount + 1; ++i) {
+        blocks[i] = 0;
+      }
+    }
+    blocks[blockCount - 1] |= 0x80000000;
+    for (i = 0; i < blockCount; ++i) {
+      s[i] ^= blocks[i];
+    }
+    f(s);
+  };
+
+  Keccak.prototype.toString = Keccak.prototype.hex = function () {
+    this.finalize();
+
+    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
+      extraBytes = this.extraBytes, i = 0, j = 0;
+    var hex = '', block;
+    while (j < outputBlocks) {
+      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
+        block = s[i];
+        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +
+          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +
+          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +
+          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];
+      }
+      if (j % blockCount === 0) {
+        f(s);
+        i = 0;
+      }
+    }
+    if (extraBytes) {
+      block = s[i];
+      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];
+      if (extraBytes > 1) {
+        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];
+      }
+      if (extraBytes > 2) {
+        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];
+      }
+    }
+    return hex;
+  };
+
+  Keccak.prototype.arrayBuffer = function () {
+    this.finalize();
+
+    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
+      extraBytes = this.extraBytes, i = 0, j = 0;
+    var bytes = this.outputBits >> 3;
+    var buffer;
+    if (extraBytes) {
+      buffer = new ArrayBuffer((outputBlocks + 1) << 2);
+    } else {
+      buffer = new ArrayBuffer(bytes);
+    }
+    var array = new Uint32Array(buffer);
+    while (j < outputBlocks) {
+      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
+        array[j] = s[i];
+      }
+      if (j % blockCount === 0) {
+        f(s);
+      }
+    }
+    if (extraBytes) {
+      array[i] = s[i];
+      buffer = buffer.slice(0, bytes);
+    }
+    return buffer;
+  };
+
+  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
+
+  Keccak.prototype.digest = Keccak.prototype.array = function () {
+    this.finalize();
+
+    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
+      extraBytes = this.extraBytes, i = 0, j = 0;
+    var array = [], offset, block;
+    while (j < outputBlocks) {
+      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
+        offset = j << 2;
+        block = s[i];
+        array[offset] = block & 0xFF;
+        array[offset + 1] = (block >> 8) & 0xFF;
+        array[offset + 2] = (block >> 16) & 0xFF;
+        array[offset + 3] = (block >> 24) & 0xFF;
+      }
+      if (j % blockCount === 0) {
+        f(s);
+      }
+    }
+    if (extraBytes) {
+      offset = j << 2;
+      block = s[i];
+      array[offset] = block & 0xFF;
+      if (extraBytes > 1) {
+        array[offset + 1] = (block >> 8) & 0xFF;
+      }
+      if (extraBytes > 2) {
+        array[offset + 2] = (block >> 16) & 0xFF;
+      }
+    }
+    return array;
+  };
+
+  function Kmac(bits, padding, outputBits) {
+    Keccak.call(this, bits, padding, outputBits);
+  }
+
+  Kmac.prototype = new Keccak();
+
+  Kmac.prototype.finalize = function () {
+    this.encode(this.outputBits, true);
+    return Keccak.prototype.finalize.call(this);
+  };
+
+  var f = function (s) {
+    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,
+      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,
+      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,
+      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
+    for (n = 0; n < 48; n += 2) {
+      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
+      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
+      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
+      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
+      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
+      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
+      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
+      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
+      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
+      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
+
+      h = c8 ^ ((c2 << 1) | (c3 >>> 31));
+      l = c9 ^ ((c3 << 1) | (c2 >>> 31));
+      s[0] ^= h;
+      s[1] ^= l;
+      s[10] ^= h;
+      s[11] ^= l;
+      s[20] ^= h;
+      s[21] ^= l;
+      s[30] ^= h;
+      s[31] ^= l;
+      s[40] ^= h;
+      s[41] ^= l;
+      h = c0 ^ ((c4 << 1) | (c5 >>> 31));
+      l = c1 ^ ((c5 << 1) | (c4 >>> 31));
+      s[2] ^= h;
+      s[3] ^= l;
+      s[12] ^= h;
+      s[13] ^= l;
+      s[22] ^= h;
+      s[23] ^= l;
+      s[32] ^= h;
+      s[33] ^= l;
+      s[42] ^= h;
+      s[43] ^= l;
+      h = c2 ^ ((c6 << 1) | (c7 >>> 31));
+      l = c3 ^ ((c7 << 1) | (c6 >>> 31));
+      s[4] ^= h;
+      s[5] ^= l;
+      s[14] ^= h;
+      s[15] ^= l;
+      s[24] ^= h;
+      s[25] ^= l;
+      s[34] ^= h;
+      s[35] ^= l;
+      s[44] ^= h;
+      s[45] ^= l;
+      h = c4 ^ ((c8 << 1) | (c9 >>> 31));
+      l = c5 ^ ((c9 << 1) | (c8 >>> 31));
+      s[6] ^= h;
+      s[7] ^= l;
+      s[16] ^= h;
+      s[17] ^= l;
+      s[26] ^= h;
+      s[27] ^= l;
+      s[36] ^= h;
+      s[37] ^= l;
+      s[46] ^= h;
+      s[47] ^= l;
+      h = c6 ^ ((c0 << 1) | (c1 >>> 31));
+      l = c7 ^ ((c1 << 1) | (c0 >>> 31));
+      s[8] ^= h;
+      s[9] ^= l;
+      s[18] ^= h;
+      s[19] ^= l;
+      s[28] ^= h;
+      s[29] ^= l;
+      s[38] ^= h;
+      s[39] ^= l;
+      s[48] ^= h;
+      s[49] ^= l;
+
+      b0 = s[0];
+      b1 = s[1];
+      b32 = (s[11] << 4) | (s[10] >>> 28);
+      b33 = (s[10] << 4) | (s[11] >>> 28);
+      b14 = (s[20] << 3) | (s[21] >>> 29);
+      b15 = (s[21] << 3) | (s[20] >>> 29);
+      b46 = (s[31] << 9) | (s[30] >>> 23);
+      b47 = (s[30] << 9) | (s[31] >>> 23);
+      b28 = (s[40] << 18) | (s[41] >>> 14);
+      b29 = (s[41] << 18) | (s[40] >>> 14);
+      b20 = (s[2] << 1) | (s[3] >>> 31);
+      b21 = (s[3] << 1) | (s[2] >>> 31);
+      b2 = (s[13] << 12) | (s[12] >>> 20);
+      b3 = (s[12] << 12) | (s[13] >>> 20);
+      b34 = (s[22] << 10) | (s[23] >>> 22);
+      b35 = (s[23] << 10) | (s[22] >>> 22);
+      b16 = (s[33] << 13) | (s[32] >>> 19);
+      b17 = (s[32] << 13) | (s[33] >>> 19);
+      b48 = (s[42] << 2) | (s[43] >>> 30);
+      b49 = (s[43] << 2) | (s[42] >>> 30);
+      b40 = (s[5] << 30) | (s[4] >>> 2);
+      b41 = (s[4] << 30) | (s[5] >>> 2);
+      b22 = (s[14] << 6) | (s[15] >>> 26);
+      b23 = (s[15] << 6) | (s[14] >>> 26);
+      b4 = (s[25] << 11) | (s[24] >>> 21);
+      b5 = (s[24] << 11) | (s[25] >>> 21);
+      b36 = (s[34] << 15) | (s[35] >>> 17);
+      b37 = (s[35] << 15) | (s[34] >>> 17);
+      b18 = (s[45] << 29) | (s[44] >>> 3);
+      b19 = (s[44] << 29) | (s[45] >>> 3);
+      b10 = (s[6] << 28) | (s[7] >>> 4);
+      b11 = (s[7] << 28) | (s[6] >>> 4);
+      b42 = (s[17] << 23) | (s[16] >>> 9);
+      b43 = (s[16] << 23) | (s[17] >>> 9);
+      b24 = (s[26] << 25) | (s[27] >>> 7);
+      b25 = (s[27] << 25) | (s[26] >>> 7);
+      b6 = (s[36] << 21) | (s[37] >>> 11);
+      b7 = (s[37] << 21) | (s[36] >>> 11);
+      b38 = (s[47] << 24) | (s[46] >>> 8);
+      b39 = (s[46] << 24) | (s[47] >>> 8);
+      b30 = (s[8] << 27) | (s[9] >>> 5);
+      b31 = (s[9] << 27) | (s[8] >>> 5);
+      b12 = (s[18] << 20) | (s[19] >>> 12);
+      b13 = (s[19] << 20) | (s[18] >>> 12);
+      b44 = (s[29] << 7) | (s[28] >>> 25);
+      b45 = (s[28] << 7) | (s[29] >>> 25);
+      b26 = (s[38] << 8) | (s[39] >>> 24);
+      b27 = (s[39] << 8) | (s[38] >>> 24);
+      b8 = (s[48] << 14) | (s[49] >>> 18);
+      b9 = (s[49] << 14) | (s[48] >>> 18);
+
+      s[0] = b0 ^ (~b2 & b4);
+      s[1] = b1 ^ (~b3 & b5);
+      s[10] = b10 ^ (~b12 & b14);
+      s[11] = b11 ^ (~b13 & b15);
+      s[20] = b20 ^ (~b22 & b24);
+      s[21] = b21 ^ (~b23 & b25);
+      s[30] = b30 ^ (~b32 & b34);
+      s[31] = b31 ^ (~b33 & b35);
+      s[40] = b40 ^ (~b42 & b44);
+      s[41] = b41 ^ (~b43 & b45);
+      s[2] = b2 ^ (~b4 & b6);
+      s[3] = b3 ^ (~b5 & b7);
+      s[12] = b12 ^ (~b14 & b16);
+      s[13] = b13 ^ (~b15 & b17);
+      s[22] = b22 ^ (~b24 & b26);
+      s[23] = b23 ^ (~b25 & b27);
+      s[32] = b32 ^ (~b34 & b36);
+      s[33] = b33 ^ (~b35 & b37);
+      s[42] = b42 ^ (~b44 & b46);
+      s[43] = b43 ^ (~b45 & b47);
+      s[4] = b4 ^ (~b6 & b8);
+      s[5] = b5 ^ (~b7 & b9);
+      s[14] = b14 ^ (~b16 & b18);
+      s[15] = b15 ^ (~b17 & b19);
+      s[24] = b24 ^ (~b26 & b28);
+      s[25] = b25 ^ (~b27 & b29);
+      s[34] = b34 ^ (~b36 & b38);
+      s[35] = b35 ^ (~b37 & b39);
+      s[44] = b44 ^ (~b46 & b48);
+      s[45] = b45 ^ (~b47 & b49);
+      s[6] = b6 ^ (~b8 & b0);
+      s[7] = b7 ^ (~b9 & b1);
+      s[16] = b16 ^ (~b18 & b10);
+      s[17] = b17 ^ (~b19 & b11);
+      s[26] = b26 ^ (~b28 & b20);
+      s[27] = b27 ^ (~b29 & b21);
+      s[36] = b36 ^ (~b38 & b30);
+      s[37] = b37 ^ (~b39 & b31);
+      s[46] = b46 ^ (~b48 & b40);
+      s[47] = b47 ^ (~b49 & b41);
+      s[8] = b8 ^ (~b0 & b2);
+      s[9] = b9 ^ (~b1 & b3);
+      s[18] = b18 ^ (~b10 & b12);
+      s[19] = b19 ^ (~b11 & b13);
+      s[28] = b28 ^ (~b20 & b22);
+      s[29] = b29 ^ (~b21 & b23);
+      s[38] = b38 ^ (~b30 & b32);
+      s[39] = b39 ^ (~b31 & b33);
+      s[48] = b48 ^ (~b40 & b42);
+      s[49] = b49 ^ (~b41 & b43);
+
+      s[0] ^= RC[n];
+      s[1] ^= RC[n + 1];
+    }
+  };
+
+  if (COMMON_JS) {
+    module.exports = methods;
+  } else {
+    for (i = 0; i < methodNames.length; ++i) {
+      root[methodNames[i]] = methods[methodNames[i]];
+    }
+    if (AMD) {
+      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
+        return methods;
+      }).call(exports, __webpack_require__, exports, module),
+		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
+    }
+  }
+})();
+
+
+/***/ }),
+
+/***/ 9746:
+/***/ ((module) => {
+
+module.exports = assert;
+
+function assert(val, msg) {
+  if (!val)
+    throw new Error(msg || 'Assertion failed');
+}
+
+assert.equal = function assertEqual(l, r, msg) {
+  if (l != r)
+    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
+};
+
+
+/***/ }),
+
+/***/ 4504:
+/***/ ((__unused_webpack_module, exports) => {
+
+"use strict";
+
+
+var utils = exports;
+
+function toArray(msg, enc) {
+  if (Array.isArray(msg))
+    return msg.slice();
+  if (!msg)
+    return [];
+  var res = [];
+  if (typeof msg !== 'string') {
+    for (var i = 0; i < msg.length; i++)
+      res[i] = msg[i] | 0;
+    return res;
+  }
+  if (enc === 'hex') {
+    msg = msg.replace(/[^a-z0-9]+/ig, '');
+    if (msg.length % 2 !== 0)
+      msg = '0' + msg;
+    for (var i = 0; i < msg.length; i += 2)
+      res.push(parseInt(msg[i] + msg[i + 1], 16));
+  } else {
+    for (var i = 0; i < msg.length; i++) {
+      var c = msg.charCodeAt(i);
+      var hi = c >> 8;
+      var lo = c & 0xff;
+      if (hi)
+        res.push(hi, lo);
+      else
+        res.push(lo);
+    }
+  }
+  return res;
+}
+utils.toArray = toArray;
+
+function zero2(word) {
+  if (word.length === 1)
+    return '0' + word;
+  else
+    return word;
+}
+utils.zero2 = zero2;
+
+function toHex(msg) {
+  var res = '';
+  for (var i = 0; i < msg.length; i++)
+    res += zero2(msg[i].toString(16));
+  return res;
+}
+utils.toHex = toHex;
+
+utils.encode = function encode(arr, enc) {
+  if (enc === 'hex')
+    return toHex(arr);
+  else
+    return arr;
+};
+
+
+/***/ }),
+
+/***/ 5883:
+/***/ (() => {
+
+/* (ignored) */
+
+/***/ }),
+
+/***/ 6601:
+/***/ (() => {
+
+/* (ignored) */
+
+/***/ }),
+
+/***/ 9214:
+/***/ (() => {
+
+/* (ignored) */
+
+/***/ }),
+
+/***/ 2218:
+/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
+
+"use strict";
+// ESM COMPAT FLAG
+__webpack_require__.r(__webpack_exports__);
+
+// EXPORTS
+__webpack_require__.d(__webpack_exports__, {
+  "CID": () => (/* reexport */ CID),
+  "bases": () => (/* binding */ bases),
+  "bytes": () => (/* reexport */ bytes_namespaceObject),
+  "codecs": () => (/* binding */ codecs),
+  "digest": () => (/* reexport */ digest_namespaceObject),
+  "hasher": () => (/* reexport */ hasher_namespaceObject),
+  "hashes": () => (/* binding */ hashes),
+  "varint": () => (/* reexport */ src_varint_namespaceObject)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bytes.js
+var bytes_namespaceObject = {};
+__webpack_require__.r(bytes_namespaceObject);
+__webpack_require__.d(bytes_namespaceObject, {
+  "coerce": () => (coerce),
+  "empty": () => (empty),
+  "equals": () => (equals),
+  "fromHex": () => (fromHex),
+  "fromString": () => (fromString),
+  "isBinary": () => (isBinary),
+  "toHex": () => (toHex),
+  "toString": () => (bytes_toString)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/identity.js
+var identity_namespaceObject = {};
+__webpack_require__.r(identity_namespaceObject);
+__webpack_require__.d(identity_namespaceObject, {
+  "identity": () => (identity)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base2.js
+var base2_namespaceObject = {};
+__webpack_require__.r(base2_namespaceObject);
+__webpack_require__.d(base2_namespaceObject, {
+  "base2": () => (base2)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base8.js
+var base8_namespaceObject = {};
+__webpack_require__.r(base8_namespaceObject);
+__webpack_require__.d(base8_namespaceObject, {
+  "base8": () => (base8)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base10.js
+var base10_namespaceObject = {};
+__webpack_require__.r(base10_namespaceObject);
+__webpack_require__.d(base10_namespaceObject, {
+  "base10": () => (base10)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base16.js
+var base16_namespaceObject = {};
+__webpack_require__.r(base16_namespaceObject);
+__webpack_require__.d(base16_namespaceObject, {
+  "base16": () => (base16),
+  "base16upper": () => (base16upper)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base32.js
+var base32_namespaceObject = {};
+__webpack_require__.r(base32_namespaceObject);
+__webpack_require__.d(base32_namespaceObject, {
+  "base32": () => (base32),
+  "base32hex": () => (base32hex),
+  "base32hexpad": () => (base32hexpad),
+  "base32hexpadupper": () => (base32hexpadupper),
+  "base32hexupper": () => (base32hexupper),
+  "base32pad": () => (base32pad),
+  "base32padupper": () => (base32padupper),
+  "base32upper": () => (base32upper),
+  "base32z": () => (base32z)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base36.js
+var base36_namespaceObject = {};
+__webpack_require__.r(base36_namespaceObject);
+__webpack_require__.d(base36_namespaceObject, {
+  "base36": () => (base36),
+  "base36upper": () => (base36upper)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base58.js
+var base58_namespaceObject = {};
+__webpack_require__.r(base58_namespaceObject);
+__webpack_require__.d(base58_namespaceObject, {
+  "base58btc": () => (base58btc),
+  "base58flickr": () => (base58flickr)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base64.js
+var base64_namespaceObject = {};
+__webpack_require__.r(base64_namespaceObject);
+__webpack_require__.d(base64_namespaceObject, {
+  "base64": () => (base64),
+  "base64pad": () => (base64pad),
+  "base64url": () => (base64url),
+  "base64urlpad": () => (base64urlpad)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/bases/base256emoji.js
+var base256emoji_namespaceObject = {};
+__webpack_require__.r(base256emoji_namespaceObject);
+__webpack_require__.d(base256emoji_namespaceObject, {
+  "base256emoji": () => (base256emoji)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/varint.js
+var src_varint_namespaceObject = {};
+__webpack_require__.r(src_varint_namespaceObject);
+__webpack_require__.d(src_varint_namespaceObject, {
+  "decode": () => (src_varint_decode),
+  "encodeTo": () => (encodeTo),
+  "encodingLength": () => (encodingLength)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/hashes/digest.js
+var digest_namespaceObject = {};
+__webpack_require__.r(digest_namespaceObject);
+__webpack_require__.d(digest_namespaceObject, {
+  "Digest": () => (Digest),
+  "create": () => (create),
+  "decode": () => (digest_decode),
+  "equals": () => (digest_equals)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/hashes/hasher.js
+var hasher_namespaceObject = {};
+__webpack_require__.r(hasher_namespaceObject);
+__webpack_require__.d(hasher_namespaceObject, {
+  "Hasher": () => (Hasher),
+  "from": () => (hasher_from)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/hashes/sha2-browser.js
+var sha2_browser_namespaceObject = {};
+__webpack_require__.r(sha2_browser_namespaceObject);
+__webpack_require__.d(sha2_browser_namespaceObject, {
+  "sha256": () => (sha256),
+  "sha512": () => (sha512)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/hashes/identity.js
+var hashes_identity_namespaceObject = {};
+__webpack_require__.r(hashes_identity_namespaceObject);
+__webpack_require__.d(hashes_identity_namespaceObject, {
+  "identity": () => (identity_identity)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/codecs/raw.js
+var raw_namespaceObject = {};
+__webpack_require__.r(raw_namespaceObject);
+__webpack_require__.d(raw_namespaceObject, {
+  "code": () => (raw_code),
+  "decode": () => (raw_decode),
+  "encode": () => (raw_encode),
+  "name": () => (raw_name)
+});
+
+// NAMESPACE OBJECT: ./node_modules/multiformats/esm/src/codecs/json.js
+var json_namespaceObject = {};
+__webpack_require__.r(json_namespaceObject);
+__webpack_require__.d(json_namespaceObject, {
+  "code": () => (json_code),
+  "decode": () => (json_decode),
+  "encode": () => (json_encode),
+  "name": () => (json_name)
+});
+
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/vendor/base-x.js
+function base(ALPHABET, name) {
+  if (ALPHABET.length >= 255) {
+    throw new TypeError('Alphabet too long');
+  }
+  var BASE_MAP = new Uint8Array(256);
+  for (var j = 0; j < BASE_MAP.length; j++) {
+    BASE_MAP[j] = 255;
+  }
+  for (var i = 0; i < ALPHABET.length; i++) {
+    var x = ALPHABET.charAt(i);
+    var xc = x.charCodeAt(0);
+    if (BASE_MAP[xc] !== 255) {
+      throw new TypeError(x + ' is ambiguous');
+    }
+    BASE_MAP[xc] = i;
+  }
+  var BASE = ALPHABET.length;
+  var LEADER = ALPHABET.charAt(0);
+  var FACTOR = Math.log(BASE) / Math.log(256);
+  var iFACTOR = Math.log(256) / Math.log(BASE);
+  function encode(source) {
+    if (source instanceof Uint8Array);
+    else if (ArrayBuffer.isView(source)) {
+      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
+    } else if (Array.isArray(source)) {
+      source = Uint8Array.from(source);
+    }
+    if (!(source instanceof Uint8Array)) {
+      throw new TypeError('Expected Uint8Array');
+    }
+    if (source.length === 0) {
+      return '';
+    }
+    var zeroes = 0;
+    var length = 0;
+    var pbegin = 0;
+    var pend = source.length;
+    while (pbegin !== pend && source[pbegin] === 0) {
+      pbegin++;
+      zeroes++;
+    }
+    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
+    var b58 = new Uint8Array(size);
+    while (pbegin !== pend) {
+      var carry = source[pbegin];
+      var i = 0;
+      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {
+        carry += 256 * b58[it1] >>> 0;
+        b58[it1] = carry % BASE >>> 0;
+        carry = carry / BASE >>> 0;
+      }
+      if (carry !== 0) {
+        throw new Error('Non-zero carry');
+      }
+      length = i;
+      pbegin++;
+    }
+    var it2 = size - length;
+    while (it2 !== size && b58[it2] === 0) {
+      it2++;
+    }
+    var str = LEADER.repeat(zeroes);
+    for (; it2 < size; ++it2) {
+      str += ALPHABET.charAt(b58[it2]);
+    }
+    return str;
+  }
+  function decodeUnsafe(source) {
+    if (typeof source !== 'string') {
+      throw new TypeError('Expected String');
+    }
+    if (source.length === 0) {
+      return new Uint8Array();
+    }
+    var psz = 0;
+    if (source[psz] === ' ') {
+      return;
+    }
+    var zeroes = 0;
+    var length = 0;
+    while (source[psz] === LEADER) {
+      zeroes++;
+      psz++;
+    }
+    var size = (source.length - psz) * FACTOR + 1 >>> 0;
+    var b256 = new Uint8Array(size);
+    while (source[psz]) {
+      var carry = BASE_MAP[source.charCodeAt(psz)];
+      if (carry === 255) {
+        return;
+      }
+      var i = 0;
+      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {
+        carry += BASE * b256[it3] >>> 0;
+        b256[it3] = carry % 256 >>> 0;
+        carry = carry / 256 >>> 0;
+      }
+      if (carry !== 0) {
+        throw new Error('Non-zero carry');
+      }
+      length = i;
+      psz++;
+    }
+    if (source[psz] === ' ') {
+      return;
+    }
+    var it4 = size - length;
+    while (it4 !== size && b256[it4] === 0) {
+      it4++;
+    }
+    var vch = new Uint8Array(zeroes + (size - it4));
+    var j = zeroes;
+    while (it4 !== size) {
+      vch[j++] = b256[it4++];
+    }
+    return vch;
+  }
+  function decode(string) {
+    var buffer = decodeUnsafe(string);
+    if (buffer) {
+      return buffer;
+    }
+    throw new Error(`Non-${ name } character`);
+  }
+  return {
+    encode: encode,
+    decodeUnsafe: decodeUnsafe,
+    decode: decode
+  };
+}
+var src = base;
+var _brrp__multiformats_scope_baseX = src;
+/* harmony default export */ const base_x = (_brrp__multiformats_scope_baseX);
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bytes.js
+const empty = new Uint8Array(0);
+const toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');
+const fromHex = hex => {
+  const hexes = hex.match(/../g);
+  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;
+};
+const equals = (aa, bb) => {
+  if (aa === bb)
+    return true;
+  if (aa.byteLength !== bb.byteLength) {
+    return false;
+  }
+  for (let ii = 0; ii < aa.byteLength; ii++) {
+    if (aa[ii] !== bb[ii]) {
+      return false;
+    }
+  }
+  return true;
+};
+const coerce = o => {
+  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')
+    return o;
+  if (o instanceof ArrayBuffer)
+    return new Uint8Array(o);
+  if (ArrayBuffer.isView(o)) {
+    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);
+  }
+  throw new Error('Unknown type, must be binary type');
+};
+const isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);
+const fromString = str => new TextEncoder().encode(str);
+const bytes_toString = b => new TextDecoder().decode(b);
+
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base.js
+
+
+class Encoder {
+  constructor(name, prefix, baseEncode) {
+    this.name = name;
+    this.prefix = prefix;
+    this.baseEncode = baseEncode;
+  }
+  encode(bytes) {
+    if (bytes instanceof Uint8Array) {
+      return `${ this.prefix }${ this.baseEncode(bytes) }`;
+    } else {
+      throw Error('Unknown type, must be binary type');
+    }
+  }
+}
+class Decoder {
+  constructor(name, prefix, baseDecode) {
+    this.name = name;
+    this.prefix = prefix;
+    if (prefix.codePointAt(0) === undefined) {
+      throw new Error('Invalid prefix character');
+    }
+    this.prefixCodePoint = prefix.codePointAt(0);
+    this.baseDecode = baseDecode;
+  }
+  decode(text) {
+    if (typeof text === 'string') {
+      if (text.codePointAt(0) !== this.prefixCodePoint) {
+        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);
+      }
+      return this.baseDecode(text.slice(this.prefix.length));
+    } else {
+      throw Error('Can only multibase decode strings');
+    }
+  }
+  or(decoder) {
+    return or(this, decoder);
+  }
+}
+class ComposedDecoder {
+  constructor(decoders) {
+    this.decoders = decoders;
+  }
+  or(decoder) {
+    return or(this, decoder);
+  }
+  decode(input) {
+    const prefix = input[0];
+    const decoder = this.decoders[prefix];
+    if (decoder) {
+      return decoder.decode(input);
+    } else {
+      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);
+    }
+  }
+}
+const or = (left, right) => new ComposedDecoder({
+  ...left.decoders || { [left.prefix]: left },
+  ...right.decoders || { [right.prefix]: right }
+});
+class Codec {
+  constructor(name, prefix, baseEncode, baseDecode) {
+    this.name = name;
+    this.prefix = prefix;
+    this.baseEncode = baseEncode;
+    this.baseDecode = baseDecode;
+    this.encoder = new Encoder(name, prefix, baseEncode);
+    this.decoder = new Decoder(name, prefix, baseDecode);
+  }
+  encode(input) {
+    return this.encoder.encode(input);
+  }
+  decode(input) {
+    return this.decoder.decode(input);
+  }
+}
+const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);
+const baseX = ({prefix, name, alphabet}) => {
+  const {encode, decode} = base_x(alphabet, name);
+  return from({
+    prefix,
+    name,
+    encode,
+    decode: text => coerce(decode(text))
+  });
+};
+const decode = (string, alphabet, bitsPerChar, name) => {
+  const codes = {};
+  for (let i = 0; i < alphabet.length; ++i) {
+    codes[alphabet[i]] = i;
+  }
+  let end = string.length;
+  while (string[end - 1] === '=') {
+    --end;
+  }
+  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
+  let bits = 0;
+  let buffer = 0;
+  let written = 0;
+  for (let i = 0; i < end; ++i) {
+    const value = codes[string[i]];
+    if (value === undefined) {
+      throw new SyntaxError(`Non-${ name } character`);
+    }
+    buffer = buffer << bitsPerChar | value;
+    bits += bitsPerChar;
+    if (bits >= 8) {
+      bits -= 8;
+      out[written++] = 255 & buffer >> bits;
+    }
+  }
+  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
+    throw new SyntaxError('Unexpected end of data');
+  }
+  return out;
+};
+const encode = (data, alphabet, bitsPerChar) => {
+  const pad = alphabet[alphabet.length - 1] === '=';
+  const mask = (1 << bitsPerChar) - 1;
+  let out = '';
+  let bits = 0;
+  let buffer = 0;
+  for (let i = 0; i < data.length; ++i) {
+    buffer = buffer << 8 | data[i];
+    bits += 8;
+    while (bits > bitsPerChar) {
+      bits -= bitsPerChar;
+      out += alphabet[mask & buffer >> bits];
+    }
+  }
+  if (bits) {
+    out += alphabet[mask & buffer << bitsPerChar - bits];
+  }
+  if (pad) {
+    while (out.length * bitsPerChar & 7) {
+      out += '=';
+    }
+  }
+  return out;
+};
+const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {
+  return from({
+    prefix,
+    name,
+    encode(input) {
+      return encode(input, alphabet, bitsPerChar);
+    },
+    decode(input) {
+      return decode(input, alphabet, bitsPerChar, name);
+    }
+  });
+};
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/identity.js
+
+
+const identity = from({
+  prefix: '\0',
+  name: 'identity',
+  encode: buf => bytes_toString(buf),
+  decode: str => fromString(str)
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base2.js
+
+const base2 = rfc4648({
+  prefix: '0',
+  name: 'base2',
+  alphabet: '01',
+  bitsPerChar: 1
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base8.js
+
+const base8 = rfc4648({
+  prefix: '7',
+  name: 'base8',
+  alphabet: '01234567',
+  bitsPerChar: 3
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base10.js
+
+const base10 = baseX({
+  prefix: '9',
+  name: 'base10',
+  alphabet: '0123456789'
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base16.js
+
+const base16 = rfc4648({
+  prefix: 'f',
+  name: 'base16',
+  alphabet: '0123456789abcdef',
+  bitsPerChar: 4
+});
+const base16upper = rfc4648({
+  prefix: 'F',
+  name: 'base16upper',
+  alphabet: '0123456789ABCDEF',
+  bitsPerChar: 4
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base32.js
+
+const base32 = rfc4648({
+  prefix: 'b',
+  name: 'base32',
+  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',
+  bitsPerChar: 5
+});
+const base32upper = rfc4648({
+  prefix: 'B',
+  name: 'base32upper',
+  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
+  bitsPerChar: 5
+});
+const base32pad = rfc4648({
+  prefix: 'c',
+  name: 'base32pad',
+  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',
+  bitsPerChar: 5
+});
+const base32padupper = rfc4648({
+  prefix: 'C',
+  name: 'base32padupper',
+  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',
+  bitsPerChar: 5
+});
+const base32hex = rfc4648({
+  prefix: 'v',
+  name: 'base32hex',
+  alphabet: '0123456789abcdefghijklmnopqrstuv',
+  bitsPerChar: 5
+});
+const base32hexupper = rfc4648({
+  prefix: 'V',
+  name: 'base32hexupper',
+  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',
+  bitsPerChar: 5
+});
+const base32hexpad = rfc4648({
+  prefix: 't',
+  name: 'base32hexpad',
+  alphabet: '0123456789abcdefghijklmnopqrstuv=',
+  bitsPerChar: 5
+});
+const base32hexpadupper = rfc4648({
+  prefix: 'T',
+  name: 'base32hexpadupper',
+  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',
+  bitsPerChar: 5
+});
+const base32z = rfc4648({
+  prefix: 'h',
+  name: 'base32z',
+  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',
+  bitsPerChar: 5
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base36.js
+
+const base36 = baseX({
+  prefix: 'k',
+  name: 'base36',
+  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'
+});
+const base36upper = baseX({
+  prefix: 'K',
+  name: 'base36upper',
+  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base58.js
+
+const base58btc = baseX({
+  name: 'base58btc',
+  prefix: 'z',
+  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'
+});
+const base58flickr = baseX({
+  name: 'base58flickr',
+  prefix: 'Z',
+  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base64.js
+
+const base64 = rfc4648({
+  prefix: 'm',
+  name: 'base64',
+  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
+  bitsPerChar: 6
+});
+const base64pad = rfc4648({
+  prefix: 'M',
+  name: 'base64pad',
+  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
+  bitsPerChar: 6
+});
+const base64url = rfc4648({
+  prefix: 'u',
+  name: 'base64url',
+  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
+  bitsPerChar: 6
+});
+const base64urlpad = rfc4648({
+  prefix: 'U',
+  name: 'base64urlpad',
+  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',
+  bitsPerChar: 6
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/bases/base256emoji.js
+
+const alphabet = Array.from('\uD83D\uDE80\uD83E\uDE90\u2604\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09\u2600\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02\u2764\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09\u263A\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E\u270C\u2728\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D\u2763\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33\u270B\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13\u2B50\u2705\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6\u2714\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90\u2639\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20\u261D\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B\u26BD\uD83E\uDD19\u2615\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81\u26A1\uD83C\uDF1E\uD83C\uDF88\u274C\u270A\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C\u2708\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74\u25B6\u27A1\u2753\uD83D\uDC8E\uD83D\uDCB8\u2B07\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A\u26A0\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37\u260E\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51\u2744\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42');
+const alphabetBytesToChars = alphabet.reduce((p, c, i) => {
+  p[i] = c;
+  return p;
+}, []);
+const alphabetCharsToBytes = alphabet.reduce((p, c, i) => {
+  p[c.codePointAt(0)] = i;
+  return p;
+}, []);
+function base256emoji_encode(data) {
+  return data.reduce((p, c) => {
+    p += alphabetBytesToChars[c];
+    return p;
+  }, '');
+}
+function base256emoji_decode(str) {
+  const byts = [];
+  for (const char of str) {
+    const byt = alphabetCharsToBytes[char.codePointAt(0)];
+    if (byt === undefined) {
+      throw new Error(`Non-base256emoji character: ${ char }`);
+    }
+    byts.push(byt);
+  }
+  return new Uint8Array(byts);
+}
+const base256emoji = from({
+  prefix: '\uD83D\uDE80',
+  name: 'base256emoji',
+  encode: base256emoji_encode,
+  decode: base256emoji_decode
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/vendor/varint.js
+var encode_1 = varint_encode;
+var MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);
+function varint_encode(num, out, offset) {
+  out = out || [];
+  offset = offset || 0;
+  var oldOffset = offset;
+  while (num >= INT) {
+    out[offset++] = num & 255 | MSB;
+    num /= 128;
+  }
+  while (num & MSBALL) {
+    out[offset++] = num & 255 | MSB;
+    num >>>= 7;
+  }
+  out[offset] = num | 0;
+  varint_encode.bytes = offset - oldOffset + 1;
+  return out;
+}
+var varint_decode = read;
+var MSB$1 = 128, REST$1 = 127;
+function read(buf, offset) {
+  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;
+  do {
+    if (counter >= l) {
+      read.bytes = 0;
+      throw new RangeError('Could not decode varint');
+    }
+    b = buf[counter++];
+    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);
+    shift += 7;
+  } while (b >= MSB$1);
+  read.bytes = counter - offset;
+  return res;
+}
+var N1 = Math.pow(2, 7);
+var N2 = Math.pow(2, 14);
+var N3 = Math.pow(2, 21);
+var N4 = Math.pow(2, 28);
+var N5 = Math.pow(2, 35);
+var N6 = Math.pow(2, 42);
+var N7 = Math.pow(2, 49);
+var N8 = Math.pow(2, 56);
+var N9 = Math.pow(2, 63);
+var varint_length = function (value) {
+  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
+};
+var varint = {
+  encode: encode_1,
+  decode: varint_decode,
+  encodingLength: varint_length
+};
+var _brrp_varint = varint;
+/* harmony default export */ const vendor_varint = (_brrp_varint);
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/varint.js
+
+const src_varint_decode = (data, offset = 0) => {
+  const code = vendor_varint.decode(data, offset);
+  return [
+    code,
+    vendor_varint.decode.bytes
+  ];
+};
+const encodeTo = (int, target, offset = 0) => {
+  vendor_varint.encode(int, target, offset);
+  return target;
+};
+const encodingLength = int => {
+  return vendor_varint.encodingLength(int);
+};
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/hashes/digest.js
+
+
+const create = (code, digest) => {
+  const size = digest.byteLength;
+  const sizeOffset = encodingLength(code);
+  const digestOffset = sizeOffset + encodingLength(size);
+  const bytes = new Uint8Array(digestOffset + size);
+  encodeTo(code, bytes, 0);
+  encodeTo(size, bytes, sizeOffset);
+  bytes.set(digest, digestOffset);
+  return new Digest(code, size, digest, bytes);
+};
+const digest_decode = multihash => {
+  const bytes = coerce(multihash);
+  const [code, sizeOffset] = src_varint_decode(bytes);
+  const [size, digestOffset] = src_varint_decode(bytes.subarray(sizeOffset));
+  const digest = bytes.subarray(sizeOffset + digestOffset);
+  if (digest.byteLength !== size) {
+    throw new Error('Incorrect length');
+  }
+  return new Digest(code, size, digest, bytes);
+};
+const digest_equals = (a, b) => {
+  if (a === b) {
+    return true;
+  } else {
+    return a.code === b.code && a.size === b.size && equals(a.bytes, b.bytes);
+  }
+};
+class Digest {
+  constructor(code, size, digest, bytes) {
+    this.code = code;
+    this.size = size;
+    this.digest = digest;
+    this.bytes = bytes;
+  }
+}
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/hashes/hasher.js
+
+const hasher_from = ({name, code, encode}) => new Hasher(name, code, encode);
+class Hasher {
+  constructor(name, code, encode) {
+    this.name = name;
+    this.code = code;
+    this.encode = encode;
+  }
+  digest(input) {
+    if (input instanceof Uint8Array) {
+      const result = this.encode(input);
+      return result instanceof Uint8Array ? create(this.code, result) : result.then(digest => create(this.code, digest));
+    } else {
+      throw Error('Unknown type, must be binary type');
+    }
+  }
+}
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/hashes/sha2-browser.js
+
+const sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));
+const sha256 = hasher_from({
+  name: 'sha2-256',
+  code: 18,
+  encode: sha('SHA-256')
+});
+const sha512 = hasher_from({
+  name: 'sha2-512',
+  code: 19,
+  encode: sha('SHA-512')
+});
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/hashes/identity.js
+
+
+const code = 0;
+const identity_name = 'identity';
+const identity_encode = coerce;
+const digest = input => create(code, identity_encode(input));
+const identity_identity = {
+  code,
+  name: identity_name,
+  encode: identity_encode,
+  digest
+};
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/codecs/raw.js
+
+const raw_name = 'raw';
+const raw_code = 85;
+const raw_encode = node => coerce(node);
+const raw_decode = data => coerce(data);
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/codecs/json.js
+const textEncoder = new TextEncoder();
+const textDecoder = new TextDecoder();
+const json_name = 'json';
+const json_code = 512;
+const json_encode = node => textEncoder.encode(JSON.stringify(node));
+const json_decode = data => JSON.parse(textDecoder.decode(data));
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/cid.js
+
+
+
+
+
+class CID {
+  constructor(version, code, multihash, bytes) {
+    this.code = code;
+    this.version = version;
+    this.multihash = multihash;
+    this.bytes = bytes;
+    this.byteOffset = bytes.byteOffset;
+    this.byteLength = bytes.byteLength;
+    this.asCID = this;
+    this._baseCache = new Map();
+    Object.defineProperties(this, {
+      byteOffset: cid_hidden,
+      byteLength: cid_hidden,
+      code: readonly,
+      version: readonly,
+      multihash: readonly,
+      bytes: readonly,
+      _baseCache: cid_hidden,
+      asCID: cid_hidden
+    });
+  }
+  toV0() {
+    switch (this.version) {
+    case 0: {
+        return this;
+      }
+    default: {
+        const {code, multihash} = this;
+        if (code !== DAG_PB_CODE) {
+          throw new Error('Cannot convert a non dag-pb CID to CIDv0');
+        }
+        if (multihash.code !== SHA_256_CODE) {
+          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');
+        }
+        return CID.createV0(multihash);
+      }
+    }
+  }
+  toV1() {
+    switch (this.version) {
+    case 0: {
+        const {code, digest} = this.multihash;
+        const multihash = create(code, digest);
+        return CID.createV1(this.code, multihash);
+      }
+    case 1: {
+        return this;
+      }
+    default: {
+        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);
+      }
+    }
+  }
+  equals(other) {
+    return other && this.code === other.code && this.version === other.version && digest_equals(this.multihash, other.multihash);
+  }
+  toString(base) {
+    const {bytes, version, _baseCache} = this;
+    switch (version) {
+    case 0:
+      return toStringV0(bytes, _baseCache, base || base58btc.encoder);
+    default:
+      return toStringV1(bytes, _baseCache, base || base32.encoder);
+    }
+  }
+  toJSON() {
+    return {
+      code: this.code,
+      version: this.version,
+      hash: this.multihash.bytes
+    };
+  }
+  get [Symbol.toStringTag]() {
+    return 'CID';
+  }
+  [Symbol.for('nodejs.util.inspect.custom')]() {
+    return 'CID(' + this.toString() + ')';
+  }
+  static isCID(value) {
+    deprecate(/^0\.0/, IS_CID_DEPRECATION);
+    return !!(value && (value[cidSymbol] || value.asCID === value));
+  }
+  get toBaseEncodedString() {
+    throw new Error('Deprecated, use .toString()');
+  }
+  get codec() {
+    throw new Error('"codec" property is deprecated, use integer "code" property instead');
+  }
+  get buffer() {
+    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');
+  }
+  get multibaseName() {
+    throw new Error('"multibaseName" property is deprecated');
+  }
+  get prefix() {
+    throw new Error('"prefix" property is deprecated');
+  }
+  static asCID(value) {
+    if (value instanceof CID) {
+      return value;
+    } else if (value != null && value.asCID === value) {
+      const {version, code, multihash, bytes} = value;
+      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));
+    } else if (value != null && value[cidSymbol] === true) {
+      const {version, multihash, code} = value;
+      const digest = digest_decode(multihash);
+      return CID.create(version, code, digest);
+    } else {
+      return null;
+    }
+  }
+  static create(version, code, digest) {
+    if (typeof code !== 'number') {
+      throw new Error('String codecs are no longer supported');
+    }
+    switch (version) {
+    case 0: {
+        if (code !== DAG_PB_CODE) {
+          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);
+        } else {
+          return new CID(version, code, digest, digest.bytes);
+        }
+      }
+    case 1: {
+        const bytes = encodeCID(version, code, digest.bytes);
+        return new CID(version, code, digest, bytes);
+      }
+    default: {
+        throw new Error('Invalid version');
+      }
+    }
+  }
+  static createV0(digest) {
+    return CID.create(0, DAG_PB_CODE, digest);
+  }
+  static createV1(code, digest) {
+    return CID.create(1, code, digest);
+  }
+  static decode(bytes) {
+    const [cid, remainder] = CID.decodeFirst(bytes);
+    if (remainder.length) {
+      throw new Error('Incorrect length');
+    }
+    return cid;
+  }
+  static decodeFirst(bytes) {
+    const specs = CID.inspectBytes(bytes);
+    const prefixSize = specs.size - specs.multihashSize;
+    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
+    if (multihashBytes.byteLength !== specs.multihashSize) {
+      throw new Error('Incorrect length');
+    }
+    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
+    const digest = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
+    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);
+    return [
+      cid,
+      bytes.subarray(specs.size)
+    ];
+  }
+  static inspectBytes(initialBytes) {
+    let offset = 0;
+    const next = () => {
+      const [i, length] = src_varint_decode(initialBytes.subarray(offset));
+      offset += length;
+      return i;
+    };
+    let version = next();
+    let codec = DAG_PB_CODE;
+    if (version === 18) {
+      version = 0;
+      offset = 0;
+    } else if (version === 1) {
+      codec = next();
+    }
+    if (version !== 0 && version !== 1) {
+      throw new RangeError(`Invalid CID version ${ version }`);
+    }
+    const prefixSize = offset;
+    const multihashCode = next();
+    const digestSize = next();
+    const size = offset + digestSize;
+    const multihashSize = size - prefixSize;
+    return {
+      version,
+      codec,
+      multihashCode,
+      digestSize,
+      multihashSize,
+      size
+    };
+  }
+  static parse(source, base) {
+    const [prefix, bytes] = parseCIDtoBytes(source, base);
+    const cid = CID.decode(bytes);
+    cid._baseCache.set(prefix, source);
+    return cid;
+  }
+}
+const parseCIDtoBytes = (source, base) => {
+  switch (source[0]) {
+  case 'Q': {
+      const decoder = base || base58btc;
+      return [
+        base58btc.prefix,
+        decoder.decode(`${ base58btc.prefix }${ source }`)
+      ];
+    }
+  case base58btc.prefix: {
+      const decoder = base || base58btc;
+      return [
+        base58btc.prefix,
+        decoder.decode(source)
+      ];
+    }
+  case base32.prefix: {
+      const decoder = base || base32;
+      return [
+        base32.prefix,
+        decoder.decode(source)
+      ];
+    }
+  default: {
+      if (base == null) {
+        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');
+      }
+      return [
+        source[0],
+        base.decode(source)
+      ];
+    }
+  }
+};
+const toStringV0 = (bytes, cache, base) => {
+  const {prefix} = base;
+  if (prefix !== base58btc.prefix) {
+    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);
+  }
+  const cid = cache.get(prefix);
+  if (cid == null) {
+    const cid = base.encode(bytes).slice(1);
+    cache.set(prefix, cid);
+    return cid;
+  } else {
+    return cid;
+  }
+};
+const toStringV1 = (bytes, cache, base) => {
+  const {prefix} = base;
+  const cid = cache.get(prefix);
+  if (cid == null) {
+    const cid = base.encode(bytes);
+    cache.set(prefix, cid);
+    return cid;
+  } else {
+    return cid;
+  }
+};
+const DAG_PB_CODE = 112;
+const SHA_256_CODE = 18;
+const encodeCID = (version, code, multihash) => {
+  const codeOffset = encodingLength(version);
+  const hashOffset = codeOffset + encodingLength(code);
+  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
+  encodeTo(version, bytes, 0);
+  encodeTo(code, bytes, codeOffset);
+  bytes.set(multihash, hashOffset);
+  return bytes;
+};
+const cidSymbol = Symbol.for('@ipld/js-cid/CID');
+const readonly = {
+  writable: false,
+  configurable: false,
+  enumerable: true
+};
+const cid_hidden = {
+  writable: false,
+  enumerable: false,
+  configurable: false
+};
+const version = '0.0.0-dev';
+const deprecate = (range, message) => {
+  if (range.test(version)) {
+    console.warn(message);
+  } else {
+    throw new Error(message);
+  }
+};
+const IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
+Following code pattern:
+
+if (CID.isCID(value)) {
+  doSomethingWithCID(value)
+}
+
+Is replaced with:
+
+const cid = CID.asCID(value)
+if (cid) {
+  // Make sure to use cid instead of value
+  doSomethingWithCID(cid)
+}
+`;
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/index.js
+
+
+
+
+
+
+;// CONCATENATED MODULE: ./node_modules/multiformats/esm/src/basics.js
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+const bases = {
+  ...identity_namespaceObject,
+  ...base2_namespaceObject,
+  ...base8_namespaceObject,
+  ...base10_namespaceObject,
+  ...base16_namespaceObject,
+  ...base32_namespaceObject,
+  ...base36_namespaceObject,
+  ...base58_namespaceObject,
+  ...base64_namespaceObject,
+  ...base256emoji_namespaceObject
+};
+const hashes = {
+  ...sha2_browser_namespaceObject,
+  ...hashes_identity_namespaceObject
+};
+const codecs = {
+  raw: raw_namespaceObject,
+  json: json_namespaceObject
+};
+
+
+/***/ }),
+
+/***/ 3160:
+/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
+
+"use strict";
+/* harmony export */ __webpack_require__.d(__webpack_exports__, {
+/* harmony export */   "E": () => (/* binding */ allocUnsafe)
+/* harmony export */ });
+/* unused harmony export alloc */
+/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6867);
+
+function alloc(size = 0) {
+  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {
+    return asUint8Array(globalThis.Buffer.alloc(size));
+  }
+  return new Uint8Array(size);
+}
+function allocUnsafe(size = 0) {
+  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
+    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__/* .asUint8Array */ .P)(globalThis.Buffer.allocUnsafe(size));
+  }
+  return new Uint8Array(size);
+}
+
+/***/ }),
+
+/***/ 2217:
+/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
+
+"use strict";
+__webpack_require__.r(__webpack_exports__);
+/* harmony export */ __webpack_require__.d(__webpack_exports__, {
+/* harmony export */   "fromString": () => (/* binding */ fromString)
+/* harmony export */ });
+/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7645);
+/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6867);
+
+
+function fromString(string, encoding = 'utf8') {
+  const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z[encoding];
+  if (!base) {
+    throw new Error(`Unsupported encoding "${ encoding }"`);
+  }
+  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
+    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__/* .asUint8Array */ .P)(globalThis.Buffer.from(string, 'utf-8'));
+  }
+  return base.decoder.decode(`${ base.prefix }${ string }`);
+}
+
+/***/ }),
+
+/***/ 733:
+/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
+
+"use strict";
+// ESM COMPAT FLAG
+__webpack_require__.r(__webpack_exports__);
+
+// EXPORTS
+__webpack_require__.d(__webpack_exports__, {
+  "compare": () => (/* reexport */ compare),
+  "concat": () => (/* reexport */ concat),
+  "equals": () => (/* reexport */ equals),
+  "fromString": () => (/* reexport */ from_string.fromString),
+  "toString": () => (/* reexport */ to_string_toString),
+  "xor": () => (/* reexport */ xor)
+});
+
+;// CONCATENATED MODULE: ./node_modules/uint8arrays/esm/src/compare.js
+function compare(a, b) {
+  for (let i = 0; i < a.byteLength; i++) {
+    if (a[i] < b[i]) {
+      return -1;
+    }
+    if (a[i] > b[i]) {
+      return 1;
+    }
+  }
+  if (a.byteLength > b.byteLength) {
+    return 1;
+  }
+  if (a.byteLength < b.byteLength) {
+    return -1;
+  }
+  return 0;
+}
+// EXTERNAL MODULE: ./node_modules/uint8arrays/esm/src/alloc.js
+var alloc = __webpack_require__(3160);
+// EXTERNAL MODULE: ./node_modules/uint8arrays/esm/src/util/as-uint8array.js
+var as_uint8array = __webpack_require__(6867);
+;// CONCATENATED MODULE: ./node_modules/uint8arrays/esm/src/concat.js
+
+
+function concat(arrays, length) {
+  if (!length) {
+    length = arrays.reduce((acc, curr) => acc + curr.length, 0);
+  }
+  const output = (0,alloc/* allocUnsafe */.E)(length);
+  let offset = 0;
+  for (const arr of arrays) {
+    output.set(arr, offset);
+    offset += arr.length;
+  }
+  return (0,as_uint8array/* asUint8Array */.P)(output);
+}
+;// CONCATENATED MODULE: ./node_modules/uint8arrays/esm/src/equals.js
+function equals(a, b) {
+  if (a === b) {
+    return true;
+  }
+  if (a.byteLength !== b.byteLength) {
+    return false;
+  }
+  for (let i = 0; i < a.byteLength; i++) {
+    if (a[i] !== b[i]) {
+      return false;
+    }
+  }
+  return true;
+}
+// EXTERNAL MODULE: ./node_modules/uint8arrays/esm/src/from-string.js
+var from_string = __webpack_require__(2217);
+// EXTERNAL MODULE: ./node_modules/uint8arrays/esm/src/util/bases.js
+var bases = __webpack_require__(7645);
+;// CONCATENATED MODULE: ./node_modules/uint8arrays/esm/src/to-string.js
+
+function to_string_toString(array, encoding = 'utf8') {
+  const base = bases/* default */.Z[encoding];
+  if (!base) {
+    throw new Error(`Unsupported encoding "${ encoding }"`);
+  }
+  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {
+    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');
+  }
+  return base.encoder.encode(array).substring(1);
+}
+;// CONCATENATED MODULE: ./node_modules/uint8arrays/esm/src/xor.js
+
+
+function xor(a, b) {
+  if (a.length !== b.length) {
+    throw new Error('Inputs should have the same length');
+  }
+  const result = (0,alloc/* allocUnsafe */.E)(a.length);
+  for (let i = 0; i < a.length; i++) {
+    result[i] = a[i] ^ b[i];
+  }
+  return (0,as_uint8array/* asUint8Array */.P)(result);
+}
+;// CONCATENATED MODULE: ./node_modules/uint8arrays/esm/src/index.js
+
+
+
+
+
+
+
+
+/***/ }),
+
+/***/ 6867:
+/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
+
+"use strict";
+/* harmony export */ __webpack_require__.d(__webpack_exports__, {
+/* harmony export */   "P": () => (/* binding */ asUint8Array)
+/* harmony export */ });
+function asUint8Array(buf) {
+  if (globalThis.Buffer != null) {
+    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
+  }
+  return buf;
+}
+
+/***/ }),
+
+/***/ 7645:
+/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
+
+"use strict";
+/* harmony export */ __webpack_require__.d(__webpack_exports__, {
+/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
+/* harmony export */ });
+/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2218);
+/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3160);
+
+
+function createCodec(name, prefix, encode, decode) {
+  return {
+    name,
+    prefix,
+    encoder: {
+      name,
+      prefix,
+      encode
+    },
+    decoder: { decode }
+  };
+}
+const string = createCodec('utf8', 'u', buf => {
+  const decoder = new TextDecoder('utf8');
+  return 'u' + decoder.decode(buf);
+}, str => {
+  const encoder = new TextEncoder();
+  return encoder.encode(str.substring(1));
+});
+const ascii = createCodec('ascii', 'a', buf => {
+  let string = 'a';
+  for (let i = 0; i < buf.length; i++) {
+    string += String.fromCharCode(buf[i]);
+  }
+  return string;
+}, str => {
+  str = str.substring(1);
+  const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__/* .allocUnsafe */ .E)(str.length);
+  for (let i = 0; i < str.length; i++) {
+    buf[i] = str.charCodeAt(i);
+  }
+  return buf;
+});
+const BASES = {
+  utf8: string,
+  'utf-8': string,
+  hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,
+  latin1: ascii,
+  ascii: ascii,
+  binary: ascii,
+  ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases
+};
+/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);
+
+/***/ }),
+
+/***/ 8597:
+/***/ ((module) => {
+
+"use strict";
+module.exports = {"i8":"6.5.4"};
+
+/***/ })
+
+/******/ 	});
+/************************************************************************/
+/******/ 	// The module cache
+/******/ 	var __webpack_module_cache__ = {};
+/******/
+/******/ 	// The require function
+/******/ 	function __webpack_require__(moduleId) {
+/******/ 		// Check if module is in cache
+/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
+/******/ 		if (cachedModule !== undefined) {
+/******/ 			return cachedModule.exports;
+/******/ 		}
+/******/ 		// Create a new module (and put it into the cache)
+/******/ 		var module = __webpack_module_cache__[moduleId] = {
+/******/ 			id: moduleId,
+/******/ 			loaded: false,
+/******/ 			exports: {}
+/******/ 		};
+/******/
+/******/ 		// Execute the module function
+/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
+/******/
+/******/ 		// Flag the module as loaded
+/******/ 		module.loaded = true;
+/******/
+/******/ 		// Return the exports of the module
+/******/ 		return module.exports;
+/******/ 	}
+/******/
+/************************************************************************/
+/******/ 	/* webpack/runtime/amd options */
+/******/ 	(() => {
+/******/ 		__webpack_require__.amdO = {};
+/******/ 	})();
+/******/
+/******/ 	/* webpack/runtime/define property getters */
+/******/ 	(() => {
+/******/ 		// define getter functions for harmony exports
+/******/ 		__webpack_require__.d = (exports, definition) => {
+/******/ 			for(var key in definition) {
+/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
+/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
+/******/ 				}
+/******/ 			}
+/******/ 		};
+/******/ 	})();
+/******/
+/******/ 	/* webpack/runtime/global */
+/******/ 	(() => {
+/******/ 		__webpack_require__.g = (function() {
+/******/ 			if (typeof globalThis === 'object') return globalThis;
+/******/ 			try {
+/******/ 				return this || new Function('return this')();
+/******/ 			} catch (e) {
+/******/ 				if (typeof window === 'object') return window;
+/******/ 			}
+/******/ 		})();
+/******/ 	})();
+/******/
+/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
+/******/ 	(() => {
+/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
+/******/ 	})();
+/******/
+/******/ 	/* webpack/runtime/make namespace object */
+/******/ 	(() => {
+/******/ 		// define __esModule on exports
+/******/ 		__webpack_require__.r = (exports) => {
+/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
+/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
+/******/ 			}
+/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
+/******/ 		};
+/******/ 	})();
+/******/
+/******/ 	/* webpack/runtime/node module decorator */
+/******/ 	(() => {
+/******/ 		__webpack_require__.nmd = (module) => {
+/******/ 			module.paths = [];
+/******/ 			if (!module.children) module.children = [];
+/******/ 			return module;
+/******/ 		};
+/******/ 	})();
+/******/
+/************************************************************************/
+var __webpack_exports__ = {};
+// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
+(() => {
+var exports = __webpack_exports__;
+var u8a = __webpack_require__(733);
+var basics = __webpack_require__(2218);
+var sha256$1 = __webpack_require__(3294);
+var sha3 = __webpack_require__(1094);
+var elliptic = __webpack_require__(6266);
+var ed25519 = __webpack_require__(1050);
+var canonicalizeData = __webpack_require__(5456);
+var bech32 = __webpack_require__(7715);
+var x25519 = __webpack_require__(7664);
+var xchacha20poly1305 = __webpack_require__(9375);
+var random = __webpack_require__(1416);
+var fromString = __webpack_require__(2217);
+
+function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }
+
+function _interopNamespace(e) {
+  if (e && e.__esModule) return e;
+  var n = Object.create(null);
+  if (e) {
+    Object.keys(e).forEach(function (k) {
+      if (k !== 'default') {
+        var d = Object.getOwnPropertyDescriptor(e, k);
+        Object.defineProperty(n, k, d.get ? d : {
+          enumerable: true,
+          get: function () {
+            return e[k];
+          }
+        });
+      }
+    });
+  }
+  n['default'] = e;
+  return n;
+}
+
+var u8a__namespace = /*#__PURE__*/_interopNamespace(u8a);
+var sha3__default = /*#__PURE__*/_interopDefaultLegacy(sha3);
+var elliptic__default = /*#__PURE__*/_interopDefaultLegacy(elliptic);
+var canonicalizeData__default = /*#__PURE__*/_interopDefaultLegacy(canonicalizeData);
+
+function bytesToBase64url(b) {
+  return u8a__namespace.toString(b, 'base64url');
+}
+function base64ToBytes(s) {
+  const inputBase64Url = s.replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, '');
+  return u8a__namespace.fromString(inputBase64Url, 'base64url');
+}
+function base58ToBytes(s) {
+  return u8a__namespace.fromString(s, 'base58btc');
+}
+function bytesToBase58(b) {
+  return u8a__namespace.toString(b, 'base58btc');
+}
+function hexToBytes(s) {
+  const input = s.startsWith('0x') ? s.substring(2) : s;
+  return u8a__namespace.fromString(input.toLowerCase(), 'base16');
+}
+function encodeBase64url(s) {
+  return bytesToBase64url(u8a__namespace.fromString(s));
+}
+function decodeBase64url(s) {
+  return u8a__namespace.toString(base64ToBytes(s));
+}
+function bytesToHex(b) {
+  return u8a__namespace.toString(b, 'base16');
+}
+function stringToBytes(s) {
+  return u8a__namespace.fromString(s);
+}
+function toJose({
+  r,
+  s,
+  recoveryParam
+}, recoverable) {
+  const jose = new Uint8Array(recoverable ? 65 : 64);
+  jose.set(u8a__namespace.fromString(r, 'base16'), 0);
+  jose.set(u8a__namespace.fromString(s, 'base16'), 32);
+
+  if (recoverable) {
+    if (typeof recoveryParam === 'undefined') {
+      throw new Error('Signer did not return a recoveryParam');
+    }
+
+    jose[64] = recoveryParam;
+  }
+
+  return bytesToBase64url(jose);
+}
+function fromJose(signature) {
+  const signatureBytes = base64ToBytes(signature);
+
+  if (signatureBytes.length < 64 || signatureBytes.length > 65) {
+    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`);
+  }
+
+  const r = bytesToHex(signatureBytes.slice(0, 32));
+  const s = bytesToHex(signatureBytes.slice(32, 64));
+  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined;
+  return {
+    r,
+    s,
+    recoveryParam
+  };
+}
+function toSealed(ciphertext, tag) {
+  return u8a__namespace.concat([base64ToBytes(ciphertext), base64ToBytes(tag)]);
+}
+function leftpad(data, size = 64) {
+  if (data.length === size) return data;
+  return '0'.repeat(size - data.length) + data;
+}
+
+// https://github.com/crypto-browserify/ripemd160/blob/master/index.js
+const zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
+const zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
+const sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
+const sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
+const hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];
+const hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];
+
+function rotl(x, n) {
+  return x << n | x >>> 32 - n;
+}
+
+function fn1(a, b, c, d, e, m, k, s) {
+  return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;
+}
+
+function fn2(a, b, c, d, e, m, k, s) {
+  return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;
+}
+
+function fn3(a, b, c, d, e, m, k, s) {
+  return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;
+}
+
+function fn4(a, b, c, d, e, m, k, s) {
+  return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;
+}
+
+function fn5(a, b, c, d, e, m, k, s) {
+  return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;
+}
+
+class Ripemd160 {
+  // state
+  constructor(blockSize = 64) {
+    this._a = 0x67452301;
+    this._b = 0xefcdab89;
+    this._c = 0x98badcfe;
+    this._d = 0x10325476;
+    this._e = 0xc3d2e1f0;
+    this._blockOffset = 0;
+    this._block = void 0;
+    this._blockSize = void 0;
+    this._length = [0, 0, 0, 0];
+    this._finalized = void 0;
+
+    this.update = data => {
+      if (this._finalized) throw new Error('Digest already called'); // consume data
+
+      const block = this._block;
+      let offset = 0;
+
+      while (this._blockOffset + data.length - offset >= this._blockSize) {
+        for (let i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++];
+
+        this._update();
+
+        this._blockOffset = 0;
+      }
+
+      while (offset < data.length) block[this._blockOffset++] = data[offset++]; // update length
+
+
+      for (let j = 0, carry = data.length * 8; carry > 0; ++j) {
+        this._length[j] += carry;
+        carry = this._length[j] / 0x0100000000 | 0;
+        if (carry > 0) this._length[j] -= 0x0100000000 * carry;
+      }
+
+      return this;
+    };
+
+    this.digest = () => {
+      if (this._finalized) throw new Error('Digest already called');
+      this._finalized = true;
+
+      const digest = this._digest(); // reset state
+
+
+      this._block.fill(0);
+
+      this._blockOffset = 0;
+
+      for (let i = 0; i < 4; ++i) this._length[i] = 0;
+
+      return digest;
+    };
+
+    this._update = () => {
+      const words = new Array(16);
+      const temp = new DataView(this._block.buffer);
+
+      for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true);
+
+      let al = this._a | 0;
+      let bl = this._b | 0;
+      let cl = this._c | 0;
+      let dl = this._d | 0;
+      let el = this._e | 0;
+      let ar = this._a | 0;
+      let br = this._b | 0;
+      let cr = this._c | 0;
+      let dr = this._d | 0;
+      let er = this._e | 0; // computation
+
+      for (let i = 0; i < 80; i += 1) {
+        let tl;
+        let tr;
+
+        if (i < 16) {
+          tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
+          tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
+        } else if (i < 32) {
+          tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
+          tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
+        } else if (i < 48) {
+          tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
+          tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
+        } else if (i < 64) {
+          tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
+          tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
+        } else {
+          // if (i<80) {
+          tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
+          tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
+        }
+
+        al = el;
+        el = dl;
+        dl = rotl(cl, 10);
+        cl = bl;
+        bl = tl;
+        ar = er;
+        er = dr;
+        dr = rotl(cr, 10);
+        cr = br;
+        br = tr;
+      } // update state
+
+
+      const t = this._b + cl + dr | 0;
+      this._b = this._c + dl + er | 0;
+      this._c = this._d + el + ar | 0;
+      this._d = this._e + al + br | 0;
+      this._e = this._a + bl + cr | 0;
+      this._a = t;
+    };
+
+    this._digest = () => {
+      // create padding and handle blocks
+      this._block[this._blockOffset++] = 0x80;
+
+      if (this._blockOffset > 56) {
+        this._block.fill(0, this._blockOffset, 64);
+
+        this._update();
+
+        this._blockOffset = 0;
+      }
+
+      this._block.fill(0, this._blockOffset, 56);
+
+      const temp = new DataView(this._block.buffer);
+      temp.setUint32(56, this._length[0], true);
+      temp.setUint32(60, this._length[1], true);
+      this._block = new Uint8Array(temp.buffer);
+
+      this._update(); // produce result
+
+
+      const buffer = new DataView(new Uint8Array(20).buffer);
+      buffer.setInt32(0, this._a, true);
+      buffer.setInt32(4, this._b, true);
+      buffer.setInt32(8, this._c, true);
+      buffer.setInt32(12, this._d, true);
+      buffer.setInt32(16, this._e, true);
+      return new Uint8Array(buffer.buffer);
+    };
+
+    this._block = new Uint8Array(blockSize);
+    this._blockSize = blockSize;
+    this._blockOffset = 0;
+    this._length = [0, 0, 0, 0];
+    this._finalized = false;
+  }
+
+}
+
+function sha256(payload) {
+  const data = typeof payload === 'string' ? u8a__namespace.fromString(payload) : payload;
+  return sha256$1.hash(data);
+}
+function keccak(data) {
+  return new Uint8Array(sha3__default['default'].keccak_256.arrayBuffer(data));
+}
+function toEthereumAddress(hexPublicKey) {
+  const hashInput = u8a__namespace.fromString(hexPublicKey.slice(2), 'base16');
+  return `0x${u8a__namespace.toString(keccak(hashInput).slice(-20), 'base16')}`;
+}
+function ripemd160(data) {
+  return new Ripemd160().update(data).digest();
+}
+
+function writeUint32BE(value, array = new Uint8Array(4)) {
+  const encoded = u8a__namespace.fromString(value.toString(), 'base10');
+  array.set(encoded, 4 - encoded.length);
+  return array;
+}
+
+const lengthAndInput = input => u8a__namespace.concat([writeUint32BE(input.length), input]); // This implementation of concatKDF was inspired by these two implementations:
+// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js
+// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js
+
+
+function concatKDF(secret, keyLen, alg, producerInfo, consumerInfo) {
+  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`);
+  const value = u8a__namespace.concat([lengthAndInput(u8a__namespace.fromString(alg)), lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), writeUint32BE(keyLen)]); // since our key lenght is 256 we only have to do one round
+
+  const roundNumber = 1;
+  return sha256(u8a__namespace.concat([writeUint32BE(roundNumber), secret, value]));
+}
+
+const secp256k1$1 = new elliptic__default['default'].ec('secp256k1');
+/**
+ *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.
+ *
+ *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature
+ *
+ *  @example
+ *  ```typescript
+ *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)
+ *  const signature: string = await sign(data)
+ *  ```
+ *
+ *  @param    {String}    privateKey   a private key as `Uint8Array`
+ *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures
+ *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`
+ */
+
+function ES256KSigner(privateKey, recoverable = false) {
+  const privateKeyBytes = privateKey;
+
+  if (privateKeyBytes.length !== 32) {
+    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`);
+  }
+
+  const keyPair = secp256k1$1.keyFromPrivate(privateKeyBytes);
+  return function (data) {
+    try {
+      const {
+        r,
+        s,
+        recoveryParam
+      } = keyPair.sign(sha256(data));
+      return Promise.resolve(toJose({
+        r: leftpad(r.toString('hex')),
+        s: leftpad(s.toString('hex')),
+        recoveryParam
+      }, recoverable));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+
+/**
+ * @deprecated Please use ES256KSigner
+ *  The SimpleSigner returns a configured function for signing data.
+ *
+ *  @example
+ *  const signer = SimpleSigner(process.env.PRIVATE_KEY)
+ *  signer(data, (err, signature) => {
+ *    ...
+ *  })
+ *
+ *  @param    {String}         hexPrivateKey    a hex encoded private key
+ *  @return   {Function}                     a configured signer function
+ */
+
+function SimpleSigner(hexPrivateKey) {
+  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true);
+  return function (data) {
+    try {
+      return Promise.resolve(signer(data)).then(fromJose);
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+
+/**
+ * @deprecated Please use ES256KSigner
+ *  The EllipticSigner returns a configured function for signing data.
+ *
+ *  @example
+ *  ```typescript
+ *  const signer = EllipticSigner(process.env.PRIVATE_KEY)
+ *  signer(data).then( (signature: string) => {
+ *    ...
+ *  })
+ *  ```
+ *
+ *  @param    {String}         hexPrivateKey    a hex encoded private key
+ *  @return   {Function}                        a configured signer function
+ */
+
+function EllipticSigner(hexPrivateKey) {
+  return ES256KSigner(hexToBytes(hexPrivateKey));
+}
+
+/**
+ *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.
+ *
+ *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature
+ *
+ *  @example
+ *  ```typescript
+ *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)
+ *  const signature: string = await sign(data)
+ *  ```
+ *
+ *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`
+ *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`
+ */
+
+function EdDSASigner(secretKey) {
+  const privateKeyBytes = secretKey;
+
+  if (privateKeyBytes.length !== 64) {
+    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`);
+  }
+
+  return function (data) {
+    try {
+      const dataBytes = typeof data === 'string' ? stringToBytes(data) : data;
+      const sig = ed25519.sign(privateKeyBytes, dataBytes);
+      return Promise.resolve(bytesToBase64url(sig));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+
+/**
+ * @deprecated Please use EdDSASigner
+ *
+ *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.
+ *
+ *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.
+ *
+ *  @example
+ *  const signer = NaclSigner(process.env.PRIVATE_KEY)
+ *  const data: string = '...'
+ *  signer(data).then( (signature: string) => {
+ *    ...
+ *  })
+ *
+ *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key
+ *  @return   {Function}                     a configured signer function
+ */
+
+function NaclSigner(base64PrivateKey) {
+  return EdDSASigner(base64ToBytes(base64PrivateKey));
+}
+
+const secp256r1$1 = new elliptic__default['default'].ec('p256');
+/**
+ *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.
+ *
+ *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature
+ *
+ *  @example
+ *  ```typescript
+ *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)
+ *  const signature: string = await sign(data)
+ *  ```
+ *
+ *  @param    {String}    privateKey   a private key as `Uint8Array`
+ *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`
+ */
+
+function ES256Signer(privateKey) {
+  const privateKeyBytes = privateKey;
+
+  if (privateKeyBytes.length !== 32) {
+    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`);
+  }
+
+  const keyPair = secp256r1$1.keyFromPrivate(privateKeyBytes);
+  return function (data) {
+    try {
+      const {
+        r,
+        s
+      } = keyPair.sign(sha256(data));
+      return Promise.resolve(toJose({
+        r: leftpad(r.toString('hex')),
+        s: leftpad(s.toString('hex'))
+      }));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+
+function instanceOfEcdsaSignature(object) {
+  return typeof object === 'object' && 'r' in object && 's' in object;
+}
+
+function ES256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload)).then(function (signature) {
+        if (instanceOfEcdsaSignature(signature)) {
+          return toJose(signature);
+        } else {
+          return signature;
+        }
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+function ES256KSignerAlg(recoverable) {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload)).then(function (signature) {
+        if (instanceOfEcdsaSignature(signature)) {
+          return toJose(signature, recoverable);
+        } else {
+          if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {
+            throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`);
+          }
+
+          return signature;
+        }
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+function Ed25519SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload)).then(function (signature) {
+        if (!instanceOfEcdsaSignature(signature)) {
+          return signature;
+        } else {
+          throw new Error('invalid_config: expected a signer function that returns a string instead of signature object');
+        }
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+function RS256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+function PS256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+const algorithms$1 = {
+  ES256: ES256SignerAlg(),
+  ES256K: ES256KSignerAlg(),
+  // This is a non-standard algorithm but retained for backwards compatibility
+  // see https://github.com/decentralized-identity/did-jwt/issues/146
+  'ES256K-R': ES256KSignerAlg(true),
+  // This is actually incorrect but retained for backwards compatibility
+  // see https://github.com/decentralized-identity/did-jwt/issues/130
+  Ed25519: Ed25519SignerAlg(),
+  EdDSA: Ed25519SignerAlg(),
+  RS256: RS256SignerAlg(),
+  PS256: PS256SignerAlg()
+};
+
+function SignerAlg(alg) {
+  const impl = algorithms$1[alg];
+  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`);
+  return impl;
+}
+
+const publicKeyToAddress$1 = (publicKey, otherAddress) => {
+  // Use the same version/prefix byte as the given address.
+  const version = u8a__namespace.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex');
+  const publicKeyBuffer = u8a__namespace.fromString(publicKey, 'hex');
+  const publicKeyHash = ripemd160(sha256(publicKeyBuffer));
+  const step1 = version + u8a__namespace.toString(publicKeyHash, 'hex');
+  const step2 = sha256(u8a__namespace.fromString(step1, 'hex'));
+  const step3 = sha256(step2);
+  const checksum = u8a__namespace.toString(step3, 'hex').substring(0, 8);
+  const step4 = step1 + checksum;
+  return bytesToBase58(u8a__namespace.fromString(step4, 'hex'));
+};
+
+const EC = elliptic__default['default'].ec;
+const publicKeyToAddress = (publicKey, prefix) => {
+  const ec = new EC('secp256k1');
+  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true);
+  const publicKeyBuffer = u8a__namespace.fromString(compressedPublicKey, 'hex');
+  const hash = ripemd160(sha256(publicKeyBuffer));
+  const words = bech32.bech32.toWords(hash);
+  return bech32.bech32.encode(prefix, words).replace(prefix, '');
+};
+
+const verifyBlockchainAccountId = (publicKey, blockchainAccountId) => {
+  if (blockchainAccountId) {
+    const chain = blockchainAccountId.split(':');
+
+    switch (chain[0]) {
+      case 'bip122':
+        chain[chain.length - 1] = publicKeyToAddress$1(publicKey, chain[chain.length - 1]);
+        break;
+
+      case 'cosmos':
+        chain[chain.length - 1] = publicKeyToAddress(publicKey, chain[1]);
+        break;
+
+      case 'eip155':
+        chain[chain.length - 1] = toEthereumAddress(publicKey);
+        break;
+
+      default:
+        return false;
+    }
+
+    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase();
+  }
+
+  return false;
+};
+
+const secp256k1 = new elliptic__default['default'].ec('secp256k1');
+const secp256r1 = new elliptic__default['default'].ec('p256'); // converts a JOSE signature to it's components
+
+function toSignatureObject(signature, recoverable = false) {
+  const rawSig = base64ToBytes(signature);
+
+  if (rawSig.length !== (recoverable ? 65 : 64)) {
+    throw new Error('wrong signature length');
+  }
+
+  const r = bytesToHex(rawSig.slice(0, 32));
+  const s = bytesToHex(rawSig.slice(32, 64));
+  const sigObj = {
+    r,
+    s
+  };
+
+  if (recoverable) {
+    sigObj.recoveryParam = rawSig[64];
+  }
+
+  return sigObj;
+}
+
+function extractPublicKeyBytes(pk) {
+  if (pk.publicKeyBase58) {
+    return base58ToBytes(pk.publicKeyBase58);
+  } else if (pk.publicKeyBase64) {
+    return base64ToBytes(pk.publicKeyBase64);
+  } else if (pk.publicKeyHex) {
+    return hexToBytes(pk.publicKeyHex);
+  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {
+    return hexToBytes(secp256k1.keyFromPublic({
+      x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),
+      y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y))
+    }).getPublic('hex'));
+  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {
+    return hexToBytes(secp256r1.keyFromPublic({
+      x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),
+      y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y))
+    }).getPublic('hex'));
+  } else if (pk.publicKeyJwk && pk.publicKeyJwk.kty === 'OKP' && pk.publicKeyJwk.crv === 'Ed25519' && pk.publicKeyJwk.x) {
+    return base64ToBytes(pk.publicKeyJwk.x);
+  } else if (pk.publicKeyMultibase) {
+    const {
+      base16,
+      base58btc,
+      base64,
+      base64url
+    } = basics.bases;
+    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)));
+    return baseDecoder.decode(pk.publicKeyMultibase);
+  }
+
+  return new Uint8Array();
+}
+
+function verifyES256(data, signature, authenticators) {
+  const hash = sha256(data);
+  const sigObj = toSignatureObject(signature);
+  const fullPublicKeys = authenticators.filter(({
+    ethereumAddress,
+    blockchainAccountId
+  }) => {
+    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined';
+  });
+  const signer = fullPublicKeys.find(pk => {
+    try {
+      const pubBytes = extractPublicKeyBytes(pk);
+      return secp256r1.keyFromPublic(pubBytes).verify(hash, sigObj);
+    } catch (err) {
+      return false;
+    }
+  });
+  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT');
+  return signer;
+}
+function verifyES256K(data, signature, authenticators) {
+  const hash = sha256(data);
+  const sigObj = toSignatureObject(signature);
+  const fullPublicKeys = authenticators.filter(({
+    ethereumAddress,
+    blockchainAccountId
+  }) => {
+    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined';
+  });
+  const blockchainAddressKeys = authenticators.filter(({
+    ethereumAddress,
+    blockchainAccountId
+  }) => {
+    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined';
+  });
+  let signer = fullPublicKeys.find(pk => {
+    try {
+      const pubBytes = extractPublicKeyBytes(pk);
+      return secp256k1.keyFromPublic(pubBytes).verify(hash, sigObj);
+    } catch (err) {
+      return false;
+    }
+  });
+
+  if (!signer && blockchainAddressKeys.length > 0) {
+    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys);
+  }
+
+  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT');
+  return signer;
+}
+function verifyRecoverableES256K(data, signature, authenticators) {
+  let signatures;
+
+  if (signature.length > 86) {
+    signatures = [toSignatureObject(signature, true)];
+  } else {
+    const so = toSignatureObject(signature, false);
+    signatures = [{ ...so,
+      recoveryParam: 0
+    }, { ...so,
+      recoveryParam: 1
+    }];
+  }
+
+  const checkSignatureAgainstSigner = sigObj => {
+    const hash = sha256(data); // eslint-disable-next-line @typescript-eslint/no-explicit-any
+
+    const recoveredKey = secp256k1.recoverPubKey(hash, sigObj, sigObj.recoveryParam);
+    const recoveredPublicKeyHex = recoveredKey.encode('hex');
+    const recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);
+    const recoveredAddress = toEthereumAddress(recoveredPublicKeyHex).toLowerCase();
+    const signer = authenticators.find(pk => {
+      const keyHex = bytesToHex(extractPublicKeyBytes(pk));
+      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || pk.ethereumAddress?.toLowerCase() === recoveredAddress || pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2
+      verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10
+      ;
+    });
+    return signer;
+  };
+
+  const signer = signatures.map(checkSignatureAgainstSigner).filter(key => typeof key !== 'undefined');
+  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT');
+  return signer[0];
+}
+function verifyEd25519(data, signature, authenticators) {
+  const clear = stringToBytes(data);
+  const sig = base64ToBytes(signature);
+  const signer = authenticators.find(pk => {
+    return ed25519.verify(extractPublicKeyBytes(pk), clear, sig);
+  });
+  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT');
+  return signer;
+}
+const algorithms = {
+  ES256: verifyES256,
+  ES256K: verifyES256K,
+  // This is a non-standard algorithm but retained for backwards compatibility
+  // see https://github.com/decentralized-identity/did-jwt/issues/146
+  'ES256K-R': verifyRecoverableES256K,
+  // This is actually incorrect but retained for backwards compatibility
+  // see https://github.com/decentralized-identity/did-jwt/issues/130
+  Ed25519: verifyEd25519,
+  EdDSA: verifyEd25519
+};
+
+function VerifierAlgorithm(alg) {
+  const impl = algorithms[alg];
+  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`);
+  return impl;
+}
+
+VerifierAlgorithm.toSignatureObject = toSignatureObject;
+
+/**
+ * Error prefixes used for known verification failure cases.
+ *
+ * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major
+ * version update to match the scenarios better.
+ *
+ * @beta
+ */
+const JWT_ERROR = {
+  /**
+   * Thrown when a JWT payload schema is unexpected or when validity period does not match
+   */
+  INVALID_JWT: 'invalid_jwt',
+
+  /**
+   * Thrown when the verifier audience does not match the one set in the JWT payload
+   */
+  INVALID_AUDIENCE: 'invalid_config',
+
+  /**
+   * Thrown when none of the public keys of the issuer match the signature of the JWT.
+   *
+   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.
+   */
+  INVALID_SIGNATURE: 'invalid_signature',
+
+  /**
+   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given
+   * `proofPurpose`.
+   *
+   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.
+   */
+  NO_SUITABLE_KEYS: 'no_suitable_keys',
+
+  /**
+   * Thrown when the `alg` of the JWT or the encoding of the key is not supported
+   */
+  NOT_SUPPORTED: 'not_supported',
+
+  /**
+   * Thrown when the DID resolver is unable to resolve the issuer DID.
+   */
+  RESOLVER_ERROR: 'resolver_error'
+};
+
+/**
+ * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of
+ * provided DID
+ *
+ *  @example
+ *  ```ts
+ *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {
+ *      const payload = obj.payload
+ *      const profile = obj.profile
+ *      const jwt = obj.jwt
+ *      // ...
+ *  })
+ *  ```
+ *
+ *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`
+ *  @param alg - {String} a JWT algorithm
+ *  @param issuer - {String} a Decentralized Identifier (DID) to lookup
+ *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the
+ *   issuer DID document
+ *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators
+ *   or rejects with an error if none exist
+ */
+const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
+  try {
+    const types = SUPPORTED_PUBLIC_KEY_TYPES[alg];
+
+    if (!types || types.length === 0) {
+      throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`);
+    }
+
+    let didResult;
+    return Promise.resolve(resolver.resolve(issuer, {
+      accept: DID_JSON
+    })).then(function (result) {
+      // support legacy resolvers that do not produce DIDResolutionResult
+      if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {
+        didResult = {
+          didDocument: result,
+          didDocumentMetadata: {},
+          didResolutionMetadata: {
+            contentType: DID_JSON
+          }
+        };
+      } else {
+        didResult = result;
+      }
+
+      if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {
+        const {
+          error,
+          message
+        } = didResult.didResolutionMetadata;
+        throw new Error(`${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`);
+      }
+
+      const getPublicKeyById = (verificationMethods, pubid) => {
+        const filtered = verificationMethods.filter(({
+          id
+        }) => pubid === id);
+        return filtered.length > 0 ? filtered[0] : null;
+      };
+
+      let publicKeysToCheck = [...(didResult?.didDocument?.verificationMethod || []), ...(didResult?.didDocument?.publicKey || [])];
+
+      if (typeof proofPurpose === 'string') {
+        // support legacy DID Documents that do not list assertionMethod
+        if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')) {
+          didResult.didDocument = { ...didResult.didDocument
+          };
+          didResult.didDocument.assertionMethod = [...publicKeysToCheck.map(pk => pk.id)];
+        }
+
+        publicKeysToCheck = (didResult.didDocument[proofPurpose] || []).map(verificationMethod => {
+          if (typeof verificationMethod === 'string') {
+            return getPublicKeyById(publicKeysToCheck, verificationMethod);
+          } else if (typeof verificationMethod.publicKey === 'string') {
+            // this is a legacy format
+            return getPublicKeyById(publicKeysToCheck, verificationMethod.publicKey);
+          } else {
+            return verificationMethod;
+          }
+        }).filter(key => key != null);
+      }
+
+      const authenticators = publicKeysToCheck.filter(({
+        type
+      }) => types.find(supported => supported === type));
+
+      if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {
+        throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`);
+      }
+
+      if (!authenticators || authenticators.length === 0) {
+        throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`);
+      }
+
+      return {
+        authenticators,
+        issuer,
+        didResolutionResult: didResult
+      };
+    });
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+
+/**
+ *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,
+ *  and the DID document of the issuer of the JWT.
+ *
+ *  @example
+ *  ```ts
+ *  verifyJWT(
+ *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',
+ *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}
+ *    ).then(obj => {
+ *        const did = obj.did // DID of signer
+ *        const payload = obj.payload
+ *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer
+ *        const jwt = obj.jwt
+ *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT
+ *        ...
+ *    })
+ *  ```
+ *
+ *  @param    {String}            jwt                a JSON Web Token to verify
+ *  @param    {Object}            [options]           an unsigned credential object
+ *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the
+ *   DID document (for Authentication purposes)
+ *  @param    {String}            options.audience    DID of the recipient of the JWT
+ *  @param    {String}            options.callbackUrl callback url in JWT
+ *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an
+ *   error
+ */
+const verifyJWT = function (jwt, options = {
+  resolver: undefined,
+  auth: undefined,
+  audience: undefined,
+  callbackUrl: undefined,
+  skewTime: undefined,
+  proofPurpose: undefined,
+  policies: {}
+}) {
+  try {
+    if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured');
+    const {
+      payload,
+      header,
+      signature,
+      data
+    } = decodeJWT(jwt);
+    const proofPurpose = Object.prototype.hasOwnProperty.call(options, 'auth') ? options.auth ? 'authentication' : undefined : options.proofPurpose;
+    let did;
+
+    if (!payload.iss && !payload.client_id) {
+      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`);
+    }
+
+    if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {
+      if (!payload.sub) {
+        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`);
+      }
+
+      if (typeof payload.sub_jwk === 'undefined') {
+        did = payload.sub;
+      } else {
+        did = (header.kid || '').split('#')[0];
+      }
+    } else if (payload.iss === SELF_ISSUED_V0_1) {
+      if (!payload.did) {
+        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`);
+      }
+
+      did = payload.did;
+    } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {
+      // SIOP Request payload
+      // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object
+      if (!payload.client_id) {
+        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`);
+      }
+
+      did = payload.client_id;
+    } else {
+      did = payload.iss;
+    }
+
+    if (!did) {
+      throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`);
+    }
+
+    return Promise.resolve(resolveAuthenticator(options.resolver, header.alg, did, proofPurpose)).then(function ({
+      didResolutionResult,
+      authenticators,
+      issuer
+    }) {
+      return Promise.resolve(verifyJWSDecoded({
+        header,
+        data,
+        signature
+      }, authenticators)).then(function (signer) {
+        const now = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
+        const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW;
+
+        if (signer) {
+          const nowSkewed = now + skewTime;
+
+          if (options.policies?.nbf !== false && payload.nbf) {
+            if (payload.nbf > nowSkewed) {
+              throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`);
+            }
+          } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {
+            throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`);
+          }
+
+          if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {
+            throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`);
+          }
+
+          if (options.policies?.aud !== false && payload.aud) {
+            if (!options.audience && !options.callbackUrl) {
+              throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`);
+            }
+
+            const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud];
+            const matchedAudience = audArray.find(item => options.audience === item || options.callbackUrl === item);
+
+            if (typeof matchedAudience === 'undefined') {
+              throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`);
+            }
+          }
+
+          return {
+            verified: true,
+            payload,
+            didResolutionResult,
+            issuer,
+            signer,
+            jwt,
+            policies: options.policies
+          };
+        }
+
+        throw new Error(`${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`);
+      });
+    });
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+
+/**
+ *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is
+ * over.
+ *
+ *  @example
+ *  const signer = ES256KSigner(process.env.PRIVATE_KEY)
+ *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {
+ *      ...
+ *  })
+ *
+ *  @param    {Object}            payload               payload object
+ *  @param    {Object}            [options]             an unsigned credential object
+ *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT
+ *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:
+ *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm
+ *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`
+ *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing
+ *  @param    {Object}            header                optional object to specify or customize the JWT header
+ *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or
+ *   rejects with an error
+ */
+const createJWT = function (payload, {
+  issuer,
+  signer,
+  alg,
+  expiresIn,
+  canonicalize
+}, header = {}) {
+  try {
+    if (!signer) throw new Error('missing_signer: No Signer functionality has been configured');
+    if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured');
+    if (!header.typ) header.typ = 'JWT';
+    if (!header.alg) header.alg = alg;
+    const timestamps = {
+      iat: Math.floor(Date.now() / 1000),
+      exp: undefined
+    };
+
+    if (expiresIn) {
+      if (typeof expiresIn === 'number') {
+        timestamps.exp = (payload.nbf || timestamps.iat) + Math.floor(expiresIn);
+      } else {
+        throw new Error('invalid_argument: JWT expiresIn is not a number');
+      }
+    }
+
+    const fullPayload = { ...timestamps,
+      ...payload,
+      iss: issuer
+    };
+    return createJWS(fullPayload, signer, header, {
+      canonicalize
+    });
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+
+/**
+ *  Creates a signed JWS given a payload, a signer, and an optional header.
+ *
+ *  @example
+ *  const signer = ES256KSigner(process.env.PRIVATE_KEY)
+ *  const jws = await createJWS({ my: 'payload' }, signer)
+ *
+ *  @param    {Object}            payload           payload object
+ *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`
+ *  @param    {Object}            header            optional object to specify or customize the JWS header
+ *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and
+ *                                                    payload properties
+ *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error
+ */
+const createJWS = function (payload, signer, header = {}, options = {}) {
+  try {
+    if (!header.alg) header.alg = defaultAlg;
+    const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize);
+    const signingInput = [encodeSection(header, options.canonicalize), encodedPayload].join('.');
+    const jwtSigner = SignerAlg(header.alg);
+    return Promise.resolve(jwtSigner(signingInput, signer)).then(function (signature) {
+      return [signingInput, signature].join('.');
+    });
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+const SUPPORTED_PUBLIC_KEY_TYPES = {
+  ES256: ['JsonWebKey2020'],
+  ES256K: ['EcdsaSecp256k1VerificationKey2019',
+  /**
+   * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress
+   */
+  'EcdsaSecp256k1RecoveryMethod2020',
+  /**
+   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is
+   *   not an ethereumAddress
+   */
+  'Secp256k1VerificationKey2018',
+  /**
+   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is
+   *   not an ethereumAddress
+   */
+  'Secp256k1SignatureVerificationKey2018',
+  /**
+   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is
+   *   not an ethereumAddress
+   */
+  'EcdsaPublicKeySecp256k1', 'JsonWebKey2020'],
+  'ES256K-R': ['EcdsaSecp256k1VerificationKey2019',
+  /**
+   * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress
+   */
+  'EcdsaSecp256k1RecoveryMethod2020',
+  /**
+   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is
+   *   not an ethereumAddress
+   */
+  'Secp256k1VerificationKey2018',
+  /**
+   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is
+   *   not an ethereumAddress
+   */
+  'Secp256k1SignatureVerificationKey2018',
+  /**
+   * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is
+   *   not an ethereumAddress
+   */
+  'EcdsaPublicKeySecp256k1', 'JsonWebKey2020'],
+  Ed25519: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],
+  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020']
+};
+const SELF_ISSUED_V2 = 'https://self-issued.me/v2';
+const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc'; // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation
+
+const SELF_ISSUED_V0_1 = 'https://self-issued.me';
+const defaultAlg = 'ES256K';
+const DID_JSON = 'application/did+json'; // eslint-disable-next-line @typescript-eslint/no-explicit-any
+
+function encodeSection(data, shouldCanonicalize = false) {
+  if (shouldCanonicalize) {
+    return encodeBase64url(canonicalizeData__default['default'](data));
+  } else {
+    return encodeBase64url(JSON.stringify(data));
+  }
+}
+
+const NBF_SKEW = 300;
+
+function decodeJWS(jws) {
+  const parts = jws.match(/^([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/);
+
+  if (parts) {
+    return {
+      header: JSON.parse(decodeBase64url(parts[1])),
+      payload: parts[2],
+      signature: parts[3],
+      data: `${parts[1]}.${parts[2]}`
+    };
+  }
+
+  throw new Error('invalid_argument: Incorrect format JWS');
+}
+/**  @module did-jwt/JWT */
+
+/**
+ *  Decodes a JWT and returns an object representing the payload
+ *
+ *  @example
+ *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')
+ *
+ *  @param    {String}            jwt                a JSON Web Token to verify
+ *  @return   {Object}                               a JS object representing the decoded JWT
+ */
+
+
+function decodeJWT(jwt) {
+  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT');
+
+  try {
+    const jws = decodeJWS(jwt);
+    const decodedJwt = Object.assign(jws, {
+      payload: JSON.parse(decodeBase64url(jws.payload))
+    });
+    return decodedJwt;
+  } catch (e) {
+    throw new Error('invalid_argument: Incorrect format JWT');
+  }
+}
+
+function verifyJWSDecoded({
+  header,
+  data,
+  signature
+}, pubKeys) {
+  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys];
+  const signer = VerifierAlgorithm(header.alg)(data, signature, pubKeys);
+  return signer;
+}
+/**
+ *  Verifies given JWS. If the JWS is valid, returns the public key that was
+ *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.
+ *
+ *  @example
+ *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })
+ *
+ *  @param    {String}                          jws         A JWS string to verify
+ *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS
+ *  @return   {VerificationMethod}                       The public key used to sign the JWS
+ */
+
+
+function verifyJWS(jws, pubKeys) {
+  const jwsDecoded = decodeJWS(jws);
+  return verifyJWSDecoded(jwsDecoded, pubKeys);
+}
+
+const _iteratorSymbol = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
+
+function _settle(pact, state, value) {
+  if (!pact.s) {
+    if (value instanceof _Pact) {
+      if (value.s) {
+        if (state & 1) {
+          state = value.s;
+        }
+
+        value = value.v;
+      } else {
+        value.o = _settle.bind(null, pact, state);
+        return;
+      }
+    }
+
+    if (value && value.then) {
+      value.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));
+      return;
+    }
+
+    pact.s = state;
+    pact.v = value;
+    const observer = pact.o;
+
+    if (observer) {
+      observer(pact);
+    }
+  }
+}
+
+const _Pact = /*#__PURE__*/function () {
+  function _Pact() {}
+
+  _Pact.prototype.then = function (onFulfilled, onRejected) {
+    const result = new _Pact();
+    const state = this.s;
+
+    if (state) {
+      const callback = state & 1 ? onFulfilled : onRejected;
+
+      if (callback) {
+        try {
+          _settle(result, 1, callback(this.v));
+        } catch (e) {
+          _settle(result, 2, e);
+        }
+
+        return result;
+      } else {
+        return this;
+      }
+    }
+
+    this.o = function (_this) {
+      try {
+        const value = _this.v;
+
+        if (_this.s & 1) {
+          _settle(result, 1, onFulfilled ? onFulfilled(value) : value);
+        } else if (onRejected) {
+          _settle(result, 1, onRejected(value));
+        } else {
+          _settle(result, 2, value);
+        }
+      } catch (e) {
+        _settle(result, 2, e);
+      }
+    };
+
+    return result;
+  };
+
+  return _Pact;
+}();
+
+function _isSettledPact(thenable) {
+  return thenable instanceof _Pact && thenable.s & 1;
+}
+
+function _forTo(array, body, check) {
+  var i = -1,
+      pact,
+      reject;
+
+  function _cycle(result) {
+    try {
+      while (++i < array.length && (!check || !check())) {
+        result = body(i);
+
+        if (result && result.then) {
+          if (_isSettledPact(result)) {
+            result = result.v;
+          } else {
+            result.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));
+            return;
+          }
+        }
+      }
+
+      if (pact) {
+        _settle(pact, 1, result);
+      } else {
+        pact = result;
+      }
+    } catch (e) {
+      _settle(pact || (pact = new _Pact()), 2, e);
+    }
+  }
+
+  _cycle();
+
+  return pact;
+}
+
+function _forOf(target, body, check) {
+  if (typeof target[_iteratorSymbol] === "function") {
+    var iterator = target[_iteratorSymbol](),
+        step,
+        pact,
+        reject;
+
+    function _cycle(result) {
+      try {
+        while (!(step = iterator.next()).done && (!check || !check())) {
+          result = body(step.value);
+
+          if (result && result.then) {
+            if (_isSettledPact(result)) {
+              result = result.v;
+            } else {
+              result.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));
+              return;
+            }
+          }
+        }
+
+        if (pact) {
+          _settle(pact, 1, result);
+        } else {
+          pact = result;
+        }
+      } catch (e) {
+        _settle(pact || (pact = new _Pact()), 2, e);
+      }
+    }
+
+    _cycle();
+
+    if (iterator.return) {
+      var _fixup = function (value) {
+        try {
+          if (!step.done) {
+            iterator.return();
+          }
+        } catch (e) {}
+
+        return value;
+      };
+
+      if (pact && pact.then) {
+        return pact.then(_fixup, function (e) {
+          throw _fixup(e);
+        });
+      }
+
+      _fixup();
+    }
+
+    return pact;
+  } // No support for Symbol.iterator
+
+
+  if (!("length" in target)) {
+    throw new TypeError("Object is not iterable");
+  } // Handle live collections properly
+
+
+  var values = [];
+
+  for (var i = 0; i < target.length; i++) {
+    values.push(target[i]);
+  }
+
+  return _forTo(values, function (i) {
+    return body(values[i]);
+  }, check);
+}
+
+function _for(test, update, body) {
+  var stage;
+
+  for (;;) {
+    var shouldContinue = test();
+
+    if (_isSettledPact(shouldContinue)) {
+      shouldContinue = shouldContinue.v;
+    }
+
+    if (!shouldContinue) {
+      return result;
+    }
+
+    if (shouldContinue.then) {
+      stage = 0;
+      break;
+    }
+
+    var result = body();
+
+    if (result && result.then) {
+      if (_isSettledPact(result)) {
+        result = result.s;
+      } else {
+        stage = 1;
+        break;
+      }
+    }
+
+    if (update) {
+      var updateValue = update();
+
+      if (updateValue && updateValue.then && !_isSettledPact(updateValue)) {
+        stage = 2;
+        break;
+      }
+    }
+  }
+
+  var pact = new _Pact();
+
+  var reject = _settle.bind(null, pact, 2);
+
+  (stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);
+  return pact;
+
+  function _resumeAfterBody(value) {
+    result = value;
+
+    do {
+      if (update) {
+        updateValue = update();
+
+        if (updateValue && updateValue.then && !_isSettledPact(updateValue)) {
+          updateValue.then(_resumeAfterUpdate).then(void 0, reject);
+          return;
+        }
+      }
+
+      shouldContinue = test();
+
+      if (!shouldContinue || _isSettledPact(shouldContinue) && !shouldContinue.v) {
+        _settle(pact, 1, result);
+
+        return;
+      }
+
+      if (shouldContinue.then) {
+        shouldContinue.then(_resumeAfterTest).then(void 0, reject);
+        return;
+      }
+
+      result = body();
+
+      if (_isSettledPact(result)) {
+        result = result.v;
+      }
+    } while (!result || !result.then);
+
+    result.then(_resumeAfterBody).then(void 0, reject);
+  }
+
+  function _resumeAfterTest(shouldContinue) {
+    if (shouldContinue) {
+      result = body();
+
+      if (result && result.then) {
+        result.then(_resumeAfterBody).then(void 0, reject);
+      } else {
+        _resumeAfterBody(result);
+      }
+    } else {
+      _settle(pact, 1, result);
+    }
+  }
+
+  function _resumeAfterUpdate() {
+    if (shouldContinue = test()) {
+      if (shouldContinue.then) {
+        shouldContinue.then(_resumeAfterTest).then(void 0, reject);
+      } else {
+        _resumeAfterTest(shouldContinue);
+      }
+    } else {
+      _settle(pact, 1, result);
+    }
+  }
+}
+
+function validateJWE(jwe) {
+  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {
+    throw new Error('bad_jwe: missing properties');
+  }
+
+  if (jwe.recipients) {
+    jwe.recipients.map(rec => {
+      if (!(rec.header && rec.encrypted_key)) {
+        throw new Error('bad_jwe: malformed recipients');
+      }
+    });
+  }
+}
+
+function encodeJWE({
+  ciphertext,
+  tag,
+  iv,
+  protectedHeader,
+  recipient
+}, aad) {
+  const jwe = {
+    protected: protectedHeader,
+    iv: bytesToBase64url(iv),
+    ciphertext: bytesToBase64url(ciphertext),
+    tag: bytesToBase64url(tag)
+  };
+  if (aad) jwe.aad = bytesToBase64url(aad);
+  if (recipient) jwe.recipients = [recipient];
+  return jwe;
+}
+
+const decryptJWE = function (jwe, decrypter) {
+  try {
+    let _exit;
+
+    function _temp5(_result) {
+      if (_exit) ;
+      if (cleartext === null) throw new Error('failure: Failed to decrypt');
+      return cleartext;
+    }
+
+    validateJWE(jwe);
+    const protHeader = JSON.parse(decodeBase64url(jwe.protected));
+    if (protHeader.enc !== decrypter.enc) throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`);
+    const sealed = toSealed(jwe.ciphertext, jwe.tag);
+    const aad = u8a.fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected);
+    let cleartext = null;
+
+    const _temp4 = function () {
+      if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {
+        return Promise.resolve(decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)).then(function (_decrypter$decrypt) {
+          cleartext = _decrypter$decrypt;
+        });
+      } else return function () {
+        if (!jwe.recipients || jwe.recipients.length === 0) {
+          throw new Error('bad_jwe: missing recipients');
+        } else {
+          let i = 0;
+          return _for(function () {
+            return !cleartext && i < jwe.recipients.length;
+          }, function () {
+            return i++;
+          }, function () {
+            const recipient = jwe.recipients[i];
+            Object.assign(recipient.header, protHeader);
+
+            const _temp3 = function () {
+              if (recipient.header.alg === decrypter.alg) {
+                return Promise.resolve(decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)).then(function (_decrypter$decrypt2) {
+                  cleartext = _decrypter$decrypt2;
+                });
+              }
+            }();
+
+            if (_temp3 && _temp3.then) return _temp3.then(function () {});
+          });
+        }
+      }();
+    }();
+
+    return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp5) : _temp5(_temp4));
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+const createJWE = function (cleartext, encrypters, protectedHeader = {}, aad) {
+  try {
+    if (encrypters[0].alg === 'dir') {
+      if (encrypters.length > 1) throw new Error('not_supported: Can only do "dir" encryption to one key.');
+      return Promise.resolve(encrypters[0].encrypt(cleartext, protectedHeader, aad)).then(function (encryptionResult) {
+        return encodeJWE(encryptionResult, aad);
+      });
+    } else {
+      const tmpEnc = encrypters[0].enc;
+
+      if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {
+        throw new Error('invalid_argument: Incompatible encrypters passed');
+      }
+
+      let cek;
+      let jwe;
+
+      const _temp2 = _forOf(encrypters, function (encrypter) {
+        const _temp = function () {
+          if (!cek) {
+            return Promise.resolve(encrypter.encrypt(cleartext, protectedHeader, aad)).then(function (encryptionResult) {
+              cek = encryptionResult.cek;
+              jwe = encodeJWE(encryptionResult, aad);
+            });
+          } else {
+            return Promise.resolve(encrypter.encryptCek?.(cek)).then(function (recipient) {
+              if (recipient) {
+                jwe?.recipients?.push(recipient);
+              }
+            });
+          }
+        }();
+
+        if (_temp && _temp.then) return _temp.then(function () {});
+      });
+
+      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {
+        return jwe;
+      }) : jwe);
+    }
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+
+/**
+ * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.
+ * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key
+ * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`
+ *
+ * @throws 'invalid_argument:...' if the secret key size is wrong
+ */
+
+function createX25519ECDH(mySecretKey) {
+  if (mySecretKey.length !== 32) {
+    throw new Error('invalid_argument: incorrect secret key length for X25519');
+  }
+
+  return function (theirPublicKey) {
+    try {
+      if (theirPublicKey.length !== 32) {
+        throw new Error('invalid_argument: incorrect publicKey key length for X25519');
+      }
+
+      return Promise.resolve(x25519.sharedKey(mySecretKey, theirPublicKey));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+
+/**
+ * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires
+ * sender private key to encrypt the data).
+ * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and
+ * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.
+ *
+ * @param recipientPublicKey the byte array representing the recipient public key
+ * @param senderSecret either a Uint8Array representing the sender secret key or
+ *   an ECDH function that wraps the key and can promise a shared secret given a public key
+ * @param options {@link AuthEncryptParams} used to specify extra header parameters
+ *
+ * @returns an {@link Encrypter} instance usable with {@link createJWE}
+ *
+ * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and
+ * are subject to change as new revisions or until the official CFRG specification are released.
+ *
+ * @beta
+ */
+
+const resolveX25519Encrypters = function (dids, resolver) {
+  try {
+    const encryptersForDID = function (did, resolved = []) {
+      try {
+        return Promise.resolve(resolver.resolve(did)).then(function ({
+          didResolutionMetadata,
+          didDocument
+        }) {
+          function _temp4() {
+            const agreementKeys = didDocument.keyAgreement?.map(key => {
+              if (typeof key === 'string') {
+                return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(pk => pk.id === key);
+              }
+
+              return key;
+            })?.filter(key => typeof key !== 'undefined');
+            const pks = agreementKeys?.filter(key => {
+              // TODO: should be able to use non base58 keys too
+              return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58);
+            }) || [];
+            if (!pks.length && !controllerEncrypters.length) throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);
+            return pks.map(pk => x25519Encrypter(base58ToBytes(pk.publicKeyBase58), pk.id)).concat(...controllerEncrypters);
+          }
+
+          resolved.push(did);
+
+          if (didResolutionMetadata?.error || didDocument == null) {
+            throw new Error(`resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`);
+          }
+
+          let controllerEncrypters = [];
+
+          if (!didDocument.controller && !didDocument.keyAgreement) {
+            throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);
+          }
+
+          const _temp3 = function () {
+            if (didDocument.controller) {
+              let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller];
+              controllers = controllers.filter(c => !resolved.includes(c));
+              const encrypterPromises = controllers.map(did => encryptersForDID(did, resolved).catch(() => {
+                return [];
+              }));
+              return Promise.resolve(Promise.all(encrypterPromises)).then(function (encrypterArrays) {
+                controllerEncrypters = [].concat(...encrypterArrays);
+              });
+            }
+          }();
+
+          return _temp3 && _temp3.then ? _temp3.then(_temp4) : _temp4(_temp3);
+        });
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+
+    const encrypterPromises = dids.map(did => encryptersForDID(did));
+    return Promise.resolve(Promise.all(encrypterPromises)).then(function (encrypterArrays) {
+      const flattenedArray = [].concat(...encrypterArrays);
+      return flattenedArray;
+    });
+  } catch (e) {
+    return Promise.reject(e);
+  }
+};
+function createAuthEncrypter(recipientPublicKey, senderSecret, options = {}) {
+  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options);
+}
+/**
+ * Recommended encrypter for anonymous encryption (i.e. no sender authentication).
+ * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.
+ *
+ * @param publicKey the byte array representing the recipient public key
+ * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)
+ *
+ * @returns an {@link Encrypter} instance usable with {@link createJWE}
+ *
+ * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and
+ * is subject to change as new revisions or until the official CFRG specification is released.
+ *
+ * @beta
+ */
+
+function createAnonEncrypter(publicKey, options = {}) {
+  return x25519Encrypter(publicKey, options?.kid);
+}
+/**
+ * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires
+ * sender public key to decrypt the data).
+ * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and
+ * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.
+ *
+ * @param recipientSecret either a Uint8Array representing the recipient secret key or
+ *   an ECDH function that wraps the key and can promise a shared secret given a public key
+ * @param senderPublicKey the byte array representing the sender public key
+ *
+ * @returns a {@link Decrypter} instance usable with {@link decryptJWE}
+ *
+ * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and
+ * are subject to change as new revisions or until the official CFRG specification are released.
+ *
+ * @beta
+ */
+
+function createAuthDecrypter(recipientSecret, senderPublicKey) {
+  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey);
+}
+/**
+ * Recommended decrypter for anonymous encryption (i.e. no sender authentication).
+ * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.
+ *
+ * @param recipientSecret either a Uint8Array representing the recipient secret key or
+ *   an ECDH function that wraps the key and can promise a shared secret given a public key
+ *
+ * @returns a {@link Decrypter} instance usable with {@link decryptJWE}
+ *
+ * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and
+ * is subject to change as new revisions or until the official CFRG specification is released.
+ *
+ * @beta
+ */
+
+function createAnonDecrypter(recipientSecret) {
+  return x25519Decrypter(recipientSecret);
+}
+
+function xc20pEncrypter(key) {
+  const cipher = new xchacha20poly1305.XChaCha20Poly1305(key);
+  return (cleartext, aad) => {
+    const iv = random.randomBytes(cipher.nonceLength);
+    const sealed = cipher.seal(iv, cleartext, aad);
+    return {
+      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),
+      tag: sealed.subarray(sealed.length - cipher.tagLength),
+      iv
+    };
+  };
+}
+
+function xc20pDirEncrypter(key) {
+  const encrypt = function (cleartext, protectedHeader = {}, aad) {
+    try {
+      const protHeader = encodeBase64url(JSON.stringify(Object.assign({
+        alg
+      }, protectedHeader, {
+        enc
+      })));
+      const encodedAad = fromString.fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader);
+      return Promise.resolve({ ...xc20pEncrypt(cleartext, encodedAad),
+        protectedHeader: protHeader
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const xc20pEncrypt = xc20pEncrypter(key);
+  const enc = 'XC20P';
+  const alg = 'dir';
+  return {
+    alg,
+    enc,
+    encrypt
+  };
+}
+function xc20pDirDecrypter(key) {
+  const decrypt = function (sealed, iv, aad) {
+    try {
+      return Promise.resolve(cipher.open(iv, sealed, aad));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const cipher = new xchacha20poly1305.XChaCha20Poly1305(key);
+  return {
+    alg: 'dir',
+    enc: 'XC20P',
+    decrypt
+  };
+}
+function x25519Encrypter(publicKey, kid) {
+  const encrypt = function (cleartext, protectedHeader = {}, aad) {
+    try {
+      // we won't want alg to be set to dir from xc20pDirEncrypter
+      Object.assign(protectedHeader, {
+        alg: undefined
+      }); // Content Encryption Key
+
+      const cek = random.randomBytes(32);
+      return Promise.resolve(xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)).then(function (_xc20pDirEncrypter$en) {
+        return Promise.resolve(encryptCek(cek)).then(function (_encryptCek) {
+          return { ..._xc20pDirEncrypter$en,
+            recipient: _encryptCek,
+            cek
+          };
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const encryptCek = function (cek) {
+    try {
+      const epk = x25519.generateKeyPair();
+      const sharedSecret = x25519.sharedKey(epk.secretKey, publicKey); // Key Encryption Key
+
+      const kek = concatKDF(sharedSecret, keyLen, alg);
+      const res = xc20pEncrypter(kek)(cek);
+      const recipient = {
+        encrypted_key: bytesToBase64url(res.ciphertext),
+        header: {
+          alg,
+          iv: bytesToBase64url(res.iv),
+          tag: bytesToBase64url(res.tag),
+          epk: {
+            kty: 'OKP',
+            crv,
+            x: bytesToBase64url(epk.publicKey)
+          }
+        }
+      };
+      if (kid) recipient.header.kid = kid;
+      return Promise.resolve(recipient);
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const alg = 'ECDH-ES+XC20PKW';
+  const keyLen = 256;
+  const crv = 'X25519';
+  return {
+    alg,
+    enc: 'XC20P',
+    encrypt,
+    encryptCek
+  };
+}
+/**
+ * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:
+ *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}
+ *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}
+ */
+
+function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options = {}) {
+  const encrypt = function (cleartext, protectedHeader = {}, aad) {
+    try {
+      // we won't want alg to be set to dir from xc20pDirEncrypter
+      Object.assign(protectedHeader, {
+        alg: undefined
+      }); // Content Encryption Key
+
+      const cek = random.randomBytes(32);
+      return Promise.resolve(xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)).then(function (_xc20pDirEncrypter$en2) {
+        return Promise.resolve(encryptCek(cek)).then(function (_encryptCek2) {
+          return { ..._xc20pDirEncrypter$en2,
+            recipient: _encryptCek2,
+            cek
+          };
+        });
+      });
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const encryptCek = function (cek) {
+    try {
+      function _temp2() {
+        const sharedSecret = new Uint8Array(zE.length + zS.length);
+        sharedSecret.set(zE);
+        sharedSecret.set(zS, zE.length); // Key Encryption Key
+
+        const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo);
+        const res = xc20pEncrypter(kek)(cek);
+        const recipient = {
+          encrypted_key: bytesToBase64url(res.ciphertext),
+          header: {
+            alg,
+            iv: bytesToBase64url(res.iv),
+            tag: bytesToBase64url(res.tag),
+            epk: {
+              kty: 'OKP',
+              crv,
+              x: bytesToBase64url(epk.publicKey)
+            }
+          }
+        };
+        if (options.kid) recipient.header.kid = options.kid;
+        if (options.apu) recipient.header.apu = options.apu;
+        if (options.apv) recipient.header.apv = options.apv;
+        return recipient;
+      }
+
+      const epk = x25519.generateKeyPair();
+      const zE = x25519.sharedKey(epk.secretKey, recipientPublicKey); // ECDH-1PU requires additional shared secret between
+      // static key of sender and static key of recipient
+
+      let zS;
+
+      const _temp = function () {
+        if (senderSecret instanceof Uint8Array) {
+          zS = x25519.sharedKey(senderSecret, recipientPublicKey);
+        } else {
+          return Promise.resolve(senderSecret(recipientPublicKey)).then(function (_senderSecret) {
+            zS = _senderSecret;
+          });
+        }
+      }();
+
+      return Promise.resolve(_temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const alg = 'ECDH-1PU+XC20PKW';
+  const keyLen = 256;
+  const crv = 'X25519';
+  let partyUInfo;
+  let partyVInfo;
+  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu);
+  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv);
+  return {
+    alg,
+    enc: 'XC20P',
+    encrypt,
+    encryptCek
+  };
+}
+
+function validateHeader(header) {
+  if (!(header && header.epk && header.iv && header.tag)) {
+    throw new Error('bad_jwe: malformed header');
+  }
+}
+
+function x25519Decrypter(receiverSecret) {
+  const decrypt = function (sealed, iv, aad, recipient) {
+    try {
+      function _temp6() {
+        // Key Encryption Key
+        const kek = concatKDF(sharedSecret, keyLen, alg); // Content Encryption Key
+
+        const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag);
+        return Promise.resolve(xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))).then(function (cek) {
+          return cek === null ? null : xc20pDirDecrypter(cek).decrypt(sealed, iv, aad);
+        });
+      }
+
+      validateHeader(recipient?.header);
+      recipient = recipient;
+      if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
+      const publicKey = base64ToBytes(recipient.header.epk.x);
+      let sharedSecret;
+
+      const _temp5 = function () {
+        if (receiverSecret instanceof Uint8Array) {
+          sharedSecret = x25519.sharedKey(receiverSecret, publicKey);
+        } else {
+          return Promise.resolve(receiverSecret(publicKey)).then(function (_receiverSecret) {
+            sharedSecret = _receiverSecret;
+          });
+        }
+      }();
+
+      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp6) : _temp6(_temp5));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const alg = 'ECDH-ES+XC20PKW';
+  const keyLen = 256;
+  const crv = 'X25519';
+  return {
+    alg,
+    enc: 'XC20P',
+    decrypt
+  };
+}
+/**
+ * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:
+ *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}
+ *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}
+ */
+
+function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey) {
+  const decrypt = function (sealed, iv, aad, recipient) {
+    try {
+      function _temp8() {
+        const sharedSecret = new Uint8Array(zE.length + zS.length);
+        sharedSecret.set(zE);
+        sharedSecret.set(zS, zE.length); // Key Encryption Key
+
+        let producerInfo;
+        let consumerInfo;
+        if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu);
+        if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv);
+        const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo); // Content Encryption Key
+
+        const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag);
+        return Promise.resolve(xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))).then(function (cek) {
+          return cek === null ? null : xc20pDirDecrypter(cek).decrypt(sealed, iv, aad);
+        });
+      }
+
+      recipient = recipient;
+      validateHeader(recipient.header);
+      if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
+      // static key of sender and static key of recipient
+
+      const publicKey = base64ToBytes(recipient.header.epk.x);
+      let zE;
+      let zS;
+
+      const _temp7 = function () {
+        if (recipientSecret instanceof Uint8Array) {
+          zE = x25519.sharedKey(recipientSecret, publicKey);
+          zS = x25519.sharedKey(recipientSecret, senderPublicKey);
+        } else {
+          return Promise.resolve(recipientSecret(publicKey)).then(function (_recipientSecret) {
+            zE = _recipientSecret;
+            return Promise.resolve(recipientSecret(senderPublicKey)).then(function (_recipientSecret2) {
+              zS = _recipientSecret2;
+            });
+          });
+        }
+      }();
+
+      return Promise.resolve(_temp7 && _temp7.then ? _temp7.then(_temp8) : _temp8(_temp7));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+
+  const alg = 'ECDH-1PU+XC20PKW';
+  const keyLen = 256;
+  const crv = 'X25519';
+  return {
+    alg,
+    enc: 'XC20P',
+    decrypt
+  };
+}
+
+exports.ES256KSigner = ES256KSigner;
+exports.ES256Signer = ES256Signer;
+exports.EdDSASigner = EdDSASigner;
+exports.EllipticSigner = EllipticSigner;
+exports.JWT_ERROR = JWT_ERROR;
+exports.NaclSigner = NaclSigner;
+exports.SimpleSigner = SimpleSigner;
+exports.base58ToBytes = base58ToBytes;
+exports.base64ToBytes = base64ToBytes;
+exports.createAnonDecrypter = createAnonDecrypter;
+exports.createAnonEncrypter = createAnonEncrypter;
+exports.createAuthDecrypter = createAuthDecrypter;
+exports.createAuthEncrypter = createAuthEncrypter;
+exports.createJWE = createJWE;
+exports.createJWS = createJWS;
+exports.createJWT = createJWT;
+exports.createX25519ECDH = createX25519ECDH;
+exports.decodeJWT = decodeJWT;
+exports.decryptJWE = decryptJWE;
+exports.hexToBytes = hexToBytes;
+exports.resolveX25519Encrypters = resolveX25519Encrypters;
+exports.toEthereumAddress = toEthereumAddress;
+exports.verifyJWS = verifyJWS;
+exports.verifyJWT = verifyJWT;
+exports.x25519Decrypter = x25519Decrypter;
+exports.x25519Encrypter = x25519Encrypter;
+exports.xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2 = xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2;
+exports.xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2 = xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2;
+exports.xc20pDirDecrypter = xc20pDirDecrypter;
+exports.xc20pDirEncrypter = xc20pDirEncrypter;
+//# sourceMappingURL=index.cjs.map
+
+})();
+
+/******/ 	return __webpack_exports__;
+/******/ })()
+;
+});
\ No newline at end of file
diff --git a/node_modules/did-jwt/lib/SignerAlgorithm.d.ts b/node_modules/did-jwt/lib/SignerAlgorithm.d.ts
index 261b98a..5b474e4 100644
--- a/node_modules/did-jwt/lib/SignerAlgorithm.d.ts
+++ b/node_modules/did-jwt/lib/SignerAlgorithm.d.ts
@@ -2,6 +2,8 @@ import { SignerAlgorithm } from './JWT';
 export declare function ES256SignerAlg(): SignerAlgorithm;
 export declare function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm;
 export declare function Ed25519SignerAlg(): SignerAlgorithm;
+export declare function RS256SignerAlg(): SignerAlgorithm;
+export declare function PS256SignerAlg(): SignerAlgorithm;
 declare function SignerAlg(alg: string): SignerAlgorithm;
 export default SignerAlg;
 //# sourceMappingURL=SignerAlgorithm.d.ts.map
\ No newline at end of file
diff --git a/node_modules/did-jwt/lib/SignerAlgorithm.d.ts.map b/node_modules/did-jwt/lib/SignerAlgorithm.d.ts.map
index 3149a00..4798cf0 100644
--- a/node_modules/did-jwt/lib/SignerAlgorithm.d.ts.map
+++ b/node_modules/did-jwt/lib/SignerAlgorithm.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"SignerAlgorithm.d.ts","sourceRoot":"","sources":["../src/SignerAlgorithm.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,eAAe,EAAE,MAAM,OAAO,CAAA;AAQ/C,wBAAgB,cAAc,IAAI,eAAe,CAShD;AAED,wBAAgB,eAAe,CAAC,WAAW,CAAC,EAAE,OAAO,GAAG,eAAe,CAYtE;AAED,wBAAgB,gBAAgB,IAAI,eAAe,CASlD;AAkBD,iBAAS,SAAS,CAAC,GAAG,EAAE,MAAM,GAAG,eAAe,CAI/C;AAED,eAAe,SAAS,CAAA"}
\ No newline at end of file
+{"version":3,"file":"SignerAlgorithm.d.ts","sourceRoot":"","sources":["../src/SignerAlgorithm.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,eAAe,EAAE,MAAM,OAAO,CAAA;AAQ/C,wBAAgB,cAAc,IAAI,eAAe,CAShD;AAED,wBAAgB,eAAe,CAAC,WAAW,CAAC,EAAE,OAAO,GAAG,eAAe,CAYtE;AAED,wBAAgB,gBAAgB,IAAI,eAAe,CASlD;AAED,wBAAgB,cAAc,IAAI,eAAe,CAKhD;AAED,wBAAgB,cAAc,IAAI,eAAe,CAKhD;AAoBD,iBAAS,SAAS,CAAC,GAAG,EAAE,MAAM,GAAG,eAAe,CAI/C;AAED,eAAe,SAAS,CAAA"}
\ No newline at end of file
diff --git a/node_modules/did-jwt/lib/VerifierAlgorithm.d.ts.map b/node_modules/did-jwt/lib/VerifierAlgorithm.d.ts.map
index 794c372..c563774 100644
--- a/node_modules/did-jwt/lib/VerifierAlgorithm.d.ts.map
+++ b/node_modules/did-jwt/lib/VerifierAlgorithm.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"VerifierAlgorithm.d.ts","sourceRoot":"","sources":["../src/VerifierAlgorithm.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAA;AAEtD,OAAO,EAAwD,cAAc,EAAiB,MAAM,QAAQ,CAAA;AAO5G,wBAAgB,iBAAiB,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,UAAQ,GAAG,cAAc,CAYxF;AA8CD,wBAAgB,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAAG,kBAAkB,CAkBrH;AAED,wBAAgB,YAAY,CAC1B,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,MAAM,EACjB,cAAc,EAAE,kBAAkB,EAAE,GACnC,kBAAkB,CAyBpB;AAED,wBAAgB,uBAAuB,CACrC,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,MAAM,EACjB,cAAc,EAAE,kBAAkB,EAAE,GACnC,kBAAkB,CAwCpB;AAED,wBAAgB,aAAa,CAC3B,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,MAAM,EACjB,cAAc,EAAE,kBAAkB,EAAE,GACnC,kBAAkB,CAQpB;AAED,KAAK,QAAQ,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,KAAK,kBAAkB,CAAA;AAgB7G,iBAAS,iBAAiB,CAAC,GAAG,EAAE,MAAM,GAAG,QAAQ,CAIhD;kBAJQ,iBAAiB;;;AAQ1B,eAAe,iBAAiB,CAAA"}
\ No newline at end of file
+{"version":3,"file":"VerifierAlgorithm.d.ts","sourceRoot":"","sources":["../src/VerifierAlgorithm.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAA;AAEtD,OAAO,EAAwD,cAAc,EAAiB,MAAM,QAAQ,CAAA;AAQ5G,wBAAgB,iBAAiB,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,UAAQ,GAAG,cAAc,CAYxF;AA8CD,wBAAgB,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,GAAG,kBAAkB,CAkBrH;AAED,wBAAgB,YAAY,CAC1B,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,MAAM,EACjB,cAAc,EAAE,kBAAkB,EAAE,GACnC,kBAAkB,CAyBpB;AAED,wBAAgB,uBAAuB,CACrC,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,MAAM,EACjB,cAAc,EAAE,kBAAkB,EAAE,GACnC,kBAAkB,CAwCpB;AAED,wBAAgB,aAAa,CAC3B,IAAI,EAAE,MAAM,EACZ,SAAS,EAAE,MAAM,EACjB,cAAc,EAAE,kBAAkB,EAAE,GACnC,kBAAkB,CAQpB;AAED,KAAK,QAAQ,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,kBAAkB,EAAE,KAAK,kBAAkB,CAAA;AAgB7G,iBAAS,iBAAiB,CAAC,GAAG,EAAE,MAAM,GAAG,QAAQ,CAIhD;kBAJQ,iBAAiB;;;AAQ1B,eAAe,iBAAiB,CAAA"}
\ No newline at end of file
diff --git a/node_modules/did-jwt/lib/index.cjs b/node_modules/did-jwt/lib/index.cjs
index cc94e6c..3fecf5c 100644
--- a/node_modules/did-jwt/lib/index.cjs
+++ b/node_modules/did-jwt/lib/index.cjs
@@ -568,6 +568,24 @@ function Ed25519SignerAlg() {
     }
   };
 }
+function RS256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+function PS256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
 const algorithms$1 = {
   ES256: ES256SignerAlg(),
   ES256K: ES256KSignerAlg(),
@@ -577,7 +595,9 @@ const algorithms$1 = {
   // This is actually incorrect but retained for backwards compatibility
   // see https://github.com/decentralized-identity/did-jwt/issues/130
   Ed25519: Ed25519SignerAlg(),
-  EdDSA: Ed25519SignerAlg()
+  EdDSA: Ed25519SignerAlg(),
+  RS256: RS256SignerAlg(),
+  PS256: PS256SignerAlg()
 };

 function SignerAlg(alg) {
@@ -766,10 +786,8 @@ function verifyRecoverableES256K(data, signature, authenticators) {
     const recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);
     const recoveredAddress = toEthereumAddress(recoveredPublicKeyHex).toLowerCase();
     const signer = authenticators.find(pk => {
-      var _pk$ethereumAddress, _pk$blockchainAccount, _pk$blockchainAccount2;
-
       const keyHex = bytesToHex(extractPublicKeyBytes(pk));
-      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || ((_pk$ethereumAddress = pk.ethereumAddress) == null ? void 0 : _pk$ethereumAddress.toLowerCase()) === recoveredAddress || ((_pk$blockchainAccount = pk.blockchainAccountId) == null ? void 0 : (_pk$blockchainAccount2 = _pk$blockchainAccount.split('@eip155')) == null ? void 0 : _pk$blockchainAccount2[0].toLowerCase()) === recoveredAddress || // CAIP-2
+      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || pk.ethereumAddress?.toLowerCase() === recoveredAddress || pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2
       verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10
       ;
     });
@@ -888,8 +906,6 @@ const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
     return Promise.resolve(resolver.resolve(issuer, {
       accept: DID_JSON
     })).then(function (result) {
-      var _didResult$didResolut, _didResult, _didResult$didDocumen, _didResult2, _didResult2$didDocume;
-
       // support legacy resolvers that do not produce DIDResolutionResult
       if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {
         didResult = {
@@ -903,7 +919,7 @@ const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
         didResult = result;
       }

-      if ((_didResult$didResolut = didResult.didResolutionMetadata) != null && _didResult$didResolut.error || didResult.didDocument == null) {
+      if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {
         const {
           error,
           message
@@ -918,13 +934,11 @@ const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
         return filtered.length > 0 ? filtered[0] : null;
       };

-      let publicKeysToCheck = [...(((_didResult = didResult) == null ? void 0 : (_didResult$didDocumen = _didResult.didDocument) == null ? void 0 : _didResult$didDocumen.verificationMethod) || []), ...(((_didResult2 = didResult) == null ? void 0 : (_didResult2$didDocume = _didResult2.didDocument) == null ? void 0 : _didResult2$didDocume.publicKey) || [])];
+      let publicKeysToCheck = [...(didResult?.didDocument?.verificationMethod || []), ...(didResult?.didDocument?.publicKey || [])];

       if (typeof proofPurpose === 'string') {
-        var _didResult3;
-
         // support legacy DID Documents that do not list assertionMethod
-        if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames((_didResult3 = didResult) == null ? void 0 : _didResult3.didDocument).includes('assertionMethod')) {
+        if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')) {
           didResult.didDocument = { ...didResult.didDocument
           };
           didResult.didDocument.assertionMethod = [...publicKeysToCheck.map(pk => pk.id)];
@@ -1059,29 +1073,25 @@ const verifyJWT = function (jwt, options = {
         data,
         signature
       }, authenticators)).then(function (signer) {
-        var _options$policies;
-
-        const now = typeof ((_options$policies = options.policies) == null ? void 0 : _options$policies.now) === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
+        const now = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
         const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW;

         if (signer) {
-          var _options$policies2, _options$policies3, _options$policies4, _options$policies5;
-
           const nowSkewed = now + skewTime;

-          if (((_options$policies2 = options.policies) == null ? void 0 : _options$policies2.nbf) !== false && payload.nbf) {
+          if (options.policies?.nbf !== false && payload.nbf) {
             if (payload.nbf > nowSkewed) {
               throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`);
             }
-          } else if (((_options$policies3 = options.policies) == null ? void 0 : _options$policies3.iat) !== false && payload.iat && payload.iat > nowSkewed) {
+          } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {
             throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`);
           }

-          if (((_options$policies4 = options.policies) == null ? void 0 : _options$policies4.exp) !== false && payload.exp && payload.exp <= now - skewTime) {
+          if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {
             throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`);
           }

-          if (((_options$policies5 = options.policies) == null ? void 0 : _options$policies5.aud) !== false && payload.aud) {
+          if (options.policies?.aud !== false && payload.aud) {
             if (!options.audience && !options.callbackUrl) {
               throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`);
             }
@@ -1739,11 +1749,9 @@ const createJWE = function (cleartext, encrypters, protectedHeader = {}, aad) {
               jwe = encodeJWE(encryptionResult, aad);
             });
           } else {
-            return Promise.resolve(encrypter.encryptCek == null ? void 0 : encrypter.encryptCek(cek)).then(function (recipient) {
+            return Promise.resolve(encrypter.encryptCek?.(cek)).then(function (recipient) {
               if (recipient) {
-                var _jwe, _jwe$recipients;
-
-                (_jwe = jwe) == null ? void 0 : (_jwe$recipients = _jwe.recipients) == null ? void 0 : _jwe$recipients.push(recipient);
+                jwe?.recipients?.push(recipient);
               }
             });
           }
@@ -1815,26 +1823,24 @@ const resolveX25519Encrypters = function (dids, resolver) {
           didDocument
         }) {
           function _temp4() {
-            var _didDocument$keyAgree, _didDocument$keyAgree2;
-
-            const agreementKeys = (_didDocument$keyAgree = didDocument.keyAgreement) == null ? void 0 : (_didDocument$keyAgree2 = _didDocument$keyAgree.map(key => {
+            const agreementKeys = didDocument.keyAgreement?.map(key => {
               if (typeof key === 'string') {
                 return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(pk => pk.id === key);
               }

               return key;
-            })) == null ? void 0 : _didDocument$keyAgree2.filter(key => typeof key !== 'undefined');
-            const pks = (agreementKeys == null ? void 0 : agreementKeys.filter(key => {
+            })?.filter(key => typeof key !== 'undefined');
+            const pks = agreementKeys?.filter(key => {
               // TODO: should be able to use non base58 keys too
               return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58);
-            })) || [];
+            }) || [];
             if (!pks.length && !controllerEncrypters.length) throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);
             return pks.map(pk => x25519Encrypter(base58ToBytes(pk.publicKeyBase58), pk.id)).concat(...controllerEncrypters);
           }

           resolved.push(did);

-          if (didResolutionMetadata != null && didResolutionMetadata.error || didDocument == null) {
+          if (didResolutionMetadata?.error || didDocument == null) {
             throw new Error(`resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`);
           }

@@ -1892,7 +1898,7 @@ function createAuthEncrypter(recipientPublicKey, senderSecret, options = {}) {
  */

 function createAnonEncrypter(publicKey, options = {}) {
-  return x25519Encrypter(publicKey, options == null ? void 0 : options.kid);
+  return x25519Encrypter(publicKey, options?.kid);
 }
 /**
  * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires
@@ -2150,8 +2156,6 @@ function validateHeader(header) {
 function x25519Decrypter(receiverSecret) {
   const decrypt = function (sealed, iv, aad, recipient) {
     try {
-      var _recipient, _recipient$header$epk;
-
       function _temp6() {
         // Key Encryption Key
         const kek = concatKDF(sharedSecret, keyLen, alg); // Content Encryption Key
@@ -2162,9 +2166,9 @@ function x25519Decrypter(receiverSecret) {
         });
       }

-      validateHeader((_recipient = recipient) == null ? void 0 : _recipient.header);
+      validateHeader(recipient?.header);
       recipient = recipient;
-      if (((_recipient$header$epk = recipient.header.epk) == null ? void 0 : _recipient$header$epk.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
+      if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
       const publicKey = base64ToBytes(recipient.header.epk.x);
       let sharedSecret;

@@ -2202,8 +2206,6 @@ function x25519Decrypter(receiverSecret) {
 function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey) {
   const decrypt = function (sealed, iv, aad, recipient) {
     try {
-      var _recipient$header$epk2;
-
       function _temp8() {
         const sharedSecret = new Uint8Array(zE.length + zS.length);
         sharedSecret.set(zE);
@@ -2223,7 +2225,7 @@ function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderP

       recipient = recipient;
       validateHeader(recipient.header);
-      if (((_recipient$header$epk2 = recipient.header.epk) == null ? void 0 : _recipient$header$epk2.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
+      if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
       // static key of sender and static key of recipient

       const publicKey = base64ToBytes(recipient.header.epk.x);
diff --git a/node_modules/did-jwt/lib/index.cjs.map b/node_modules/did-jwt/lib/index.cjs.map
index 7351cc3..0201e75 100644
--- a/node_modules/did-jwt/lib/index.cjs.map
+++ b/node_modules/did-jwt/lib/index.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs","sources":["../src/util.ts","../src/blockchains/utils/ripemd160.ts","../src/Digest.ts","../src/signers/ES256KSigner.ts","../src/signers/SimpleSigner.ts","../src/signers/EllipticSigner.ts","../src/signers/EdDSASigner.ts","../src/signers/NaclSigner.ts","../src/signers/ES256Signer.ts","../src/SignerAlgorithm.ts","../src/blockchains/bip122.ts","../src/blockchains/cosmos.ts","../src/blockchains/index.ts","../src/VerifierAlgorithm.ts","../src/Errors.ts","../src/JWT.ts","../src/JWE.ts","../src/ECDH.ts","../src/xc20pEncryption.ts"],"sourcesContent":["import * as u8a from 'uint8arrays'\nimport { bases } from 'multiformats/basics'\n\n/**\n * @deprecated Signers will be expected to return base64url `string` signatures.\n */\nexport interface EcdsaSignature {\n  r: string\n  s: string\n  recoveryParam?: number | null\n}\n\nexport function bytesToBase64url(b: Uint8Array): string {\n  return u8a.toString(b, 'base64url')\n}\n\nexport function base64ToBytes(s: string): Uint8Array {\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n  return u8a.fromString(inputBase64Url, 'base64url')\n}\n\nexport function bytesToBase64(b: Uint8Array): string {\n  return u8a.toString(b, 'base64pad')\n}\n\nexport function base58ToBytes(s: string): Uint8Array {\n  return u8a.fromString(s, 'base58btc')\n}\n\nexport function bytesToBase58(b: Uint8Array): string {\n  return u8a.toString(b, 'base58btc')\n}\n\nexport function bytesToMultibase(b: Uint8Array, base: keyof typeof bases): string {\n  return bases[base].encode(b)\n}\n\nexport function hexToBytes(s: string): Uint8Array {\n  const input = s.startsWith('0x') ? s.substring(2) : s\n  return u8a.fromString(input.toLowerCase(), 'base16')\n}\n\nexport function encodeBase64url(s: string): string {\n  return bytesToBase64url(u8a.fromString(s))\n}\n\nexport function decodeBase64url(s: string): string {\n  return u8a.toString(base64ToBytes(s))\n}\n\nexport function bytesToHex(b: Uint8Array): string {\n  return u8a.toString(b, 'base16')\n}\n\nexport function stringToBytes(s: string): Uint8Array {\n  return u8a.fromString(s)\n}\n\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\n  const jose = new Uint8Array(recoverable ? 65 : 64)\n  jose.set(u8a.fromString(r, 'base16'), 0)\n  jose.set(u8a.fromString(s, 'base16'), 32)\n  if (recoverable) {\n    if (typeof recoveryParam === 'undefined') {\n      throw new Error('Signer did not return a recoveryParam')\n    }\n    jose[64] = <number>recoveryParam\n  }\n  return bytesToBase64url(jose)\n}\n\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\n  const signatureBytes: Uint8Array = base64ToBytes(signature)\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`)\n  }\n  const r = bytesToHex(signatureBytes.slice(0, 32))\n  const s = bytesToHex(signatureBytes.slice(32, 64))\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined\n  return { r, s, recoveryParam }\n}\n\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)])\n}\n\nexport function leftpad(data: string, size = 64): string {\n  if (data.length === size) return data\n  return '0'.repeat(size - data.length) + data\n}\n","// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\n\nconst zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14,\n  4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,\n  10, 14, 1, 3, 8, 11, 6, 15, 13,\n]\n\nconst zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1,\n  3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5,\n  8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\n]\n\nconst sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11,\n  13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,\n  11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\n]\n\nconst sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7,\n  15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,\n  12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\n]\n\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction rotl(x: number, n: number) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0\n}\n\nexport class Ripemd160 {\n  // state\n  private _a = 0x67452301\n  private _b = 0xefcdab89\n  private _c = 0x98badcfe\n  private _d = 0x10325476\n  private _e = 0xc3d2e1f0\n  private _blockOffset = 0\n  private _block: Uint8Array\n  private _blockSize: number\n  private _length = [0, 0, 0, 0]\n  private _finalized: boolean\n\n  constructor(blockSize = 64) {\n    this._block = new Uint8Array(blockSize)\n    this._blockSize = blockSize\n    this._blockOffset = 0\n    this._length = [0, 0, 0, 0]\n    this._finalized = false\n  }\n\n  update = (data: Uint8Array): Ripemd160 => {\n    if (this._finalized) throw new Error('Digest already called')\n\n    // consume data\n    const block = this._block\n    let offset = 0\n    while (this._blockOffset + data.length - offset >= this._blockSize) {\n      for (let i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++]\n      this._update()\n      this._blockOffset = 0\n    }\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n    // update length\n    for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n      this._length[j] += carry\n      carry = (this._length[j] / 0x0100000000) | 0\n      if (carry > 0) this._length[j] -= 0x0100000000 * carry\n    }\n\n    return this\n  }\n\n  digest = (): Uint8Array => {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    const digest = this._digest()\n\n    // reset state\n    this._block.fill(0)\n    this._blockOffset = 0\n    for (let i = 0; i < 4; ++i) this._length[i] = 0\n\n    return digest\n  }\n\n  private _update = () => {\n    const words = new Array(16)\n    const temp = new DataView(this._block.buffer)\n    for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true)\n\n    let al = this._a | 0\n    let bl = this._b | 0\n    let cl = this._c | 0\n    let dl = this._d | 0\n    let el = this._e | 0\n\n    let ar = this._a | 0\n    let br = this._b | 0\n    let cr = this._c | 0\n    let dr = this._d | 0\n    let er = this._e | 0\n\n    // computation\n    for (let i = 0; i < 80; i += 1) {\n      let tl\n      let tr\n      if (i < 16) {\n        tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n        tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n      } else if (i < 32) {\n        tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n        tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n      } else if (i < 48) {\n        tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n        tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n      } else if (i < 64) {\n        tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n        tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n      } else {\n        // if (i<80) {\n        tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n        tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n      }\n\n      al = el\n      el = dl\n      dl = rotl(cl, 10)\n      cl = bl\n      bl = tl\n\n      ar = er\n      er = dr\n      dr = rotl(cr, 10)\n      cr = br\n      br = tr\n    }\n\n    // update state\n    const t = (this._b + cl + dr) | 0\n    this._b = (this._c + dl + er) | 0\n    this._c = (this._d + el + ar) | 0\n    this._d = (this._e + al + br) | 0\n    this._e = (this._a + bl + cr) | 0\n    this._a = t\n  }\n\n  private _digest = () => {\n    // create padding and handle blocks\n    this._block[this._blockOffset++] = 0x80\n    if (this._blockOffset > 56) {\n      this._block.fill(0, this._blockOffset, 64)\n      this._update()\n      this._blockOffset = 0\n    }\n\n    this._block.fill(0, this._blockOffset, 56)\n    const temp = new DataView(this._block.buffer)\n    temp.setUint32(56, this._length[0], true)\n    temp.setUint32(60, this._length[1], true)\n    this._block = new Uint8Array(temp.buffer)\n    this._update()\n\n    // produce result\n    const buffer = new DataView(new Uint8Array(20).buffer)\n    buffer.setInt32(0, this._a, true)\n    buffer.setInt32(4, this._b, true)\n    buffer.setInt32(8, this._c, true)\n    buffer.setInt32(12, this._d, true)\n    buffer.setInt32(16, this._e, true)\n\n    return new Uint8Array(buffer.buffer)\n  }\n}\n","import { hash } from '@stablelib/sha256'\nimport { Ripemd160 } from './blockchains/utils/ripemd160'\nimport * as u8a from 'uint8arrays'\nimport sha3 from 'js-sha3'\n\nexport function sha256(payload: string | Uint8Array): Uint8Array {\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload\n  return hash(data)\n}\n\nexport function keccak(data: Uint8Array): Uint8Array {\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data))\n}\n\nexport function toEthereumAddress(hexPublicKey: string): string {\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16')\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`\n}\n\nexport function ripemd160(data: Uint8Array): Uint8Array {\n  return new Ripemd160().update(data).digest()\n}\n\nfunction writeUint32BE(value: number, array = new Uint8Array(4)): Uint8Array {\n  const encoded = u8a.fromString(value.toString(), 'base10')\n  array.set(encoded, 4 - encoded.length)\n  return array\n}\n\nconst lengthAndInput = (input: Uint8Array): Uint8Array => u8a.concat([writeUint32BE(input.length), input])\n\n// This implementation of concatKDF was inspired by these two implementations:\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\nexport function concatKDF(\n  secret: Uint8Array,\n  keyLen: number,\n  alg: string,\n  producerInfo?: Uint8Array,\n  consumerInfo?: Uint8Array\n): Uint8Array {\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`)\n  const value = u8a.concat([\n    lengthAndInput(u8a.fromString(alg)),\n    lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), // apu\n    lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), // apv\n    writeUint32BE(keyLen),\n  ])\n\n  // since our key lenght is 256 we only have to do one round\n  const roundNumber = 1\n  return sha256(u8a.concat([writeUint32BE(roundNumber), secret, value]))\n}\n","import { leftpad } from '../util'\nimport { toJose } from '../util'\nimport { Signer } from '../JWT'\nimport { sha256 } from '../Digest'\nimport elliptic from 'elliptic'\n\nconst secp256k1 = new elliptic.ec('secp256k1')\n\n/**\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    privateKey   a private key as `Uint8Array`\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function ES256KSigner(privateKey: Uint8Array, recoverable = false): Signer {\n  const privateKeyBytes: Uint8Array = privateKey\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\n  }\n  const keyPair: elliptic.ec.KeyPair = secp256k1.keyFromPrivate(privateKeyBytes)\n\n  return async (data: string | Uint8Array): Promise<string> => {\n    const { r, s, recoveryParam }: elliptic.ec.Signature = keyPair.sign(sha256(data))\n    return toJose(\n      {\n        r: leftpad(r.toString('hex')),\n        s: leftpad(s.toString('hex')),\n        recoveryParam,\n      },\n      recoverable\n    )\n  }\n}\n","import { fromJose, hexToBytes } from '../util'\nimport { Signer } from '../JWT'\nimport { ES256KSigner } from './ES256KSigner'\n\n/**\n * @deprecated Please use ES256KSigner\n *  The SimpleSigner returns a configured function for signing data.\n *\n *  @example\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\n *  signer(data, (err, signature) => {\n *    ...\n *  })\n *\n *  @param    {String}         hexPrivateKey    a hex encoded private key\n *  @return   {Function}                     a configured signer function\n */\nfunction SimpleSigner(hexPrivateKey: string): Signer {\n  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true)\n  return async (data) => {\n    const signature = (await signer(data)) as string\n    return fromJose(signature)\n  }\n}\n\nexport default SimpleSigner\n","import { hexToBytes } from '../util'\nimport { Signer } from '../JWT'\nimport { ES256KSigner } from './ES256KSigner'\n\n/**\n * @deprecated Please use ES256KSigner\n *  The EllipticSigner returns a configured function for signing data.\n *\n *  @example\n *  ```typescript\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\n *  signer(data).then( (signature: string) => {\n *    ...\n *  })\n *  ```\n *\n *  @param    {String}         hexPrivateKey    a hex encoded private key\n *  @return   {Function}                        a configured signer function\n */\nfunction EllipticSigner(hexPrivateKey: string): Signer {\n  return ES256KSigner(hexToBytes(hexPrivateKey))\n}\n\nexport default EllipticSigner\n","import { sign } from '@stablelib/ed25519'\nimport { Signer } from '../JWT'\nimport { bytesToBase64url, stringToBytes } from '../util'\n\n/**\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function EdDSASigner(secretKey: Uint8Array): Signer {\n  const privateKeyBytes: Uint8Array = secretKey\n  if (privateKeyBytes.length !== 64) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`)\n  }\n  return async (data: string | Uint8Array): Promise<string> => {\n    const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data\n    const sig: Uint8Array = sign(privateKeyBytes, dataBytes)\n    return bytesToBase64url(sig)\n  }\n}\n","import { EdDSASigner as EdDSASigner } from './EdDSASigner'\nimport { Signer } from '../JWT'\nimport { base64ToBytes } from '../util'\n\n/**\n * @deprecated Please use EdDSASigner\n *\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\n *\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\n *\n *  @example\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\n *  const data: string = '...'\n *  signer(data).then( (signature: string) => {\n *    ...\n *  })\n *\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\n *  @return   {Function}                     a configured signer function\n */\n\nfunction NaclSigner(base64PrivateKey: string): Signer {\n  return EdDSASigner(base64ToBytes(base64PrivateKey))\n}\n\nexport default NaclSigner\n","import { leftpad } from '../util'\nimport { toJose } from '../util'\nimport { Signer } from '../JWT'\nimport { sha256 } from '../Digest'\nimport elliptic from 'elliptic'\n\nconst secp256r1 = new elliptic.ec('p256')\n\n/**\n *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    privateKey   a private key as `Uint8Array`\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function ES256Signer(privateKey: Uint8Array): Signer {\n  const privateKeyBytes: Uint8Array = privateKey\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\n  }\n  const keyPair: elliptic.ec.KeyPair = secp256r1.keyFromPrivate(privateKeyBytes)\n\n  return async (data: string | Uint8Array): Promise<string> => {\n    const { r, s }: elliptic.ec.Signature = keyPair.sign(sha256(data))\n    return toJose({\n      r: leftpad(r.toString('hex')),\n      s: leftpad(s.toString('hex')),\n    })\n  }\n}\n","import { Signer, SignerAlgorithm } from './JWT'\nimport { EcdsaSignature, fromJose, toJose } from './util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction instanceOfEcdsaSignature(object: any): object is EcdsaSignature {\n  return typeof object === 'object' && 'r' in object && 's' in object\n}\n\nexport function ES256SignerAlg(): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (instanceOfEcdsaSignature(signature)) {\n      return toJose(signature)\n    } else {\n      return signature\n    }\n  }\n}\n\nexport function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (instanceOfEcdsaSignature(signature)) {\n      return toJose(signature, recoverable)\n    } else {\n      if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\n        throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`)\n      }\n      return signature\n    }\n  }\n}\n\nexport function Ed25519SignerAlg(): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (!instanceOfEcdsaSignature(signature)) {\n      return signature\n    } else {\n      throw new Error('invalid_config: expected a signer function that returns a string instead of signature object')\n    }\n  }\n}\n\ninterface SignerAlgorithms {\n  [alg: string]: SignerAlgorithm\n}\n\nconst algorithms: SignerAlgorithms = {\n  ES256: ES256SignerAlg(),\n  ES256K: ES256KSignerAlg(),\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': ES256KSignerAlg(true),\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: Ed25519SignerAlg(),\n  EdDSA: Ed25519SignerAlg(),\n}\n\nfunction SignerAlg(alg: string): SignerAlgorithm {\n  const impl: SignerAlgorithm = algorithms[alg]\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\n  return impl\n}\n\nexport default SignerAlg\n","import * as u8a from 'uint8arrays'\nimport { bytesToBase58, base58ToBytes } from '../util'\nimport { sha256, ripemd160 } from '../Digest'\n\nexport const publicKeyToAddress = (publicKey: string, otherAddress: string): string => {\n  // Use the same version/prefix byte as the given address.\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex')\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex')\n  const publicKeyHash = ripemd160(sha256(publicKeyBuffer))\n  const step1 = version + u8a.toString(publicKeyHash, 'hex')\n  const step2 = sha256(u8a.fromString(step1, 'hex'))\n  const step3 = sha256(step2)\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8)\n  const step4 = step1 + checksum\n  return bytesToBase58(u8a.fromString(step4, 'hex'))\n}\n","import elliptic from 'elliptic'\nimport { bech32 } from 'bech32'\nimport * as u8a from 'uint8arrays'\nimport { sha256, ripemd160 } from '../Digest'\n\nconst EC = elliptic.ec\n\nexport const publicKeyToAddress = (publicKey: string, prefix: string): string => {\n  const ec = new EC('secp256k1')\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true)\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex')\n  const hash = ripemd160(sha256(publicKeyBuffer))\n  const words = bech32.toWords(hash)\n  return bech32.encode(prefix, words).replace(prefix, '')\n}\n","import { publicKeyToAddress as bip122 } from './bip122'\nimport { publicKeyToAddress as cosmos } from './cosmos'\nimport { toEthereumAddress } from '../Digest'\n\nexport const verifyBlockchainAccountId = (publicKey: string, blockchainAccountId: string | undefined): boolean => {\n  if (blockchainAccountId) {\n    const chain = blockchainAccountId.split(':')\n    switch (chain[0]) {\n      case 'bip122':\n        chain[chain.length - 1] = bip122(publicKey, chain[chain.length - 1])\n        break\n      case 'cosmos':\n        chain[chain.length - 1] = cosmos(publicKey, chain[1])\n        break\n      case 'eip155':\n        chain[chain.length - 1] = toEthereumAddress(publicKey)\n        break\n      default:\n        return false\n    }\n    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase()\n  }\n  return false\n}\n","import type { SignatureInput } from 'elliptic'\nimport elliptic from 'elliptic'\nimport { sha256, toEthereumAddress } from './Digest'\nimport { verify } from '@stablelib/ed25519'\nimport type { VerificationMethod } from 'did-resolver'\nimport { bases } from 'multiformats/basics'\nimport { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'\nimport { verifyBlockchainAccountId } from './blockchains'\n\nconst secp256k1 = new elliptic.ec('secp256k1')\nconst secp256r1 = new elliptic.ec('p256')\n\n// converts a JOSE signature to it's components\nexport function toSignatureObject(signature: string, recoverable = false): EcdsaSignature {\n  const rawSig: Uint8Array = base64ToBytes(signature)\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\n    throw new Error('wrong signature length')\n  }\n  const r: string = bytesToHex(rawSig.slice(0, 32))\n  const s: string = bytesToHex(rawSig.slice(32, 64))\n  const sigObj: EcdsaSignature = { r, s }\n  if (recoverable) {\n    sigObj.recoveryParam = rawSig[64]\n  }\n  return sigObj\n}\n\ninterface LegacyVerificationMethod extends VerificationMethod {\n  publicKeyBase64: string\n}\n\nfunction extractPublicKeyBytes(pk: VerificationMethod): Uint8Array {\n  if (pk.publicKeyBase58) {\n    return base58ToBytes(pk.publicKeyBase58)\n  } else if ((<LegacyVerificationMethod>pk).publicKeyBase64) {\n    return base64ToBytes((<LegacyVerificationMethod>pk).publicKeyBase64)\n  } else if (pk.publicKeyHex) {\n    return hexToBytes(pk.publicKeyHex)\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(\n      secp256k1\n        .keyFromPublic({\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\n        })\n        .getPublic('hex')\n    )\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(\n      secp256r1\n        .keyFromPublic({\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\n        })\n        .getPublic('hex')\n    )\n  } else if (\n    pk.publicKeyJwk &&\n    pk.publicKeyJwk.kty === 'OKP' &&\n    pk.publicKeyJwk.crv === 'Ed25519' &&\n    pk.publicKeyJwk.x\n  ) {\n    return base64ToBytes(pk.publicKeyJwk.x)\n  } else if (pk.publicKeyMultibase) {\n    const { base16, base58btc, base64, base64url } = bases\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)))\n    return baseDecoder.decode(pk.publicKeyMultibase)\n  }\n  return new Uint8Array()\n}\n\nexport function verifyES256(data: string, signature: string, authenticators: VerificationMethod[]): VerificationMethod {\n  const hash: Uint8Array = sha256(data)\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\n  })\n\n  const signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk)\n      return secp256r1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\n    } catch (err) {\n      return false\n    }\n  })\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\nexport function verifyES256K(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  const hash: Uint8Array = sha256(data)\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\n  })\n  const blockchainAddressKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined'\n  })\n\n  let signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk)\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\n    } catch (err) {\n      return false\n    }\n  })\n\n  if (!signer && blockchainAddressKeys.length > 0) {\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys)\n  }\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\nexport function verifyRecoverableES256K(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  let signatures: EcdsaSignature[]\n  if (signature.length > 86) {\n    signatures = [toSignatureObject(signature, true)]\n  } else {\n    const so = toSignatureObject(signature, false)\n    signatures = [\n      { ...so, recoveryParam: 0 },\n      { ...so, recoveryParam: 1 },\n    ]\n  }\n\n  const checkSignatureAgainstSigner = (sigObj: EcdsaSignature): VerificationMethod | undefined => {\n    const hash: Uint8Array = sha256(data)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const recoveredKey: any = secp256k1.recoverPubKey(hash, <SignatureInput>sigObj, <number>sigObj.recoveryParam)\n    const recoveredPublicKeyHex: string = recoveredKey.encode('hex')\n    const recoveredCompressedPublicKeyHex: string = recoveredKey.encode('hex', true)\n    const recoveredAddress: string = toEthereumAddress(recoveredPublicKeyHex).toLowerCase()\n\n    const signer: VerificationMethod | undefined = authenticators.find((pk: VerificationMethod) => {\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk))\n      return (\n        keyHex === recoveredPublicKeyHex ||\n        keyHex === recoveredCompressedPublicKeyHex ||\n        pk.ethereumAddress?.toLowerCase() === recoveredAddress ||\n        pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2\n        verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\n      )\n    })\n\n    return signer\n  }\n\n  const signer: VerificationMethod[] = signatures\n    .map(checkSignatureAgainstSigner)\n    .filter((key) => typeof key !== 'undefined') as VerificationMethod[]\n\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer[0]\n}\n\nexport function verifyEd25519(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  const clear: Uint8Array = stringToBytes(data)\n  const sig: Uint8Array = base64ToBytes(signature)\n  const signer = authenticators.find((pk: VerificationMethod) => {\n    return verify(extractPublicKeyBytes(pk), clear, sig)\n  })\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\ntype Verifier = (data: string, signature: string, authenticators: VerificationMethod[]) => VerificationMethod\ninterface Algorithms {\n  [name: string]: Verifier\n}\nconst algorithms: Algorithms = {\n  ES256: verifyES256,\n  ES256K: verifyES256K,\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': verifyRecoverableES256K,\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: verifyEd25519,\n  EdDSA: verifyEd25519,\n}\n\nfunction VerifierAlgorithm(alg: string): Verifier {\n  const impl: Verifier = algorithms[alg]\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\n  return impl\n}\n\nVerifierAlgorithm.toSignatureObject = toSignatureObject\n\nexport default VerifierAlgorithm\n","/**\n * Error prefixes used for known verification failure cases.\n *\n * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major\n * version update to match the scenarios better.\n *\n * @beta\n */\nexport const JWT_ERROR = {\n  /**\n   * Thrown when a JWT payload schema is unexpected or when validity period does not match\n   */\n  INVALID_JWT: 'invalid_jwt',\n  /**\n   * Thrown when the verifier audience does not match the one set in the JWT payload\n   */\n  INVALID_AUDIENCE: 'invalid_config',\n  /**\n   * Thrown when none of the public keys of the issuer match the signature of the JWT.\n   *\n   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.\n   */\n  INVALID_SIGNATURE: 'invalid_signature',\n  /**\n   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given\n   * `proofPurpose`.\n   *\n   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.\n   */\n  NO_SUITABLE_KEYS: 'no_suitable_keys',\n  /**\n   * Thrown when the `alg` of the JWT or the encoding of the key is not supported\n   */\n  NOT_SUPPORTED: 'not_supported',\n  /**\n   * Thrown when the DID resolver is unable to resolve the issuer DID.\n   */\n  RESOLVER_ERROR: 'resolver_error',\n}\n","import canonicalizeData from 'canonicalize'\nimport type { DIDDocument, DIDResolutionResult, Resolvable, VerificationMethod } from 'did-resolver'\nimport SignerAlg from './SignerAlgorithm'\nimport { decodeBase64url, EcdsaSignature, encodeBase64url } from './util'\nimport VerifierAlgorithm from './VerifierAlgorithm'\nimport { JWT_ERROR } from './Errors'\n\nexport type Signer = (data: string | Uint8Array) => Promise<EcdsaSignature | string>\nexport type SignerAlgorithm = (payload: string, signer: Signer) => Promise<string>\n\nexport type ProofPurposeTypes =\n  | 'assertionMethod'\n  | 'authentication'\n  // | 'keyAgreement' // keyAgreement VerificationMethod should not be used for signing\n  | 'capabilityDelegation'\n  | 'capabilityInvocation'\n\nexport interface JWTOptions {\n  issuer: string\n  signer: Signer\n  /**\n   * @deprecated Please use `header.alg` to specify the JWT algorithm.\n   */\n  alg?: string\n  expiresIn?: number\n  canonicalize?: boolean\n}\n\nexport interface JWTVerifyOptions {\n  /** @deprecated Please use `proofPurpose: 'authentication' instead` */\n  auth?: boolean\n  audience?: string\n  callbackUrl?: string\n  resolver?: Resolvable\n  skewTime?: number\n  /** See https://www.w3.org/TR/did-spec-registries/#verification-relationships */\n  proofPurpose?: ProofPurposeTypes\n  policies?: JWTVerifyPolicies\n}\n\n/**\n * Overrides the different types of checks performed on the JWT besides the signature check\n */\nexport interface JWTVerifyPolicies {\n  // overrides the timestamp against which the validity interval is checked\n  now?: number\n  // when set to false, the timestamp checks ignore the Not Before(`nbf`) property\n  nbf?: boolean\n  // when set to false, the timestamp checks ignore the Issued At(`iat`) property\n  iat?: boolean\n  // when set to false, the timestamp checks ignore the Expires At(`exp`) property\n  exp?: boolean\n  // when set to false, the JWT audience check is skipped\n  aud?: boolean\n}\n\nexport interface JWSCreationOptions {\n  canonicalize?: boolean\n}\n\nexport interface DIDAuthenticator {\n  authenticators: VerificationMethod[]\n  issuer: string\n  didResolutionResult: DIDResolutionResult\n}\n\nexport interface JWTHeader {\n  typ: 'JWT'\n  alg: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface JWTPayload {\n  iss?: string\n  sub?: string\n  aud?: string | string[]\n  iat?: number\n  nbf?: number\n  exp?: number\n  rexp?: number\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface JWTDecoded {\n  header: JWTHeader\n  payload: JWTPayload\n  signature: string\n  data: string\n}\n\nexport interface JWSDecoded {\n  header: JWTHeader\n  payload: string\n  signature: string\n  data: string\n}\n\n/**\n * Result object returned by {@link verifyJWT}\n */\nexport interface JWTVerified {\n  /**\n   * Set to true for a JWT that passes all the required checks minus any verification overrides.\n   */\n  verified: true\n\n  /**\n   * The decoded JWT payload\n   */\n  payload: Partial<JWTPayload>\n\n  /**\n   * The result of resolving the issuer DID\n   */\n  didResolutionResult: DIDResolutionResult\n\n  /**\n   * the issuer DID\n   */\n  issuer: string\n\n  /**\n   * The public key of the issuer that matches the JWT signature\n   */\n  signer: VerificationMethod\n\n  /**\n   * The original JWT that was verified\n   */\n  jwt: string\n\n  /**\n   * Any overrides that were used during verification\n   */\n  policies?: JWTVerifyPolicies\n}\n\nexport interface PublicKeyTypes {\n  [name: string]: string[]\n}\n\nexport const SUPPORTED_PUBLIC_KEY_TYPES: PublicKeyTypes = {\n  ES256: ['JsonWebKey2020'],\n  ES256K: [\n    'EcdsaSecp256k1VerificationKey2019',\n    /**\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\n     */\n    'EcdsaSecp256k1RecoveryMethod2020',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1VerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1SignatureVerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'EcdsaPublicKeySecp256k1',\n    'JsonWebKey2020',\n  ],\n  'ES256K-R': [\n    'EcdsaSecp256k1VerificationKey2019',\n    /**\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\n     */\n    'EcdsaSecp256k1RecoveryMethod2020',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1VerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1SignatureVerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'EcdsaPublicKeySecp256k1',\n    'JsonWebKey2020',\n  ],\n  Ed25519: [\n    'ED25519SignatureVerification',\n    'Ed25519VerificationKey2018',\n    'Ed25519VerificationKey2020',\n    'JsonWebKey2020',\n  ],\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],\n}\n\nexport const SELF_ISSUED_V2 = 'https://self-issued.me/v2'\nexport const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc' // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation\nexport const SELF_ISSUED_V0_1 = 'https://self-issued.me'\n\ntype LegacyVerificationMethod = { publicKey?: string }\n\nconst defaultAlg = 'ES256K'\nconst DID_JSON = 'application/did+json'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction encodeSection(data: any, shouldCanonicalize = false): string {\n  if (shouldCanonicalize) {\n    return encodeBase64url(<string>canonicalizeData(data))\n  } else {\n    return encodeBase64url(JSON.stringify(data))\n  }\n}\n\nexport const NBF_SKEW = 300\n\nfunction decodeJWS(jws: string): JWSDecoded {\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/)\n  if (parts) {\n    return {\n      header: JSON.parse(decodeBase64url(parts[1])),\n      payload: parts[2],\n      signature: parts[3],\n      data: `${parts[1]}.${parts[2]}`,\n    }\n  }\n  throw new Error('invalid_argument: Incorrect format JWS')\n}\n\n/**  @module did-jwt/JWT */\n\n/**\n *  Decodes a JWT and returns an object representing the payload\n *\n *  @example\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\n *\n *  @param    {String}            jwt                a JSON Web Token to verify\n *  @return   {Object}                               a JS object representing the decoded JWT\n */\nexport function decodeJWT(jwt: string): JWTDecoded {\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT')\n  try {\n    const jws = decodeJWS(jwt)\n    const decodedJwt: JWTDecoded = Object.assign(jws, { payload: JSON.parse(decodeBase64url(jws.payload)) })\n    return decodedJwt\n  } catch (e) {\n    throw new Error('invalid_argument: Incorrect format JWT')\n  }\n}\n\n/**\n *  Creates a signed JWS given a payload, a signer, and an optional header.\n *\n *  @example\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  const jws = await createJWS({ my: 'payload' }, signer)\n *\n *  @param    {Object}            payload           payload object\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\n *  @param    {Object}            header            optional object to specify or customize the JWS header\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\n *                                                    payload properties\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\n */\nexport async function createJWS(\n  payload: string | Partial<JWTPayload>,\n  signer: Signer,\n  header: Partial<JWTHeader> = {},\n  options: JWSCreationOptions = {}\n): Promise<string> {\n  if (!header.alg) header.alg = defaultAlg\n  const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize)\n  const signingInput: string = [encodeSection(header, options.canonicalize), encodedPayload].join('.')\n\n  const jwtSigner: SignerAlgorithm = SignerAlg(header.alg)\n  const signature: string = await jwtSigner(signingInput, signer)\n  return [signingInput, signature].join('.')\n}\n\n/**\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is\n * over.\n *\n *  @example\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\n *      ...\n *  })\n *\n *  @param    {Object}            payload               payload object\n *  @param    {Object}            [options]             an unsigned credential object\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:\n *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\n *  @param    {Object}            header                optional object to specify or customize the JWT header\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or\n *   rejects with an error\n */\nexport async function createJWT(\n  payload: Partial<JWTPayload>,\n  { issuer, signer, alg, expiresIn, canonicalize }: JWTOptions,\n  header: Partial<JWTHeader> = {}\n): Promise<string> {\n  if (!signer) throw new Error('missing_signer: No Signer functionality has been configured')\n  if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured')\n  if (!header.typ) header.typ = 'JWT'\n  if (!header.alg) header.alg = alg\n  const timestamps: Partial<JWTPayload> = {\n    iat: Math.floor(Date.now() / 1000),\n    exp: undefined,\n  }\n  if (expiresIn) {\n    if (typeof expiresIn === 'number') {\n      timestamps.exp = <number>(payload.nbf || timestamps.iat) + Math.floor(expiresIn)\n    } else {\n      throw new Error('invalid_argument: JWT expiresIn is not a number')\n    }\n  }\n  const fullPayload = { ...timestamps, ...payload, iss: issuer }\n  return createJWS(fullPayload, signer, header, { canonicalize })\n}\n\nfunction verifyJWSDecoded(\n  { header, data, signature }: JWSDecoded,\n  pubKeys: VerificationMethod | VerificationMethod[]\n): VerificationMethod {\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys]\n  const signer: VerificationMethod = VerifierAlgorithm(header.alg)(data, signature, pubKeys)\n  return signer\n}\n\n/**\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\n *\n *  @example\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\n *\n *  @param    {String}                          jws         A JWS string to verify\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\n */\nexport function verifyJWS(jws: string, pubKeys: VerificationMethod | VerificationMethod[]): VerificationMethod {\n  const jwsDecoded: JWSDecoded = decodeJWS(jws)\n  return verifyJWSDecoded(jwsDecoded, pubKeys)\n}\n\n/**\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\n *  and the DID document of the issuer of the JWT.\n *\n *  @example\n *  ```ts\n *  verifyJWT(\n *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',\n *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}\n *    ).then(obj => {\n *        const did = obj.did // DID of signer\n *        const payload = obj.payload\n *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer\n *        const jwt = obj.jwt\n *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT\n *        ...\n *    })\n *  ```\n *\n *  @param    {String}            jwt                a JSON Web Token to verify\n *  @param    {Object}            [options]           an unsigned credential object\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the\n *   DID document (for Authentication purposes)\n *  @param    {String}            options.audience    DID of the recipient of the JWT\n *  @param    {String}            options.callbackUrl callback url in JWT\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an\n *   error\n */\nexport async function verifyJWT(\n  jwt: string,\n  options: JWTVerifyOptions = {\n    resolver: undefined,\n    auth: undefined,\n    audience: undefined,\n    callbackUrl: undefined,\n    skewTime: undefined,\n    proofPurpose: undefined,\n    policies: {},\n  }\n): Promise<JWTVerified> {\n  if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured')\n  const { payload, header, signature, data }: JWTDecoded = decodeJWT(jwt)\n  const proofPurpose: ProofPurposeTypes | undefined = Object.prototype.hasOwnProperty.call(options, 'auth')\n    ? options.auth\n      ? 'authentication'\n      : undefined\n    : options.proofPurpose\n\n  let did\n\n  if (!payload.iss && !payload.client_id) {\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`)\n  }\n\n  if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {\n    if (!payload.sub) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`)\n    }\n    if (typeof payload.sub_jwk === 'undefined') {\n      did = payload.sub\n    } else {\n      did = (header.kid || '').split('#')[0]\n    }\n  } else if (payload.iss === SELF_ISSUED_V0_1) {\n    if (!payload.did) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`)\n    }\n    did = payload.did\n  } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {\n    // SIOP Request payload\n    // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object\n    if (!payload.client_id) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`)\n    }\n    did = payload.client_id\n  } else {\n    did = payload.iss\n  }\n\n  if (!did) {\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`)\n  }\n\n  const { didResolutionResult, authenticators, issuer }: DIDAuthenticator = await resolveAuthenticator(\n    options.resolver,\n    header.alg,\n    did,\n    proofPurpose\n  )\n  const signer: VerificationMethod = await verifyJWSDecoded({ header, data, signature } as JWSDecoded, authenticators)\n  const now: number = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000)\n  const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW\n  if (signer) {\n    const nowSkewed = now + skewTime\n    if (options.policies?.nbf !== false && payload.nbf) {\n      if (payload.nbf > nowSkewed) {\n        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`)\n      }\n    } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`)\n    }\n    if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`)\n    }\n    if (options.policies?.aud !== false && payload.aud) {\n      if (!options.audience && !options.callbackUrl) {\n        throw new Error(\n          `${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`\n        )\n      }\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\n      const matchedAudience = audArray.find((item) => options.audience === item || options.callbackUrl === item)\n\n      if (typeof matchedAudience === 'undefined') {\n        throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)\n      }\n    }\n    return { verified: true, payload, didResolutionResult, issuer, signer, jwt, policies: options.policies }\n  }\n  throw new Error(\n    `${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`\n  )\n}\n\n/**\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of\n * provided DID\n *\n *  @example\n *  ```ts\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\n *      const payload = obj.payload\n *      const profile = obj.profile\n *      const jwt = obj.jwt\n *      // ...\n *  })\n *  ```\n *\n *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`\n *  @param alg - {String} a JWT algorithm\n *  @param issuer - {String} a Decentralized Identifier (DID) to lookup\n *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the\n *   issuer DID document\n *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators\n *   or rejects with an error if none exist\n */\nexport async function resolveAuthenticator(\n  resolver: Resolvable,\n  alg: string,\n  issuer: string,\n  proofPurpose?: ProofPurposeTypes\n): Promise<DIDAuthenticator> {\n  const types: string[] = SUPPORTED_PUBLIC_KEY_TYPES[alg]\n  if (!types || types.length === 0) {\n    throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`)\n  }\n  let didResult: DIDResolutionResult\n\n  const result = (await resolver.resolve(issuer, { accept: DID_JSON })) as unknown\n  // support legacy resolvers that do not produce DIDResolutionResult\n  if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\n    didResult = {\n      didDocument: result as DIDDocument,\n      didDocumentMetadata: {},\n      didResolutionMetadata: { contentType: DID_JSON },\n    }\n  } else {\n    didResult = result as DIDResolutionResult\n  }\n\n  if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {\n    const { error, message } = didResult.didResolutionMetadata\n    throw new Error(\n      `${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`\n    )\n  }\n\n  const getPublicKeyById = (verificationMethods: VerificationMethod[], pubid?: string): VerificationMethod | null => {\n    const filtered = verificationMethods.filter(({ id }) => pubid === id)\n    return filtered.length > 0 ? filtered[0] : null\n  }\n\n  let publicKeysToCheck: VerificationMethod[] = [\n    ...(didResult?.didDocument?.verificationMethod || []),\n    ...(didResult?.didDocument?.publicKey || []),\n  ]\n  if (typeof proofPurpose === 'string') {\n    // support legacy DID Documents that do not list assertionMethod\n    if (\n      proofPurpose.startsWith('assertion') &&\n      !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')\n    ) {\n      didResult.didDocument = { ...(<DIDDocument>didResult.didDocument) }\n      didResult.didDocument.assertionMethod = [...publicKeysToCheck.map((pk) => pk.id)]\n    }\n\n    publicKeysToCheck = (didResult.didDocument[proofPurpose] || [])\n      .map((verificationMethod) => {\n        if (typeof verificationMethod === 'string') {\n          return getPublicKeyById(publicKeysToCheck, verificationMethod)\n        } else if (typeof (<LegacyVerificationMethod>verificationMethod).publicKey === 'string') {\n          // this is a legacy format\n          return getPublicKeyById(publicKeysToCheck, (<LegacyVerificationMethod>verificationMethod).publicKey)\n        } else {\n          return <VerificationMethod>verificationMethod\n        }\n      })\n      .filter((key) => key != null) as VerificationMethod[]\n  }\n\n  const authenticators: VerificationMethod[] = publicKeysToCheck.filter(({ type }) =>\n    types.find((supported) => supported === type)\n  )\n\n  if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\n    throw new Error(\n      `${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`\n    )\n  }\n  if (!authenticators || authenticators.length === 0) {\n    throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`)\n  }\n  return { authenticators, issuer, didResolutionResult: didResult }\n}\n","import { fromString } from 'uint8arrays'\nimport { base64ToBytes, bytesToBase64url, decodeBase64url, toSealed } from './util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ProtectedHeader = Record<string, any> & Partial<RecipientHeader>\n\n/**\n * The JWK representation of an ephemeral public key.\n * See https://www.rfc-editor.org/rfc/rfc7518.html#section-6\n */\ninterface EphemeralPublicKey {\n  kty?: string\n  //ECC\n  crv?: string\n  x?: string\n  y?: string\n  //RSA\n  n?: string\n  e?: string\n}\n\nexport interface RecipientHeader {\n  alg: string\n  iv: string\n  tag: string\n  epk?: EphemeralPublicKey\n  kid?: string\n  apv?: string\n  apu?: string\n}\n\nexport interface Recipient {\n  header: RecipientHeader\n  encrypted_key: string\n}\n\nexport interface JWE {\n  protected: string\n  iv: string\n  ciphertext: string\n  tag: string\n  aad?: string\n  recipients?: Recipient[]\n}\n\nexport interface EncryptionResult {\n  ciphertext: Uint8Array\n  tag: Uint8Array\n  iv: Uint8Array\n  protectedHeader?: string\n  recipient?: Recipient\n  cek?: Uint8Array\n}\n\nexport interface Encrypter {\n  alg: string\n  enc: string\n  encrypt: (cleartext: Uint8Array, protectedHeader: ProtectedHeader, aad?: Uint8Array) => Promise<EncryptionResult>\n  encryptCek?: (cek: Uint8Array) => Promise<Recipient>\n}\n\nexport interface Decrypter {\n  alg: string\n  enc: string\n  decrypt: (sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array, recipient?: Recipient) => Promise<Uint8Array | null>\n}\n\nfunction validateJWE(jwe: JWE) {\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\n    throw new Error('bad_jwe: missing properties')\n  }\n  if (jwe.recipients) {\n    jwe.recipients.map((rec) => {\n      if (!(rec.header && rec.encrypted_key)) {\n        throw new Error('bad_jwe: malformed recipients')\n      }\n    })\n  }\n}\n\nfunction encodeJWE({ ciphertext, tag, iv, protectedHeader, recipient }: EncryptionResult, aad?: Uint8Array): JWE {\n  const jwe: JWE = {\n    protected: <string>protectedHeader,\n    iv: bytesToBase64url(iv),\n    ciphertext: bytesToBase64url(ciphertext),\n    tag: bytesToBase64url(tag),\n  }\n  if (aad) jwe.aad = bytesToBase64url(aad)\n  if (recipient) jwe.recipients = [recipient]\n  return jwe\n}\n\nexport async function createJWE(\n  cleartext: Uint8Array,\n  encrypters: Encrypter[],\n  protectedHeader = {},\n  aad?: Uint8Array\n): Promise<JWE> {\n  if (encrypters[0].alg === 'dir') {\n    if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.')\n    const encryptionResult = await encrypters[0].encrypt(cleartext, protectedHeader, aad)\n    return encodeJWE(encryptionResult, aad)\n  } else {\n    const tmpEnc = encrypters[0].enc\n    if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\n      throw new Error('invalid_argument: Incompatible encrypters passed')\n    }\n    let cek\n    let jwe\n    for (const encrypter of encrypters) {\n      if (!cek) {\n        const encryptionResult = await encrypter.encrypt(cleartext, protectedHeader, aad)\n        cek = encryptionResult.cek\n        jwe = encodeJWE(encryptionResult, aad)\n      } else {\n        const recipient = await encrypter.encryptCek?.(cek)\n        if (recipient) {\n          jwe?.recipients?.push(recipient)\n        }\n      }\n    }\n    return <JWE>jwe\n  }\n}\n\nexport async function decryptJWE(jwe: JWE, decrypter: Decrypter): Promise<Uint8Array> {\n  validateJWE(jwe)\n  const protHeader = JSON.parse(decodeBase64url(jwe.protected))\n  if (protHeader.enc !== decrypter.enc)\n    throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`)\n  const sealed = toSealed(jwe.ciphertext, jwe.tag)\n  const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected)\n  let cleartext = null\n  if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\n    cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)\n  } else if (!jwe.recipients || jwe.recipients.length === 0) {\n    throw new Error('bad_jwe: missing recipients')\n  } else {\n    for (let i = 0; !cleartext && i < jwe.recipients.length; i++) {\n      const recipient = jwe.recipients[i]\n      Object.assign(recipient.header, protHeader)\n      if (recipient.header.alg === decrypter.alg) {\n        cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)\n      }\n    }\n  }\n  if (cleartext === null) throw new Error('failure: Failed to decrypt')\n  return cleartext\n}\n","import { sharedKey } from '@stablelib/x25519'\n\n/**\n * A wrapper around `mySecretKey` that can compute a shared secret using `theirPublicKey`.\n * The promise should resolve to a `Uint8Array` containing the raw shared secret.\n *\n * This method is meant to be used when direct access to a secret key is impossible or not desired.\n *\n * @param theirPublicKey `Uint8Array` the other party's public key\n * @returns a `Promise` that resolves to a `Uint8Array` representing the computed shared secret\n */\nexport type ECDH = (theirPublicKey: Uint8Array) => Promise<Uint8Array>\n\n/**\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\n *\n * @throws 'invalid_argument:...' if the secret key size is wrong\n */\nexport function createX25519ECDH(mySecretKey: Uint8Array): ECDH {\n  if (mySecretKey.length !== 32) {\n    throw new Error('invalid_argument: incorrect secret key length for X25519')\n  }\n  return async (theirPublicKey: Uint8Array): Promise<Uint8Array> => {\n    if (theirPublicKey.length !== 32) {\n      throw new Error('invalid_argument: incorrect publicKey key length for X25519')\n    }\n    return sharedKey(mySecretKey, theirPublicKey)\n  }\n}\n","import { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305'\nimport { generateKeyPair, sharedKey } from '@stablelib/x25519'\nimport { randomBytes } from '@stablelib/random'\nimport { concatKDF } from './Digest'\nimport { bytesToBase64url, base58ToBytes, encodeBase64url, toSealed, base64ToBytes } from './util'\nimport { Recipient, EncryptionResult, Encrypter, Decrypter, ProtectedHeader } from './JWE'\nimport type { VerificationMethod, Resolvable } from 'did-resolver'\nimport { ECDH } from './ECDH'\nimport { fromString } from 'uint8arrays/from-string'\n\n/**\n * Extra parameters for JWE using authenticated encryption\n */\nexport type AuthEncryptParams = {\n  /**\n   * recipient key ID\n   */\n  kid?: string\n\n  /**\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.2}\n   * base64url encoded\n   */\n  apu?: string\n\n  /**\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.3}\n   * base64url encoded\n   */\n  apv?: string\n}\n\n/**\n * Extra parameters for JWE using anonymous encryption\n */\nexport type AnonEncryptParams = {\n  /**\n   * recipient key ID\n   */\n  kid?: string\n}\n\n/**\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\n * sender private key to encrypt the data).\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\n *\n * @param recipientPublicKey the byte array representing the recipient public key\n * @param senderSecret either a Uint8Array representing the sender secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\n *\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\n *\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\n * are subject to change as new revisions or until the official CFRG specification are released.\n *\n * @beta\n */\nexport function createAuthEncrypter(\n  recipientPublicKey: Uint8Array,\n  senderSecret: Uint8Array | ECDH,\n  options: Partial<AuthEncryptParams> = {}\n): Encrypter {\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options)\n}\n\n/**\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\n *\n * @param publicKey the byte array representing the recipient public key\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\n *\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\n *\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\n * is subject to change as new revisions or until the official CFRG specification is released.\n *\n * @beta\n */\nexport function createAnonEncrypter(publicKey: Uint8Array, options: Partial<AnonEncryptParams> = {}): Encrypter {\n  return x25519Encrypter(publicKey, options?.kid)\n}\n\n/**\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\n * sender public key to decrypt the data).\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\n *\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n * @param senderPublicKey the byte array representing the sender public key\n *\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\n *\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\n * are subject to change as new revisions or until the official CFRG specification are released.\n *\n * @beta\n */\nexport function createAuthDecrypter(recipientSecret: Uint8Array | ECDH, senderPublicKey: Uint8Array): Decrypter {\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey)\n}\n\n/**\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\n *\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n *\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\n *\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\n * is subject to change as new revisions or until the official CFRG specification is released.\n *\n * @beta\n */\nexport function createAnonDecrypter(recipientSecret: Uint8Array | ECDH): Decrypter {\n  return x25519Decrypter(recipientSecret)\n}\n\nfunction xc20pEncrypter(key: Uint8Array): (cleartext: Uint8Array, aad?: Uint8Array) => EncryptionResult {\n  const cipher = new XChaCha20Poly1305(key)\n  return (cleartext: Uint8Array, aad?: Uint8Array) => {\n    const iv = randomBytes(cipher.nonceLength)\n    const sealed = cipher.seal(iv, cleartext, aad)\n    return {\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\n      iv,\n    }\n  }\n}\n\nexport function xc20pDirEncrypter(key: Uint8Array): Encrypter {\n  const xc20pEncrypt = xc20pEncrypter(key)\n  const enc = 'XC20P'\n  const alg = 'dir'\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    const protHeader = encodeBase64url(JSON.stringify(Object.assign({ alg }, protectedHeader, { enc })))\n    const encodedAad = fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader)\n    return {\n      ...xc20pEncrypt(cleartext, encodedAad),\n      protectedHeader: protHeader,\n    }\n  }\n  return { alg, enc, encrypt }\n}\n\nexport function xc20pDirDecrypter(key: Uint8Array): Decrypter {\n  const cipher = new XChaCha20Poly1305(key)\n  async function decrypt(sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array): Promise<Uint8Array | null> {\n    return cipher.open(iv, sealed, aad)\n  }\n  return { alg: 'dir', enc: 'XC20P', decrypt }\n}\n\nexport function x25519Encrypter(publicKey: Uint8Array, kid?: string): Encrypter {\n  const alg = 'ECDH-ES+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\n    const epk = generateKeyPair()\n    const sharedSecret = sharedKey(epk.secretKey, publicKey)\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg)\n    const res = xc20pEncrypter(kek)(cek)\n    const recipient: Recipient = {\n      encrypted_key: bytesToBase64url(res.ciphertext),\n      header: {\n        alg,\n        iv: bytesToBase64url(res.iv),\n        tag: bytesToBase64url(res.tag),\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\n      },\n    }\n    if (kid) recipient.header.kid = kid\n    return recipient\n  }\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    // we won't want alg to be set to dir from xc20pDirEncrypter\n    Object.assign(protectedHeader, { alg: undefined })\n    // Content Encryption Key\n    const cek = randomBytes(32)\n    return {\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\n      recipient: await encryptCek(cek),\n      cek,\n    }\n  }\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\n}\n\n/**\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\n */\nexport function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(\n  recipientPublicKey: Uint8Array,\n  senderSecret: Uint8Array | ECDH,\n  options: Partial<AuthEncryptParams> = {}\n): Encrypter {\n  const alg = 'ECDH-1PU+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n\n  let partyUInfo: Uint8Array\n  let partyVInfo: Uint8Array\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu)\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv)\n\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\n    const epk = generateKeyPair()\n    const zE = sharedKey(epk.secretKey, recipientPublicKey)\n\n    // ECDH-1PU requires additional shared secret between\n    // static key of sender and static key of recipient\n    let zS\n    if (senderSecret instanceof Uint8Array) {\n      zS = sharedKey(senderSecret, recipientPublicKey)\n    } else {\n      zS = await senderSecret(recipientPublicKey)\n    }\n\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\n    sharedSecret.set(zE)\n    sharedSecret.set(zS, zE.length)\n\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo)\n\n    const res = xc20pEncrypter(kek)(cek)\n    const recipient: Recipient = {\n      encrypted_key: bytesToBase64url(res.ciphertext),\n      header: {\n        alg,\n        iv: bytesToBase64url(res.iv),\n        tag: bytesToBase64url(res.tag),\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\n      },\n    }\n    if (options.kid) recipient.header.kid = options.kid\n    if (options.apu) recipient.header.apu = options.apu\n    if (options.apv) recipient.header.apv = options.apv\n\n    return recipient\n  }\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    // we won't want alg to be set to dir from xc20pDirEncrypter\n    Object.assign(protectedHeader, { alg: undefined })\n    // Content Encryption Key\n    const cek = randomBytes(32)\n    return {\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\n      recipient: await encryptCek(cek),\n      cek,\n    }\n  }\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\n}\n\nexport async function resolveX25519Encrypters(dids: string[], resolver: Resolvable): Promise<Encrypter[]> {\n  const encryptersForDID = async (did: string, resolved: string[] = []): Promise<Encrypter[]> => {\n    const { didResolutionMetadata, didDocument } = await resolver.resolve(did)\n    resolved.push(did)\n    if (didResolutionMetadata?.error || didDocument == null) {\n      throw new Error(\n        `resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`\n      )\n    }\n    let controllerEncrypters: Encrypter[] = []\n    if (!didDocument.controller && !didDocument.keyAgreement) {\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\n    }\n    if (didDocument.controller) {\n      let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller]\n      controllers = controllers.filter((c) => !resolved.includes(c))\n      const encrypterPromises = controllers.map((did) =>\n        encryptersForDID(did, resolved).catch(() => {\n          return []\n        })\n      )\n      const encrypterArrays = await Promise.all(encrypterPromises)\n      controllerEncrypters = ([] as Encrypter[]).concat(...encrypterArrays)\n    }\n    const agreementKeys: VerificationMethod[] = didDocument.keyAgreement\n      ?.map((key) => {\n        if (typeof key === 'string') {\n          return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(\n            (pk) => pk.id === key\n          )\n        }\n        return key\n      })\n      ?.filter((key) => typeof key !== 'undefined') as VerificationMethod[]\n    const pks =\n      agreementKeys?.filter((key) => {\n        // TODO: should be able to use non base58 keys too\n        return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58)\n      }) || []\n    if (!pks.length && !controllerEncrypters.length)\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\n    return pks\n      .map((pk) => x25519Encrypter(base58ToBytes(<string>pk.publicKeyBase58), pk.id))\n      .concat(...controllerEncrypters)\n  }\n\n  const encrypterPromises = dids.map((did) => encryptersForDID(did))\n  const encrypterArrays = await Promise.all(encrypterPromises)\n  const flattenedArray = ([] as Encrypter[]).concat(...encrypterArrays)\n  return flattenedArray\n}\n\nfunction validateHeader(header?: ProtectedHeader) {\n  if (!(header && header.epk && header.iv && header.tag)) {\n    throw new Error('bad_jwe: malformed header')\n  }\n}\n\nexport function x25519Decrypter(receiverSecret: Uint8Array | ECDH): Decrypter {\n  const alg = 'ECDH-ES+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function decrypt(\n    sealed: Uint8Array,\n    iv: Uint8Array,\n    aad?: Uint8Array,\n    recipient?: Recipient\n  ): Promise<Uint8Array | null> {\n    validateHeader(recipient?.header)\n    recipient = <Recipient>recipient\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\n    const publicKey = base64ToBytes(recipient.header.epk.x)\n    let sharedSecret\n    if (receiverSecret instanceof Uint8Array) {\n      sharedSecret = sharedKey(receiverSecret, publicKey)\n    } else {\n      sharedSecret = await receiverSecret(publicKey)\n    }\n\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg)\n    // Content Encryption Key\n    const sealedCek = toSealed(<string>recipient.encrypted_key, recipient.header.tag)\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\n    if (cek === null) return null\n\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\n  }\n  return { alg, enc: 'XC20P', decrypt }\n}\n\n/**\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\n */\nexport function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(\n  recipientSecret: Uint8Array | ECDH,\n  senderPublicKey: Uint8Array\n): Decrypter {\n  const alg = 'ECDH-1PU+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function decrypt(\n    sealed: Uint8Array,\n    iv: Uint8Array,\n    aad?: Uint8Array,\n    recipient?: Recipient\n  ): Promise<Uint8Array | null> {\n    recipient = <Recipient>recipient\n    validateHeader(recipient.header)\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\n    // ECDH-1PU requires additional shared secret between\n    // static key of sender and static key of recipient\n    const publicKey = base64ToBytes(recipient.header.epk.x)\n    let zE: Uint8Array\n    let zS: Uint8Array\n\n    if (recipientSecret instanceof Uint8Array) {\n      zE = sharedKey(recipientSecret, publicKey)\n      zS = sharedKey(recipientSecret, senderPublicKey)\n    } else {\n      zE = await recipientSecret(publicKey)\n      zS = await recipientSecret(senderPublicKey)\n    }\n\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\n    sharedSecret.set(zE)\n    sharedSecret.set(zS, zE.length)\n\n    // Key Encryption Key\n    let producerInfo\n    let consumerInfo\n    if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu)\n    if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv)\n\n    const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo)\n    // Content Encryption Key\n    const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag)\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\n    if (cek === null) return null\n\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\n  }\n  return { alg, enc: 'XC20P', decrypt }\n}\n"],"names":["bytesToBase64url","b","u8a","toString","base64ToBytes","s","inputBase64Url","replace","fromString","base58ToBytes","bytesToBase58","hexToBytes","input","startsWith","substring","toLowerCase","encodeBase64url","decodeBase64url","bytesToHex","stringToBytes","toJose","r","recoveryParam","recoverable","jose","Uint8Array","set","Error","fromJose","signature","signatureBytes","length","TypeError","slice","undefined","toSealed","ciphertext","tag","concat","leftpad","data","size","repeat","zl","zr","sl","sr","hl","hr","rotl","x","n","fn1","a","c","d","e","m","k","fn2","fn3","fn4","fn5","Ripemd160","constructor","blockSize","_a","_b","_c","_d","_e","_blockOffset","_block","_blockSize","_length","_finalized","update","block","offset","i","_update","j","carry","digest","_digest","fill","words","Array","temp","DataView","buffer","getInt32","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","setUint32","setInt32","sha256","payload","hash","keccak","sha3","keccak_256","arrayBuffer","toEthereumAddress","hexPublicKey","hashInput","ripemd160","writeUint32BE","value","array","encoded","lengthAndInput","concatKDF","secret","keyLen","alg","producerInfo","consumerInfo","roundNumber","secp256k1","elliptic","ec","ES256KSigner","privateKey","privateKeyBytes","keyPair","keyFromPrivate","sign","SimpleSigner","hexPrivateKey","signer","EllipticSigner","EdDSASigner","secretKey","dataBytes","sig","NaclSigner","base64PrivateKey","secp256r1","ES256Signer","instanceOfEcdsaSignature","object","ES256SignerAlg","ES256KSignerAlg","Ed25519SignerAlg","algorithms","ES256","ES256K","Ed25519","EdDSA","SignerAlg","impl","publicKeyToAddress","publicKey","otherAddress","version","publicKeyBuffer","publicKeyHash","step1","step2","step3","checksum","step4","EC","prefix","compressedPublicKey","keyFromPublic","getPublic","encode","bech32","toWords","verifyBlockchainAccountId","blockchainAccountId","chain","split","bip122","cosmos","join","toSignatureObject","rawSig","sigObj","extractPublicKeyBytes","pk","publicKeyBase58","publicKeyBase64","publicKeyHex","publicKeyJwk","crv","y","kty","publicKeyMultibase","base16","base58btc","base64","base64url","bases","baseDecoder","decoder","or","decode","verifyES256","authenticators","fullPublicKeys","filter","ethereumAddress","find","pubBytes","verify","err","verifyES256K","blockchainAddressKeys","verifyRecoverableES256K","signatures","so","checkSignatureAgainstSigner","recoveredKey","recoverPubKey","recoveredPublicKeyHex","recoveredCompressedPublicKeyHex","recoveredAddress","keyHex","map","key","verifyEd25519","clear","VerifierAlgorithm","JWT_ERROR","INVALID_JWT","INVALID_AUDIENCE","INVALID_SIGNATURE","NO_SUITABLE_KEYS","NOT_SUPPORTED","RESOLVER_ERROR","resolveAuthenticator","resolver","issuer","proofPurpose","types","SUPPORTED_PUBLIC_KEY_TYPES","didResult","resolve","accept","DID_JSON","result","Object","getOwnPropertyNames","indexOf","didDocument","didDocumentMetadata","didResolutionMetadata","contentType","error","message","getPublicKeyById","verificationMethods","pubid","filtered","id","publicKeysToCheck","verificationMethod","includes","assertionMethod","type","supported","didResolutionResult","verifyJWT","jwt","options","auth","audience","callbackUrl","skewTime","policies","header","decodeJWT","prototype","hasOwnProperty","call","did","iss","client_id","SELF_ISSUED_V2","SELF_ISSUED_V2_VC_INTEROP","sub","sub_jwk","kid","SELF_ISSUED_V0_1","scope","redirect_uri","verifyJWSDecoded","now","Math","floor","Date","NBF_SKEW","nowSkewed","nbf","iat","exp","aud","audArray","isArray","matchedAudience","item","verified","createJWT","expiresIn","canonicalize","typ","timestamps","fullPayload","createJWS","defaultAlg","encodedPayload","encodeSection","signingInput","jwtSigner","shouldCanonicalize","canonicalizeData","JSON","stringify","decodeJWS","jws","parts","match","parse","decodedJwt","assign","pubKeys","verifyJWS","jwsDecoded","bind","then","v","pact","onFulfilled","_this","thenable","validateJWE","jwe","protected","iv","recipients","rec","encrypted_key","encodeJWE","protectedHeader","recipient","aad","decryptJWE","decrypter","cleartext","protHeader","enc","sealed","decrypt","createJWE","encrypters","encrypt","encryptionResult","tmpEnc","reduce","acc","encrypter","cek","encryptCek","push","createX25519ECDH","mySecretKey","theirPublicKey","sharedKey","resolveX25519Encrypters","dids","encryptersForDID","resolved","agreementKeys","keyAgreement","pks","Boolean","controllerEncrypters","x25519Encrypter","controller","controllers","encrypterPromises","catch","Promise","all","encrypterArrays","flattenedArray","createAuthEncrypter","recipientPublicKey","senderSecret","xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonEncrypter","createAuthDecrypter","recipientSecret","senderPublicKey","xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonDecrypter","x25519Decrypter","xc20pEncrypter","cipher","XChaCha20Poly1305","randomBytes","nonceLength","seal","subarray","tagLength","xc20pDirEncrypter","encodedAad","xc20pEncrypt","xc20pDirDecrypter","open","epk","generateKeyPair","sharedSecret","kek","res","zE","zS","partyUInfo","partyVInfo","apu","apv","validateHeader","receiverSecret","sealedCek"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.cjs","sources":["../src/util.ts","../src/blockchains/utils/ripemd160.ts","../src/Digest.ts","../src/signers/ES256KSigner.ts","../src/signers/SimpleSigner.ts","../src/signers/EllipticSigner.ts","../src/signers/EdDSASigner.ts","../src/signers/NaclSigner.ts","../src/signers/ES256Signer.ts","../src/SignerAlgorithm.ts","../src/blockchains/bip122.ts","../src/blockchains/cosmos.ts","../src/blockchains/index.ts","../src/VerifierAlgorithm.ts","../src/Errors.ts","../src/JWT.ts","../src/JWE.ts","../src/ECDH.ts","../src/xc20pEncryption.ts"],"sourcesContent":["import * as u8a from 'uint8arrays'\r\nimport { bases } from 'multiformats/basics'\r\n\r\n/**\r\n * @deprecated Signers will be expected to return base64url `string` signatures.\r\n */\r\nexport interface EcdsaSignature {\r\n  r: string\r\n  s: string\r\n  recoveryParam?: number | null\r\n}\r\n\r\nexport function bytesToBase64url(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64url')\r\n}\r\n\r\nexport function base64ToBytes(s: string): Uint8Array {\r\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\r\n  return u8a.fromString(inputBase64Url, 'base64url')\r\n}\r\n\r\nexport function bytesToBase64(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64pad')\r\n}\r\n\r\nexport function base58ToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s, 'base58btc')\r\n}\r\n\r\nexport function bytesToBase58(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base58btc')\r\n}\r\n\r\nexport function bytesToMultibase(b: Uint8Array, base: keyof typeof bases): string {\r\n  return bases[base].encode(b)\r\n}\r\n\r\nexport function hexToBytes(s: string): Uint8Array {\r\n  const input = s.startsWith('0x') ? s.substring(2) : s\r\n  return u8a.fromString(input.toLowerCase(), 'base16')\r\n}\r\n\r\nexport function encodeBase64url(s: string): string {\r\n  return bytesToBase64url(u8a.fromString(s))\r\n}\r\n\r\nexport function decodeBase64url(s: string): string {\r\n  return u8a.toString(base64ToBytes(s))\r\n}\r\n\r\nexport function bytesToHex(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base16')\r\n}\r\n\r\nexport function stringToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s)\r\n}\r\n\r\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\r\n  const jose = new Uint8Array(recoverable ? 65 : 64)\r\n  jose.set(u8a.fromString(r, 'base16'), 0)\r\n  jose.set(u8a.fromString(s, 'base16'), 32)\r\n  if (recoverable) {\r\n    if (typeof recoveryParam === 'undefined') {\r\n      throw new Error('Signer did not return a recoveryParam')\r\n    }\r\n    jose[64] = <number>recoveryParam\r\n  }\r\n  return bytesToBase64url(jose)\r\n}\r\n\r\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\r\n  const signatureBytes: Uint8Array = base64ToBytes(signature)\r\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\r\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`)\r\n  }\r\n  const r = bytesToHex(signatureBytes.slice(0, 32))\r\n  const s = bytesToHex(signatureBytes.slice(32, 64))\r\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined\r\n  return { r, s, recoveryParam }\r\n}\r\n\r\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\r\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)])\r\n}\r\n\r\nexport function leftpad(data: string, size = 64): string {\r\n  if (data.length === size) return data\r\n  return '0'.repeat(size - data.length) + data\r\n}\r\n","// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\r\n\r\nconst zl = [\r\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14,\r\n  4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,\r\n  10, 14, 1, 3, 8, 11, 6, 15, 13,\r\n]\r\n\r\nconst zr = [\r\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1,\r\n  3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5,\r\n  8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\r\n]\r\n\r\nconst sl = [\r\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11,\r\n  13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,\r\n  11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\r\n]\r\n\r\nconst sr = [\r\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7,\r\n  15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,\r\n  12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\r\n]\r\n\r\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\r\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\r\n\r\nfunction rotl(x: number, n: number) {\r\n  return (x << n) | (x >>> (32 - n))\r\n}\r\n\r\nfunction fn1(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn2(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn3(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn4(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn5(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nexport class Ripemd160 {\r\n  // state\r\n  private _a = 0x67452301\r\n  private _b = 0xefcdab89\r\n  private _c = 0x98badcfe\r\n  private _d = 0x10325476\r\n  private _e = 0xc3d2e1f0\r\n  private _blockOffset = 0\r\n  private _block: Uint8Array\r\n  private _blockSize: number\r\n  private _length = [0, 0, 0, 0]\r\n  private _finalized: boolean\r\n\r\n  constructor(blockSize = 64) {\r\n    this._block = new Uint8Array(blockSize)\r\n    this._blockSize = blockSize\r\n    this._blockOffset = 0\r\n    this._length = [0, 0, 0, 0]\r\n    this._finalized = false\r\n  }\r\n\r\n  update = (data: Uint8Array): Ripemd160 => {\r\n    if (this._finalized) throw new Error('Digest already called')\r\n\r\n    // consume data\r\n    const block = this._block\r\n    let offset = 0\r\n    while (this._blockOffset + data.length - offset >= this._blockSize) {\r\n      for (let i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++]\r\n      this._update()\r\n      this._blockOffset = 0\r\n    }\r\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\r\n\r\n    // update length\r\n    for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\r\n      this._length[j] += carry\r\n      carry = (this._length[j] / 0x0100000000) | 0\r\n      if (carry > 0) this._length[j] -= 0x0100000000 * carry\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  digest = (): Uint8Array => {\r\n    if (this._finalized) throw new Error('Digest already called')\r\n    this._finalized = true\r\n\r\n    const digest = this._digest()\r\n\r\n    // reset state\r\n    this._block.fill(0)\r\n    this._blockOffset = 0\r\n    for (let i = 0; i < 4; ++i) this._length[i] = 0\r\n\r\n    return digest\r\n  }\r\n\r\n  private _update = () => {\r\n    const words = new Array(16)\r\n    const temp = new DataView(this._block.buffer)\r\n    for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true)\r\n\r\n    let al = this._a | 0\r\n    let bl = this._b | 0\r\n    let cl = this._c | 0\r\n    let dl = this._d | 0\r\n    let el = this._e | 0\r\n\r\n    let ar = this._a | 0\r\n    let br = this._b | 0\r\n    let cr = this._c | 0\r\n    let dr = this._d | 0\r\n    let er = this._e | 0\r\n\r\n    // computation\r\n    for (let i = 0; i < 80; i += 1) {\r\n      let tl\r\n      let tr\r\n      if (i < 16) {\r\n        tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\r\n        tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\r\n      } else if (i < 32) {\r\n        tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\r\n        tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\r\n      } else if (i < 48) {\r\n        tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\r\n        tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\r\n      } else if (i < 64) {\r\n        tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\r\n        tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\r\n      } else {\r\n        // if (i<80) {\r\n        tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\r\n        tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\r\n      }\r\n\r\n      al = el\r\n      el = dl\r\n      dl = rotl(cl, 10)\r\n      cl = bl\r\n      bl = tl\r\n\r\n      ar = er\r\n      er = dr\r\n      dr = rotl(cr, 10)\r\n      cr = br\r\n      br = tr\r\n    }\r\n\r\n    // update state\r\n    const t = (this._b + cl + dr) | 0\r\n    this._b = (this._c + dl + er) | 0\r\n    this._c = (this._d + el + ar) | 0\r\n    this._d = (this._e + al + br) | 0\r\n    this._e = (this._a + bl + cr) | 0\r\n    this._a = t\r\n  }\r\n\r\n  private _digest = () => {\r\n    // create padding and handle blocks\r\n    this._block[this._blockOffset++] = 0x80\r\n    if (this._blockOffset > 56) {\r\n      this._block.fill(0, this._blockOffset, 64)\r\n      this._update()\r\n      this._blockOffset = 0\r\n    }\r\n\r\n    this._block.fill(0, this._blockOffset, 56)\r\n    const temp = new DataView(this._block.buffer)\r\n    temp.setUint32(56, this._length[0], true)\r\n    temp.setUint32(60, this._length[1], true)\r\n    this._block = new Uint8Array(temp.buffer)\r\n    this._update()\r\n\r\n    // produce result\r\n    const buffer = new DataView(new Uint8Array(20).buffer)\r\n    buffer.setInt32(0, this._a, true)\r\n    buffer.setInt32(4, this._b, true)\r\n    buffer.setInt32(8, this._c, true)\r\n    buffer.setInt32(12, this._d, true)\r\n    buffer.setInt32(16, this._e, true)\r\n\r\n    return new Uint8Array(buffer.buffer)\r\n  }\r\n}\r\n","import { hash } from '@stablelib/sha256'\r\nimport { Ripemd160 } from './blockchains/utils/ripemd160'\r\nimport * as u8a from 'uint8arrays'\r\nimport sha3 from 'js-sha3'\r\n\r\nexport function sha256(payload: string | Uint8Array): Uint8Array {\r\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload\r\n  return hash(data)\r\n}\r\n\r\nexport function keccak(data: Uint8Array): Uint8Array {\r\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data))\r\n}\r\n\r\nexport function toEthereumAddress(hexPublicKey: string): string {\r\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16')\r\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`\r\n}\r\n\r\nexport function ripemd160(data: Uint8Array): Uint8Array {\r\n  return new Ripemd160().update(data).digest()\r\n}\r\n\r\nfunction writeUint32BE(value: number, array = new Uint8Array(4)): Uint8Array {\r\n  const encoded = u8a.fromString(value.toString(), 'base10')\r\n  array.set(encoded, 4 - encoded.length)\r\n  return array\r\n}\r\n\r\nconst lengthAndInput = (input: Uint8Array): Uint8Array => u8a.concat([writeUint32BE(input.length), input])\r\n\r\n// This implementation of concatKDF was inspired by these two implementations:\r\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\r\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\r\nexport function concatKDF(\r\n  secret: Uint8Array,\r\n  keyLen: number,\r\n  alg: string,\r\n  producerInfo?: Uint8Array,\r\n  consumerInfo?: Uint8Array\r\n): Uint8Array {\r\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`)\r\n  const value = u8a.concat([\r\n    lengthAndInput(u8a.fromString(alg)),\r\n    lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), // apu\r\n    lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), // apv\r\n    writeUint32BE(keyLen),\r\n  ])\r\n\r\n  // since our key lenght is 256 we only have to do one round\r\n  const roundNumber = 1\r\n  return sha256(u8a.concat([writeUint32BE(roundNumber), secret, value]))\r\n}\r\n","import { leftpad } from '../util'\r\nimport { toJose } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { sha256 } from '../Digest'\r\nimport elliptic from 'elliptic'\r\n\r\nconst secp256k1 = new elliptic.ec('secp256k1')\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array`\r\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function ES256KSigner(privateKey: Uint8Array, recoverable = false): Signer {\r\n  const privateKeyBytes: Uint8Array = privateKey\r\n  if (privateKeyBytes.length !== 32) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  const keyPair: elliptic.ec.KeyPair = secp256k1.keyFromPrivate(privateKeyBytes)\r\n\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const { r, s, recoveryParam }: elliptic.ec.Signature = keyPair.sign(sha256(data))\r\n    return toJose(\r\n      {\r\n        r: leftpad(r.toString('hex')),\r\n        s: leftpad(s.toString('hex')),\r\n        recoveryParam,\r\n      },\r\n      recoverable\r\n    )\r\n  }\r\n}\r\n","import { fromJose, hexToBytes } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { ES256KSigner } from './ES256KSigner'\r\n\r\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The SimpleSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\r\n *  signer(data, (err, signature) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\r\nfunction SimpleSigner(hexPrivateKey: string): Signer {\r\n  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true)\r\n  return async (data) => {\r\n    const signature = (await signer(data)) as string\r\n    return fromJose(signature)\r\n  }\r\n}\r\n\r\nexport default SimpleSigner\r\n","import { hexToBytes } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { ES256KSigner } from './ES256KSigner'\r\n\r\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The EllipticSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                        a configured signer function\r\n */\r\nfunction EllipticSigner(hexPrivateKey: string): Signer {\r\n  return ES256KSigner(hexToBytes(hexPrivateKey))\r\n}\r\n\r\nexport default EllipticSigner\r\n","import { sign } from '@stablelib/ed25519'\r\nimport { Signer } from '../JWT'\r\nimport { bytesToBase64url, stringToBytes } from '../util'\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`\r\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function EdDSASigner(secretKey: Uint8Array): Signer {\r\n  const privateKeyBytes: Uint8Array = secretKey\r\n  if (privateKeyBytes.length !== 64) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data\r\n    const sig: Uint8Array = sign(privateKeyBytes, dataBytes)\r\n    return bytesToBase64url(sig)\r\n  }\r\n}\r\n","import { EdDSASigner as EdDSASigner } from './EdDSASigner'\r\nimport { Signer } from '../JWT'\r\nimport { base64ToBytes } from '../util'\r\n\r\n/**\r\n * @deprecated Please use EdDSASigner\r\n *\r\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\r\n *\r\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\r\n *\r\n *  @example\r\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\r\n *  const data: string = '...'\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\r\n\r\nfunction NaclSigner(base64PrivateKey: string): Signer {\r\n  return EdDSASigner(base64ToBytes(base64PrivateKey))\r\n}\r\n\r\nexport default NaclSigner\r\n","import { leftpad } from '../util'\r\nimport { toJose } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { sha256 } from '../Digest'\r\nimport elliptic from 'elliptic'\r\n\r\nconst secp256r1 = new elliptic.ec('p256')\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array`\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function ES256Signer(privateKey: Uint8Array): Signer {\r\n  const privateKeyBytes: Uint8Array = privateKey\r\n  if (privateKeyBytes.length !== 32) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  const keyPair: elliptic.ec.KeyPair = secp256r1.keyFromPrivate(privateKeyBytes)\r\n\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const { r, s }: elliptic.ec.Signature = keyPair.sign(sha256(data))\r\n    return toJose({\r\n      r: leftpad(r.toString('hex')),\r\n      s: leftpad(s.toString('hex')),\r\n    })\r\n  }\r\n}\r\n","import { Signer, SignerAlgorithm } from './JWT'\r\nimport { EcdsaSignature, fromJose, toJose } from './util'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction instanceOfEcdsaSignature(object: any): object is EcdsaSignature {\r\n  return typeof object === 'object' && 'r' in object && 's' in object\r\n}\r\n\r\nexport function ES256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (instanceOfEcdsaSignature(signature)) {\r\n      return toJose(signature)\r\n    } else {\r\n      return signature\r\n    }\r\n  }\r\n}\r\n\r\nexport function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (instanceOfEcdsaSignature(signature)) {\r\n      return toJose(signature, recoverable)\r\n    } else {\r\n      if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\r\n        throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`)\r\n      }\r\n      return signature\r\n    }\r\n  }\r\n}\r\n\r\nexport function Ed25519SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (!instanceOfEcdsaSignature(signature)) {\r\n      return signature\r\n    } else {\r\n      throw new Error('invalid_config: expected a signer function that returns a string instead of signature object')\r\n    }\r\n  }\r\n}\r\n\r\nexport function RS256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    return signature as string\r\n  }\r\n}\r\n\r\nexport function PS256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    return signature as string\r\n  }\r\n}\r\n\r\ninterface SignerAlgorithms {\r\n  [alg: string]: SignerAlgorithm\r\n}\r\n\r\nconst algorithms: SignerAlgorithms = {\r\n  ES256: ES256SignerAlg(),\r\n  ES256K: ES256KSignerAlg(),\r\n  // This is a non-standard algorithm but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\r\n  'ES256K-R': ES256KSignerAlg(true),\r\n  // This is actually incorrect but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\r\n  Ed25519: Ed25519SignerAlg(),\r\n  EdDSA: Ed25519SignerAlg(),\r\n  RS256: RS256SignerAlg(),\r\n  PS256: PS256SignerAlg(),\r\n}\r\n\r\nfunction SignerAlg(alg: string): SignerAlgorithm {\r\n  const impl: SignerAlgorithm = algorithms[alg]\r\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\r\n  return impl\r\n}\r\n\r\nexport default SignerAlg\r\n","import * as u8a from 'uint8arrays'\r\nimport { bytesToBase58, base58ToBytes } from '../util'\r\nimport { sha256, ripemd160 } from '../Digest'\r\n\r\nexport const publicKeyToAddress = (publicKey: string, otherAddress: string): string => {\r\n  // Use the same version/prefix byte as the given address.\r\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex')\r\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex')\r\n  const publicKeyHash = ripemd160(sha256(publicKeyBuffer))\r\n  const step1 = version + u8a.toString(publicKeyHash, 'hex')\r\n  const step2 = sha256(u8a.fromString(step1, 'hex'))\r\n  const step3 = sha256(step2)\r\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8)\r\n  const step4 = step1 + checksum\r\n  return bytesToBase58(u8a.fromString(step4, 'hex'))\r\n}\r\n","import elliptic from 'elliptic'\r\nimport { bech32 } from 'bech32'\r\nimport * as u8a from 'uint8arrays'\r\nimport { sha256, ripemd160 } from '../Digest'\r\n\r\nconst EC = elliptic.ec\r\n\r\nexport const publicKeyToAddress = (publicKey: string, prefix: string): string => {\r\n  const ec = new EC('secp256k1')\r\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true)\r\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex')\r\n  const hash = ripemd160(sha256(publicKeyBuffer))\r\n  const words = bech32.toWords(hash)\r\n  return bech32.encode(prefix, words).replace(prefix, '')\r\n}\r\n","import { publicKeyToAddress as bip122 } from './bip122'\r\nimport { publicKeyToAddress as cosmos } from './cosmos'\r\nimport { toEthereumAddress } from '../Digest'\r\n\r\nexport const verifyBlockchainAccountId = (publicKey: string, blockchainAccountId: string | undefined): boolean => {\r\n  if (blockchainAccountId) {\r\n    const chain = blockchainAccountId.split(':')\r\n    switch (chain[0]) {\r\n      case 'bip122':\r\n        chain[chain.length - 1] = bip122(publicKey, chain[chain.length - 1])\r\n        break\r\n      case 'cosmos':\r\n        chain[chain.length - 1] = cosmos(publicKey, chain[1])\r\n        break\r\n      case 'eip155':\r\n        chain[chain.length - 1] = toEthereumAddress(publicKey)\r\n        break\r\n      default:\r\n        return false\r\n    }\r\n    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase()\r\n  }\r\n  return false\r\n}\r\n","import type { SignatureInput } from 'elliptic'\r\nimport elliptic from 'elliptic'\r\nimport { sha256, toEthereumAddress } from './Digest'\r\nimport { verify } from '@stablelib/ed25519'\r\nimport type { VerificationMethod } from 'did-resolver'\r\nimport { bases } from 'multiformats/basics'\r\nimport { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'\r\nimport { verifyBlockchainAccountId } from './blockchains'\r\nimport { RS256SignerAlg } from \"./SignerAlgorithm\";\r\n\r\nconst secp256k1 = new elliptic.ec('secp256k1')\r\nconst secp256r1 = new elliptic.ec('p256')\r\n\r\n// converts a JOSE signature to it's components\r\nexport function toSignatureObject(signature: string, recoverable = false): EcdsaSignature {\r\n  const rawSig: Uint8Array = base64ToBytes(signature)\r\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\r\n    throw new Error('wrong signature length')\r\n  }\r\n  const r: string = bytesToHex(rawSig.slice(0, 32))\r\n  const s: string = bytesToHex(rawSig.slice(32, 64))\r\n  const sigObj: EcdsaSignature = { r, s }\r\n  if (recoverable) {\r\n    sigObj.recoveryParam = rawSig[64]\r\n  }\r\n  return sigObj\r\n}\r\n\r\ninterface LegacyVerificationMethod extends VerificationMethod {\r\n  publicKeyBase64: string\r\n}\r\n\r\nfunction extractPublicKeyBytes(pk: VerificationMethod): Uint8Array {\r\n  if (pk.publicKeyBase58) {\r\n    return base58ToBytes(pk.publicKeyBase58)\r\n  } else if ((<LegacyVerificationMethod>pk).publicKeyBase64) {\r\n    return base64ToBytes((<LegacyVerificationMethod>pk).publicKeyBase64)\r\n  } else if (pk.publicKeyHex) {\r\n    return hexToBytes(pk.publicKeyHex)\r\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\r\n    return hexToBytes(\r\n      secp256k1\r\n        .keyFromPublic({\r\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\r\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\r\n        })\r\n        .getPublic('hex')\r\n    )\r\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\r\n    return hexToBytes(\r\n      secp256r1\r\n        .keyFromPublic({\r\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\r\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\r\n        })\r\n        .getPublic('hex')\r\n    )\r\n  } else if (\r\n    pk.publicKeyJwk &&\r\n    pk.publicKeyJwk.kty === 'OKP' &&\r\n    pk.publicKeyJwk.crv === 'Ed25519' &&\r\n    pk.publicKeyJwk.x\r\n  ) {\r\n    return base64ToBytes(pk.publicKeyJwk.x)\r\n  } else if (pk.publicKeyMultibase) {\r\n    const { base16, base58btc, base64, base64url } = bases\r\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)))\r\n    return baseDecoder.decode(pk.publicKeyMultibase)\r\n  }\r\n  return new Uint8Array()\r\n}\r\n\r\nexport function verifyES256(data: string, signature: string, authenticators: VerificationMethod[]): VerificationMethod {\r\n  const hash: Uint8Array = sha256(data)\r\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\r\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\r\n  })\r\n\r\n  const signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\r\n    try {\r\n      const pubBytes = extractPublicKeyBytes(pk)\r\n      return secp256r1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  })\r\n\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\nexport function verifyES256K(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  const hash: Uint8Array = sha256(data)\r\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\r\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\r\n  })\r\n  const blockchainAddressKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined'\r\n  })\r\n\r\n  let signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\r\n    try {\r\n      const pubBytes = extractPublicKeyBytes(pk)\r\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  })\r\n\r\n  if (!signer && blockchainAddressKeys.length > 0) {\r\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys)\r\n  }\r\n\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\nexport function verifyRecoverableES256K(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  let signatures: EcdsaSignature[]\r\n  if (signature.length > 86) {\r\n    signatures = [toSignatureObject(signature, true)]\r\n  } else {\r\n    const so = toSignatureObject(signature, false)\r\n    signatures = [\r\n      { ...so, recoveryParam: 0 },\r\n      { ...so, recoveryParam: 1 },\r\n    ]\r\n  }\r\n\r\n  const checkSignatureAgainstSigner = (sigObj: EcdsaSignature): VerificationMethod | undefined => {\r\n    const hash: Uint8Array = sha256(data)\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const recoveredKey: any = secp256k1.recoverPubKey(hash, <SignatureInput>sigObj, <number>sigObj.recoveryParam)\r\n    const recoveredPublicKeyHex: string = recoveredKey.encode('hex')\r\n    const recoveredCompressedPublicKeyHex: string = recoveredKey.encode('hex', true)\r\n    const recoveredAddress: string = toEthereumAddress(recoveredPublicKeyHex).toLowerCase()\r\n\r\n    const signer: VerificationMethod | undefined = authenticators.find((pk: VerificationMethod) => {\r\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk))\r\n      return (\r\n        keyHex === recoveredPublicKeyHex ||\r\n        keyHex === recoveredCompressedPublicKeyHex ||\r\n        pk.ethereumAddress?.toLowerCase() === recoveredAddress ||\r\n        pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2\r\n        verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\r\n      )\r\n    })\r\n\r\n    return signer\r\n  }\r\n\r\n  const signer: VerificationMethod[] = signatures\r\n    .map(checkSignatureAgainstSigner)\r\n    .filter((key) => typeof key !== 'undefined') as VerificationMethod[]\r\n\r\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer[0]\r\n}\r\n\r\nexport function verifyEd25519(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  const clear: Uint8Array = stringToBytes(data)\r\n  const sig: Uint8Array = base64ToBytes(signature)\r\n  const signer = authenticators.find((pk: VerificationMethod) => {\r\n    return verify(extractPublicKeyBytes(pk), clear, sig)\r\n  })\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\ntype Verifier = (data: string, signature: string, authenticators: VerificationMethod[]) => VerificationMethod\r\ninterface Algorithms {\r\n  [name: string]: Verifier\r\n}\r\nconst algorithms: Algorithms = {\r\n  ES256: verifyES256,\r\n  ES256K: verifyES256K,\r\n  // This is a non-standard algorithm but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\r\n  'ES256K-R': verifyRecoverableES256K,\r\n  // This is actually incorrect but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\r\n  Ed25519: verifyEd25519,\r\n  EdDSA: verifyEd25519,\r\n}\r\n\r\nfunction VerifierAlgorithm(alg: string): Verifier {\r\n  const impl: Verifier = algorithms[alg]\r\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\r\n  return impl\r\n}\r\n\r\nVerifierAlgorithm.toSignatureObject = toSignatureObject\r\n\r\nexport default VerifierAlgorithm\r\n","/**\r\n * Error prefixes used for known verification failure cases.\r\n *\r\n * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major\r\n * version update to match the scenarios better.\r\n *\r\n * @beta\r\n */\r\nexport const JWT_ERROR = {\r\n  /**\r\n   * Thrown when a JWT payload schema is unexpected or when validity period does not match\r\n   */\r\n  INVALID_JWT: 'invalid_jwt',\r\n  /**\r\n   * Thrown when the verifier audience does not match the one set in the JWT payload\r\n   */\r\n  INVALID_AUDIENCE: 'invalid_config',\r\n  /**\r\n   * Thrown when none of the public keys of the issuer match the signature of the JWT.\r\n   *\r\n   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.\r\n   */\r\n  INVALID_SIGNATURE: 'invalid_signature',\r\n  /**\r\n   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given\r\n   * `proofPurpose`.\r\n   *\r\n   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.\r\n   */\r\n  NO_SUITABLE_KEYS: 'no_suitable_keys',\r\n  /**\r\n   * Thrown when the `alg` of the JWT or the encoding of the key is not supported\r\n   */\r\n  NOT_SUPPORTED: 'not_supported',\r\n  /**\r\n   * Thrown when the DID resolver is unable to resolve the issuer DID.\r\n   */\r\n  RESOLVER_ERROR: 'resolver_error',\r\n}\r\n","import canonicalizeData from 'canonicalize'\r\nimport type { DIDDocument, DIDResolutionResult, Resolvable, VerificationMethod } from 'did-resolver'\r\nimport SignerAlg from './SignerAlgorithm'\r\nimport { decodeBase64url, EcdsaSignature, encodeBase64url } from './util'\r\nimport VerifierAlgorithm from './VerifierAlgorithm'\r\nimport { JWT_ERROR } from './Errors'\r\n\r\nexport type Signer = (data: string | Uint8Array) => Promise<EcdsaSignature | string>\r\nexport type SignerAlgorithm = (payload: string, signer: Signer) => Promise<string>\r\n\r\nexport type ProofPurposeTypes =\r\n  | 'assertionMethod'\r\n  | 'authentication'\r\n  // | 'keyAgreement' // keyAgreement VerificationMethod should not be used for signing\r\n  | 'capabilityDelegation'\r\n  | 'capabilityInvocation'\r\n\r\nexport interface JWTOptions {\r\n  issuer: string\r\n  signer: Signer\r\n  /**\r\n   * @deprecated Please use `header.alg` to specify the JWT algorithm.\r\n   */\r\n  alg?: string\r\n  expiresIn?: number\r\n  canonicalize?: boolean\r\n}\r\n\r\nexport interface JWTVerifyOptions {\r\n  /** @deprecated Please use `proofPurpose: 'authentication' instead` */\r\n  auth?: boolean\r\n  audience?: string\r\n  callbackUrl?: string\r\n  resolver?: Resolvable\r\n  skewTime?: number\r\n  /** See https://www.w3.org/TR/did-spec-registries/#verification-relationships */\r\n  proofPurpose?: ProofPurposeTypes\r\n  policies?: JWTVerifyPolicies\r\n}\r\n\r\n/**\r\n * Overrides the different types of checks performed on the JWT besides the signature check\r\n */\r\nexport interface JWTVerifyPolicies {\r\n  // overrides the timestamp against which the validity interval is checked\r\n  now?: number\r\n  // when set to false, the timestamp checks ignore the Not Before(`nbf`) property\r\n  nbf?: boolean\r\n  // when set to false, the timestamp checks ignore the Issued At(`iat`) property\r\n  iat?: boolean\r\n  // when set to false, the timestamp checks ignore the Expires At(`exp`) property\r\n  exp?: boolean\r\n  // when set to false, the JWT audience check is skipped\r\n  aud?: boolean\r\n}\r\n\r\nexport interface JWSCreationOptions {\r\n  canonicalize?: boolean\r\n}\r\n\r\nexport interface DIDAuthenticator {\r\n  authenticators: VerificationMethod[]\r\n  issuer: string\r\n  didResolutionResult: DIDResolutionResult\r\n}\r\n\r\nexport interface JWTHeader {\r\n  typ: 'JWT'\r\n  alg: string\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [x: string]: any\r\n}\r\n\r\nexport interface JWTPayload {\r\n  iss?: string\r\n  sub?: string\r\n  aud?: string | string[]\r\n  iat?: number\r\n  nbf?: number\r\n  exp?: number\r\n  rexp?: number\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [x: string]: any\r\n}\r\n\r\nexport interface JWTDecoded {\r\n  header: JWTHeader\r\n  payload: JWTPayload\r\n  signature: string\r\n  data: string\r\n}\r\n\r\nexport interface JWSDecoded {\r\n  header: JWTHeader\r\n  payload: string\r\n  signature: string\r\n  data: string\r\n}\r\n\r\n/**\r\n * Result object returned by {@link verifyJWT}\r\n */\r\nexport interface JWTVerified {\r\n  /**\r\n   * Set to true for a JWT that passes all the required checks minus any verification overrides.\r\n   */\r\n  verified: true\r\n\r\n  /**\r\n   * The decoded JWT payload\r\n   */\r\n  payload: Partial<JWTPayload>\r\n\r\n  /**\r\n   * The result of resolving the issuer DID\r\n   */\r\n  didResolutionResult: DIDResolutionResult\r\n\r\n  /**\r\n   * the issuer DID\r\n   */\r\n  issuer: string\r\n\r\n  /**\r\n   * The public key of the issuer that matches the JWT signature\r\n   */\r\n  signer: VerificationMethod\r\n\r\n  /**\r\n   * The original JWT that was verified\r\n   */\r\n  jwt: string\r\n\r\n  /**\r\n   * Any overrides that were used during verification\r\n   */\r\n  policies?: JWTVerifyPolicies\r\n}\r\n\r\nexport interface PublicKeyTypes {\r\n  [name: string]: string[]\r\n}\r\n\r\nexport const SUPPORTED_PUBLIC_KEY_TYPES: PublicKeyTypes = {\r\n  ES256: ['JsonWebKey2020'],\r\n  ES256K: [\r\n    'EcdsaSecp256k1VerificationKey2019',\r\n    /**\r\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n     */\r\n    'EcdsaSecp256k1RecoveryMethod2020',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1VerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1SignatureVerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'EcdsaPublicKeySecp256k1',\r\n    'JsonWebKey2020',\r\n  ],\r\n  'ES256K-R': [\r\n    'EcdsaSecp256k1VerificationKey2019',\r\n    /**\r\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n     */\r\n    'EcdsaSecp256k1RecoveryMethod2020',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1VerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1SignatureVerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'EcdsaPublicKeySecp256k1',\r\n    'JsonWebKey2020',\r\n  ],\r\n  Ed25519: [\r\n    'ED25519SignatureVerification',\r\n    'Ed25519VerificationKey2018',\r\n    'Ed25519VerificationKey2020',\r\n    'JsonWebKey2020',\r\n  ],\r\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],\r\n}\r\n\r\nexport const SELF_ISSUED_V2 = 'https://self-issued.me/v2'\r\nexport const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc' // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation\r\nexport const SELF_ISSUED_V0_1 = 'https://self-issued.me'\r\n\r\ntype LegacyVerificationMethod = { publicKey?: string }\r\n\r\nconst defaultAlg = 'ES256K'\r\nconst DID_JSON = 'application/did+json'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction encodeSection(data: any, shouldCanonicalize = false): string {\r\n  if (shouldCanonicalize) {\r\n    return encodeBase64url(<string>canonicalizeData(data))\r\n  } else {\r\n    return encodeBase64url(JSON.stringify(data))\r\n  }\r\n}\r\n\r\nexport const NBF_SKEW = 300\r\n\r\nfunction decodeJWS(jws: string): JWSDecoded {\r\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/)\r\n  if (parts) {\r\n    return {\r\n      header: JSON.parse(decodeBase64url(parts[1])),\r\n      payload: parts[2],\r\n      signature: parts[3],\r\n      data: `${parts[1]}.${parts[2]}`,\r\n    }\r\n  }\r\n  throw new Error('invalid_argument: Incorrect format JWS')\r\n}\r\n\r\n/**  @module did-jwt/JWT */\r\n\r\n/**\r\n *  Decodes a JWT and returns an object representing the payload\r\n *\r\n *  @example\r\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @return   {Object}                               a JS object representing the decoded JWT\r\n */\r\nexport function decodeJWT(jwt: string): JWTDecoded {\r\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT')\r\n  try {\r\n    const jws = decodeJWS(jwt)\r\n    const decodedJwt: JWTDecoded = Object.assign(jws, { payload: JSON.parse(decodeBase64url(jws.payload)) })\r\n    return decodedJwt\r\n  } catch (e) {\r\n    throw new Error('invalid_argument: Incorrect format JWT')\r\n  }\r\n}\r\n\r\n/**\r\n *  Creates a signed JWS given a payload, a signer, and an optional header.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const jws = await createJWS({ my: 'payload' }, signer)\r\n *\r\n *  @param    {Object}            payload           payload object\r\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\r\n *  @param    {Object}            header            optional object to specify or customize the JWS header\r\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\r\n *                                                    payload properties\r\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\r\n */\r\nexport async function createJWS(\r\n  payload: string | Partial<JWTPayload>,\r\n  signer: Signer,\r\n  header: Partial<JWTHeader> = {},\r\n  options: JWSCreationOptions = {}\r\n): Promise<string> {\r\n  if (!header.alg) header.alg = defaultAlg\r\n  const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize)\r\n  const signingInput: string = [encodeSection(header, options.canonicalize), encodedPayload].join('.')\r\n\r\n  const jwtSigner: SignerAlgorithm = SignerAlg(header.alg)\r\n  const signature: string = await jwtSigner(signingInput, signer)\r\n  return [signingInput, signature].join('.')\r\n}\r\n\r\n/**\r\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is\r\n * over.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\r\n *      ...\r\n *  })\r\n *\r\n *  @param    {Object}            payload               payload object\r\n *  @param    {Object}            [options]             an unsigned credential object\r\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\r\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:\r\n *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm\r\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\r\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\r\n *  @param    {Object}            header                optional object to specify or customize the JWT header\r\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or\r\n *   rejects with an error\r\n */\r\nexport async function createJWT(\r\n  payload: Partial<JWTPayload>,\r\n  { issuer, signer, alg, expiresIn, canonicalize }: JWTOptions,\r\n  header: Partial<JWTHeader> = {}\r\n): Promise<string> {\r\n  if (!signer) throw new Error('missing_signer: No Signer functionality has been configured')\r\n  if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured')\r\n  if (!header.typ) header.typ = 'JWT'\r\n  if (!header.alg) header.alg = alg\r\n  const timestamps: Partial<JWTPayload> = {\r\n    iat: Math.floor(Date.now() / 1000),\r\n    exp: undefined,\r\n  }\r\n  if (expiresIn) {\r\n    if (typeof expiresIn === 'number') {\r\n      timestamps.exp = <number>(payload.nbf || timestamps.iat) + Math.floor(expiresIn)\r\n    } else {\r\n      throw new Error('invalid_argument: JWT expiresIn is not a number')\r\n    }\r\n  }\r\n  const fullPayload = { ...timestamps, ...payload, iss: issuer }\r\n  return createJWS(fullPayload, signer, header, { canonicalize })\r\n}\r\n\r\nfunction verifyJWSDecoded(\r\n  { header, data, signature }: JWSDecoded,\r\n  pubKeys: VerificationMethod | VerificationMethod[]\r\n): VerificationMethod {\r\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys]\r\n  const signer: VerificationMethod = VerifierAlgorithm(header.alg)(data, signature, pubKeys)\r\n  return signer\r\n}\r\n\r\n/**\r\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\r\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\r\n *\r\n *  @example\r\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\r\n *\r\n *  @param    {String}                          jws         A JWS string to verify\r\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\r\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\r\n */\r\nexport function verifyJWS(jws: string, pubKeys: VerificationMethod | VerificationMethod[]): VerificationMethod {\r\n  const jwsDecoded: JWSDecoded = decodeJWS(jws)\r\n  return verifyJWSDecoded(jwsDecoded, pubKeys)\r\n}\r\n\r\n/**\r\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\r\n *  and the DID document of the issuer of the JWT.\r\n *\r\n *  @example\r\n *  ```ts\r\n *  verifyJWT(\r\n *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',\r\n *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}\r\n *    ).then(obj => {\r\n *        const did = obj.did // DID of signer\r\n *        const payload = obj.payload\r\n *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer\r\n *        const jwt = obj.jwt\r\n *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT\r\n *        ...\r\n *    })\r\n *  ```\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @param    {Object}            [options]           an unsigned credential object\r\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the\r\n *   DID document (for Authentication purposes)\r\n *  @param    {String}            options.audience    DID of the recipient of the JWT\r\n *  @param    {String}            options.callbackUrl callback url in JWT\r\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an\r\n *   error\r\n */\r\nexport async function verifyJWT(\r\n  jwt: string,\r\n  options: JWTVerifyOptions = {\r\n    resolver: undefined,\r\n    auth: undefined,\r\n    audience: undefined,\r\n    callbackUrl: undefined,\r\n    skewTime: undefined,\r\n    proofPurpose: undefined,\r\n    policies: {},\r\n  }\r\n): Promise<JWTVerified> {\r\n  if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured')\r\n  const { payload, header, signature, data }: JWTDecoded = decodeJWT(jwt)\r\n  const proofPurpose: ProofPurposeTypes | undefined = Object.prototype.hasOwnProperty.call(options, 'auth')\r\n    ? options.auth\r\n      ? 'authentication'\r\n      : undefined\r\n    : options.proofPurpose\r\n\r\n  let did\r\n\r\n  if (!payload.iss && !payload.client_id) {\r\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`)\r\n  }\r\n\r\n  if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {\r\n    if (!payload.sub) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`)\r\n    }\r\n    if (typeof payload.sub_jwk === 'undefined') {\r\n      did = payload.sub\r\n    } else {\r\n      did = (header.kid || '').split('#')[0]\r\n    }\r\n  } else if (payload.iss === SELF_ISSUED_V0_1) {\r\n    if (!payload.did) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`)\r\n    }\r\n    did = payload.did\r\n  } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {\r\n    // SIOP Request payload\r\n    // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object\r\n    if (!payload.client_id) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`)\r\n    }\r\n    did = payload.client_id\r\n  } else {\r\n    did = payload.iss\r\n  }\r\n\r\n  if (!did) {\r\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`)\r\n  }\r\n\r\n  const { didResolutionResult, authenticators, issuer }: DIDAuthenticator = await resolveAuthenticator(\r\n    options.resolver,\r\n    header.alg,\r\n    did,\r\n    proofPurpose\r\n  )\r\n  const signer: VerificationMethod = await verifyJWSDecoded({ header, data, signature } as JWSDecoded, authenticators)\r\n  const now: number = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000)\r\n  const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW\r\n  if (signer) {\r\n    const nowSkewed = now + skewTime\r\n    if (options.policies?.nbf !== false && payload.nbf) {\r\n      if (payload.nbf > nowSkewed) {\r\n        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`)\r\n      }\r\n    } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`)\r\n    }\r\n    if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`)\r\n    }\r\n    if (options.policies?.aud !== false && payload.aud) {\r\n      if (!options.audience && !options.callbackUrl) {\r\n        throw new Error(\r\n          `${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`\r\n        )\r\n      }\r\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\r\n      const matchedAudience = audArray.find((item) => options.audience === item || options.callbackUrl === item)\r\n\r\n      if (typeof matchedAudience === 'undefined') {\r\n        throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)\r\n      }\r\n    }\r\n    return { verified: true, payload, didResolutionResult, issuer, signer, jwt, policies: options.policies }\r\n  }\r\n  throw new Error(\r\n    `${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`\r\n  )\r\n}\r\n\r\n/**\r\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of\r\n * provided DID\r\n *\r\n *  @example\r\n *  ```ts\r\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\r\n *      const payload = obj.payload\r\n *      const profile = obj.profile\r\n *      const jwt = obj.jwt\r\n *      // ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`\r\n *  @param alg - {String} a JWT algorithm\r\n *  @param issuer - {String} a Decentralized Identifier (DID) to lookup\r\n *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the\r\n *   issuer DID document\r\n *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators\r\n *   or rejects with an error if none exist\r\n */\r\nexport async function resolveAuthenticator(\r\n  resolver: Resolvable,\r\n  alg: string,\r\n  issuer: string,\r\n  proofPurpose?: ProofPurposeTypes\r\n): Promise<DIDAuthenticator> {\r\n  const types: string[] = SUPPORTED_PUBLIC_KEY_TYPES[alg]\r\n  if (!types || types.length === 0) {\r\n    throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`)\r\n  }\r\n  let didResult: DIDResolutionResult\r\n\r\n  const result = (await resolver.resolve(issuer, { accept: DID_JSON })) as unknown\r\n  // support legacy resolvers that do not produce DIDResolutionResult\r\n  if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\r\n    didResult = {\r\n      didDocument: result as DIDDocument,\r\n      didDocumentMetadata: {},\r\n      didResolutionMetadata: { contentType: DID_JSON },\r\n    }\r\n  } else {\r\n    didResult = result as DIDResolutionResult\r\n  }\r\n\r\n  if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {\r\n    const { error, message } = didResult.didResolutionMetadata\r\n    throw new Error(\r\n      `${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`\r\n    )\r\n  }\r\n\r\n  const getPublicKeyById = (verificationMethods: VerificationMethod[], pubid?: string): VerificationMethod | null => {\r\n    const filtered = verificationMethods.filter(({ id }) => pubid === id)\r\n    return filtered.length > 0 ? filtered[0] : null\r\n  }\r\n\r\n  let publicKeysToCheck: VerificationMethod[] = [\r\n    ...(didResult?.didDocument?.verificationMethod || []),\r\n    ...(didResult?.didDocument?.publicKey || []),\r\n  ]\r\n  if (typeof proofPurpose === 'string') {\r\n    // support legacy DID Documents that do not list assertionMethod\r\n    if (\r\n      proofPurpose.startsWith('assertion') &&\r\n      !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')\r\n    ) {\r\n      didResult.didDocument = { ...(<DIDDocument>didResult.didDocument) }\r\n      didResult.didDocument.assertionMethod = [...publicKeysToCheck.map((pk) => pk.id)]\r\n    }\r\n\r\n    publicKeysToCheck = (didResult.didDocument[proofPurpose] || [])\r\n      .map((verificationMethod) => {\r\n        if (typeof verificationMethod === 'string') {\r\n          return getPublicKeyById(publicKeysToCheck, verificationMethod)\r\n        } else if (typeof (<LegacyVerificationMethod>verificationMethod).publicKey === 'string') {\r\n          // this is a legacy format\r\n          return getPublicKeyById(publicKeysToCheck, (<LegacyVerificationMethod>verificationMethod).publicKey)\r\n        } else {\r\n          return <VerificationMethod>verificationMethod\r\n        }\r\n      })\r\n      .filter((key) => key != null) as VerificationMethod[]\r\n  }\r\n\r\n  const authenticators: VerificationMethod[] = publicKeysToCheck.filter(({ type }) =>\r\n    types.find((supported) => supported === type)\r\n  )\r\n\r\n  if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\r\n    throw new Error(\r\n      `${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`\r\n    )\r\n  }\r\n  if (!authenticators || authenticators.length === 0) {\r\n    throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`)\r\n  }\r\n  return { authenticators, issuer, didResolutionResult: didResult }\r\n}\r\n","import { fromString } from 'uint8arrays'\r\nimport { base64ToBytes, bytesToBase64url, decodeBase64url, toSealed } from './util'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type ProtectedHeader = Record<string, any> & Partial<RecipientHeader>\r\n\r\n/**\r\n * The JWK representation of an ephemeral public key.\r\n * See https://www.rfc-editor.org/rfc/rfc7518.html#section-6\r\n */\r\ninterface EphemeralPublicKey {\r\n  kty?: string\r\n  //ECC\r\n  crv?: string\r\n  x?: string\r\n  y?: string\r\n  //RSA\r\n  n?: string\r\n  e?: string\r\n}\r\n\r\nexport interface RecipientHeader {\r\n  alg: string\r\n  iv: string\r\n  tag: string\r\n  epk?: EphemeralPublicKey\r\n  kid?: string\r\n  apv?: string\r\n  apu?: string\r\n}\r\n\r\nexport interface Recipient {\r\n  header: RecipientHeader\r\n  encrypted_key: string\r\n}\r\n\r\nexport interface JWE {\r\n  protected: string\r\n  iv: string\r\n  ciphertext: string\r\n  tag: string\r\n  aad?: string\r\n  recipients?: Recipient[]\r\n}\r\n\r\nexport interface EncryptionResult {\r\n  ciphertext: Uint8Array\r\n  tag: Uint8Array\r\n  iv: Uint8Array\r\n  protectedHeader?: string\r\n  recipient?: Recipient\r\n  cek?: Uint8Array\r\n}\r\n\r\nexport interface Encrypter {\r\n  alg: string\r\n  enc: string\r\n  encrypt: (cleartext: Uint8Array, protectedHeader: ProtectedHeader, aad?: Uint8Array) => Promise<EncryptionResult>\r\n  encryptCek?: (cek: Uint8Array) => Promise<Recipient>\r\n}\r\n\r\nexport interface Decrypter {\r\n  alg: string\r\n  enc: string\r\n  decrypt: (sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array, recipient?: Recipient) => Promise<Uint8Array | null>\r\n}\r\n\r\nfunction validateJWE(jwe: JWE) {\r\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\r\n    throw new Error('bad_jwe: missing properties')\r\n  }\r\n  if (jwe.recipients) {\r\n    jwe.recipients.map((rec) => {\r\n      if (!(rec.header && rec.encrypted_key)) {\r\n        throw new Error('bad_jwe: malformed recipients')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction encodeJWE({ ciphertext, tag, iv, protectedHeader, recipient }: EncryptionResult, aad?: Uint8Array): JWE {\r\n  const jwe: JWE = {\r\n    protected: <string>protectedHeader,\r\n    iv: bytesToBase64url(iv),\r\n    ciphertext: bytesToBase64url(ciphertext),\r\n    tag: bytesToBase64url(tag),\r\n  }\r\n  if (aad) jwe.aad = bytesToBase64url(aad)\r\n  if (recipient) jwe.recipients = [recipient]\r\n  return jwe\r\n}\r\n\r\nexport async function createJWE(\r\n  cleartext: Uint8Array,\r\n  encrypters: Encrypter[],\r\n  protectedHeader = {},\r\n  aad?: Uint8Array\r\n): Promise<JWE> {\r\n  if (encrypters[0].alg === 'dir') {\r\n    if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.')\r\n    const encryptionResult = await encrypters[0].encrypt(cleartext, protectedHeader, aad)\r\n    return encodeJWE(encryptionResult, aad)\r\n  } else {\r\n    const tmpEnc = encrypters[0].enc\r\n    if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\r\n      throw new Error('invalid_argument: Incompatible encrypters passed')\r\n    }\r\n    let cek\r\n    let jwe\r\n    for (const encrypter of encrypters) {\r\n      if (!cek) {\r\n        const encryptionResult = await encrypter.encrypt(cleartext, protectedHeader, aad)\r\n        cek = encryptionResult.cek\r\n        jwe = encodeJWE(encryptionResult, aad)\r\n      } else {\r\n        const recipient = await encrypter.encryptCek?.(cek)\r\n        if (recipient) {\r\n          jwe?.recipients?.push(recipient)\r\n        }\r\n      }\r\n    }\r\n    return <JWE>jwe\r\n  }\r\n}\r\n\r\nexport async function decryptJWE(jwe: JWE, decrypter: Decrypter): Promise<Uint8Array> {\r\n  validateJWE(jwe)\r\n  const protHeader = JSON.parse(decodeBase64url(jwe.protected))\r\n  if (protHeader.enc !== decrypter.enc)\r\n    throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`)\r\n  const sealed = toSealed(jwe.ciphertext, jwe.tag)\r\n  const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected)\r\n  let cleartext = null\r\n  if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\r\n    cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)\r\n  } else if (!jwe.recipients || jwe.recipients.length === 0) {\r\n    throw new Error('bad_jwe: missing recipients')\r\n  } else {\r\n    for (let i = 0; !cleartext && i < jwe.recipients.length; i++) {\r\n      const recipient = jwe.recipients[i]\r\n      Object.assign(recipient.header, protHeader)\r\n      if (recipient.header.alg === decrypter.alg) {\r\n        cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)\r\n      }\r\n    }\r\n  }\r\n  if (cleartext === null) throw new Error('failure: Failed to decrypt')\r\n  return cleartext\r\n}\r\n","import { sharedKey } from '@stablelib/x25519'\r\n\r\n/**\r\n * A wrapper around `mySecretKey` that can compute a shared secret using `theirPublicKey`.\r\n * The promise should resolve to a `Uint8Array` containing the raw shared secret.\r\n *\r\n * This method is meant to be used when direct access to a secret key is impossible or not desired.\r\n *\r\n * @param theirPublicKey `Uint8Array` the other party's public key\r\n * @returns a `Promise` that resolves to a `Uint8Array` representing the computed shared secret\r\n */\r\nexport type ECDH = (theirPublicKey: Uint8Array) => Promise<Uint8Array>\r\n\r\n/**\r\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\r\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\r\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\r\n *\r\n * @throws 'invalid_argument:...' if the secret key size is wrong\r\n */\r\nexport function createX25519ECDH(mySecretKey: Uint8Array): ECDH {\r\n  if (mySecretKey.length !== 32) {\r\n    throw new Error('invalid_argument: incorrect secret key length for X25519')\r\n  }\r\n  return async (theirPublicKey: Uint8Array): Promise<Uint8Array> => {\r\n    if (theirPublicKey.length !== 32) {\r\n      throw new Error('invalid_argument: incorrect publicKey key length for X25519')\r\n    }\r\n    return sharedKey(mySecretKey, theirPublicKey)\r\n  }\r\n}\r\n","import { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305'\r\nimport { generateKeyPair, sharedKey } from '@stablelib/x25519'\r\nimport { randomBytes } from '@stablelib/random'\r\nimport { concatKDF } from './Digest'\r\nimport { bytesToBase64url, base58ToBytes, encodeBase64url, toSealed, base64ToBytes } from './util'\r\nimport { Recipient, EncryptionResult, Encrypter, Decrypter, ProtectedHeader } from './JWE'\r\nimport type { VerificationMethod, Resolvable } from 'did-resolver'\r\nimport { ECDH } from './ECDH'\r\nimport { fromString } from 'uint8arrays/from-string'\r\n\r\n/**\r\n * Extra parameters for JWE using authenticated encryption\r\n */\r\nexport type AuthEncryptParams = {\r\n  /**\r\n   * recipient key ID\r\n   */\r\n  kid?: string\r\n\r\n  /**\r\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.2}\r\n   * base64url encoded\r\n   */\r\n  apu?: string\r\n\r\n  /**\r\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.3}\r\n   * base64url encoded\r\n   */\r\n  apv?: string\r\n}\r\n\r\n/**\r\n * Extra parameters for JWE using anonymous encryption\r\n */\r\nexport type AnonEncryptParams = {\r\n  /**\r\n   * recipient key ID\r\n   */\r\n  kid?: string\r\n}\r\n\r\n/**\r\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender private key to encrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientPublicKey the byte array representing the recipient public key\r\n * @param senderSecret either a Uint8Array representing the sender secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\r\nexport function createAuthEncrypter(\r\n  recipientPublicKey: Uint8Array,\r\n  senderSecret: Uint8Array | ECDH,\r\n  options: Partial<AuthEncryptParams> = {}\r\n): Encrypter {\r\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options)\r\n}\r\n\r\n/**\r\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\r\n *\r\n * @param publicKey the byte array representing the recipient public key\r\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\r\nexport function createAnonEncrypter(publicKey: Uint8Array, options: Partial<AnonEncryptParams> = {}): Encrypter {\r\n  return x25519Encrypter(publicKey, options?.kid)\r\n}\r\n\r\n/**\r\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender public key to decrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param senderPublicKey the byte array representing the sender public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\r\nexport function createAuthDecrypter(recipientSecret: Uint8Array | ECDH, senderPublicKey: Uint8Array): Decrypter {\r\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey)\r\n}\r\n\r\n/**\r\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\r\nexport function createAnonDecrypter(recipientSecret: Uint8Array | ECDH): Decrypter {\r\n  return x25519Decrypter(recipientSecret)\r\n}\r\n\r\nfunction xc20pEncrypter(key: Uint8Array): (cleartext: Uint8Array, aad?: Uint8Array) => EncryptionResult {\r\n  const cipher = new XChaCha20Poly1305(key)\r\n  return (cleartext: Uint8Array, aad?: Uint8Array) => {\r\n    const iv = randomBytes(cipher.nonceLength)\r\n    const sealed = cipher.seal(iv, cleartext, aad)\r\n    return {\r\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\r\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\r\n      iv,\r\n    }\r\n  }\r\n}\r\n\r\nexport function xc20pDirEncrypter(key: Uint8Array): Encrypter {\r\n  const xc20pEncrypt = xc20pEncrypter(key)\r\n  const enc = 'XC20P'\r\n  const alg = 'dir'\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    const protHeader = encodeBase64url(JSON.stringify(Object.assign({ alg }, protectedHeader, { enc })))\r\n    const encodedAad = fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader)\r\n    return {\r\n      ...xc20pEncrypt(cleartext, encodedAad),\r\n      protectedHeader: protHeader,\r\n    }\r\n  }\r\n  return { alg, enc, encrypt }\r\n}\r\n\r\nexport function xc20pDirDecrypter(key: Uint8Array): Decrypter {\r\n  const cipher = new XChaCha20Poly1305(key)\r\n  async function decrypt(sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array): Promise<Uint8Array | null> {\r\n    return cipher.open(iv, sealed, aad)\r\n  }\r\n  return { alg: 'dir', enc: 'XC20P', decrypt }\r\n}\r\n\r\nexport function x25519Encrypter(publicKey: Uint8Array, kid?: string): Encrypter {\r\n  const alg = 'ECDH-ES+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\r\n    const epk = generateKeyPair()\r\n    const sharedSecret = sharedKey(epk.secretKey, publicKey)\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg)\r\n    const res = xc20pEncrypter(kek)(cek)\r\n    const recipient: Recipient = {\r\n      encrypted_key: bytesToBase64url(res.ciphertext),\r\n      header: {\r\n        alg,\r\n        iv: bytesToBase64url(res.iv),\r\n        tag: bytesToBase64url(res.tag),\r\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\r\n      },\r\n    }\r\n    if (kid) recipient.header.kid = kid\r\n    return recipient\r\n  }\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    // we won't want alg to be set to dir from xc20pDirEncrypter\r\n    Object.assign(protectedHeader, { alg: undefined })\r\n    // Content Encryption Key\r\n    const cek = randomBytes(32)\r\n    return {\r\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\r\n      recipient: await encryptCek(cek),\r\n      cek,\r\n    }\r\n  }\r\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\r\n}\r\n\r\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\r\nexport function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(\r\n  recipientPublicKey: Uint8Array,\r\n  senderSecret: Uint8Array | ECDH,\r\n  options: Partial<AuthEncryptParams> = {}\r\n): Encrypter {\r\n  const alg = 'ECDH-1PU+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n\r\n  let partyUInfo: Uint8Array\r\n  let partyVInfo: Uint8Array\r\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu)\r\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv)\r\n\r\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\r\n    const epk = generateKeyPair()\r\n    const zE = sharedKey(epk.secretKey, recipientPublicKey)\r\n\r\n    // ECDH-1PU requires additional shared secret between\r\n    // static key of sender and static key of recipient\r\n    let zS\r\n    if (senderSecret instanceof Uint8Array) {\r\n      zS = sharedKey(senderSecret, recipientPublicKey)\r\n    } else {\r\n      zS = await senderSecret(recipientPublicKey)\r\n    }\r\n\r\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\r\n    sharedSecret.set(zE)\r\n    sharedSecret.set(zS, zE.length)\r\n\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo)\r\n\r\n    const res = xc20pEncrypter(kek)(cek)\r\n    const recipient: Recipient = {\r\n      encrypted_key: bytesToBase64url(res.ciphertext),\r\n      header: {\r\n        alg,\r\n        iv: bytesToBase64url(res.iv),\r\n        tag: bytesToBase64url(res.tag),\r\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\r\n      },\r\n    }\r\n    if (options.kid) recipient.header.kid = options.kid\r\n    if (options.apu) recipient.header.apu = options.apu\r\n    if (options.apv) recipient.header.apv = options.apv\r\n\r\n    return recipient\r\n  }\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    // we won't want alg to be set to dir from xc20pDirEncrypter\r\n    Object.assign(protectedHeader, { alg: undefined })\r\n    // Content Encryption Key\r\n    const cek = randomBytes(32)\r\n    return {\r\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\r\n      recipient: await encryptCek(cek),\r\n      cek,\r\n    }\r\n  }\r\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\r\n}\r\n\r\nexport async function resolveX25519Encrypters(dids: string[], resolver: Resolvable): Promise<Encrypter[]> {\r\n  const encryptersForDID = async (did: string, resolved: string[] = []): Promise<Encrypter[]> => {\r\n    const { didResolutionMetadata, didDocument } = await resolver.resolve(did)\r\n    resolved.push(did)\r\n    if (didResolutionMetadata?.error || didDocument == null) {\r\n      throw new Error(\r\n        `resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`\r\n      )\r\n    }\r\n    let controllerEncrypters: Encrypter[] = []\r\n    if (!didDocument.controller && !didDocument.keyAgreement) {\r\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\r\n    }\r\n    if (didDocument.controller) {\r\n      let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller]\r\n      controllers = controllers.filter((c) => !resolved.includes(c))\r\n      const encrypterPromises = controllers.map((did) =>\r\n        encryptersForDID(did, resolved).catch(() => {\r\n          return []\r\n        })\r\n      )\r\n      const encrypterArrays = await Promise.all(encrypterPromises)\r\n      controllerEncrypters = ([] as Encrypter[]).concat(...encrypterArrays)\r\n    }\r\n    const agreementKeys: VerificationMethod[] = didDocument.keyAgreement\r\n      ?.map((key) => {\r\n        if (typeof key === 'string') {\r\n          return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(\r\n            (pk) => pk.id === key\r\n          )\r\n        }\r\n        return key\r\n      })\r\n      ?.filter((key) => typeof key !== 'undefined') as VerificationMethod[]\r\n    const pks =\r\n      agreementKeys?.filter((key) => {\r\n        // TODO: should be able to use non base58 keys too\r\n        return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58)\r\n      }) || []\r\n    if (!pks.length && !controllerEncrypters.length)\r\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\r\n    return pks\r\n      .map((pk) => x25519Encrypter(base58ToBytes(<string>pk.publicKeyBase58), pk.id))\r\n      .concat(...controllerEncrypters)\r\n  }\r\n\r\n  const encrypterPromises = dids.map((did) => encryptersForDID(did))\r\n  const encrypterArrays = await Promise.all(encrypterPromises)\r\n  const flattenedArray = ([] as Encrypter[]).concat(...encrypterArrays)\r\n  return flattenedArray\r\n}\r\n\r\nfunction validateHeader(header?: ProtectedHeader) {\r\n  if (!(header && header.epk && header.iv && header.tag)) {\r\n    throw new Error('bad_jwe: malformed header')\r\n  }\r\n}\r\n\r\nexport function x25519Decrypter(receiverSecret: Uint8Array | ECDH): Decrypter {\r\n  const alg = 'ECDH-ES+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function decrypt(\r\n    sealed: Uint8Array,\r\n    iv: Uint8Array,\r\n    aad?: Uint8Array,\r\n    recipient?: Recipient\r\n  ): Promise<Uint8Array | null> {\r\n    validateHeader(recipient?.header)\r\n    recipient = <Recipient>recipient\r\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\r\n    const publicKey = base64ToBytes(recipient.header.epk.x)\r\n    let sharedSecret\r\n    if (receiverSecret instanceof Uint8Array) {\r\n      sharedSecret = sharedKey(receiverSecret, publicKey)\r\n    } else {\r\n      sharedSecret = await receiverSecret(publicKey)\r\n    }\r\n\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg)\r\n    // Content Encryption Key\r\n    const sealedCek = toSealed(<string>recipient.encrypted_key, recipient.header.tag)\r\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\r\n    if (cek === null) return null\r\n\r\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\r\n  }\r\n  return { alg, enc: 'XC20P', decrypt }\r\n}\r\n\r\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\r\nexport function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(\r\n  recipientSecret: Uint8Array | ECDH,\r\n  senderPublicKey: Uint8Array\r\n): Decrypter {\r\n  const alg = 'ECDH-1PU+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function decrypt(\r\n    sealed: Uint8Array,\r\n    iv: Uint8Array,\r\n    aad?: Uint8Array,\r\n    recipient?: Recipient\r\n  ): Promise<Uint8Array | null> {\r\n    recipient = <Recipient>recipient\r\n    validateHeader(recipient.header)\r\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\r\n    // ECDH-1PU requires additional shared secret between\r\n    // static key of sender and static key of recipient\r\n    const publicKey = base64ToBytes(recipient.header.epk.x)\r\n    let zE: Uint8Array\r\n    let zS: Uint8Array\r\n\r\n    if (recipientSecret instanceof Uint8Array) {\r\n      zE = sharedKey(recipientSecret, publicKey)\r\n      zS = sharedKey(recipientSecret, senderPublicKey)\r\n    } else {\r\n      zE = await recipientSecret(publicKey)\r\n      zS = await recipientSecret(senderPublicKey)\r\n    }\r\n\r\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\r\n    sharedSecret.set(zE)\r\n    sharedSecret.set(zS, zE.length)\r\n\r\n    // Key Encryption Key\r\n    let producerInfo\r\n    let consumerInfo\r\n    if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu)\r\n    if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv)\r\n\r\n    const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo)\r\n    // Content Encryption Key\r\n    const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag)\r\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\r\n    if (cek === null) return null\r\n\r\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\r\n  }\r\n  return { alg, enc: 'XC20P', decrypt }\r\n}\r\n"],"names":["bytesToBase64url","b","u8a","toString","base64ToBytes","s","inputBase64Url","replace","fromString","base58ToBytes","bytesToBase58","hexToBytes","input","startsWith","substring","toLowerCase","encodeBase64url","decodeBase64url","bytesToHex","stringToBytes","toJose","r","recoveryParam","recoverable","jose","Uint8Array","set","Error","fromJose","signature","signatureBytes","length","TypeError","slice","undefined","toSealed","ciphertext","tag","concat","leftpad","data","size","repeat","zl","zr","sl","sr","hl","hr","rotl","x","n","fn1","a","c","d","e","m","k","fn2","fn3","fn4","fn5","Ripemd160","constructor","blockSize","_a","_b","_c","_d","_e","_blockOffset","_block","_blockSize","_length","_finalized","update","block","offset","i","_update","j","carry","digest","_digest","fill","words","Array","temp","DataView","buffer","getInt32","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","setUint32","setInt32","sha256","payload","hash","keccak","sha3","keccak_256","arrayBuffer","toEthereumAddress","hexPublicKey","hashInput","ripemd160","writeUint32BE","value","array","encoded","lengthAndInput","concatKDF","secret","keyLen","alg","producerInfo","consumerInfo","roundNumber","secp256k1","elliptic","ec","ES256KSigner","privateKey","privateKeyBytes","keyPair","keyFromPrivate","sign","SimpleSigner","hexPrivateKey","signer","EllipticSigner","EdDSASigner","secretKey","dataBytes","sig","NaclSigner","base64PrivateKey","secp256r1","ES256Signer","instanceOfEcdsaSignature","object","ES256SignerAlg","ES256KSignerAlg","Ed25519SignerAlg","RS256SignerAlg","PS256SignerAlg","algorithms","ES256","ES256K","Ed25519","EdDSA","RS256","PS256","SignerAlg","impl","publicKeyToAddress","publicKey","otherAddress","version","publicKeyBuffer","publicKeyHash","step1","step2","step3","checksum","step4","EC","prefix","compressedPublicKey","keyFromPublic","getPublic","encode","bech32","toWords","verifyBlockchainAccountId","blockchainAccountId","chain","split","bip122","cosmos","join","toSignatureObject","rawSig","sigObj","extractPublicKeyBytes","pk","publicKeyBase58","publicKeyBase64","publicKeyHex","publicKeyJwk","crv","y","kty","publicKeyMultibase","base16","base58btc","base64","base64url","bases","baseDecoder","decoder","or","decode","verifyES256","authenticators","fullPublicKeys","filter","ethereumAddress","find","pubBytes","verify","err","verifyES256K","blockchainAddressKeys","verifyRecoverableES256K","signatures","so","checkSignatureAgainstSigner","recoveredKey","recoverPubKey","recoveredPublicKeyHex","recoveredCompressedPublicKeyHex","recoveredAddress","keyHex","map","key","verifyEd25519","clear","VerifierAlgorithm","JWT_ERROR","INVALID_JWT","INVALID_AUDIENCE","INVALID_SIGNATURE","NO_SUITABLE_KEYS","NOT_SUPPORTED","RESOLVER_ERROR","resolveAuthenticator","resolver","issuer","proofPurpose","types","SUPPORTED_PUBLIC_KEY_TYPES","didResult","resolve","accept","DID_JSON","result","Object","getOwnPropertyNames","indexOf","didDocument","didDocumentMetadata","didResolutionMetadata","contentType","error","message","getPublicKeyById","verificationMethods","pubid","filtered","id","publicKeysToCheck","verificationMethod","includes","assertionMethod","type","supported","didResolutionResult","verifyJWT","jwt","options","auth","audience","callbackUrl","skewTime","policies","header","decodeJWT","prototype","hasOwnProperty","call","did","iss","client_id","SELF_ISSUED_V2","SELF_ISSUED_V2_VC_INTEROP","sub","sub_jwk","kid","SELF_ISSUED_V0_1","scope","redirect_uri","verifyJWSDecoded","now","Math","floor","Date","NBF_SKEW","nowSkewed","nbf","iat","exp","aud","audArray","isArray","matchedAudience","item","verified","createJWT","expiresIn","canonicalize","typ","timestamps","fullPayload","createJWS","defaultAlg","encodedPayload","encodeSection","signingInput","jwtSigner","shouldCanonicalize","canonicalizeData","JSON","stringify","decodeJWS","jws","parts","match","parse","decodedJwt","assign","pubKeys","verifyJWS","jwsDecoded","bind","then","v","pact","onFulfilled","_this","thenable","validateJWE","jwe","protected","iv","recipients","rec","encrypted_key","encodeJWE","protectedHeader","recipient","aad","decryptJWE","decrypter","cleartext","protHeader","enc","sealed","decrypt","createJWE","encrypters","encrypt","encryptionResult","tmpEnc","reduce","acc","encrypter","cek","encryptCek","push","createX25519ECDH","mySecretKey","theirPublicKey","sharedKey","resolveX25519Encrypters","dids","encryptersForDID","resolved","agreementKeys","keyAgreement","pks","Boolean","controllerEncrypters","x25519Encrypter","controller","controllers","encrypterPromises","catch","Promise","all","encrypterArrays","flattenedArray","createAuthEncrypter","recipientPublicKey","senderSecret","xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonEncrypter","createAuthDecrypter","recipientSecret","senderPublicKey","xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonDecrypter","x25519Decrypter","xc20pEncrypter","cipher","XChaCha20Poly1305","randomBytes","nonceLength","seal","subarray","tagLength","xc20pDirEncrypter","encodedAad","xc20pEncrypt","xc20pDirDecrypter","open","epk","generateKeyPair","sharedSecret","kek","res","zE","zS","partyUInfo","partyVInfo","apu","apv","validateHeader","receiverSecret","sealedCek"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/did-jwt/lib/index.module.js b/node_modules/did-jwt/lib/index.module.js
index bcc5e20..a0001aa 100644
--- a/node_modules/did-jwt/lib/index.module.js
+++ b/node_modules/did-jwt/lib/index.module.js
@@ -542,6 +542,24 @@ function Ed25519SignerAlg() {
     }
   };
 }
+function RS256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
+function PS256SignerAlg() {
+  return function sign(payload, signer) {
+    try {
+      return Promise.resolve(signer(payload));
+    } catch (e) {
+      return Promise.reject(e);
+    }
+  };
+}
 const algorithms$1 = {
   ES256: ES256SignerAlg(),
   ES256K: ES256KSignerAlg(),
@@ -551,7 +569,9 @@ const algorithms$1 = {
   // This is actually incorrect but retained for backwards compatibility
   // see https://github.com/decentralized-identity/did-jwt/issues/130
   Ed25519: Ed25519SignerAlg(),
-  EdDSA: Ed25519SignerAlg()
+  EdDSA: Ed25519SignerAlg(),
+  RS256: RS256SignerAlg(),
+  PS256: PS256SignerAlg()
 };

 function SignerAlg(alg) {
@@ -740,10 +760,8 @@ function verifyRecoverableES256K(data, signature, authenticators) {
     const recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);
     const recoveredAddress = toEthereumAddress(recoveredPublicKeyHex).toLowerCase();
     const signer = authenticators.find(pk => {
-      var _pk$ethereumAddress, _pk$blockchainAccount, _pk$blockchainAccount2;
-
       const keyHex = bytesToHex(extractPublicKeyBytes(pk));
-      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || ((_pk$ethereumAddress = pk.ethereumAddress) == null ? void 0 : _pk$ethereumAddress.toLowerCase()) === recoveredAddress || ((_pk$blockchainAccount = pk.blockchainAccountId) == null ? void 0 : (_pk$blockchainAccount2 = _pk$blockchainAccount.split('@eip155')) == null ? void 0 : _pk$blockchainAccount2[0].toLowerCase()) === recoveredAddress || // CAIP-2
+      return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || pk.ethereumAddress?.toLowerCase() === recoveredAddress || pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2
       verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10
       ;
     });
@@ -862,8 +880,6 @@ const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
     return Promise.resolve(resolver.resolve(issuer, {
       accept: DID_JSON
     })).then(function (result) {
-      var _didResult$didResolut, _didResult, _didResult$didDocumen, _didResult2, _didResult2$didDocume;
-
       // support legacy resolvers that do not produce DIDResolutionResult
       if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {
         didResult = {
@@ -877,7 +893,7 @@ const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
         didResult = result;
       }

-      if ((_didResult$didResolut = didResult.didResolutionMetadata) != null && _didResult$didResolut.error || didResult.didDocument == null) {
+      if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {
         const {
           error,
           message
@@ -892,13 +908,11 @@ const resolveAuthenticator = function (resolver, alg, issuer, proofPurpose) {
         return filtered.length > 0 ? filtered[0] : null;
       };

-      let publicKeysToCheck = [...(((_didResult = didResult) == null ? void 0 : (_didResult$didDocumen = _didResult.didDocument) == null ? void 0 : _didResult$didDocumen.verificationMethod) || []), ...(((_didResult2 = didResult) == null ? void 0 : (_didResult2$didDocume = _didResult2.didDocument) == null ? void 0 : _didResult2$didDocume.publicKey) || [])];
+      let publicKeysToCheck = [...(didResult?.didDocument?.verificationMethod || []), ...(didResult?.didDocument?.publicKey || [])];

       if (typeof proofPurpose === 'string') {
-        var _didResult3;
-
         // support legacy DID Documents that do not list assertionMethod
-        if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames((_didResult3 = didResult) == null ? void 0 : _didResult3.didDocument).includes('assertionMethod')) {
+        if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')) {
           didResult.didDocument = { ...didResult.didDocument
           };
           didResult.didDocument.assertionMethod = [...publicKeysToCheck.map(pk => pk.id)];
@@ -1033,29 +1047,25 @@ const verifyJWT = function (jwt, options = {
         data,
         signature
       }, authenticators)).then(function (signer) {
-        var _options$policies;
-
-        const now = typeof ((_options$policies = options.policies) == null ? void 0 : _options$policies.now) === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
+        const now = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
         const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW;

         if (signer) {
-          var _options$policies2, _options$policies3, _options$policies4, _options$policies5;
-
           const nowSkewed = now + skewTime;

-          if (((_options$policies2 = options.policies) == null ? void 0 : _options$policies2.nbf) !== false && payload.nbf) {
+          if (options.policies?.nbf !== false && payload.nbf) {
             if (payload.nbf > nowSkewed) {
               throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`);
             }
-          } else if (((_options$policies3 = options.policies) == null ? void 0 : _options$policies3.iat) !== false && payload.iat && payload.iat > nowSkewed) {
+          } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {
             throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`);
           }

-          if (((_options$policies4 = options.policies) == null ? void 0 : _options$policies4.exp) !== false && payload.exp && payload.exp <= now - skewTime) {
+          if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {
             throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`);
           }

-          if (((_options$policies5 = options.policies) == null ? void 0 : _options$policies5.aud) !== false && payload.aud) {
+          if (options.policies?.aud !== false && payload.aud) {
             if (!options.audience && !options.callbackUrl) {
               throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`);
             }
@@ -1713,11 +1723,9 @@ const createJWE = function (cleartext, encrypters, protectedHeader = {}, aad) {
               jwe = encodeJWE(encryptionResult, aad);
             });
           } else {
-            return Promise.resolve(encrypter.encryptCek == null ? void 0 : encrypter.encryptCek(cek)).then(function (recipient) {
+            return Promise.resolve(encrypter.encryptCek?.(cek)).then(function (recipient) {
               if (recipient) {
-                var _jwe, _jwe$recipients;
-
-                (_jwe = jwe) == null ? void 0 : (_jwe$recipients = _jwe.recipients) == null ? void 0 : _jwe$recipients.push(recipient);
+                jwe?.recipients?.push(recipient);
               }
             });
           }
@@ -1789,26 +1797,24 @@ const resolveX25519Encrypters = function (dids, resolver) {
           didDocument
         }) {
           function _temp4() {
-            var _didDocument$keyAgree, _didDocument$keyAgree2;
-
-            const agreementKeys = (_didDocument$keyAgree = didDocument.keyAgreement) == null ? void 0 : (_didDocument$keyAgree2 = _didDocument$keyAgree.map(key => {
+            const agreementKeys = didDocument.keyAgreement?.map(key => {
               if (typeof key === 'string') {
                 return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(pk => pk.id === key);
               }

               return key;
-            })) == null ? void 0 : _didDocument$keyAgree2.filter(key => typeof key !== 'undefined');
-            const pks = (agreementKeys == null ? void 0 : agreementKeys.filter(key => {
+            })?.filter(key => typeof key !== 'undefined');
+            const pks = agreementKeys?.filter(key => {
               // TODO: should be able to use non base58 keys too
               return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58);
-            })) || [];
+            }) || [];
             if (!pks.length && !controllerEncrypters.length) throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);
             return pks.map(pk => x25519Encrypter(base58ToBytes(pk.publicKeyBase58), pk.id)).concat(...controllerEncrypters);
           }

           resolved.push(did);

-          if (didResolutionMetadata != null && didResolutionMetadata.error || didDocument == null) {
+          if (didResolutionMetadata?.error || didDocument == null) {
             throw new Error(`resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`);
           }

@@ -1866,7 +1872,7 @@ function createAuthEncrypter(recipientPublicKey, senderSecret, options = {}) {
  */

 function createAnonEncrypter(publicKey, options = {}) {
-  return x25519Encrypter(publicKey, options == null ? void 0 : options.kid);
+  return x25519Encrypter(publicKey, options?.kid);
 }
 /**
  * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires
@@ -2124,8 +2130,6 @@ function validateHeader(header) {
 function x25519Decrypter(receiverSecret) {
   const decrypt = function (sealed, iv, aad, recipient) {
     try {
-      var _recipient, _recipient$header$epk;
-
       function _temp6() {
         // Key Encryption Key
         const kek = concatKDF(sharedSecret, keyLen, alg); // Content Encryption Key
@@ -2136,9 +2140,9 @@ function x25519Decrypter(receiverSecret) {
         });
       }

-      validateHeader((_recipient = recipient) == null ? void 0 : _recipient.header);
+      validateHeader(recipient?.header);
       recipient = recipient;
-      if (((_recipient$header$epk = recipient.header.epk) == null ? void 0 : _recipient$header$epk.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
+      if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
       const publicKey = base64ToBytes(recipient.header.epk.x);
       let sharedSecret;

@@ -2176,8 +2180,6 @@ function x25519Decrypter(receiverSecret) {
 function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey) {
   const decrypt = function (sealed, iv, aad, recipient) {
     try {
-      var _recipient$header$epk2;
-
       function _temp8() {
         const sharedSecret = new Uint8Array(zE.length + zS.length);
         sharedSecret.set(zE);
@@ -2197,7 +2199,7 @@ function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderP

       recipient = recipient;
       validateHeader(recipient.header);
-      if (((_recipient$header$epk2 = recipient.header.epk) == null ? void 0 : _recipient$header$epk2.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
+      if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
       // static key of sender and static key of recipient

       const publicKey = base64ToBytes(recipient.header.epk.x);
diff --git a/node_modules/did-jwt/lib/index.module.js.map b/node_modules/did-jwt/lib/index.module.js.map
index 5de544a..4fd9b9e 100644
--- a/node_modules/did-jwt/lib/index.module.js.map
+++ b/node_modules/did-jwt/lib/index.module.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.module.js","sources":["../src/util.ts","../src/blockchains/utils/ripemd160.ts","../src/Digest.ts","../src/signers/ES256KSigner.ts","../src/signers/SimpleSigner.ts","../src/signers/EllipticSigner.ts","../src/signers/EdDSASigner.ts","../src/signers/NaclSigner.ts","../src/signers/ES256Signer.ts","../src/SignerAlgorithm.ts","../src/blockchains/bip122.ts","../src/blockchains/cosmos.ts","../src/blockchains/index.ts","../src/VerifierAlgorithm.ts","../src/Errors.ts","../src/JWT.ts","../src/JWE.ts","../src/ECDH.ts","../src/xc20pEncryption.ts"],"sourcesContent":["import * as u8a from 'uint8arrays'\nimport { bases } from 'multiformats/basics'\n\n/**\n * @deprecated Signers will be expected to return base64url `string` signatures.\n */\nexport interface EcdsaSignature {\n  r: string\n  s: string\n  recoveryParam?: number | null\n}\n\nexport function bytesToBase64url(b: Uint8Array): string {\n  return u8a.toString(b, 'base64url')\n}\n\nexport function base64ToBytes(s: string): Uint8Array {\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n  return u8a.fromString(inputBase64Url, 'base64url')\n}\n\nexport function bytesToBase64(b: Uint8Array): string {\n  return u8a.toString(b, 'base64pad')\n}\n\nexport function base58ToBytes(s: string): Uint8Array {\n  return u8a.fromString(s, 'base58btc')\n}\n\nexport function bytesToBase58(b: Uint8Array): string {\n  return u8a.toString(b, 'base58btc')\n}\n\nexport function bytesToMultibase(b: Uint8Array, base: keyof typeof bases): string {\n  return bases[base].encode(b)\n}\n\nexport function hexToBytes(s: string): Uint8Array {\n  const input = s.startsWith('0x') ? s.substring(2) : s\n  return u8a.fromString(input.toLowerCase(), 'base16')\n}\n\nexport function encodeBase64url(s: string): string {\n  return bytesToBase64url(u8a.fromString(s))\n}\n\nexport function decodeBase64url(s: string): string {\n  return u8a.toString(base64ToBytes(s))\n}\n\nexport function bytesToHex(b: Uint8Array): string {\n  return u8a.toString(b, 'base16')\n}\n\nexport function stringToBytes(s: string): Uint8Array {\n  return u8a.fromString(s)\n}\n\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\n  const jose = new Uint8Array(recoverable ? 65 : 64)\n  jose.set(u8a.fromString(r, 'base16'), 0)\n  jose.set(u8a.fromString(s, 'base16'), 32)\n  if (recoverable) {\n    if (typeof recoveryParam === 'undefined') {\n      throw new Error('Signer did not return a recoveryParam')\n    }\n    jose[64] = <number>recoveryParam\n  }\n  return bytesToBase64url(jose)\n}\n\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\n  const signatureBytes: Uint8Array = base64ToBytes(signature)\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`)\n  }\n  const r = bytesToHex(signatureBytes.slice(0, 32))\n  const s = bytesToHex(signatureBytes.slice(32, 64))\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined\n  return { r, s, recoveryParam }\n}\n\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)])\n}\n\nexport function leftpad(data: string, size = 64): string {\n  if (data.length === size) return data\n  return '0'.repeat(size - data.length) + data\n}\n","// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\n\nconst zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14,\n  4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,\n  10, 14, 1, 3, 8, 11, 6, 15, 13,\n]\n\nconst zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1,\n  3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5,\n  8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\n]\n\nconst sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11,\n  13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,\n  11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\n]\n\nconst sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7,\n  15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,\n  12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\n]\n\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction rotl(x: number, n: number) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0\n}\n\nexport class Ripemd160 {\n  // state\n  private _a = 0x67452301\n  private _b = 0xefcdab89\n  private _c = 0x98badcfe\n  private _d = 0x10325476\n  private _e = 0xc3d2e1f0\n  private _blockOffset = 0\n  private _block: Uint8Array\n  private _blockSize: number\n  private _length = [0, 0, 0, 0]\n  private _finalized: boolean\n\n  constructor(blockSize = 64) {\n    this._block = new Uint8Array(blockSize)\n    this._blockSize = blockSize\n    this._blockOffset = 0\n    this._length = [0, 0, 0, 0]\n    this._finalized = false\n  }\n\n  update = (data: Uint8Array): Ripemd160 => {\n    if (this._finalized) throw new Error('Digest already called')\n\n    // consume data\n    const block = this._block\n    let offset = 0\n    while (this._blockOffset + data.length - offset >= this._blockSize) {\n      for (let i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++]\n      this._update()\n      this._blockOffset = 0\n    }\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n    // update length\n    for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n      this._length[j] += carry\n      carry = (this._length[j] / 0x0100000000) | 0\n      if (carry > 0) this._length[j] -= 0x0100000000 * carry\n    }\n\n    return this\n  }\n\n  digest = (): Uint8Array => {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    const digest = this._digest()\n\n    // reset state\n    this._block.fill(0)\n    this._blockOffset = 0\n    for (let i = 0; i < 4; ++i) this._length[i] = 0\n\n    return digest\n  }\n\n  private _update = () => {\n    const words = new Array(16)\n    const temp = new DataView(this._block.buffer)\n    for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true)\n\n    let al = this._a | 0\n    let bl = this._b | 0\n    let cl = this._c | 0\n    let dl = this._d | 0\n    let el = this._e | 0\n\n    let ar = this._a | 0\n    let br = this._b | 0\n    let cr = this._c | 0\n    let dr = this._d | 0\n    let er = this._e | 0\n\n    // computation\n    for (let i = 0; i < 80; i += 1) {\n      let tl\n      let tr\n      if (i < 16) {\n        tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n        tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n      } else if (i < 32) {\n        tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n        tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n      } else if (i < 48) {\n        tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n        tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n      } else if (i < 64) {\n        tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n        tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n      } else {\n        // if (i<80) {\n        tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n        tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n      }\n\n      al = el\n      el = dl\n      dl = rotl(cl, 10)\n      cl = bl\n      bl = tl\n\n      ar = er\n      er = dr\n      dr = rotl(cr, 10)\n      cr = br\n      br = tr\n    }\n\n    // update state\n    const t = (this._b + cl + dr) | 0\n    this._b = (this._c + dl + er) | 0\n    this._c = (this._d + el + ar) | 0\n    this._d = (this._e + al + br) | 0\n    this._e = (this._a + bl + cr) | 0\n    this._a = t\n  }\n\n  private _digest = () => {\n    // create padding and handle blocks\n    this._block[this._blockOffset++] = 0x80\n    if (this._blockOffset > 56) {\n      this._block.fill(0, this._blockOffset, 64)\n      this._update()\n      this._blockOffset = 0\n    }\n\n    this._block.fill(0, this._blockOffset, 56)\n    const temp = new DataView(this._block.buffer)\n    temp.setUint32(56, this._length[0], true)\n    temp.setUint32(60, this._length[1], true)\n    this._block = new Uint8Array(temp.buffer)\n    this._update()\n\n    // produce result\n    const buffer = new DataView(new Uint8Array(20).buffer)\n    buffer.setInt32(0, this._a, true)\n    buffer.setInt32(4, this._b, true)\n    buffer.setInt32(8, this._c, true)\n    buffer.setInt32(12, this._d, true)\n    buffer.setInt32(16, this._e, true)\n\n    return new Uint8Array(buffer.buffer)\n  }\n}\n","import { hash } from '@stablelib/sha256'\nimport { Ripemd160 } from './blockchains/utils/ripemd160'\nimport * as u8a from 'uint8arrays'\nimport sha3 from 'js-sha3'\n\nexport function sha256(payload: string | Uint8Array): Uint8Array {\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload\n  return hash(data)\n}\n\nexport function keccak(data: Uint8Array): Uint8Array {\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data))\n}\n\nexport function toEthereumAddress(hexPublicKey: string): string {\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16')\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`\n}\n\nexport function ripemd160(data: Uint8Array): Uint8Array {\n  return new Ripemd160().update(data).digest()\n}\n\nfunction writeUint32BE(value: number, array = new Uint8Array(4)): Uint8Array {\n  const encoded = u8a.fromString(value.toString(), 'base10')\n  array.set(encoded, 4 - encoded.length)\n  return array\n}\n\nconst lengthAndInput = (input: Uint8Array): Uint8Array => u8a.concat([writeUint32BE(input.length), input])\n\n// This implementation of concatKDF was inspired by these two implementations:\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\nexport function concatKDF(\n  secret: Uint8Array,\n  keyLen: number,\n  alg: string,\n  producerInfo?: Uint8Array,\n  consumerInfo?: Uint8Array\n): Uint8Array {\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`)\n  const value = u8a.concat([\n    lengthAndInput(u8a.fromString(alg)),\n    lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), // apu\n    lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), // apv\n    writeUint32BE(keyLen),\n  ])\n\n  // since our key lenght is 256 we only have to do one round\n  const roundNumber = 1\n  return sha256(u8a.concat([writeUint32BE(roundNumber), secret, value]))\n}\n","import { leftpad } from '../util'\nimport { toJose } from '../util'\nimport { Signer } from '../JWT'\nimport { sha256 } from '../Digest'\nimport elliptic from 'elliptic'\n\nconst secp256k1 = new elliptic.ec('secp256k1')\n\n/**\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    privateKey   a private key as `Uint8Array`\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function ES256KSigner(privateKey: Uint8Array, recoverable = false): Signer {\n  const privateKeyBytes: Uint8Array = privateKey\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\n  }\n  const keyPair: elliptic.ec.KeyPair = secp256k1.keyFromPrivate(privateKeyBytes)\n\n  return async (data: string | Uint8Array): Promise<string> => {\n    const { r, s, recoveryParam }: elliptic.ec.Signature = keyPair.sign(sha256(data))\n    return toJose(\n      {\n        r: leftpad(r.toString('hex')),\n        s: leftpad(s.toString('hex')),\n        recoveryParam,\n      },\n      recoverable\n    )\n  }\n}\n","import { fromJose, hexToBytes } from '../util'\nimport { Signer } from '../JWT'\nimport { ES256KSigner } from './ES256KSigner'\n\n/**\n * @deprecated Please use ES256KSigner\n *  The SimpleSigner returns a configured function for signing data.\n *\n *  @example\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\n *  signer(data, (err, signature) => {\n *    ...\n *  })\n *\n *  @param    {String}         hexPrivateKey    a hex encoded private key\n *  @return   {Function}                     a configured signer function\n */\nfunction SimpleSigner(hexPrivateKey: string): Signer {\n  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true)\n  return async (data) => {\n    const signature = (await signer(data)) as string\n    return fromJose(signature)\n  }\n}\n\nexport default SimpleSigner\n","import { hexToBytes } from '../util'\nimport { Signer } from '../JWT'\nimport { ES256KSigner } from './ES256KSigner'\n\n/**\n * @deprecated Please use ES256KSigner\n *  The EllipticSigner returns a configured function for signing data.\n *\n *  @example\n *  ```typescript\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\n *  signer(data).then( (signature: string) => {\n *    ...\n *  })\n *  ```\n *\n *  @param    {String}         hexPrivateKey    a hex encoded private key\n *  @return   {Function}                        a configured signer function\n */\nfunction EllipticSigner(hexPrivateKey: string): Signer {\n  return ES256KSigner(hexToBytes(hexPrivateKey))\n}\n\nexport default EllipticSigner\n","import { sign } from '@stablelib/ed25519'\nimport { Signer } from '../JWT'\nimport { bytesToBase64url, stringToBytes } from '../util'\n\n/**\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function EdDSASigner(secretKey: Uint8Array): Signer {\n  const privateKeyBytes: Uint8Array = secretKey\n  if (privateKeyBytes.length !== 64) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`)\n  }\n  return async (data: string | Uint8Array): Promise<string> => {\n    const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data\n    const sig: Uint8Array = sign(privateKeyBytes, dataBytes)\n    return bytesToBase64url(sig)\n  }\n}\n","import { EdDSASigner as EdDSASigner } from './EdDSASigner'\nimport { Signer } from '../JWT'\nimport { base64ToBytes } from '../util'\n\n/**\n * @deprecated Please use EdDSASigner\n *\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\n *\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\n *\n *  @example\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\n *  const data: string = '...'\n *  signer(data).then( (signature: string) => {\n *    ...\n *  })\n *\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\n *  @return   {Function}                     a configured signer function\n */\n\nfunction NaclSigner(base64PrivateKey: string): Signer {\n  return EdDSASigner(base64ToBytes(base64PrivateKey))\n}\n\nexport default NaclSigner\n","import { leftpad } from '../util'\nimport { toJose } from '../util'\nimport { Signer } from '../JWT'\nimport { sha256 } from '../Digest'\nimport elliptic from 'elliptic'\n\nconst secp256r1 = new elliptic.ec('p256')\n\n/**\n *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    privateKey   a private key as `Uint8Array`\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function ES256Signer(privateKey: Uint8Array): Signer {\n  const privateKeyBytes: Uint8Array = privateKey\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\n  }\n  const keyPair: elliptic.ec.KeyPair = secp256r1.keyFromPrivate(privateKeyBytes)\n\n  return async (data: string | Uint8Array): Promise<string> => {\n    const { r, s }: elliptic.ec.Signature = keyPair.sign(sha256(data))\n    return toJose({\n      r: leftpad(r.toString('hex')),\n      s: leftpad(s.toString('hex')),\n    })\n  }\n}\n","import { Signer, SignerAlgorithm } from './JWT'\nimport { EcdsaSignature, fromJose, toJose } from './util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction instanceOfEcdsaSignature(object: any): object is EcdsaSignature {\n  return typeof object === 'object' && 'r' in object && 's' in object\n}\n\nexport function ES256SignerAlg(): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (instanceOfEcdsaSignature(signature)) {\n      return toJose(signature)\n    } else {\n      return signature\n    }\n  }\n}\n\nexport function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (instanceOfEcdsaSignature(signature)) {\n      return toJose(signature, recoverable)\n    } else {\n      if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\n        throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`)\n      }\n      return signature\n    }\n  }\n}\n\nexport function Ed25519SignerAlg(): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (!instanceOfEcdsaSignature(signature)) {\n      return signature\n    } else {\n      throw new Error('invalid_config: expected a signer function that returns a string instead of signature object')\n    }\n  }\n}\n\ninterface SignerAlgorithms {\n  [alg: string]: SignerAlgorithm\n}\n\nconst algorithms: SignerAlgorithms = {\n  ES256: ES256SignerAlg(),\n  ES256K: ES256KSignerAlg(),\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': ES256KSignerAlg(true),\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: Ed25519SignerAlg(),\n  EdDSA: Ed25519SignerAlg(),\n}\n\nfunction SignerAlg(alg: string): SignerAlgorithm {\n  const impl: SignerAlgorithm = algorithms[alg]\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\n  return impl\n}\n\nexport default SignerAlg\n","import * as u8a from 'uint8arrays'\nimport { bytesToBase58, base58ToBytes } from '../util'\nimport { sha256, ripemd160 } from '../Digest'\n\nexport const publicKeyToAddress = (publicKey: string, otherAddress: string): string => {\n  // Use the same version/prefix byte as the given address.\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex')\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex')\n  const publicKeyHash = ripemd160(sha256(publicKeyBuffer))\n  const step1 = version + u8a.toString(publicKeyHash, 'hex')\n  const step2 = sha256(u8a.fromString(step1, 'hex'))\n  const step3 = sha256(step2)\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8)\n  const step4 = step1 + checksum\n  return bytesToBase58(u8a.fromString(step4, 'hex'))\n}\n","import elliptic from 'elliptic'\nimport { bech32 } from 'bech32'\nimport * as u8a from 'uint8arrays'\nimport { sha256, ripemd160 } from '../Digest'\n\nconst EC = elliptic.ec\n\nexport const publicKeyToAddress = (publicKey: string, prefix: string): string => {\n  const ec = new EC('secp256k1')\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true)\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex')\n  const hash = ripemd160(sha256(publicKeyBuffer))\n  const words = bech32.toWords(hash)\n  return bech32.encode(prefix, words).replace(prefix, '')\n}\n","import { publicKeyToAddress as bip122 } from './bip122'\nimport { publicKeyToAddress as cosmos } from './cosmos'\nimport { toEthereumAddress } from '../Digest'\n\nexport const verifyBlockchainAccountId = (publicKey: string, blockchainAccountId: string | undefined): boolean => {\n  if (blockchainAccountId) {\n    const chain = blockchainAccountId.split(':')\n    switch (chain[0]) {\n      case 'bip122':\n        chain[chain.length - 1] = bip122(publicKey, chain[chain.length - 1])\n        break\n      case 'cosmos':\n        chain[chain.length - 1] = cosmos(publicKey, chain[1])\n        break\n      case 'eip155':\n        chain[chain.length - 1] = toEthereumAddress(publicKey)\n        break\n      default:\n        return false\n    }\n    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase()\n  }\n  return false\n}\n","import type { SignatureInput } from 'elliptic'\nimport elliptic from 'elliptic'\nimport { sha256, toEthereumAddress } from './Digest'\nimport { verify } from '@stablelib/ed25519'\nimport type { VerificationMethod } from 'did-resolver'\nimport { bases } from 'multiformats/basics'\nimport { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'\nimport { verifyBlockchainAccountId } from './blockchains'\n\nconst secp256k1 = new elliptic.ec('secp256k1')\nconst secp256r1 = new elliptic.ec('p256')\n\n// converts a JOSE signature to it's components\nexport function toSignatureObject(signature: string, recoverable = false): EcdsaSignature {\n  const rawSig: Uint8Array = base64ToBytes(signature)\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\n    throw new Error('wrong signature length')\n  }\n  const r: string = bytesToHex(rawSig.slice(0, 32))\n  const s: string = bytesToHex(rawSig.slice(32, 64))\n  const sigObj: EcdsaSignature = { r, s }\n  if (recoverable) {\n    sigObj.recoveryParam = rawSig[64]\n  }\n  return sigObj\n}\n\ninterface LegacyVerificationMethod extends VerificationMethod {\n  publicKeyBase64: string\n}\n\nfunction extractPublicKeyBytes(pk: VerificationMethod): Uint8Array {\n  if (pk.publicKeyBase58) {\n    return base58ToBytes(pk.publicKeyBase58)\n  } else if ((<LegacyVerificationMethod>pk).publicKeyBase64) {\n    return base64ToBytes((<LegacyVerificationMethod>pk).publicKeyBase64)\n  } else if (pk.publicKeyHex) {\n    return hexToBytes(pk.publicKeyHex)\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(\n      secp256k1\n        .keyFromPublic({\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\n        })\n        .getPublic('hex')\n    )\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(\n      secp256r1\n        .keyFromPublic({\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\n        })\n        .getPublic('hex')\n    )\n  } else if (\n    pk.publicKeyJwk &&\n    pk.publicKeyJwk.kty === 'OKP' &&\n    pk.publicKeyJwk.crv === 'Ed25519' &&\n    pk.publicKeyJwk.x\n  ) {\n    return base64ToBytes(pk.publicKeyJwk.x)\n  } else if (pk.publicKeyMultibase) {\n    const { base16, base58btc, base64, base64url } = bases\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)))\n    return baseDecoder.decode(pk.publicKeyMultibase)\n  }\n  return new Uint8Array()\n}\n\nexport function verifyES256(data: string, signature: string, authenticators: VerificationMethod[]): VerificationMethod {\n  const hash: Uint8Array = sha256(data)\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\n  })\n\n  const signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk)\n      return secp256r1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\n    } catch (err) {\n      return false\n    }\n  })\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\nexport function verifyES256K(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  const hash: Uint8Array = sha256(data)\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\n  })\n  const blockchainAddressKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined'\n  })\n\n  let signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk)\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\n    } catch (err) {\n      return false\n    }\n  })\n\n  if (!signer && blockchainAddressKeys.length > 0) {\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys)\n  }\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\nexport function verifyRecoverableES256K(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  let signatures: EcdsaSignature[]\n  if (signature.length > 86) {\n    signatures = [toSignatureObject(signature, true)]\n  } else {\n    const so = toSignatureObject(signature, false)\n    signatures = [\n      { ...so, recoveryParam: 0 },\n      { ...so, recoveryParam: 1 },\n    ]\n  }\n\n  const checkSignatureAgainstSigner = (sigObj: EcdsaSignature): VerificationMethod | undefined => {\n    const hash: Uint8Array = sha256(data)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const recoveredKey: any = secp256k1.recoverPubKey(hash, <SignatureInput>sigObj, <number>sigObj.recoveryParam)\n    const recoveredPublicKeyHex: string = recoveredKey.encode('hex')\n    const recoveredCompressedPublicKeyHex: string = recoveredKey.encode('hex', true)\n    const recoveredAddress: string = toEthereumAddress(recoveredPublicKeyHex).toLowerCase()\n\n    const signer: VerificationMethod | undefined = authenticators.find((pk: VerificationMethod) => {\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk))\n      return (\n        keyHex === recoveredPublicKeyHex ||\n        keyHex === recoveredCompressedPublicKeyHex ||\n        pk.ethereumAddress?.toLowerCase() === recoveredAddress ||\n        pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2\n        verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\n      )\n    })\n\n    return signer\n  }\n\n  const signer: VerificationMethod[] = signatures\n    .map(checkSignatureAgainstSigner)\n    .filter((key) => typeof key !== 'undefined') as VerificationMethod[]\n\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer[0]\n}\n\nexport function verifyEd25519(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  const clear: Uint8Array = stringToBytes(data)\n  const sig: Uint8Array = base64ToBytes(signature)\n  const signer = authenticators.find((pk: VerificationMethod) => {\n    return verify(extractPublicKeyBytes(pk), clear, sig)\n  })\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\ntype Verifier = (data: string, signature: string, authenticators: VerificationMethod[]) => VerificationMethod\ninterface Algorithms {\n  [name: string]: Verifier\n}\nconst algorithms: Algorithms = {\n  ES256: verifyES256,\n  ES256K: verifyES256K,\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': verifyRecoverableES256K,\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: verifyEd25519,\n  EdDSA: verifyEd25519,\n}\n\nfunction VerifierAlgorithm(alg: string): Verifier {\n  const impl: Verifier = algorithms[alg]\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\n  return impl\n}\n\nVerifierAlgorithm.toSignatureObject = toSignatureObject\n\nexport default VerifierAlgorithm\n","/**\n * Error prefixes used for known verification failure cases.\n *\n * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major\n * version update to match the scenarios better.\n *\n * @beta\n */\nexport const JWT_ERROR = {\n  /**\n   * Thrown when a JWT payload schema is unexpected or when validity period does not match\n   */\n  INVALID_JWT: 'invalid_jwt',\n  /**\n   * Thrown when the verifier audience does not match the one set in the JWT payload\n   */\n  INVALID_AUDIENCE: 'invalid_config',\n  /**\n   * Thrown when none of the public keys of the issuer match the signature of the JWT.\n   *\n   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.\n   */\n  INVALID_SIGNATURE: 'invalid_signature',\n  /**\n   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given\n   * `proofPurpose`.\n   *\n   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.\n   */\n  NO_SUITABLE_KEYS: 'no_suitable_keys',\n  /**\n   * Thrown when the `alg` of the JWT or the encoding of the key is not supported\n   */\n  NOT_SUPPORTED: 'not_supported',\n  /**\n   * Thrown when the DID resolver is unable to resolve the issuer DID.\n   */\n  RESOLVER_ERROR: 'resolver_error',\n}\n","import canonicalizeData from 'canonicalize'\nimport type { DIDDocument, DIDResolutionResult, Resolvable, VerificationMethod } from 'did-resolver'\nimport SignerAlg from './SignerAlgorithm'\nimport { decodeBase64url, EcdsaSignature, encodeBase64url } from './util'\nimport VerifierAlgorithm from './VerifierAlgorithm'\nimport { JWT_ERROR } from './Errors'\n\nexport type Signer = (data: string | Uint8Array) => Promise<EcdsaSignature | string>\nexport type SignerAlgorithm = (payload: string, signer: Signer) => Promise<string>\n\nexport type ProofPurposeTypes =\n  | 'assertionMethod'\n  | 'authentication'\n  // | 'keyAgreement' // keyAgreement VerificationMethod should not be used for signing\n  | 'capabilityDelegation'\n  | 'capabilityInvocation'\n\nexport interface JWTOptions {\n  issuer: string\n  signer: Signer\n  /**\n   * @deprecated Please use `header.alg` to specify the JWT algorithm.\n   */\n  alg?: string\n  expiresIn?: number\n  canonicalize?: boolean\n}\n\nexport interface JWTVerifyOptions {\n  /** @deprecated Please use `proofPurpose: 'authentication' instead` */\n  auth?: boolean\n  audience?: string\n  callbackUrl?: string\n  resolver?: Resolvable\n  skewTime?: number\n  /** See https://www.w3.org/TR/did-spec-registries/#verification-relationships */\n  proofPurpose?: ProofPurposeTypes\n  policies?: JWTVerifyPolicies\n}\n\n/**\n * Overrides the different types of checks performed on the JWT besides the signature check\n */\nexport interface JWTVerifyPolicies {\n  // overrides the timestamp against which the validity interval is checked\n  now?: number\n  // when set to false, the timestamp checks ignore the Not Before(`nbf`) property\n  nbf?: boolean\n  // when set to false, the timestamp checks ignore the Issued At(`iat`) property\n  iat?: boolean\n  // when set to false, the timestamp checks ignore the Expires At(`exp`) property\n  exp?: boolean\n  // when set to false, the JWT audience check is skipped\n  aud?: boolean\n}\n\nexport interface JWSCreationOptions {\n  canonicalize?: boolean\n}\n\nexport interface DIDAuthenticator {\n  authenticators: VerificationMethod[]\n  issuer: string\n  didResolutionResult: DIDResolutionResult\n}\n\nexport interface JWTHeader {\n  typ: 'JWT'\n  alg: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface JWTPayload {\n  iss?: string\n  sub?: string\n  aud?: string | string[]\n  iat?: number\n  nbf?: number\n  exp?: number\n  rexp?: number\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface JWTDecoded {\n  header: JWTHeader\n  payload: JWTPayload\n  signature: string\n  data: string\n}\n\nexport interface JWSDecoded {\n  header: JWTHeader\n  payload: string\n  signature: string\n  data: string\n}\n\n/**\n * Result object returned by {@link verifyJWT}\n */\nexport interface JWTVerified {\n  /**\n   * Set to true for a JWT that passes all the required checks minus any verification overrides.\n   */\n  verified: true\n\n  /**\n   * The decoded JWT payload\n   */\n  payload: Partial<JWTPayload>\n\n  /**\n   * The result of resolving the issuer DID\n   */\n  didResolutionResult: DIDResolutionResult\n\n  /**\n   * the issuer DID\n   */\n  issuer: string\n\n  /**\n   * The public key of the issuer that matches the JWT signature\n   */\n  signer: VerificationMethod\n\n  /**\n   * The original JWT that was verified\n   */\n  jwt: string\n\n  /**\n   * Any overrides that were used during verification\n   */\n  policies?: JWTVerifyPolicies\n}\n\nexport interface PublicKeyTypes {\n  [name: string]: string[]\n}\n\nexport const SUPPORTED_PUBLIC_KEY_TYPES: PublicKeyTypes = {\n  ES256: ['JsonWebKey2020'],\n  ES256K: [\n    'EcdsaSecp256k1VerificationKey2019',\n    /**\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\n     */\n    'EcdsaSecp256k1RecoveryMethod2020',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1VerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1SignatureVerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'EcdsaPublicKeySecp256k1',\n    'JsonWebKey2020',\n  ],\n  'ES256K-R': [\n    'EcdsaSecp256k1VerificationKey2019',\n    /**\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\n     */\n    'EcdsaSecp256k1RecoveryMethod2020',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1VerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1SignatureVerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'EcdsaPublicKeySecp256k1',\n    'JsonWebKey2020',\n  ],\n  Ed25519: [\n    'ED25519SignatureVerification',\n    'Ed25519VerificationKey2018',\n    'Ed25519VerificationKey2020',\n    'JsonWebKey2020',\n  ],\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],\n}\n\nexport const SELF_ISSUED_V2 = 'https://self-issued.me/v2'\nexport const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc' // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation\nexport const SELF_ISSUED_V0_1 = 'https://self-issued.me'\n\ntype LegacyVerificationMethod = { publicKey?: string }\n\nconst defaultAlg = 'ES256K'\nconst DID_JSON = 'application/did+json'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction encodeSection(data: any, shouldCanonicalize = false): string {\n  if (shouldCanonicalize) {\n    return encodeBase64url(<string>canonicalizeData(data))\n  } else {\n    return encodeBase64url(JSON.stringify(data))\n  }\n}\n\nexport const NBF_SKEW = 300\n\nfunction decodeJWS(jws: string): JWSDecoded {\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/)\n  if (parts) {\n    return {\n      header: JSON.parse(decodeBase64url(parts[1])),\n      payload: parts[2],\n      signature: parts[3],\n      data: `${parts[1]}.${parts[2]}`,\n    }\n  }\n  throw new Error('invalid_argument: Incorrect format JWS')\n}\n\n/**  @module did-jwt/JWT */\n\n/**\n *  Decodes a JWT and returns an object representing the payload\n *\n *  @example\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\n *\n *  @param    {String}            jwt                a JSON Web Token to verify\n *  @return   {Object}                               a JS object representing the decoded JWT\n */\nexport function decodeJWT(jwt: string): JWTDecoded {\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT')\n  try {\n    const jws = decodeJWS(jwt)\n    const decodedJwt: JWTDecoded = Object.assign(jws, { payload: JSON.parse(decodeBase64url(jws.payload)) })\n    return decodedJwt\n  } catch (e) {\n    throw new Error('invalid_argument: Incorrect format JWT')\n  }\n}\n\n/**\n *  Creates a signed JWS given a payload, a signer, and an optional header.\n *\n *  @example\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  const jws = await createJWS({ my: 'payload' }, signer)\n *\n *  @param    {Object}            payload           payload object\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\n *  @param    {Object}            header            optional object to specify or customize the JWS header\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\n *                                                    payload properties\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\n */\nexport async function createJWS(\n  payload: string | Partial<JWTPayload>,\n  signer: Signer,\n  header: Partial<JWTHeader> = {},\n  options: JWSCreationOptions = {}\n): Promise<string> {\n  if (!header.alg) header.alg = defaultAlg\n  const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize)\n  const signingInput: string = [encodeSection(header, options.canonicalize), encodedPayload].join('.')\n\n  const jwtSigner: SignerAlgorithm = SignerAlg(header.alg)\n  const signature: string = await jwtSigner(signingInput, signer)\n  return [signingInput, signature].join('.')\n}\n\n/**\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is\n * over.\n *\n *  @example\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\n *      ...\n *  })\n *\n *  @param    {Object}            payload               payload object\n *  @param    {Object}            [options]             an unsigned credential object\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:\n *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\n *  @param    {Object}            header                optional object to specify or customize the JWT header\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or\n *   rejects with an error\n */\nexport async function createJWT(\n  payload: Partial<JWTPayload>,\n  { issuer, signer, alg, expiresIn, canonicalize }: JWTOptions,\n  header: Partial<JWTHeader> = {}\n): Promise<string> {\n  if (!signer) throw new Error('missing_signer: No Signer functionality has been configured')\n  if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured')\n  if (!header.typ) header.typ = 'JWT'\n  if (!header.alg) header.alg = alg\n  const timestamps: Partial<JWTPayload> = {\n    iat: Math.floor(Date.now() / 1000),\n    exp: undefined,\n  }\n  if (expiresIn) {\n    if (typeof expiresIn === 'number') {\n      timestamps.exp = <number>(payload.nbf || timestamps.iat) + Math.floor(expiresIn)\n    } else {\n      throw new Error('invalid_argument: JWT expiresIn is not a number')\n    }\n  }\n  const fullPayload = { ...timestamps, ...payload, iss: issuer }\n  return createJWS(fullPayload, signer, header, { canonicalize })\n}\n\nfunction verifyJWSDecoded(\n  { header, data, signature }: JWSDecoded,\n  pubKeys: VerificationMethod | VerificationMethod[]\n): VerificationMethod {\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys]\n  const signer: VerificationMethod = VerifierAlgorithm(header.alg)(data, signature, pubKeys)\n  return signer\n}\n\n/**\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\n *\n *  @example\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\n *\n *  @param    {String}                          jws         A JWS string to verify\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\n */\nexport function verifyJWS(jws: string, pubKeys: VerificationMethod | VerificationMethod[]): VerificationMethod {\n  const jwsDecoded: JWSDecoded = decodeJWS(jws)\n  return verifyJWSDecoded(jwsDecoded, pubKeys)\n}\n\n/**\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\n *  and the DID document of the issuer of the JWT.\n *\n *  @example\n *  ```ts\n *  verifyJWT(\n *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',\n *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}\n *    ).then(obj => {\n *        const did = obj.did // DID of signer\n *        const payload = obj.payload\n *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer\n *        const jwt = obj.jwt\n *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT\n *        ...\n *    })\n *  ```\n *\n *  @param    {String}            jwt                a JSON Web Token to verify\n *  @param    {Object}            [options]           an unsigned credential object\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the\n *   DID document (for Authentication purposes)\n *  @param    {String}            options.audience    DID of the recipient of the JWT\n *  @param    {String}            options.callbackUrl callback url in JWT\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an\n *   error\n */\nexport async function verifyJWT(\n  jwt: string,\n  options: JWTVerifyOptions = {\n    resolver: undefined,\n    auth: undefined,\n    audience: undefined,\n    callbackUrl: undefined,\n    skewTime: undefined,\n    proofPurpose: undefined,\n    policies: {},\n  }\n): Promise<JWTVerified> {\n  if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured')\n  const { payload, header, signature, data }: JWTDecoded = decodeJWT(jwt)\n  const proofPurpose: ProofPurposeTypes | undefined = Object.prototype.hasOwnProperty.call(options, 'auth')\n    ? options.auth\n      ? 'authentication'\n      : undefined\n    : options.proofPurpose\n\n  let did\n\n  if (!payload.iss && !payload.client_id) {\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`)\n  }\n\n  if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {\n    if (!payload.sub) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`)\n    }\n    if (typeof payload.sub_jwk === 'undefined') {\n      did = payload.sub\n    } else {\n      did = (header.kid || '').split('#')[0]\n    }\n  } else if (payload.iss === SELF_ISSUED_V0_1) {\n    if (!payload.did) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`)\n    }\n    did = payload.did\n  } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {\n    // SIOP Request payload\n    // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object\n    if (!payload.client_id) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`)\n    }\n    did = payload.client_id\n  } else {\n    did = payload.iss\n  }\n\n  if (!did) {\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`)\n  }\n\n  const { didResolutionResult, authenticators, issuer }: DIDAuthenticator = await resolveAuthenticator(\n    options.resolver,\n    header.alg,\n    did,\n    proofPurpose\n  )\n  const signer: VerificationMethod = await verifyJWSDecoded({ header, data, signature } as JWSDecoded, authenticators)\n  const now: number = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000)\n  const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW\n  if (signer) {\n    const nowSkewed = now + skewTime\n    if (options.policies?.nbf !== false && payload.nbf) {\n      if (payload.nbf > nowSkewed) {\n        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`)\n      }\n    } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`)\n    }\n    if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`)\n    }\n    if (options.policies?.aud !== false && payload.aud) {\n      if (!options.audience && !options.callbackUrl) {\n        throw new Error(\n          `${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`\n        )\n      }\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\n      const matchedAudience = audArray.find((item) => options.audience === item || options.callbackUrl === item)\n\n      if (typeof matchedAudience === 'undefined') {\n        throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)\n      }\n    }\n    return { verified: true, payload, didResolutionResult, issuer, signer, jwt, policies: options.policies }\n  }\n  throw new Error(\n    `${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`\n  )\n}\n\n/**\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of\n * provided DID\n *\n *  @example\n *  ```ts\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\n *      const payload = obj.payload\n *      const profile = obj.profile\n *      const jwt = obj.jwt\n *      // ...\n *  })\n *  ```\n *\n *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`\n *  @param alg - {String} a JWT algorithm\n *  @param issuer - {String} a Decentralized Identifier (DID) to lookup\n *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the\n *   issuer DID document\n *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators\n *   or rejects with an error if none exist\n */\nexport async function resolveAuthenticator(\n  resolver: Resolvable,\n  alg: string,\n  issuer: string,\n  proofPurpose?: ProofPurposeTypes\n): Promise<DIDAuthenticator> {\n  const types: string[] = SUPPORTED_PUBLIC_KEY_TYPES[alg]\n  if (!types || types.length === 0) {\n    throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`)\n  }\n  let didResult: DIDResolutionResult\n\n  const result = (await resolver.resolve(issuer, { accept: DID_JSON })) as unknown\n  // support legacy resolvers that do not produce DIDResolutionResult\n  if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\n    didResult = {\n      didDocument: result as DIDDocument,\n      didDocumentMetadata: {},\n      didResolutionMetadata: { contentType: DID_JSON },\n    }\n  } else {\n    didResult = result as DIDResolutionResult\n  }\n\n  if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {\n    const { error, message } = didResult.didResolutionMetadata\n    throw new Error(\n      `${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`\n    )\n  }\n\n  const getPublicKeyById = (verificationMethods: VerificationMethod[], pubid?: string): VerificationMethod | null => {\n    const filtered = verificationMethods.filter(({ id }) => pubid === id)\n    return filtered.length > 0 ? filtered[0] : null\n  }\n\n  let publicKeysToCheck: VerificationMethod[] = [\n    ...(didResult?.didDocument?.verificationMethod || []),\n    ...(didResult?.didDocument?.publicKey || []),\n  ]\n  if (typeof proofPurpose === 'string') {\n    // support legacy DID Documents that do not list assertionMethod\n    if (\n      proofPurpose.startsWith('assertion') &&\n      !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')\n    ) {\n      didResult.didDocument = { ...(<DIDDocument>didResult.didDocument) }\n      didResult.didDocument.assertionMethod = [...publicKeysToCheck.map((pk) => pk.id)]\n    }\n\n    publicKeysToCheck = (didResult.didDocument[proofPurpose] || [])\n      .map((verificationMethod) => {\n        if (typeof verificationMethod === 'string') {\n          return getPublicKeyById(publicKeysToCheck, verificationMethod)\n        } else if (typeof (<LegacyVerificationMethod>verificationMethod).publicKey === 'string') {\n          // this is a legacy format\n          return getPublicKeyById(publicKeysToCheck, (<LegacyVerificationMethod>verificationMethod).publicKey)\n        } else {\n          return <VerificationMethod>verificationMethod\n        }\n      })\n      .filter((key) => key != null) as VerificationMethod[]\n  }\n\n  const authenticators: VerificationMethod[] = publicKeysToCheck.filter(({ type }) =>\n    types.find((supported) => supported === type)\n  )\n\n  if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\n    throw new Error(\n      `${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`\n    )\n  }\n  if (!authenticators || authenticators.length === 0) {\n    throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`)\n  }\n  return { authenticators, issuer, didResolutionResult: didResult }\n}\n","import { fromString } from 'uint8arrays'\nimport { base64ToBytes, bytesToBase64url, decodeBase64url, toSealed } from './util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ProtectedHeader = Record<string, any> & Partial<RecipientHeader>\n\n/**\n * The JWK representation of an ephemeral public key.\n * See https://www.rfc-editor.org/rfc/rfc7518.html#section-6\n */\ninterface EphemeralPublicKey {\n  kty?: string\n  //ECC\n  crv?: string\n  x?: string\n  y?: string\n  //RSA\n  n?: string\n  e?: string\n}\n\nexport interface RecipientHeader {\n  alg: string\n  iv: string\n  tag: string\n  epk?: EphemeralPublicKey\n  kid?: string\n  apv?: string\n  apu?: string\n}\n\nexport interface Recipient {\n  header: RecipientHeader\n  encrypted_key: string\n}\n\nexport interface JWE {\n  protected: string\n  iv: string\n  ciphertext: string\n  tag: string\n  aad?: string\n  recipients?: Recipient[]\n}\n\nexport interface EncryptionResult {\n  ciphertext: Uint8Array\n  tag: Uint8Array\n  iv: Uint8Array\n  protectedHeader?: string\n  recipient?: Recipient\n  cek?: Uint8Array\n}\n\nexport interface Encrypter {\n  alg: string\n  enc: string\n  encrypt: (cleartext: Uint8Array, protectedHeader: ProtectedHeader, aad?: Uint8Array) => Promise<EncryptionResult>\n  encryptCek?: (cek: Uint8Array) => Promise<Recipient>\n}\n\nexport interface Decrypter {\n  alg: string\n  enc: string\n  decrypt: (sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array, recipient?: Recipient) => Promise<Uint8Array | null>\n}\n\nfunction validateJWE(jwe: JWE) {\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\n    throw new Error('bad_jwe: missing properties')\n  }\n  if (jwe.recipients) {\n    jwe.recipients.map((rec) => {\n      if (!(rec.header && rec.encrypted_key)) {\n        throw new Error('bad_jwe: malformed recipients')\n      }\n    })\n  }\n}\n\nfunction encodeJWE({ ciphertext, tag, iv, protectedHeader, recipient }: EncryptionResult, aad?: Uint8Array): JWE {\n  const jwe: JWE = {\n    protected: <string>protectedHeader,\n    iv: bytesToBase64url(iv),\n    ciphertext: bytesToBase64url(ciphertext),\n    tag: bytesToBase64url(tag),\n  }\n  if (aad) jwe.aad = bytesToBase64url(aad)\n  if (recipient) jwe.recipients = [recipient]\n  return jwe\n}\n\nexport async function createJWE(\n  cleartext: Uint8Array,\n  encrypters: Encrypter[],\n  protectedHeader = {},\n  aad?: Uint8Array\n): Promise<JWE> {\n  if (encrypters[0].alg === 'dir') {\n    if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.')\n    const encryptionResult = await encrypters[0].encrypt(cleartext, protectedHeader, aad)\n    return encodeJWE(encryptionResult, aad)\n  } else {\n    const tmpEnc = encrypters[0].enc\n    if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\n      throw new Error('invalid_argument: Incompatible encrypters passed')\n    }\n    let cek\n    let jwe\n    for (const encrypter of encrypters) {\n      if (!cek) {\n        const encryptionResult = await encrypter.encrypt(cleartext, protectedHeader, aad)\n        cek = encryptionResult.cek\n        jwe = encodeJWE(encryptionResult, aad)\n      } else {\n        const recipient = await encrypter.encryptCek?.(cek)\n        if (recipient) {\n          jwe?.recipients?.push(recipient)\n        }\n      }\n    }\n    return <JWE>jwe\n  }\n}\n\nexport async function decryptJWE(jwe: JWE, decrypter: Decrypter): Promise<Uint8Array> {\n  validateJWE(jwe)\n  const protHeader = JSON.parse(decodeBase64url(jwe.protected))\n  if (protHeader.enc !== decrypter.enc)\n    throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`)\n  const sealed = toSealed(jwe.ciphertext, jwe.tag)\n  const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected)\n  let cleartext = null\n  if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\n    cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)\n  } else if (!jwe.recipients || jwe.recipients.length === 0) {\n    throw new Error('bad_jwe: missing recipients')\n  } else {\n    for (let i = 0; !cleartext && i < jwe.recipients.length; i++) {\n      const recipient = jwe.recipients[i]\n      Object.assign(recipient.header, protHeader)\n      if (recipient.header.alg === decrypter.alg) {\n        cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)\n      }\n    }\n  }\n  if (cleartext === null) throw new Error('failure: Failed to decrypt')\n  return cleartext\n}\n","import { sharedKey } from '@stablelib/x25519'\n\n/**\n * A wrapper around `mySecretKey` that can compute a shared secret using `theirPublicKey`.\n * The promise should resolve to a `Uint8Array` containing the raw shared secret.\n *\n * This method is meant to be used when direct access to a secret key is impossible or not desired.\n *\n * @param theirPublicKey `Uint8Array` the other party's public key\n * @returns a `Promise` that resolves to a `Uint8Array` representing the computed shared secret\n */\nexport type ECDH = (theirPublicKey: Uint8Array) => Promise<Uint8Array>\n\n/**\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\n *\n * @throws 'invalid_argument:...' if the secret key size is wrong\n */\nexport function createX25519ECDH(mySecretKey: Uint8Array): ECDH {\n  if (mySecretKey.length !== 32) {\n    throw new Error('invalid_argument: incorrect secret key length for X25519')\n  }\n  return async (theirPublicKey: Uint8Array): Promise<Uint8Array> => {\n    if (theirPublicKey.length !== 32) {\n      throw new Error('invalid_argument: incorrect publicKey key length for X25519')\n    }\n    return sharedKey(mySecretKey, theirPublicKey)\n  }\n}\n","import { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305'\nimport { generateKeyPair, sharedKey } from '@stablelib/x25519'\nimport { randomBytes } from '@stablelib/random'\nimport { concatKDF } from './Digest'\nimport { bytesToBase64url, base58ToBytes, encodeBase64url, toSealed, base64ToBytes } from './util'\nimport { Recipient, EncryptionResult, Encrypter, Decrypter, ProtectedHeader } from './JWE'\nimport type { VerificationMethod, Resolvable } from 'did-resolver'\nimport { ECDH } from './ECDH'\nimport { fromString } from 'uint8arrays/from-string'\n\n/**\n * Extra parameters for JWE using authenticated encryption\n */\nexport type AuthEncryptParams = {\n  /**\n   * recipient key ID\n   */\n  kid?: string\n\n  /**\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.2}\n   * base64url encoded\n   */\n  apu?: string\n\n  /**\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.3}\n   * base64url encoded\n   */\n  apv?: string\n}\n\n/**\n * Extra parameters for JWE using anonymous encryption\n */\nexport type AnonEncryptParams = {\n  /**\n   * recipient key ID\n   */\n  kid?: string\n}\n\n/**\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\n * sender private key to encrypt the data).\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\n *\n * @param recipientPublicKey the byte array representing the recipient public key\n * @param senderSecret either a Uint8Array representing the sender secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\n *\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\n *\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\n * are subject to change as new revisions or until the official CFRG specification are released.\n *\n * @beta\n */\nexport function createAuthEncrypter(\n  recipientPublicKey: Uint8Array,\n  senderSecret: Uint8Array | ECDH,\n  options: Partial<AuthEncryptParams> = {}\n): Encrypter {\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options)\n}\n\n/**\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\n *\n * @param publicKey the byte array representing the recipient public key\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\n *\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\n *\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\n * is subject to change as new revisions or until the official CFRG specification is released.\n *\n * @beta\n */\nexport function createAnonEncrypter(publicKey: Uint8Array, options: Partial<AnonEncryptParams> = {}): Encrypter {\n  return x25519Encrypter(publicKey, options?.kid)\n}\n\n/**\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\n * sender public key to decrypt the data).\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\n *\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n * @param senderPublicKey the byte array representing the sender public key\n *\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\n *\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\n * are subject to change as new revisions or until the official CFRG specification are released.\n *\n * @beta\n */\nexport function createAuthDecrypter(recipientSecret: Uint8Array | ECDH, senderPublicKey: Uint8Array): Decrypter {\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey)\n}\n\n/**\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\n *\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n *\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\n *\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\n * is subject to change as new revisions or until the official CFRG specification is released.\n *\n * @beta\n */\nexport function createAnonDecrypter(recipientSecret: Uint8Array | ECDH): Decrypter {\n  return x25519Decrypter(recipientSecret)\n}\n\nfunction xc20pEncrypter(key: Uint8Array): (cleartext: Uint8Array, aad?: Uint8Array) => EncryptionResult {\n  const cipher = new XChaCha20Poly1305(key)\n  return (cleartext: Uint8Array, aad?: Uint8Array) => {\n    const iv = randomBytes(cipher.nonceLength)\n    const sealed = cipher.seal(iv, cleartext, aad)\n    return {\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\n      iv,\n    }\n  }\n}\n\nexport function xc20pDirEncrypter(key: Uint8Array): Encrypter {\n  const xc20pEncrypt = xc20pEncrypter(key)\n  const enc = 'XC20P'\n  const alg = 'dir'\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    const protHeader = encodeBase64url(JSON.stringify(Object.assign({ alg }, protectedHeader, { enc })))\n    const encodedAad = fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader)\n    return {\n      ...xc20pEncrypt(cleartext, encodedAad),\n      protectedHeader: protHeader,\n    }\n  }\n  return { alg, enc, encrypt }\n}\n\nexport function xc20pDirDecrypter(key: Uint8Array): Decrypter {\n  const cipher = new XChaCha20Poly1305(key)\n  async function decrypt(sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array): Promise<Uint8Array | null> {\n    return cipher.open(iv, sealed, aad)\n  }\n  return { alg: 'dir', enc: 'XC20P', decrypt }\n}\n\nexport function x25519Encrypter(publicKey: Uint8Array, kid?: string): Encrypter {\n  const alg = 'ECDH-ES+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\n    const epk = generateKeyPair()\n    const sharedSecret = sharedKey(epk.secretKey, publicKey)\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg)\n    const res = xc20pEncrypter(kek)(cek)\n    const recipient: Recipient = {\n      encrypted_key: bytesToBase64url(res.ciphertext),\n      header: {\n        alg,\n        iv: bytesToBase64url(res.iv),\n        tag: bytesToBase64url(res.tag),\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\n      },\n    }\n    if (kid) recipient.header.kid = kid\n    return recipient\n  }\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    // we won't want alg to be set to dir from xc20pDirEncrypter\n    Object.assign(protectedHeader, { alg: undefined })\n    // Content Encryption Key\n    const cek = randomBytes(32)\n    return {\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\n      recipient: await encryptCek(cek),\n      cek,\n    }\n  }\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\n}\n\n/**\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\n */\nexport function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(\n  recipientPublicKey: Uint8Array,\n  senderSecret: Uint8Array | ECDH,\n  options: Partial<AuthEncryptParams> = {}\n): Encrypter {\n  const alg = 'ECDH-1PU+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n\n  let partyUInfo: Uint8Array\n  let partyVInfo: Uint8Array\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu)\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv)\n\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\n    const epk = generateKeyPair()\n    const zE = sharedKey(epk.secretKey, recipientPublicKey)\n\n    // ECDH-1PU requires additional shared secret between\n    // static key of sender and static key of recipient\n    let zS\n    if (senderSecret instanceof Uint8Array) {\n      zS = sharedKey(senderSecret, recipientPublicKey)\n    } else {\n      zS = await senderSecret(recipientPublicKey)\n    }\n\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\n    sharedSecret.set(zE)\n    sharedSecret.set(zS, zE.length)\n\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo)\n\n    const res = xc20pEncrypter(kek)(cek)\n    const recipient: Recipient = {\n      encrypted_key: bytesToBase64url(res.ciphertext),\n      header: {\n        alg,\n        iv: bytesToBase64url(res.iv),\n        tag: bytesToBase64url(res.tag),\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\n      },\n    }\n    if (options.kid) recipient.header.kid = options.kid\n    if (options.apu) recipient.header.apu = options.apu\n    if (options.apv) recipient.header.apv = options.apv\n\n    return recipient\n  }\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    // we won't want alg to be set to dir from xc20pDirEncrypter\n    Object.assign(protectedHeader, { alg: undefined })\n    // Content Encryption Key\n    const cek = randomBytes(32)\n    return {\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\n      recipient: await encryptCek(cek),\n      cek,\n    }\n  }\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\n}\n\nexport async function resolveX25519Encrypters(dids: string[], resolver: Resolvable): Promise<Encrypter[]> {\n  const encryptersForDID = async (did: string, resolved: string[] = []): Promise<Encrypter[]> => {\n    const { didResolutionMetadata, didDocument } = await resolver.resolve(did)\n    resolved.push(did)\n    if (didResolutionMetadata?.error || didDocument == null) {\n      throw new Error(\n        `resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`\n      )\n    }\n    let controllerEncrypters: Encrypter[] = []\n    if (!didDocument.controller && !didDocument.keyAgreement) {\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\n    }\n    if (didDocument.controller) {\n      let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller]\n      controllers = controllers.filter((c) => !resolved.includes(c))\n      const encrypterPromises = controllers.map((did) =>\n        encryptersForDID(did, resolved).catch(() => {\n          return []\n        })\n      )\n      const encrypterArrays = await Promise.all(encrypterPromises)\n      controllerEncrypters = ([] as Encrypter[]).concat(...encrypterArrays)\n    }\n    const agreementKeys: VerificationMethod[] = didDocument.keyAgreement\n      ?.map((key) => {\n        if (typeof key === 'string') {\n          return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(\n            (pk) => pk.id === key\n          )\n        }\n        return key\n      })\n      ?.filter((key) => typeof key !== 'undefined') as VerificationMethod[]\n    const pks =\n      agreementKeys?.filter((key) => {\n        // TODO: should be able to use non base58 keys too\n        return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58)\n      }) || []\n    if (!pks.length && !controllerEncrypters.length)\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\n    return pks\n      .map((pk) => x25519Encrypter(base58ToBytes(<string>pk.publicKeyBase58), pk.id))\n      .concat(...controllerEncrypters)\n  }\n\n  const encrypterPromises = dids.map((did) => encryptersForDID(did))\n  const encrypterArrays = await Promise.all(encrypterPromises)\n  const flattenedArray = ([] as Encrypter[]).concat(...encrypterArrays)\n  return flattenedArray\n}\n\nfunction validateHeader(header?: ProtectedHeader) {\n  if (!(header && header.epk && header.iv && header.tag)) {\n    throw new Error('bad_jwe: malformed header')\n  }\n}\n\nexport function x25519Decrypter(receiverSecret: Uint8Array | ECDH): Decrypter {\n  const alg = 'ECDH-ES+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function decrypt(\n    sealed: Uint8Array,\n    iv: Uint8Array,\n    aad?: Uint8Array,\n    recipient?: Recipient\n  ): Promise<Uint8Array | null> {\n    validateHeader(recipient?.header)\n    recipient = <Recipient>recipient\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\n    const publicKey = base64ToBytes(recipient.header.epk.x)\n    let sharedSecret\n    if (receiverSecret instanceof Uint8Array) {\n      sharedSecret = sharedKey(receiverSecret, publicKey)\n    } else {\n      sharedSecret = await receiverSecret(publicKey)\n    }\n\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg)\n    // Content Encryption Key\n    const sealedCek = toSealed(<string>recipient.encrypted_key, recipient.header.tag)\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\n    if (cek === null) return null\n\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\n  }\n  return { alg, enc: 'XC20P', decrypt }\n}\n\n/**\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\n */\nexport function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(\n  recipientSecret: Uint8Array | ECDH,\n  senderPublicKey: Uint8Array\n): Decrypter {\n  const alg = 'ECDH-1PU+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function decrypt(\n    sealed: Uint8Array,\n    iv: Uint8Array,\n    aad?: Uint8Array,\n    recipient?: Recipient\n  ): Promise<Uint8Array | null> {\n    recipient = <Recipient>recipient\n    validateHeader(recipient.header)\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\n    // ECDH-1PU requires additional shared secret between\n    // static key of sender and static key of recipient\n    const publicKey = base64ToBytes(recipient.header.epk.x)\n    let zE: Uint8Array\n    let zS: Uint8Array\n\n    if (recipientSecret instanceof Uint8Array) {\n      zE = sharedKey(recipientSecret, publicKey)\n      zS = sharedKey(recipientSecret, senderPublicKey)\n    } else {\n      zE = await recipientSecret(publicKey)\n      zS = await recipientSecret(senderPublicKey)\n    }\n\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\n    sharedSecret.set(zE)\n    sharedSecret.set(zS, zE.length)\n\n    // Key Encryption Key\n    let producerInfo\n    let consumerInfo\n    if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu)\n    if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv)\n\n    const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo)\n    // Content Encryption Key\n    const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag)\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\n    if (cek === null) return null\n\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\n  }\n  return { alg, enc: 'XC20P', decrypt }\n}\n"],"names":["bytesToBase64url","b","u8a","toString","base64ToBytes","s","inputBase64Url","replace","fromString","base58ToBytes","bytesToBase58","hexToBytes","input","startsWith","substring","toLowerCase","encodeBase64url","decodeBase64url","bytesToHex","stringToBytes","toJose","r","recoveryParam","recoverable","jose","Uint8Array","set","Error","fromJose","signature","signatureBytes","length","TypeError","slice","undefined","toSealed","ciphertext","tag","concat","leftpad","data","size","repeat","zl","zr","sl","sr","hl","hr","rotl","x","n","fn1","a","c","d","e","m","k","fn2","fn3","fn4","fn5","Ripemd160","constructor","blockSize","_a","_b","_c","_d","_e","_blockOffset","_block","_blockSize","_length","_finalized","update","block","offset","i","_update","j","carry","digest","_digest","fill","words","Array","temp","DataView","buffer","getInt32","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","setUint32","setInt32","sha256","payload","hash","keccak","sha3","keccak_256","arrayBuffer","toEthereumAddress","hexPublicKey","hashInput","ripemd160","writeUint32BE","value","array","encoded","lengthAndInput","concatKDF","secret","keyLen","alg","producerInfo","consumerInfo","roundNumber","secp256k1","elliptic","ec","ES256KSigner","privateKey","privateKeyBytes","keyPair","keyFromPrivate","sign","SimpleSigner","hexPrivateKey","signer","EllipticSigner","EdDSASigner","secretKey","dataBytes","sig","NaclSigner","base64PrivateKey","secp256r1","ES256Signer","instanceOfEcdsaSignature","object","ES256SignerAlg","ES256KSignerAlg","Ed25519SignerAlg","algorithms","ES256","ES256K","Ed25519","EdDSA","SignerAlg","impl","publicKeyToAddress","publicKey","otherAddress","version","publicKeyBuffer","publicKeyHash","step1","step2","step3","checksum","step4","EC","prefix","compressedPublicKey","keyFromPublic","getPublic","encode","bech32","toWords","verifyBlockchainAccountId","blockchainAccountId","chain","split","bip122","cosmos","join","toSignatureObject","rawSig","sigObj","extractPublicKeyBytes","pk","publicKeyBase58","publicKeyBase64","publicKeyHex","publicKeyJwk","crv","y","kty","publicKeyMultibase","base16","base58btc","base64","base64url","bases","baseDecoder","decoder","or","decode","verifyES256","authenticators","fullPublicKeys","filter","ethereumAddress","find","pubBytes","verify","err","verifyES256K","blockchainAddressKeys","verifyRecoverableES256K","signatures","so","checkSignatureAgainstSigner","recoveredKey","recoverPubKey","recoveredPublicKeyHex","recoveredCompressedPublicKeyHex","recoveredAddress","keyHex","map","key","verifyEd25519","clear","VerifierAlgorithm","JWT_ERROR","INVALID_JWT","INVALID_AUDIENCE","INVALID_SIGNATURE","NO_SUITABLE_KEYS","NOT_SUPPORTED","RESOLVER_ERROR","resolveAuthenticator","resolver","issuer","proofPurpose","types","SUPPORTED_PUBLIC_KEY_TYPES","didResult","resolve","accept","DID_JSON","result","Object","getOwnPropertyNames","indexOf","didDocument","didDocumentMetadata","didResolutionMetadata","contentType","error","message","getPublicKeyById","verificationMethods","pubid","filtered","id","publicKeysToCheck","verificationMethod","includes","assertionMethod","type","supported","didResolutionResult","verifyJWT","jwt","options","auth","audience","callbackUrl","skewTime","policies","header","decodeJWT","prototype","hasOwnProperty","call","did","iss","client_id","SELF_ISSUED_V2","SELF_ISSUED_V2_VC_INTEROP","sub","sub_jwk","kid","SELF_ISSUED_V0_1","scope","redirect_uri","verifyJWSDecoded","now","Math","floor","Date","NBF_SKEW","nowSkewed","nbf","iat","exp","aud","audArray","isArray","matchedAudience","item","verified","createJWT","expiresIn","canonicalize","typ","timestamps","fullPayload","createJWS","defaultAlg","encodedPayload","encodeSection","signingInput","jwtSigner","shouldCanonicalize","canonicalizeData","JSON","stringify","decodeJWS","jws","parts","match","parse","decodedJwt","assign","pubKeys","verifyJWS","jwsDecoded","bind","then","v","pact","onFulfilled","_this","thenable","validateJWE","jwe","protected","iv","recipients","rec","encrypted_key","encodeJWE","protectedHeader","recipient","aad","decryptJWE","decrypter","cleartext","protHeader","enc","sealed","decrypt","createJWE","encrypters","encrypt","encryptionResult","tmpEnc","reduce","acc","encrypter","cek","encryptCek","push","createX25519ECDH","mySecretKey","theirPublicKey","sharedKey","resolveX25519Encrypters","dids","encryptersForDID","resolved","agreementKeys","keyAgreement","pks","Boolean","controllerEncrypters","x25519Encrypter","controller","controllers","encrypterPromises","catch","Promise","all","encrypterArrays","flattenedArray","createAuthEncrypter","recipientPublicKey","senderSecret","xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonEncrypter","createAuthDecrypter","recipientSecret","senderPublicKey","xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonDecrypter","x25519Decrypter","xc20pEncrypter","cipher","XChaCha20Poly1305","randomBytes","nonceLength","seal","subarray","tagLength","xc20pDirEncrypter","encodedAad","xc20pEncrypt","xc20pDirDecrypter","open","epk","generateKeyPair","sharedSecret","kek","res","zE","zS","partyUInfo","partyVInfo","apu","apv","validateHeader","receiverSecret","sealedCek"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.module.js","sources":["../src/util.ts","../src/blockchains/utils/ripemd160.ts","../src/Digest.ts","../src/signers/ES256KSigner.ts","../src/signers/SimpleSigner.ts","../src/signers/EllipticSigner.ts","../src/signers/EdDSASigner.ts","../src/signers/NaclSigner.ts","../src/signers/ES256Signer.ts","../src/SignerAlgorithm.ts","../src/blockchains/bip122.ts","../src/blockchains/cosmos.ts","../src/blockchains/index.ts","../src/VerifierAlgorithm.ts","../src/Errors.ts","../src/JWT.ts","../src/JWE.ts","../src/ECDH.ts","../src/xc20pEncryption.ts"],"sourcesContent":["import * as u8a from 'uint8arrays'\r\nimport { bases } from 'multiformats/basics'\r\n\r\n/**\r\n * @deprecated Signers will be expected to return base64url `string` signatures.\r\n */\r\nexport interface EcdsaSignature {\r\n  r: string\r\n  s: string\r\n  recoveryParam?: number | null\r\n}\r\n\r\nexport function bytesToBase64url(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64url')\r\n}\r\n\r\nexport function base64ToBytes(s: string): Uint8Array {\r\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\r\n  return u8a.fromString(inputBase64Url, 'base64url')\r\n}\r\n\r\nexport function bytesToBase64(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64pad')\r\n}\r\n\r\nexport function base58ToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s, 'base58btc')\r\n}\r\n\r\nexport function bytesToBase58(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base58btc')\r\n}\r\n\r\nexport function bytesToMultibase(b: Uint8Array, base: keyof typeof bases): string {\r\n  return bases[base].encode(b)\r\n}\r\n\r\nexport function hexToBytes(s: string): Uint8Array {\r\n  const input = s.startsWith('0x') ? s.substring(2) : s\r\n  return u8a.fromString(input.toLowerCase(), 'base16')\r\n}\r\n\r\nexport function encodeBase64url(s: string): string {\r\n  return bytesToBase64url(u8a.fromString(s))\r\n}\r\n\r\nexport function decodeBase64url(s: string): string {\r\n  return u8a.toString(base64ToBytes(s))\r\n}\r\n\r\nexport function bytesToHex(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base16')\r\n}\r\n\r\nexport function stringToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s)\r\n}\r\n\r\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\r\n  const jose = new Uint8Array(recoverable ? 65 : 64)\r\n  jose.set(u8a.fromString(r, 'base16'), 0)\r\n  jose.set(u8a.fromString(s, 'base16'), 32)\r\n  if (recoverable) {\r\n    if (typeof recoveryParam === 'undefined') {\r\n      throw new Error('Signer did not return a recoveryParam')\r\n    }\r\n    jose[64] = <number>recoveryParam\r\n  }\r\n  return bytesToBase64url(jose)\r\n}\r\n\r\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\r\n  const signatureBytes: Uint8Array = base64ToBytes(signature)\r\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\r\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`)\r\n  }\r\n  const r = bytesToHex(signatureBytes.slice(0, 32))\r\n  const s = bytesToHex(signatureBytes.slice(32, 64))\r\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined\r\n  return { r, s, recoveryParam }\r\n}\r\n\r\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\r\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)])\r\n}\r\n\r\nexport function leftpad(data: string, size = 64): string {\r\n  if (data.length === size) return data\r\n  return '0'.repeat(size - data.length) + data\r\n}\r\n","// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\r\n\r\nconst zl = [\r\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14,\r\n  4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,\r\n  10, 14, 1, 3, 8, 11, 6, 15, 13,\r\n]\r\n\r\nconst zr = [\r\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1,\r\n  3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5,\r\n  8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\r\n]\r\n\r\nconst sl = [\r\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11,\r\n  13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,\r\n  11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\r\n]\r\n\r\nconst sr = [\r\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7,\r\n  15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,\r\n  12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\r\n]\r\n\r\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\r\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\r\n\r\nfunction rotl(x: number, n: number) {\r\n  return (x << n) | (x >>> (32 - n))\r\n}\r\n\r\nfunction fn1(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn2(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn3(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn4(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn5(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nexport class Ripemd160 {\r\n  // state\r\n  private _a = 0x67452301\r\n  private _b = 0xefcdab89\r\n  private _c = 0x98badcfe\r\n  private _d = 0x10325476\r\n  private _e = 0xc3d2e1f0\r\n  private _blockOffset = 0\r\n  private _block: Uint8Array\r\n  private _blockSize: number\r\n  private _length = [0, 0, 0, 0]\r\n  private _finalized: boolean\r\n\r\n  constructor(blockSize = 64) {\r\n    this._block = new Uint8Array(blockSize)\r\n    this._blockSize = blockSize\r\n    this._blockOffset = 0\r\n    this._length = [0, 0, 0, 0]\r\n    this._finalized = false\r\n  }\r\n\r\n  update = (data: Uint8Array): Ripemd160 => {\r\n    if (this._finalized) throw new Error('Digest already called')\r\n\r\n    // consume data\r\n    const block = this._block\r\n    let offset = 0\r\n    while (this._blockOffset + data.length - offset >= this._blockSize) {\r\n      for (let i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++]\r\n      this._update()\r\n      this._blockOffset = 0\r\n    }\r\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\r\n\r\n    // update length\r\n    for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\r\n      this._length[j] += carry\r\n      carry = (this._length[j] / 0x0100000000) | 0\r\n      if (carry > 0) this._length[j] -= 0x0100000000 * carry\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  digest = (): Uint8Array => {\r\n    if (this._finalized) throw new Error('Digest already called')\r\n    this._finalized = true\r\n\r\n    const digest = this._digest()\r\n\r\n    // reset state\r\n    this._block.fill(0)\r\n    this._blockOffset = 0\r\n    for (let i = 0; i < 4; ++i) this._length[i] = 0\r\n\r\n    return digest\r\n  }\r\n\r\n  private _update = () => {\r\n    const words = new Array(16)\r\n    const temp = new DataView(this._block.buffer)\r\n    for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true)\r\n\r\n    let al = this._a | 0\r\n    let bl = this._b | 0\r\n    let cl = this._c | 0\r\n    let dl = this._d | 0\r\n    let el = this._e | 0\r\n\r\n    let ar = this._a | 0\r\n    let br = this._b | 0\r\n    let cr = this._c | 0\r\n    let dr = this._d | 0\r\n    let er = this._e | 0\r\n\r\n    // computation\r\n    for (let i = 0; i < 80; i += 1) {\r\n      let tl\r\n      let tr\r\n      if (i < 16) {\r\n        tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\r\n        tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\r\n      } else if (i < 32) {\r\n        tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\r\n        tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\r\n      } else if (i < 48) {\r\n        tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\r\n        tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\r\n      } else if (i < 64) {\r\n        tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\r\n        tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\r\n      } else {\r\n        // if (i<80) {\r\n        tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\r\n        tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\r\n      }\r\n\r\n      al = el\r\n      el = dl\r\n      dl = rotl(cl, 10)\r\n      cl = bl\r\n      bl = tl\r\n\r\n      ar = er\r\n      er = dr\r\n      dr = rotl(cr, 10)\r\n      cr = br\r\n      br = tr\r\n    }\r\n\r\n    // update state\r\n    const t = (this._b + cl + dr) | 0\r\n    this._b = (this._c + dl + er) | 0\r\n    this._c = (this._d + el + ar) | 0\r\n    this._d = (this._e + al + br) | 0\r\n    this._e = (this._a + bl + cr) | 0\r\n    this._a = t\r\n  }\r\n\r\n  private _digest = () => {\r\n    // create padding and handle blocks\r\n    this._block[this._blockOffset++] = 0x80\r\n    if (this._blockOffset > 56) {\r\n      this._block.fill(0, this._blockOffset, 64)\r\n      this._update()\r\n      this._blockOffset = 0\r\n    }\r\n\r\n    this._block.fill(0, this._blockOffset, 56)\r\n    const temp = new DataView(this._block.buffer)\r\n    temp.setUint32(56, this._length[0], true)\r\n    temp.setUint32(60, this._length[1], true)\r\n    this._block = new Uint8Array(temp.buffer)\r\n    this._update()\r\n\r\n    // produce result\r\n    const buffer = new DataView(new Uint8Array(20).buffer)\r\n    buffer.setInt32(0, this._a, true)\r\n    buffer.setInt32(4, this._b, true)\r\n    buffer.setInt32(8, this._c, true)\r\n    buffer.setInt32(12, this._d, true)\r\n    buffer.setInt32(16, this._e, true)\r\n\r\n    return new Uint8Array(buffer.buffer)\r\n  }\r\n}\r\n","import { hash } from '@stablelib/sha256'\r\nimport { Ripemd160 } from './blockchains/utils/ripemd160'\r\nimport * as u8a from 'uint8arrays'\r\nimport sha3 from 'js-sha3'\r\n\r\nexport function sha256(payload: string | Uint8Array): Uint8Array {\r\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload\r\n  return hash(data)\r\n}\r\n\r\nexport function keccak(data: Uint8Array): Uint8Array {\r\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data))\r\n}\r\n\r\nexport function toEthereumAddress(hexPublicKey: string): string {\r\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16')\r\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`\r\n}\r\n\r\nexport function ripemd160(data: Uint8Array): Uint8Array {\r\n  return new Ripemd160().update(data).digest()\r\n}\r\n\r\nfunction writeUint32BE(value: number, array = new Uint8Array(4)): Uint8Array {\r\n  const encoded = u8a.fromString(value.toString(), 'base10')\r\n  array.set(encoded, 4 - encoded.length)\r\n  return array\r\n}\r\n\r\nconst lengthAndInput = (input: Uint8Array): Uint8Array => u8a.concat([writeUint32BE(input.length), input])\r\n\r\n// This implementation of concatKDF was inspired by these two implementations:\r\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\r\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\r\nexport function concatKDF(\r\n  secret: Uint8Array,\r\n  keyLen: number,\r\n  alg: string,\r\n  producerInfo?: Uint8Array,\r\n  consumerInfo?: Uint8Array\r\n): Uint8Array {\r\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`)\r\n  const value = u8a.concat([\r\n    lengthAndInput(u8a.fromString(alg)),\r\n    lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), // apu\r\n    lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), // apv\r\n    writeUint32BE(keyLen),\r\n  ])\r\n\r\n  // since our key lenght is 256 we only have to do one round\r\n  const roundNumber = 1\r\n  return sha256(u8a.concat([writeUint32BE(roundNumber), secret, value]))\r\n}\r\n","import { leftpad } from '../util'\r\nimport { toJose } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { sha256 } from '../Digest'\r\nimport elliptic from 'elliptic'\r\n\r\nconst secp256k1 = new elliptic.ec('secp256k1')\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array`\r\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function ES256KSigner(privateKey: Uint8Array, recoverable = false): Signer {\r\n  const privateKeyBytes: Uint8Array = privateKey\r\n  if (privateKeyBytes.length !== 32) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  const keyPair: elliptic.ec.KeyPair = secp256k1.keyFromPrivate(privateKeyBytes)\r\n\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const { r, s, recoveryParam }: elliptic.ec.Signature = keyPair.sign(sha256(data))\r\n    return toJose(\r\n      {\r\n        r: leftpad(r.toString('hex')),\r\n        s: leftpad(s.toString('hex')),\r\n        recoveryParam,\r\n      },\r\n      recoverable\r\n    )\r\n  }\r\n}\r\n","import { fromJose, hexToBytes } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { ES256KSigner } from './ES256KSigner'\r\n\r\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The SimpleSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\r\n *  signer(data, (err, signature) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\r\nfunction SimpleSigner(hexPrivateKey: string): Signer {\r\n  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true)\r\n  return async (data) => {\r\n    const signature = (await signer(data)) as string\r\n    return fromJose(signature)\r\n  }\r\n}\r\n\r\nexport default SimpleSigner\r\n","import { hexToBytes } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { ES256KSigner } from './ES256KSigner'\r\n\r\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The EllipticSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                        a configured signer function\r\n */\r\nfunction EllipticSigner(hexPrivateKey: string): Signer {\r\n  return ES256KSigner(hexToBytes(hexPrivateKey))\r\n}\r\n\r\nexport default EllipticSigner\r\n","import { sign } from '@stablelib/ed25519'\r\nimport { Signer } from '../JWT'\r\nimport { bytesToBase64url, stringToBytes } from '../util'\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`\r\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function EdDSASigner(secretKey: Uint8Array): Signer {\r\n  const privateKeyBytes: Uint8Array = secretKey\r\n  if (privateKeyBytes.length !== 64) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data\r\n    const sig: Uint8Array = sign(privateKeyBytes, dataBytes)\r\n    return bytesToBase64url(sig)\r\n  }\r\n}\r\n","import { EdDSASigner as EdDSASigner } from './EdDSASigner'\r\nimport { Signer } from '../JWT'\r\nimport { base64ToBytes } from '../util'\r\n\r\n/**\r\n * @deprecated Please use EdDSASigner\r\n *\r\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\r\n *\r\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\r\n *\r\n *  @example\r\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\r\n *  const data: string = '...'\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\r\n\r\nfunction NaclSigner(base64PrivateKey: string): Signer {\r\n  return EdDSASigner(base64ToBytes(base64PrivateKey))\r\n}\r\n\r\nexport default NaclSigner\r\n","import { leftpad } from '../util'\r\nimport { toJose } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { sha256 } from '../Digest'\r\nimport elliptic from 'elliptic'\r\n\r\nconst secp256r1 = new elliptic.ec('p256')\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array`\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function ES256Signer(privateKey: Uint8Array): Signer {\r\n  const privateKeyBytes: Uint8Array = privateKey\r\n  if (privateKeyBytes.length !== 32) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  const keyPair: elliptic.ec.KeyPair = secp256r1.keyFromPrivate(privateKeyBytes)\r\n\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const { r, s }: elliptic.ec.Signature = keyPair.sign(sha256(data))\r\n    return toJose({\r\n      r: leftpad(r.toString('hex')),\r\n      s: leftpad(s.toString('hex')),\r\n    })\r\n  }\r\n}\r\n","import { Signer, SignerAlgorithm } from './JWT'\r\nimport { EcdsaSignature, fromJose, toJose } from './util'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction instanceOfEcdsaSignature(object: any): object is EcdsaSignature {\r\n  return typeof object === 'object' && 'r' in object && 's' in object\r\n}\r\n\r\nexport function ES256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (instanceOfEcdsaSignature(signature)) {\r\n      return toJose(signature)\r\n    } else {\r\n      return signature\r\n    }\r\n  }\r\n}\r\n\r\nexport function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (instanceOfEcdsaSignature(signature)) {\r\n      return toJose(signature, recoverable)\r\n    } else {\r\n      if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\r\n        throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`)\r\n      }\r\n      return signature\r\n    }\r\n  }\r\n}\r\n\r\nexport function Ed25519SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (!instanceOfEcdsaSignature(signature)) {\r\n      return signature\r\n    } else {\r\n      throw new Error('invalid_config: expected a signer function that returns a string instead of signature object')\r\n    }\r\n  }\r\n}\r\n\r\nexport function RS256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    return signature as string\r\n  }\r\n}\r\n\r\nexport function PS256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    return signature as string\r\n  }\r\n}\r\n\r\ninterface SignerAlgorithms {\r\n  [alg: string]: SignerAlgorithm\r\n}\r\n\r\nconst algorithms: SignerAlgorithms = {\r\n  ES256: ES256SignerAlg(),\r\n  ES256K: ES256KSignerAlg(),\r\n  // This is a non-standard algorithm but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\r\n  'ES256K-R': ES256KSignerAlg(true),\r\n  // This is actually incorrect but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\r\n  Ed25519: Ed25519SignerAlg(),\r\n  EdDSA: Ed25519SignerAlg(),\r\n  RS256: RS256SignerAlg(),\r\n  PS256: PS256SignerAlg(),\r\n}\r\n\r\nfunction SignerAlg(alg: string): SignerAlgorithm {\r\n  const impl: SignerAlgorithm = algorithms[alg]\r\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\r\n  return impl\r\n}\r\n\r\nexport default SignerAlg\r\n","import * as u8a from 'uint8arrays'\r\nimport { bytesToBase58, base58ToBytes } from '../util'\r\nimport { sha256, ripemd160 } from '../Digest'\r\n\r\nexport const publicKeyToAddress = (publicKey: string, otherAddress: string): string => {\r\n  // Use the same version/prefix byte as the given address.\r\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex')\r\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex')\r\n  const publicKeyHash = ripemd160(sha256(publicKeyBuffer))\r\n  const step1 = version + u8a.toString(publicKeyHash, 'hex')\r\n  const step2 = sha256(u8a.fromString(step1, 'hex'))\r\n  const step3 = sha256(step2)\r\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8)\r\n  const step4 = step1 + checksum\r\n  return bytesToBase58(u8a.fromString(step4, 'hex'))\r\n}\r\n","import elliptic from 'elliptic'\r\nimport { bech32 } from 'bech32'\r\nimport * as u8a from 'uint8arrays'\r\nimport { sha256, ripemd160 } from '../Digest'\r\n\r\nconst EC = elliptic.ec\r\n\r\nexport const publicKeyToAddress = (publicKey: string, prefix: string): string => {\r\n  const ec = new EC('secp256k1')\r\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true)\r\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex')\r\n  const hash = ripemd160(sha256(publicKeyBuffer))\r\n  const words = bech32.toWords(hash)\r\n  return bech32.encode(prefix, words).replace(prefix, '')\r\n}\r\n","import { publicKeyToAddress as bip122 } from './bip122'\r\nimport { publicKeyToAddress as cosmos } from './cosmos'\r\nimport { toEthereumAddress } from '../Digest'\r\n\r\nexport const verifyBlockchainAccountId = (publicKey: string, blockchainAccountId: string | undefined): boolean => {\r\n  if (blockchainAccountId) {\r\n    const chain = blockchainAccountId.split(':')\r\n    switch (chain[0]) {\r\n      case 'bip122':\r\n        chain[chain.length - 1] = bip122(publicKey, chain[chain.length - 1])\r\n        break\r\n      case 'cosmos':\r\n        chain[chain.length - 1] = cosmos(publicKey, chain[1])\r\n        break\r\n      case 'eip155':\r\n        chain[chain.length - 1] = toEthereumAddress(publicKey)\r\n        break\r\n      default:\r\n        return false\r\n    }\r\n    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase()\r\n  }\r\n  return false\r\n}\r\n","import type { SignatureInput } from 'elliptic'\r\nimport elliptic from 'elliptic'\r\nimport { sha256, toEthereumAddress } from './Digest'\r\nimport { verify } from '@stablelib/ed25519'\r\nimport type { VerificationMethod } from 'did-resolver'\r\nimport { bases } from 'multiformats/basics'\r\nimport { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'\r\nimport { verifyBlockchainAccountId } from './blockchains'\r\nimport { RS256SignerAlg } from \"./SignerAlgorithm\";\r\n\r\nconst secp256k1 = new elliptic.ec('secp256k1')\r\nconst secp256r1 = new elliptic.ec('p256')\r\n\r\n// converts a JOSE signature to it's components\r\nexport function toSignatureObject(signature: string, recoverable = false): EcdsaSignature {\r\n  const rawSig: Uint8Array = base64ToBytes(signature)\r\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\r\n    throw new Error('wrong signature length')\r\n  }\r\n  const r: string = bytesToHex(rawSig.slice(0, 32))\r\n  const s: string = bytesToHex(rawSig.slice(32, 64))\r\n  const sigObj: EcdsaSignature = { r, s }\r\n  if (recoverable) {\r\n    sigObj.recoveryParam = rawSig[64]\r\n  }\r\n  return sigObj\r\n}\r\n\r\ninterface LegacyVerificationMethod extends VerificationMethod {\r\n  publicKeyBase64: string\r\n}\r\n\r\nfunction extractPublicKeyBytes(pk: VerificationMethod): Uint8Array {\r\n  if (pk.publicKeyBase58) {\r\n    return base58ToBytes(pk.publicKeyBase58)\r\n  } else if ((<LegacyVerificationMethod>pk).publicKeyBase64) {\r\n    return base64ToBytes((<LegacyVerificationMethod>pk).publicKeyBase64)\r\n  } else if (pk.publicKeyHex) {\r\n    return hexToBytes(pk.publicKeyHex)\r\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\r\n    return hexToBytes(\r\n      secp256k1\r\n        .keyFromPublic({\r\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\r\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\r\n        })\r\n        .getPublic('hex')\r\n    )\r\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\r\n    return hexToBytes(\r\n      secp256r1\r\n        .keyFromPublic({\r\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\r\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\r\n        })\r\n        .getPublic('hex')\r\n    )\r\n  } else if (\r\n    pk.publicKeyJwk &&\r\n    pk.publicKeyJwk.kty === 'OKP' &&\r\n    pk.publicKeyJwk.crv === 'Ed25519' &&\r\n    pk.publicKeyJwk.x\r\n  ) {\r\n    return base64ToBytes(pk.publicKeyJwk.x)\r\n  } else if (pk.publicKeyMultibase) {\r\n    const { base16, base58btc, base64, base64url } = bases\r\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)))\r\n    return baseDecoder.decode(pk.publicKeyMultibase)\r\n  }\r\n  return new Uint8Array()\r\n}\r\n\r\nexport function verifyES256(data: string, signature: string, authenticators: VerificationMethod[]): VerificationMethod {\r\n  const hash: Uint8Array = sha256(data)\r\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\r\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\r\n  })\r\n\r\n  const signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\r\n    try {\r\n      const pubBytes = extractPublicKeyBytes(pk)\r\n      return secp256r1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  })\r\n\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\nexport function verifyES256K(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  const hash: Uint8Array = sha256(data)\r\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\r\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\r\n  })\r\n  const blockchainAddressKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined'\r\n  })\r\n\r\n  let signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\r\n    try {\r\n      const pubBytes = extractPublicKeyBytes(pk)\r\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  })\r\n\r\n  if (!signer && blockchainAddressKeys.length > 0) {\r\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys)\r\n  }\r\n\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\nexport function verifyRecoverableES256K(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  let signatures: EcdsaSignature[]\r\n  if (signature.length > 86) {\r\n    signatures = [toSignatureObject(signature, true)]\r\n  } else {\r\n    const so = toSignatureObject(signature, false)\r\n    signatures = [\r\n      { ...so, recoveryParam: 0 },\r\n      { ...so, recoveryParam: 1 },\r\n    ]\r\n  }\r\n\r\n  const checkSignatureAgainstSigner = (sigObj: EcdsaSignature): VerificationMethod | undefined => {\r\n    const hash: Uint8Array = sha256(data)\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const recoveredKey: any = secp256k1.recoverPubKey(hash, <SignatureInput>sigObj, <number>sigObj.recoveryParam)\r\n    const recoveredPublicKeyHex: string = recoveredKey.encode('hex')\r\n    const recoveredCompressedPublicKeyHex: string = recoveredKey.encode('hex', true)\r\n    const recoveredAddress: string = toEthereumAddress(recoveredPublicKeyHex).toLowerCase()\r\n\r\n    const signer: VerificationMethod | undefined = authenticators.find((pk: VerificationMethod) => {\r\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk))\r\n      return (\r\n        keyHex === recoveredPublicKeyHex ||\r\n        keyHex === recoveredCompressedPublicKeyHex ||\r\n        pk.ethereumAddress?.toLowerCase() === recoveredAddress ||\r\n        pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2\r\n        verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\r\n      )\r\n    })\r\n\r\n    return signer\r\n  }\r\n\r\n  const signer: VerificationMethod[] = signatures\r\n    .map(checkSignatureAgainstSigner)\r\n    .filter((key) => typeof key !== 'undefined') as VerificationMethod[]\r\n\r\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer[0]\r\n}\r\n\r\nexport function verifyEd25519(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  const clear: Uint8Array = stringToBytes(data)\r\n  const sig: Uint8Array = base64ToBytes(signature)\r\n  const signer = authenticators.find((pk: VerificationMethod) => {\r\n    return verify(extractPublicKeyBytes(pk), clear, sig)\r\n  })\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\ntype Verifier = (data: string, signature: string, authenticators: VerificationMethod[]) => VerificationMethod\r\ninterface Algorithms {\r\n  [name: string]: Verifier\r\n}\r\nconst algorithms: Algorithms = {\r\n  ES256: verifyES256,\r\n  ES256K: verifyES256K,\r\n  // This is a non-standard algorithm but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\r\n  'ES256K-R': verifyRecoverableES256K,\r\n  // This is actually incorrect but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\r\n  Ed25519: verifyEd25519,\r\n  EdDSA: verifyEd25519,\r\n}\r\n\r\nfunction VerifierAlgorithm(alg: string): Verifier {\r\n  const impl: Verifier = algorithms[alg]\r\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\r\n  return impl\r\n}\r\n\r\nVerifierAlgorithm.toSignatureObject = toSignatureObject\r\n\r\nexport default VerifierAlgorithm\r\n","/**\r\n * Error prefixes used for known verification failure cases.\r\n *\r\n * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major\r\n * version update to match the scenarios better.\r\n *\r\n * @beta\r\n */\r\nexport const JWT_ERROR = {\r\n  /**\r\n   * Thrown when a JWT payload schema is unexpected or when validity period does not match\r\n   */\r\n  INVALID_JWT: 'invalid_jwt',\r\n  /**\r\n   * Thrown when the verifier audience does not match the one set in the JWT payload\r\n   */\r\n  INVALID_AUDIENCE: 'invalid_config',\r\n  /**\r\n   * Thrown when none of the public keys of the issuer match the signature of the JWT.\r\n   *\r\n   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.\r\n   */\r\n  INVALID_SIGNATURE: 'invalid_signature',\r\n  /**\r\n   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given\r\n   * `proofPurpose`.\r\n   *\r\n   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.\r\n   */\r\n  NO_SUITABLE_KEYS: 'no_suitable_keys',\r\n  /**\r\n   * Thrown when the `alg` of the JWT or the encoding of the key is not supported\r\n   */\r\n  NOT_SUPPORTED: 'not_supported',\r\n  /**\r\n   * Thrown when the DID resolver is unable to resolve the issuer DID.\r\n   */\r\n  RESOLVER_ERROR: 'resolver_error',\r\n}\r\n","import canonicalizeData from 'canonicalize'\r\nimport type { DIDDocument, DIDResolutionResult, Resolvable, VerificationMethod } from 'did-resolver'\r\nimport SignerAlg from './SignerAlgorithm'\r\nimport { decodeBase64url, EcdsaSignature, encodeBase64url } from './util'\r\nimport VerifierAlgorithm from './VerifierAlgorithm'\r\nimport { JWT_ERROR } from './Errors'\r\n\r\nexport type Signer = (data: string | Uint8Array) => Promise<EcdsaSignature | string>\r\nexport type SignerAlgorithm = (payload: string, signer: Signer) => Promise<string>\r\n\r\nexport type ProofPurposeTypes =\r\n  | 'assertionMethod'\r\n  | 'authentication'\r\n  // | 'keyAgreement' // keyAgreement VerificationMethod should not be used for signing\r\n  | 'capabilityDelegation'\r\n  | 'capabilityInvocation'\r\n\r\nexport interface JWTOptions {\r\n  issuer: string\r\n  signer: Signer\r\n  /**\r\n   * @deprecated Please use `header.alg` to specify the JWT algorithm.\r\n   */\r\n  alg?: string\r\n  expiresIn?: number\r\n  canonicalize?: boolean\r\n}\r\n\r\nexport interface JWTVerifyOptions {\r\n  /** @deprecated Please use `proofPurpose: 'authentication' instead` */\r\n  auth?: boolean\r\n  audience?: string\r\n  callbackUrl?: string\r\n  resolver?: Resolvable\r\n  skewTime?: number\r\n  /** See https://www.w3.org/TR/did-spec-registries/#verification-relationships */\r\n  proofPurpose?: ProofPurposeTypes\r\n  policies?: JWTVerifyPolicies\r\n}\r\n\r\n/**\r\n * Overrides the different types of checks performed on the JWT besides the signature check\r\n */\r\nexport interface JWTVerifyPolicies {\r\n  // overrides the timestamp against which the validity interval is checked\r\n  now?: number\r\n  // when set to false, the timestamp checks ignore the Not Before(`nbf`) property\r\n  nbf?: boolean\r\n  // when set to false, the timestamp checks ignore the Issued At(`iat`) property\r\n  iat?: boolean\r\n  // when set to false, the timestamp checks ignore the Expires At(`exp`) property\r\n  exp?: boolean\r\n  // when set to false, the JWT audience check is skipped\r\n  aud?: boolean\r\n}\r\n\r\nexport interface JWSCreationOptions {\r\n  canonicalize?: boolean\r\n}\r\n\r\nexport interface DIDAuthenticator {\r\n  authenticators: VerificationMethod[]\r\n  issuer: string\r\n  didResolutionResult: DIDResolutionResult\r\n}\r\n\r\nexport interface JWTHeader {\r\n  typ: 'JWT'\r\n  alg: string\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [x: string]: any\r\n}\r\n\r\nexport interface JWTPayload {\r\n  iss?: string\r\n  sub?: string\r\n  aud?: string | string[]\r\n  iat?: number\r\n  nbf?: number\r\n  exp?: number\r\n  rexp?: number\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [x: string]: any\r\n}\r\n\r\nexport interface JWTDecoded {\r\n  header: JWTHeader\r\n  payload: JWTPayload\r\n  signature: string\r\n  data: string\r\n}\r\n\r\nexport interface JWSDecoded {\r\n  header: JWTHeader\r\n  payload: string\r\n  signature: string\r\n  data: string\r\n}\r\n\r\n/**\r\n * Result object returned by {@link verifyJWT}\r\n */\r\nexport interface JWTVerified {\r\n  /**\r\n   * Set to true for a JWT that passes all the required checks minus any verification overrides.\r\n   */\r\n  verified: true\r\n\r\n  /**\r\n   * The decoded JWT payload\r\n   */\r\n  payload: Partial<JWTPayload>\r\n\r\n  /**\r\n   * The result of resolving the issuer DID\r\n   */\r\n  didResolutionResult: DIDResolutionResult\r\n\r\n  /**\r\n   * the issuer DID\r\n   */\r\n  issuer: string\r\n\r\n  /**\r\n   * The public key of the issuer that matches the JWT signature\r\n   */\r\n  signer: VerificationMethod\r\n\r\n  /**\r\n   * The original JWT that was verified\r\n   */\r\n  jwt: string\r\n\r\n  /**\r\n   * Any overrides that were used during verification\r\n   */\r\n  policies?: JWTVerifyPolicies\r\n}\r\n\r\nexport interface PublicKeyTypes {\r\n  [name: string]: string[]\r\n}\r\n\r\nexport const SUPPORTED_PUBLIC_KEY_TYPES: PublicKeyTypes = {\r\n  ES256: ['JsonWebKey2020'],\r\n  ES256K: [\r\n    'EcdsaSecp256k1VerificationKey2019',\r\n    /**\r\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n     */\r\n    'EcdsaSecp256k1RecoveryMethod2020',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1VerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1SignatureVerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'EcdsaPublicKeySecp256k1',\r\n    'JsonWebKey2020',\r\n  ],\r\n  'ES256K-R': [\r\n    'EcdsaSecp256k1VerificationKey2019',\r\n    /**\r\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n     */\r\n    'EcdsaSecp256k1RecoveryMethod2020',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1VerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1SignatureVerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'EcdsaPublicKeySecp256k1',\r\n    'JsonWebKey2020',\r\n  ],\r\n  Ed25519: [\r\n    'ED25519SignatureVerification',\r\n    'Ed25519VerificationKey2018',\r\n    'Ed25519VerificationKey2020',\r\n    'JsonWebKey2020',\r\n  ],\r\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],\r\n}\r\n\r\nexport const SELF_ISSUED_V2 = 'https://self-issued.me/v2'\r\nexport const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc' // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation\r\nexport const SELF_ISSUED_V0_1 = 'https://self-issued.me'\r\n\r\ntype LegacyVerificationMethod = { publicKey?: string }\r\n\r\nconst defaultAlg = 'ES256K'\r\nconst DID_JSON = 'application/did+json'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction encodeSection(data: any, shouldCanonicalize = false): string {\r\n  if (shouldCanonicalize) {\r\n    return encodeBase64url(<string>canonicalizeData(data))\r\n  } else {\r\n    return encodeBase64url(JSON.stringify(data))\r\n  }\r\n}\r\n\r\nexport const NBF_SKEW = 300\r\n\r\nfunction decodeJWS(jws: string): JWSDecoded {\r\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/)\r\n  if (parts) {\r\n    return {\r\n      header: JSON.parse(decodeBase64url(parts[1])),\r\n      payload: parts[2],\r\n      signature: parts[3],\r\n      data: `${parts[1]}.${parts[2]}`,\r\n    }\r\n  }\r\n  throw new Error('invalid_argument: Incorrect format JWS')\r\n}\r\n\r\n/**  @module did-jwt/JWT */\r\n\r\n/**\r\n *  Decodes a JWT and returns an object representing the payload\r\n *\r\n *  @example\r\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @return   {Object}                               a JS object representing the decoded JWT\r\n */\r\nexport function decodeJWT(jwt: string): JWTDecoded {\r\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT')\r\n  try {\r\n    const jws = decodeJWS(jwt)\r\n    const decodedJwt: JWTDecoded = Object.assign(jws, { payload: JSON.parse(decodeBase64url(jws.payload)) })\r\n    return decodedJwt\r\n  } catch (e) {\r\n    throw new Error('invalid_argument: Incorrect format JWT')\r\n  }\r\n}\r\n\r\n/**\r\n *  Creates a signed JWS given a payload, a signer, and an optional header.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const jws = await createJWS({ my: 'payload' }, signer)\r\n *\r\n *  @param    {Object}            payload           payload object\r\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\r\n *  @param    {Object}            header            optional object to specify or customize the JWS header\r\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\r\n *                                                    payload properties\r\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\r\n */\r\nexport async function createJWS(\r\n  payload: string | Partial<JWTPayload>,\r\n  signer: Signer,\r\n  header: Partial<JWTHeader> = {},\r\n  options: JWSCreationOptions = {}\r\n): Promise<string> {\r\n  if (!header.alg) header.alg = defaultAlg\r\n  const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize)\r\n  const signingInput: string = [encodeSection(header, options.canonicalize), encodedPayload].join('.')\r\n\r\n  const jwtSigner: SignerAlgorithm = SignerAlg(header.alg)\r\n  const signature: string = await jwtSigner(signingInput, signer)\r\n  return [signingInput, signature].join('.')\r\n}\r\n\r\n/**\r\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is\r\n * over.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\r\n *      ...\r\n *  })\r\n *\r\n *  @param    {Object}            payload               payload object\r\n *  @param    {Object}            [options]             an unsigned credential object\r\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\r\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:\r\n *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm\r\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\r\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\r\n *  @param    {Object}            header                optional object to specify or customize the JWT header\r\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or\r\n *   rejects with an error\r\n */\r\nexport async function createJWT(\r\n  payload: Partial<JWTPayload>,\r\n  { issuer, signer, alg, expiresIn, canonicalize }: JWTOptions,\r\n  header: Partial<JWTHeader> = {}\r\n): Promise<string> {\r\n  if (!signer) throw new Error('missing_signer: No Signer functionality has been configured')\r\n  if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured')\r\n  if (!header.typ) header.typ = 'JWT'\r\n  if (!header.alg) header.alg = alg\r\n  const timestamps: Partial<JWTPayload> = {\r\n    iat: Math.floor(Date.now() / 1000),\r\n    exp: undefined,\r\n  }\r\n  if (expiresIn) {\r\n    if (typeof expiresIn === 'number') {\r\n      timestamps.exp = <number>(payload.nbf || timestamps.iat) + Math.floor(expiresIn)\r\n    } else {\r\n      throw new Error('invalid_argument: JWT expiresIn is not a number')\r\n    }\r\n  }\r\n  const fullPayload = { ...timestamps, ...payload, iss: issuer }\r\n  return createJWS(fullPayload, signer, header, { canonicalize })\r\n}\r\n\r\nfunction verifyJWSDecoded(\r\n  { header, data, signature }: JWSDecoded,\r\n  pubKeys: VerificationMethod | VerificationMethod[]\r\n): VerificationMethod {\r\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys]\r\n  const signer: VerificationMethod = VerifierAlgorithm(header.alg)(data, signature, pubKeys)\r\n  return signer\r\n}\r\n\r\n/**\r\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\r\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\r\n *\r\n *  @example\r\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\r\n *\r\n *  @param    {String}                          jws         A JWS string to verify\r\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\r\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\r\n */\r\nexport function verifyJWS(jws: string, pubKeys: VerificationMethod | VerificationMethod[]): VerificationMethod {\r\n  const jwsDecoded: JWSDecoded = decodeJWS(jws)\r\n  return verifyJWSDecoded(jwsDecoded, pubKeys)\r\n}\r\n\r\n/**\r\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\r\n *  and the DID document of the issuer of the JWT.\r\n *\r\n *  @example\r\n *  ```ts\r\n *  verifyJWT(\r\n *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',\r\n *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}\r\n *    ).then(obj => {\r\n *        const did = obj.did // DID of signer\r\n *        const payload = obj.payload\r\n *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer\r\n *        const jwt = obj.jwt\r\n *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT\r\n *        ...\r\n *    })\r\n *  ```\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @param    {Object}            [options]           an unsigned credential object\r\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the\r\n *   DID document (for Authentication purposes)\r\n *  @param    {String}            options.audience    DID of the recipient of the JWT\r\n *  @param    {String}            options.callbackUrl callback url in JWT\r\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an\r\n *   error\r\n */\r\nexport async function verifyJWT(\r\n  jwt: string,\r\n  options: JWTVerifyOptions = {\r\n    resolver: undefined,\r\n    auth: undefined,\r\n    audience: undefined,\r\n    callbackUrl: undefined,\r\n    skewTime: undefined,\r\n    proofPurpose: undefined,\r\n    policies: {},\r\n  }\r\n): Promise<JWTVerified> {\r\n  if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured')\r\n  const { payload, header, signature, data }: JWTDecoded = decodeJWT(jwt)\r\n  const proofPurpose: ProofPurposeTypes | undefined = Object.prototype.hasOwnProperty.call(options, 'auth')\r\n    ? options.auth\r\n      ? 'authentication'\r\n      : undefined\r\n    : options.proofPurpose\r\n\r\n  let did\r\n\r\n  if (!payload.iss && !payload.client_id) {\r\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`)\r\n  }\r\n\r\n  if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {\r\n    if (!payload.sub) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`)\r\n    }\r\n    if (typeof payload.sub_jwk === 'undefined') {\r\n      did = payload.sub\r\n    } else {\r\n      did = (header.kid || '').split('#')[0]\r\n    }\r\n  } else if (payload.iss === SELF_ISSUED_V0_1) {\r\n    if (!payload.did) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`)\r\n    }\r\n    did = payload.did\r\n  } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {\r\n    // SIOP Request payload\r\n    // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object\r\n    if (!payload.client_id) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`)\r\n    }\r\n    did = payload.client_id\r\n  } else {\r\n    did = payload.iss\r\n  }\r\n\r\n  if (!did) {\r\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`)\r\n  }\r\n\r\n  const { didResolutionResult, authenticators, issuer }: DIDAuthenticator = await resolveAuthenticator(\r\n    options.resolver,\r\n    header.alg,\r\n    did,\r\n    proofPurpose\r\n  )\r\n  const signer: VerificationMethod = await verifyJWSDecoded({ header, data, signature } as JWSDecoded, authenticators)\r\n  const now: number = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000)\r\n  const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW\r\n  if (signer) {\r\n    const nowSkewed = now + skewTime\r\n    if (options.policies?.nbf !== false && payload.nbf) {\r\n      if (payload.nbf > nowSkewed) {\r\n        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`)\r\n      }\r\n    } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`)\r\n    }\r\n    if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`)\r\n    }\r\n    if (options.policies?.aud !== false && payload.aud) {\r\n      if (!options.audience && !options.callbackUrl) {\r\n        throw new Error(\r\n          `${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`\r\n        )\r\n      }\r\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\r\n      const matchedAudience = audArray.find((item) => options.audience === item || options.callbackUrl === item)\r\n\r\n      if (typeof matchedAudience === 'undefined') {\r\n        throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)\r\n      }\r\n    }\r\n    return { verified: true, payload, didResolutionResult, issuer, signer, jwt, policies: options.policies }\r\n  }\r\n  throw new Error(\r\n    `${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`\r\n  )\r\n}\r\n\r\n/**\r\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of\r\n * provided DID\r\n *\r\n *  @example\r\n *  ```ts\r\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\r\n *      const payload = obj.payload\r\n *      const profile = obj.profile\r\n *      const jwt = obj.jwt\r\n *      // ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`\r\n *  @param alg - {String} a JWT algorithm\r\n *  @param issuer - {String} a Decentralized Identifier (DID) to lookup\r\n *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the\r\n *   issuer DID document\r\n *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators\r\n *   or rejects with an error if none exist\r\n */\r\nexport async function resolveAuthenticator(\r\n  resolver: Resolvable,\r\n  alg: string,\r\n  issuer: string,\r\n  proofPurpose?: ProofPurposeTypes\r\n): Promise<DIDAuthenticator> {\r\n  const types: string[] = SUPPORTED_PUBLIC_KEY_TYPES[alg]\r\n  if (!types || types.length === 0) {\r\n    throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`)\r\n  }\r\n  let didResult: DIDResolutionResult\r\n\r\n  const result = (await resolver.resolve(issuer, { accept: DID_JSON })) as unknown\r\n  // support legacy resolvers that do not produce DIDResolutionResult\r\n  if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\r\n    didResult = {\r\n      didDocument: result as DIDDocument,\r\n      didDocumentMetadata: {},\r\n      didResolutionMetadata: { contentType: DID_JSON },\r\n    }\r\n  } else {\r\n    didResult = result as DIDResolutionResult\r\n  }\r\n\r\n  if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {\r\n    const { error, message } = didResult.didResolutionMetadata\r\n    throw new Error(\r\n      `${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`\r\n    )\r\n  }\r\n\r\n  const getPublicKeyById = (verificationMethods: VerificationMethod[], pubid?: string): VerificationMethod | null => {\r\n    const filtered = verificationMethods.filter(({ id }) => pubid === id)\r\n    return filtered.length > 0 ? filtered[0] : null\r\n  }\r\n\r\n  let publicKeysToCheck: VerificationMethod[] = [\r\n    ...(didResult?.didDocument?.verificationMethod || []),\r\n    ...(didResult?.didDocument?.publicKey || []),\r\n  ]\r\n  if (typeof proofPurpose === 'string') {\r\n    // support legacy DID Documents that do not list assertionMethod\r\n    if (\r\n      proofPurpose.startsWith('assertion') &&\r\n      !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')\r\n    ) {\r\n      didResult.didDocument = { ...(<DIDDocument>didResult.didDocument) }\r\n      didResult.didDocument.assertionMethod = [...publicKeysToCheck.map((pk) => pk.id)]\r\n    }\r\n\r\n    publicKeysToCheck = (didResult.didDocument[proofPurpose] || [])\r\n      .map((verificationMethod) => {\r\n        if (typeof verificationMethod === 'string') {\r\n          return getPublicKeyById(publicKeysToCheck, verificationMethod)\r\n        } else if (typeof (<LegacyVerificationMethod>verificationMethod).publicKey === 'string') {\r\n          // this is a legacy format\r\n          return getPublicKeyById(publicKeysToCheck, (<LegacyVerificationMethod>verificationMethod).publicKey)\r\n        } else {\r\n          return <VerificationMethod>verificationMethod\r\n        }\r\n      })\r\n      .filter((key) => key != null) as VerificationMethod[]\r\n  }\r\n\r\n  const authenticators: VerificationMethod[] = publicKeysToCheck.filter(({ type }) =>\r\n    types.find((supported) => supported === type)\r\n  )\r\n\r\n  if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\r\n    throw new Error(\r\n      `${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`\r\n    )\r\n  }\r\n  if (!authenticators || authenticators.length === 0) {\r\n    throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`)\r\n  }\r\n  return { authenticators, issuer, didResolutionResult: didResult }\r\n}\r\n","import { fromString } from 'uint8arrays'\r\nimport { base64ToBytes, bytesToBase64url, decodeBase64url, toSealed } from './util'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type ProtectedHeader = Record<string, any> & Partial<RecipientHeader>\r\n\r\n/**\r\n * The JWK representation of an ephemeral public key.\r\n * See https://www.rfc-editor.org/rfc/rfc7518.html#section-6\r\n */\r\ninterface EphemeralPublicKey {\r\n  kty?: string\r\n  //ECC\r\n  crv?: string\r\n  x?: string\r\n  y?: string\r\n  //RSA\r\n  n?: string\r\n  e?: string\r\n}\r\n\r\nexport interface RecipientHeader {\r\n  alg: string\r\n  iv: string\r\n  tag: string\r\n  epk?: EphemeralPublicKey\r\n  kid?: string\r\n  apv?: string\r\n  apu?: string\r\n}\r\n\r\nexport interface Recipient {\r\n  header: RecipientHeader\r\n  encrypted_key: string\r\n}\r\n\r\nexport interface JWE {\r\n  protected: string\r\n  iv: string\r\n  ciphertext: string\r\n  tag: string\r\n  aad?: string\r\n  recipients?: Recipient[]\r\n}\r\n\r\nexport interface EncryptionResult {\r\n  ciphertext: Uint8Array\r\n  tag: Uint8Array\r\n  iv: Uint8Array\r\n  protectedHeader?: string\r\n  recipient?: Recipient\r\n  cek?: Uint8Array\r\n}\r\n\r\nexport interface Encrypter {\r\n  alg: string\r\n  enc: string\r\n  encrypt: (cleartext: Uint8Array, protectedHeader: ProtectedHeader, aad?: Uint8Array) => Promise<EncryptionResult>\r\n  encryptCek?: (cek: Uint8Array) => Promise<Recipient>\r\n}\r\n\r\nexport interface Decrypter {\r\n  alg: string\r\n  enc: string\r\n  decrypt: (sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array, recipient?: Recipient) => Promise<Uint8Array | null>\r\n}\r\n\r\nfunction validateJWE(jwe: JWE) {\r\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\r\n    throw new Error('bad_jwe: missing properties')\r\n  }\r\n  if (jwe.recipients) {\r\n    jwe.recipients.map((rec) => {\r\n      if (!(rec.header && rec.encrypted_key)) {\r\n        throw new Error('bad_jwe: malformed recipients')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction encodeJWE({ ciphertext, tag, iv, protectedHeader, recipient }: EncryptionResult, aad?: Uint8Array): JWE {\r\n  const jwe: JWE = {\r\n    protected: <string>protectedHeader,\r\n    iv: bytesToBase64url(iv),\r\n    ciphertext: bytesToBase64url(ciphertext),\r\n    tag: bytesToBase64url(tag),\r\n  }\r\n  if (aad) jwe.aad = bytesToBase64url(aad)\r\n  if (recipient) jwe.recipients = [recipient]\r\n  return jwe\r\n}\r\n\r\nexport async function createJWE(\r\n  cleartext: Uint8Array,\r\n  encrypters: Encrypter[],\r\n  protectedHeader = {},\r\n  aad?: Uint8Array\r\n): Promise<JWE> {\r\n  if (encrypters[0].alg === 'dir') {\r\n    if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.')\r\n    const encryptionResult = await encrypters[0].encrypt(cleartext, protectedHeader, aad)\r\n    return encodeJWE(encryptionResult, aad)\r\n  } else {\r\n    const tmpEnc = encrypters[0].enc\r\n    if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\r\n      throw new Error('invalid_argument: Incompatible encrypters passed')\r\n    }\r\n    let cek\r\n    let jwe\r\n    for (const encrypter of encrypters) {\r\n      if (!cek) {\r\n        const encryptionResult = await encrypter.encrypt(cleartext, protectedHeader, aad)\r\n        cek = encryptionResult.cek\r\n        jwe = encodeJWE(encryptionResult, aad)\r\n      } else {\r\n        const recipient = await encrypter.encryptCek?.(cek)\r\n        if (recipient) {\r\n          jwe?.recipients?.push(recipient)\r\n        }\r\n      }\r\n    }\r\n    return <JWE>jwe\r\n  }\r\n}\r\n\r\nexport async function decryptJWE(jwe: JWE, decrypter: Decrypter): Promise<Uint8Array> {\r\n  validateJWE(jwe)\r\n  const protHeader = JSON.parse(decodeBase64url(jwe.protected))\r\n  if (protHeader.enc !== decrypter.enc)\r\n    throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`)\r\n  const sealed = toSealed(jwe.ciphertext, jwe.tag)\r\n  const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected)\r\n  let cleartext = null\r\n  if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\r\n    cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)\r\n  } else if (!jwe.recipients || jwe.recipients.length === 0) {\r\n    throw new Error('bad_jwe: missing recipients')\r\n  } else {\r\n    for (let i = 0; !cleartext && i < jwe.recipients.length; i++) {\r\n      const recipient = jwe.recipients[i]\r\n      Object.assign(recipient.header, protHeader)\r\n      if (recipient.header.alg === decrypter.alg) {\r\n        cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)\r\n      }\r\n    }\r\n  }\r\n  if (cleartext === null) throw new Error('failure: Failed to decrypt')\r\n  return cleartext\r\n}\r\n","import { sharedKey } from '@stablelib/x25519'\r\n\r\n/**\r\n * A wrapper around `mySecretKey` that can compute a shared secret using `theirPublicKey`.\r\n * The promise should resolve to a `Uint8Array` containing the raw shared secret.\r\n *\r\n * This method is meant to be used when direct access to a secret key is impossible or not desired.\r\n *\r\n * @param theirPublicKey `Uint8Array` the other party's public key\r\n * @returns a `Promise` that resolves to a `Uint8Array` representing the computed shared secret\r\n */\r\nexport type ECDH = (theirPublicKey: Uint8Array) => Promise<Uint8Array>\r\n\r\n/**\r\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\r\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\r\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\r\n *\r\n * @throws 'invalid_argument:...' if the secret key size is wrong\r\n */\r\nexport function createX25519ECDH(mySecretKey: Uint8Array): ECDH {\r\n  if (mySecretKey.length !== 32) {\r\n    throw new Error('invalid_argument: incorrect secret key length for X25519')\r\n  }\r\n  return async (theirPublicKey: Uint8Array): Promise<Uint8Array> => {\r\n    if (theirPublicKey.length !== 32) {\r\n      throw new Error('invalid_argument: incorrect publicKey key length for X25519')\r\n    }\r\n    return sharedKey(mySecretKey, theirPublicKey)\r\n  }\r\n}\r\n","import { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305'\r\nimport { generateKeyPair, sharedKey } from '@stablelib/x25519'\r\nimport { randomBytes } from '@stablelib/random'\r\nimport { concatKDF } from './Digest'\r\nimport { bytesToBase64url, base58ToBytes, encodeBase64url, toSealed, base64ToBytes } from './util'\r\nimport { Recipient, EncryptionResult, Encrypter, Decrypter, ProtectedHeader } from './JWE'\r\nimport type { VerificationMethod, Resolvable } from 'did-resolver'\r\nimport { ECDH } from './ECDH'\r\nimport { fromString } from 'uint8arrays/from-string'\r\n\r\n/**\r\n * Extra parameters for JWE using authenticated encryption\r\n */\r\nexport type AuthEncryptParams = {\r\n  /**\r\n   * recipient key ID\r\n   */\r\n  kid?: string\r\n\r\n  /**\r\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.2}\r\n   * base64url encoded\r\n   */\r\n  apu?: string\r\n\r\n  /**\r\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.3}\r\n   * base64url encoded\r\n   */\r\n  apv?: string\r\n}\r\n\r\n/**\r\n * Extra parameters for JWE using anonymous encryption\r\n */\r\nexport type AnonEncryptParams = {\r\n  /**\r\n   * recipient key ID\r\n   */\r\n  kid?: string\r\n}\r\n\r\n/**\r\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender private key to encrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientPublicKey the byte array representing the recipient public key\r\n * @param senderSecret either a Uint8Array representing the sender secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\r\nexport function createAuthEncrypter(\r\n  recipientPublicKey: Uint8Array,\r\n  senderSecret: Uint8Array | ECDH,\r\n  options: Partial<AuthEncryptParams> = {}\r\n): Encrypter {\r\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options)\r\n}\r\n\r\n/**\r\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\r\n *\r\n * @param publicKey the byte array representing the recipient public key\r\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\r\nexport function createAnonEncrypter(publicKey: Uint8Array, options: Partial<AnonEncryptParams> = {}): Encrypter {\r\n  return x25519Encrypter(publicKey, options?.kid)\r\n}\r\n\r\n/**\r\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender public key to decrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param senderPublicKey the byte array representing the sender public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\r\nexport function createAuthDecrypter(recipientSecret: Uint8Array | ECDH, senderPublicKey: Uint8Array): Decrypter {\r\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey)\r\n}\r\n\r\n/**\r\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\r\nexport function createAnonDecrypter(recipientSecret: Uint8Array | ECDH): Decrypter {\r\n  return x25519Decrypter(recipientSecret)\r\n}\r\n\r\nfunction xc20pEncrypter(key: Uint8Array): (cleartext: Uint8Array, aad?: Uint8Array) => EncryptionResult {\r\n  const cipher = new XChaCha20Poly1305(key)\r\n  return (cleartext: Uint8Array, aad?: Uint8Array) => {\r\n    const iv = randomBytes(cipher.nonceLength)\r\n    const sealed = cipher.seal(iv, cleartext, aad)\r\n    return {\r\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\r\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\r\n      iv,\r\n    }\r\n  }\r\n}\r\n\r\nexport function xc20pDirEncrypter(key: Uint8Array): Encrypter {\r\n  const xc20pEncrypt = xc20pEncrypter(key)\r\n  const enc = 'XC20P'\r\n  const alg = 'dir'\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    const protHeader = encodeBase64url(JSON.stringify(Object.assign({ alg }, protectedHeader, { enc })))\r\n    const encodedAad = fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader)\r\n    return {\r\n      ...xc20pEncrypt(cleartext, encodedAad),\r\n      protectedHeader: protHeader,\r\n    }\r\n  }\r\n  return { alg, enc, encrypt }\r\n}\r\n\r\nexport function xc20pDirDecrypter(key: Uint8Array): Decrypter {\r\n  const cipher = new XChaCha20Poly1305(key)\r\n  async function decrypt(sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array): Promise<Uint8Array | null> {\r\n    return cipher.open(iv, sealed, aad)\r\n  }\r\n  return { alg: 'dir', enc: 'XC20P', decrypt }\r\n}\r\n\r\nexport function x25519Encrypter(publicKey: Uint8Array, kid?: string): Encrypter {\r\n  const alg = 'ECDH-ES+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\r\n    const epk = generateKeyPair()\r\n    const sharedSecret = sharedKey(epk.secretKey, publicKey)\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg)\r\n    const res = xc20pEncrypter(kek)(cek)\r\n    const recipient: Recipient = {\r\n      encrypted_key: bytesToBase64url(res.ciphertext),\r\n      header: {\r\n        alg,\r\n        iv: bytesToBase64url(res.iv),\r\n        tag: bytesToBase64url(res.tag),\r\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\r\n      },\r\n    }\r\n    if (kid) recipient.header.kid = kid\r\n    return recipient\r\n  }\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    // we won't want alg to be set to dir from xc20pDirEncrypter\r\n    Object.assign(protectedHeader, { alg: undefined })\r\n    // Content Encryption Key\r\n    const cek = randomBytes(32)\r\n    return {\r\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\r\n      recipient: await encryptCek(cek),\r\n      cek,\r\n    }\r\n  }\r\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\r\n}\r\n\r\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\r\nexport function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(\r\n  recipientPublicKey: Uint8Array,\r\n  senderSecret: Uint8Array | ECDH,\r\n  options: Partial<AuthEncryptParams> = {}\r\n): Encrypter {\r\n  const alg = 'ECDH-1PU+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n\r\n  let partyUInfo: Uint8Array\r\n  let partyVInfo: Uint8Array\r\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu)\r\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv)\r\n\r\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\r\n    const epk = generateKeyPair()\r\n    const zE = sharedKey(epk.secretKey, recipientPublicKey)\r\n\r\n    // ECDH-1PU requires additional shared secret between\r\n    // static key of sender and static key of recipient\r\n    let zS\r\n    if (senderSecret instanceof Uint8Array) {\r\n      zS = sharedKey(senderSecret, recipientPublicKey)\r\n    } else {\r\n      zS = await senderSecret(recipientPublicKey)\r\n    }\r\n\r\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\r\n    sharedSecret.set(zE)\r\n    sharedSecret.set(zS, zE.length)\r\n\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo)\r\n\r\n    const res = xc20pEncrypter(kek)(cek)\r\n    const recipient: Recipient = {\r\n      encrypted_key: bytesToBase64url(res.ciphertext),\r\n      header: {\r\n        alg,\r\n        iv: bytesToBase64url(res.iv),\r\n        tag: bytesToBase64url(res.tag),\r\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\r\n      },\r\n    }\r\n    if (options.kid) recipient.header.kid = options.kid\r\n    if (options.apu) recipient.header.apu = options.apu\r\n    if (options.apv) recipient.header.apv = options.apv\r\n\r\n    return recipient\r\n  }\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    // we won't want alg to be set to dir from xc20pDirEncrypter\r\n    Object.assign(protectedHeader, { alg: undefined })\r\n    // Content Encryption Key\r\n    const cek = randomBytes(32)\r\n    return {\r\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\r\n      recipient: await encryptCek(cek),\r\n      cek,\r\n    }\r\n  }\r\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\r\n}\r\n\r\nexport async function resolveX25519Encrypters(dids: string[], resolver: Resolvable): Promise<Encrypter[]> {\r\n  const encryptersForDID = async (did: string, resolved: string[] = []): Promise<Encrypter[]> => {\r\n    const { didResolutionMetadata, didDocument } = await resolver.resolve(did)\r\n    resolved.push(did)\r\n    if (didResolutionMetadata?.error || didDocument == null) {\r\n      throw new Error(\r\n        `resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`\r\n      )\r\n    }\r\n    let controllerEncrypters: Encrypter[] = []\r\n    if (!didDocument.controller && !didDocument.keyAgreement) {\r\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\r\n    }\r\n    if (didDocument.controller) {\r\n      let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller]\r\n      controllers = controllers.filter((c) => !resolved.includes(c))\r\n      const encrypterPromises = controllers.map((did) =>\r\n        encryptersForDID(did, resolved).catch(() => {\r\n          return []\r\n        })\r\n      )\r\n      const encrypterArrays = await Promise.all(encrypterPromises)\r\n      controllerEncrypters = ([] as Encrypter[]).concat(...encrypterArrays)\r\n    }\r\n    const agreementKeys: VerificationMethod[] = didDocument.keyAgreement\r\n      ?.map((key) => {\r\n        if (typeof key === 'string') {\r\n          return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(\r\n            (pk) => pk.id === key\r\n          )\r\n        }\r\n        return key\r\n      })\r\n      ?.filter((key) => typeof key !== 'undefined') as VerificationMethod[]\r\n    const pks =\r\n      agreementKeys?.filter((key) => {\r\n        // TODO: should be able to use non base58 keys too\r\n        return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58)\r\n      }) || []\r\n    if (!pks.length && !controllerEncrypters.length)\r\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\r\n    return pks\r\n      .map((pk) => x25519Encrypter(base58ToBytes(<string>pk.publicKeyBase58), pk.id))\r\n      .concat(...controllerEncrypters)\r\n  }\r\n\r\n  const encrypterPromises = dids.map((did) => encryptersForDID(did))\r\n  const encrypterArrays = await Promise.all(encrypterPromises)\r\n  const flattenedArray = ([] as Encrypter[]).concat(...encrypterArrays)\r\n  return flattenedArray\r\n}\r\n\r\nfunction validateHeader(header?: ProtectedHeader) {\r\n  if (!(header && header.epk && header.iv && header.tag)) {\r\n    throw new Error('bad_jwe: malformed header')\r\n  }\r\n}\r\n\r\nexport function x25519Decrypter(receiverSecret: Uint8Array | ECDH): Decrypter {\r\n  const alg = 'ECDH-ES+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function decrypt(\r\n    sealed: Uint8Array,\r\n    iv: Uint8Array,\r\n    aad?: Uint8Array,\r\n    recipient?: Recipient\r\n  ): Promise<Uint8Array | null> {\r\n    validateHeader(recipient?.header)\r\n    recipient = <Recipient>recipient\r\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\r\n    const publicKey = base64ToBytes(recipient.header.epk.x)\r\n    let sharedSecret\r\n    if (receiverSecret instanceof Uint8Array) {\r\n      sharedSecret = sharedKey(receiverSecret, publicKey)\r\n    } else {\r\n      sharedSecret = await receiverSecret(publicKey)\r\n    }\r\n\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg)\r\n    // Content Encryption Key\r\n    const sealedCek = toSealed(<string>recipient.encrypted_key, recipient.header.tag)\r\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\r\n    if (cek === null) return null\r\n\r\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\r\n  }\r\n  return { alg, enc: 'XC20P', decrypt }\r\n}\r\n\r\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\r\nexport function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(\r\n  recipientSecret: Uint8Array | ECDH,\r\n  senderPublicKey: Uint8Array\r\n): Decrypter {\r\n  const alg = 'ECDH-1PU+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function decrypt(\r\n    sealed: Uint8Array,\r\n    iv: Uint8Array,\r\n    aad?: Uint8Array,\r\n    recipient?: Recipient\r\n  ): Promise<Uint8Array | null> {\r\n    recipient = <Recipient>recipient\r\n    validateHeader(recipient.header)\r\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\r\n    // ECDH-1PU requires additional shared secret between\r\n    // static key of sender and static key of recipient\r\n    const publicKey = base64ToBytes(recipient.header.epk.x)\r\n    let zE: Uint8Array\r\n    let zS: Uint8Array\r\n\r\n    if (recipientSecret instanceof Uint8Array) {\r\n      zE = sharedKey(recipientSecret, publicKey)\r\n      zS = sharedKey(recipientSecret, senderPublicKey)\r\n    } else {\r\n      zE = await recipientSecret(publicKey)\r\n      zS = await recipientSecret(senderPublicKey)\r\n    }\r\n\r\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\r\n    sharedSecret.set(zE)\r\n    sharedSecret.set(zS, zE.length)\r\n\r\n    // Key Encryption Key\r\n    let producerInfo\r\n    let consumerInfo\r\n    if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu)\r\n    if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv)\r\n\r\n    const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo)\r\n    // Content Encryption Key\r\n    const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag)\r\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\r\n    if (cek === null) return null\r\n\r\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\r\n  }\r\n  return { alg, enc: 'XC20P', decrypt }\r\n}\r\n"],"names":["bytesToBase64url","b","u8a","toString","base64ToBytes","s","inputBase64Url","replace","fromString","base58ToBytes","bytesToBase58","hexToBytes","input","startsWith","substring","toLowerCase","encodeBase64url","decodeBase64url","bytesToHex","stringToBytes","toJose","r","recoveryParam","recoverable","jose","Uint8Array","set","Error","fromJose","signature","signatureBytes","length","TypeError","slice","undefined","toSealed","ciphertext","tag","concat","leftpad","data","size","repeat","zl","zr","sl","sr","hl","hr","rotl","x","n","fn1","a","c","d","e","m","k","fn2","fn3","fn4","fn5","Ripemd160","constructor","blockSize","_a","_b","_c","_d","_e","_blockOffset","_block","_blockSize","_length","_finalized","update","block","offset","i","_update","j","carry","digest","_digest","fill","words","Array","temp","DataView","buffer","getInt32","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","setUint32","setInt32","sha256","payload","hash","keccak","sha3","keccak_256","arrayBuffer","toEthereumAddress","hexPublicKey","hashInput","ripemd160","writeUint32BE","value","array","encoded","lengthAndInput","concatKDF","secret","keyLen","alg","producerInfo","consumerInfo","roundNumber","secp256k1","elliptic","ec","ES256KSigner","privateKey","privateKeyBytes","keyPair","keyFromPrivate","sign","SimpleSigner","hexPrivateKey","signer","EllipticSigner","EdDSASigner","secretKey","dataBytes","sig","NaclSigner","base64PrivateKey","secp256r1","ES256Signer","instanceOfEcdsaSignature","object","ES256SignerAlg","ES256KSignerAlg","Ed25519SignerAlg","RS256SignerAlg","PS256SignerAlg","algorithms","ES256","ES256K","Ed25519","EdDSA","RS256","PS256","SignerAlg","impl","publicKeyToAddress","publicKey","otherAddress","version","publicKeyBuffer","publicKeyHash","step1","step2","step3","checksum","step4","EC","prefix","compressedPublicKey","keyFromPublic","getPublic","encode","bech32","toWords","verifyBlockchainAccountId","blockchainAccountId","chain","split","bip122","cosmos","join","toSignatureObject","rawSig","sigObj","extractPublicKeyBytes","pk","publicKeyBase58","publicKeyBase64","publicKeyHex","publicKeyJwk","crv","y","kty","publicKeyMultibase","base16","base58btc","base64","base64url","bases","baseDecoder","decoder","or","decode","verifyES256","authenticators","fullPublicKeys","filter","ethereumAddress","find","pubBytes","verify","err","verifyES256K","blockchainAddressKeys","verifyRecoverableES256K","signatures","so","checkSignatureAgainstSigner","recoveredKey","recoverPubKey","recoveredPublicKeyHex","recoveredCompressedPublicKeyHex","recoveredAddress","keyHex","map","key","verifyEd25519","clear","VerifierAlgorithm","JWT_ERROR","INVALID_JWT","INVALID_AUDIENCE","INVALID_SIGNATURE","NO_SUITABLE_KEYS","NOT_SUPPORTED","RESOLVER_ERROR","resolveAuthenticator","resolver","issuer","proofPurpose","types","SUPPORTED_PUBLIC_KEY_TYPES","didResult","resolve","accept","DID_JSON","result","Object","getOwnPropertyNames","indexOf","didDocument","didDocumentMetadata","didResolutionMetadata","contentType","error","message","getPublicKeyById","verificationMethods","pubid","filtered","id","publicKeysToCheck","verificationMethod","includes","assertionMethod","type","supported","didResolutionResult","verifyJWT","jwt","options","auth","audience","callbackUrl","skewTime","policies","header","decodeJWT","prototype","hasOwnProperty","call","did","iss","client_id","SELF_ISSUED_V2","SELF_ISSUED_V2_VC_INTEROP","sub","sub_jwk","kid","SELF_ISSUED_V0_1","scope","redirect_uri","verifyJWSDecoded","now","Math","floor","Date","NBF_SKEW","nowSkewed","nbf","iat","exp","aud","audArray","isArray","matchedAudience","item","verified","createJWT","expiresIn","canonicalize","typ","timestamps","fullPayload","createJWS","defaultAlg","encodedPayload","encodeSection","signingInput","jwtSigner","shouldCanonicalize","canonicalizeData","JSON","stringify","decodeJWS","jws","parts","match","parse","decodedJwt","assign","pubKeys","verifyJWS","jwsDecoded","bind","then","v","pact","onFulfilled","_this","thenable","validateJWE","jwe","protected","iv","recipients","rec","encrypted_key","encodeJWE","protectedHeader","recipient","aad","decryptJWE","decrypter","cleartext","protHeader","enc","sealed","decrypt","createJWE","encrypters","encrypt","encryptionResult","tmpEnc","reduce","acc","encrypter","cek","encryptCek","push","createX25519ECDH","mySecretKey","theirPublicKey","sharedKey","resolveX25519Encrypters","dids","encryptersForDID","resolved","agreementKeys","keyAgreement","pks","Boolean","controllerEncrypters","x25519Encrypter","controller","controllers","encrypterPromises","catch","Promise","all","encrypterArrays","flattenedArray","createAuthEncrypter","recipientPublicKey","senderSecret","xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonEncrypter","createAuthDecrypter","recipientSecret","senderPublicKey","xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonDecrypter","x25519Decrypter","xc20pEncrypter","cipher","XChaCha20Poly1305","randomBytes","nonceLength","seal","subarray","tagLength","xc20pDirEncrypter","encodedAad","xc20pEncrypt","xc20pDirDecrypter","open","epk","generateKeyPair","sharedSecret","kek","res","zE","zS","partyUInfo","partyVInfo","apu","apv","validateHeader","receiverSecret","sealedCek"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/did-jwt/lib/index.umd.js b/node_modules/did-jwt/lib/index.umd.js
index 7b39a20..a0f0571 100644
--- a/node_modules/did-jwt/lib/index.umd.js
+++ b/node_modules/did-jwt/lib/index.umd.js
@@ -560,6 +560,24 @@
       }
     };
   }
+  function RS256SignerAlg() {
+    return function sign(payload, signer) {
+      try {
+        return Promise.resolve(signer(payload));
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+  }
+  function PS256SignerAlg() {
+    return function sign(payload, signer) {
+      try {
+        return Promise.resolve(signer(payload));
+      } catch (e) {
+        return Promise.reject(e);
+      }
+    };
+  }
   const algorithms$1 = {
     ES256: ES256SignerAlg(),
     ES256K: ES256KSignerAlg(),
@@ -569,7 +587,9 @@
     // This is actually incorrect but retained for backwards compatibility
     // see https://github.com/decentralized-identity/did-jwt/issues/130
     Ed25519: Ed25519SignerAlg(),
-    EdDSA: Ed25519SignerAlg()
+    EdDSA: Ed25519SignerAlg(),
+    RS256: RS256SignerAlg(),
+    PS256: PS256SignerAlg()
   };

   function SignerAlg(alg) {
@@ -758,10 +778,8 @@
       const recoveredCompressedPublicKeyHex = recoveredKey.encode('hex', true);
       const recoveredAddress = toEthereumAddress(recoveredPublicKeyHex).toLowerCase();
       const signer = authenticators.find(pk => {
-        var _pk$ethereumAddress, _pk$blockchainAccount, _pk$blockchainAccount2;
-
         const keyHex = bytesToHex(extractPublicKeyBytes(pk));
-        return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || ((_pk$ethereumAddress = pk.ethereumAddress) == null ? void 0 : _pk$ethereumAddress.toLowerCase()) === recoveredAddress || ((_pk$blockchainAccount = pk.blockchainAccountId) == null ? void 0 : (_pk$blockchainAccount2 = _pk$blockchainAccount.split('@eip155')) == null ? void 0 : _pk$blockchainAccount2[0].toLowerCase()) === recoveredAddress || // CAIP-2
+        return keyHex === recoveredPublicKeyHex || keyHex === recoveredCompressedPublicKeyHex || pk.ethereumAddress?.toLowerCase() === recoveredAddress || pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2
         verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10
         ;
       });
@@ -880,8 +898,6 @@
       return Promise.resolve(resolver.resolve(issuer, {
         accept: DID_JSON
       })).then(function (result) {
-        var _didResult$didResolut, _didResult, _didResult$didDocumen, _didResult2, _didResult2$didDocume;
-
         // support legacy resolvers that do not produce DIDResolutionResult
         if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {
           didResult = {
@@ -895,7 +911,7 @@
           didResult = result;
         }

-        if ((_didResult$didResolut = didResult.didResolutionMetadata) != null && _didResult$didResolut.error || didResult.didDocument == null) {
+        if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {
           const {
             error,
             message
@@ -910,13 +926,11 @@
           return filtered.length > 0 ? filtered[0] : null;
         };

-        let publicKeysToCheck = [...(((_didResult = didResult) == null ? void 0 : (_didResult$didDocumen = _didResult.didDocument) == null ? void 0 : _didResult$didDocumen.verificationMethod) || []), ...(((_didResult2 = didResult) == null ? void 0 : (_didResult2$didDocume = _didResult2.didDocument) == null ? void 0 : _didResult2$didDocume.publicKey) || [])];
+        let publicKeysToCheck = [...(didResult?.didDocument?.verificationMethod || []), ...(didResult?.didDocument?.publicKey || [])];

         if (typeof proofPurpose === 'string') {
-          var _didResult3;
-
           // support legacy DID Documents that do not list assertionMethod
-          if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames((_didResult3 = didResult) == null ? void 0 : _didResult3.didDocument).includes('assertionMethod')) {
+          if (proofPurpose.startsWith('assertion') && !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')) {
             didResult.didDocument = { ...didResult.didDocument
             };
             didResult.didDocument.assertionMethod = [...publicKeysToCheck.map(pk => pk.id)];
@@ -1051,29 +1065,25 @@
           data,
           signature
         }, authenticators)).then(function (signer) {
-          var _options$policies;
-
-          const now = typeof ((_options$policies = options.policies) == null ? void 0 : _options$policies.now) === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
+          const now = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000);
           const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW;

           if (signer) {
-            var _options$policies2, _options$policies3, _options$policies4, _options$policies5;
-
             const nowSkewed = now + skewTime;

-            if (((_options$policies2 = options.policies) == null ? void 0 : _options$policies2.nbf) !== false && payload.nbf) {
+            if (options.policies?.nbf !== false && payload.nbf) {
               if (payload.nbf > nowSkewed) {
                 throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`);
               }
-            } else if (((_options$policies3 = options.policies) == null ? void 0 : _options$policies3.iat) !== false && payload.iat && payload.iat > nowSkewed) {
+            } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {
               throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`);
             }

-            if (((_options$policies4 = options.policies) == null ? void 0 : _options$policies4.exp) !== false && payload.exp && payload.exp <= now - skewTime) {
+            if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {
               throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`);
             }

-            if (((_options$policies5 = options.policies) == null ? void 0 : _options$policies5.aud) !== false && payload.aud) {
+            if (options.policies?.aud !== false && payload.aud) {
               if (!options.audience && !options.callbackUrl) {
                 throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`);
               }
@@ -1731,11 +1741,9 @@
                 jwe = encodeJWE(encryptionResult, aad);
               });
             } else {
-              return Promise.resolve(encrypter.encryptCek == null ? void 0 : encrypter.encryptCek(cek)).then(function (recipient) {
+              return Promise.resolve(encrypter.encryptCek?.(cek)).then(function (recipient) {
                 if (recipient) {
-                  var _jwe, _jwe$recipients;
-
-                  (_jwe = jwe) == null ? void 0 : (_jwe$recipients = _jwe.recipients) == null ? void 0 : _jwe$recipients.push(recipient);
+                  jwe?.recipients?.push(recipient);
                 }
               });
             }
@@ -1807,26 +1815,24 @@
             didDocument
           }) {
             function _temp4() {
-              var _didDocument$keyAgree, _didDocument$keyAgree2;
-
-              const agreementKeys = (_didDocument$keyAgree = didDocument.keyAgreement) == null ? void 0 : (_didDocument$keyAgree2 = _didDocument$keyAgree.map(key => {
+              const agreementKeys = didDocument.keyAgreement?.map(key => {
                 if (typeof key === 'string') {
                   return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(pk => pk.id === key);
                 }

                 return key;
-              })) == null ? void 0 : _didDocument$keyAgree2.filter(key => typeof key !== 'undefined');
-              const pks = (agreementKeys == null ? void 0 : agreementKeys.filter(key => {
+              })?.filter(key => typeof key !== 'undefined');
+              const pks = agreementKeys?.filter(key => {
                 // TODO: should be able to use non base58 keys too
                 return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58);
-              })) || [];
+              }) || [];
               if (!pks.length && !controllerEncrypters.length) throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`);
               return pks.map(pk => x25519Encrypter(base58ToBytes(pk.publicKeyBase58), pk.id)).concat(...controllerEncrypters);
             }

             resolved.push(did);

-            if (didResolutionMetadata != null && didResolutionMetadata.error || didDocument == null) {
+            if (didResolutionMetadata?.error || didDocument == null) {
               throw new Error(`resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`);
             }

@@ -1884,7 +1890,7 @@
    */

   function createAnonEncrypter(publicKey, options = {}) {
-    return x25519Encrypter(publicKey, options == null ? void 0 : options.kid);
+    return x25519Encrypter(publicKey, options?.kid);
   }
   /**
    * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires
@@ -2142,8 +2148,6 @@
   function x25519Decrypter(receiverSecret) {
     const decrypt = function (sealed, iv, aad, recipient) {
       try {
-        var _recipient, _recipient$header$epk;
-
         function _temp6() {
           // Key Encryption Key
           const kek = concatKDF(sharedSecret, keyLen, alg); // Content Encryption Key
@@ -2154,9 +2158,9 @@
           });
         }

-        validateHeader((_recipient = recipient) == null ? void 0 : _recipient.header);
+        validateHeader(recipient?.header);
         recipient = recipient;
-        if (((_recipient$header$epk = recipient.header.epk) == null ? void 0 : _recipient$header$epk.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
+        if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null);
         const publicKey = base64ToBytes(recipient.header.epk.x);
         let sharedSecret;

@@ -2194,8 +2198,6 @@
   function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey) {
     const decrypt = function (sealed, iv, aad, recipient) {
       try {
-        var _recipient$header$epk2;
-
         function _temp8() {
           const sharedSecret = new Uint8Array(zE.length + zS.length);
           sharedSecret.set(zE);
@@ -2215,7 +2217,7 @@

         recipient = recipient;
         validateHeader(recipient.header);
-        if (((_recipient$header$epk2 = recipient.header.epk) == null ? void 0 : _recipient$header$epk2.crv) !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
+        if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return Promise.resolve(null); // ECDH-1PU requires additional shared secret between
         // static key of sender and static key of recipient

         const publicKey = base64ToBytes(recipient.header.epk.x);
diff --git a/node_modules/did-jwt/lib/index.umd.js.map b/node_modules/did-jwt/lib/index.umd.js.map
index ca00574..674c3ed 100644
--- a/node_modules/did-jwt/lib/index.umd.js.map
+++ b/node_modules/did-jwt/lib/index.umd.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.umd.js","sources":["../src/util.ts","../src/blockchains/utils/ripemd160.ts","../src/Digest.ts","../src/signers/ES256KSigner.ts","../src/signers/SimpleSigner.ts","../src/signers/EllipticSigner.ts","../src/signers/EdDSASigner.ts","../src/signers/NaclSigner.ts","../src/signers/ES256Signer.ts","../src/SignerAlgorithm.ts","../src/blockchains/bip122.ts","../src/blockchains/cosmos.ts","../src/blockchains/index.ts","../src/VerifierAlgorithm.ts","../src/Errors.ts","../src/JWT.ts","../src/JWE.ts","../src/ECDH.ts","../src/xc20pEncryption.ts"],"sourcesContent":["import * as u8a from 'uint8arrays'\nimport { bases } from 'multiformats/basics'\n\n/**\n * @deprecated Signers will be expected to return base64url `string` signatures.\n */\nexport interface EcdsaSignature {\n  r: string\n  s: string\n  recoveryParam?: number | null\n}\n\nexport function bytesToBase64url(b: Uint8Array): string {\n  return u8a.toString(b, 'base64url')\n}\n\nexport function base64ToBytes(s: string): Uint8Array {\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\n  return u8a.fromString(inputBase64Url, 'base64url')\n}\n\nexport function bytesToBase64(b: Uint8Array): string {\n  return u8a.toString(b, 'base64pad')\n}\n\nexport function base58ToBytes(s: string): Uint8Array {\n  return u8a.fromString(s, 'base58btc')\n}\n\nexport function bytesToBase58(b: Uint8Array): string {\n  return u8a.toString(b, 'base58btc')\n}\n\nexport function bytesToMultibase(b: Uint8Array, base: keyof typeof bases): string {\n  return bases[base].encode(b)\n}\n\nexport function hexToBytes(s: string): Uint8Array {\n  const input = s.startsWith('0x') ? s.substring(2) : s\n  return u8a.fromString(input.toLowerCase(), 'base16')\n}\n\nexport function encodeBase64url(s: string): string {\n  return bytesToBase64url(u8a.fromString(s))\n}\n\nexport function decodeBase64url(s: string): string {\n  return u8a.toString(base64ToBytes(s))\n}\n\nexport function bytesToHex(b: Uint8Array): string {\n  return u8a.toString(b, 'base16')\n}\n\nexport function stringToBytes(s: string): Uint8Array {\n  return u8a.fromString(s)\n}\n\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\n  const jose = new Uint8Array(recoverable ? 65 : 64)\n  jose.set(u8a.fromString(r, 'base16'), 0)\n  jose.set(u8a.fromString(s, 'base16'), 32)\n  if (recoverable) {\n    if (typeof recoveryParam === 'undefined') {\n      throw new Error('Signer did not return a recoveryParam')\n    }\n    jose[64] = <number>recoveryParam\n  }\n  return bytesToBase64url(jose)\n}\n\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\n  const signatureBytes: Uint8Array = base64ToBytes(signature)\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`)\n  }\n  const r = bytesToHex(signatureBytes.slice(0, 32))\n  const s = bytesToHex(signatureBytes.slice(32, 64))\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined\n  return { r, s, recoveryParam }\n}\n\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)])\n}\n\nexport function leftpad(data: string, size = 64): string {\n  if (data.length === size) return data\n  return '0'.repeat(size - data.length) + data\n}\n","// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\n\nconst zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14,\n  4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,\n  10, 14, 1, 3, 8, 11, 6, 15, 13,\n]\n\nconst zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1,\n  3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5,\n  8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\n]\n\nconst sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11,\n  13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,\n  11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\n]\n\nconst sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7,\n  15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,\n  12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\n]\n\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction rotl(x: number, n: number) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\n  return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0\n}\n\nexport class Ripemd160 {\n  // state\n  private _a = 0x67452301\n  private _b = 0xefcdab89\n  private _c = 0x98badcfe\n  private _d = 0x10325476\n  private _e = 0xc3d2e1f0\n  private _blockOffset = 0\n  private _block: Uint8Array\n  private _blockSize: number\n  private _length = [0, 0, 0, 0]\n  private _finalized: boolean\n\n  constructor(blockSize = 64) {\n    this._block = new Uint8Array(blockSize)\n    this._blockSize = blockSize\n    this._blockOffset = 0\n    this._length = [0, 0, 0, 0]\n    this._finalized = false\n  }\n\n  update = (data: Uint8Array): Ripemd160 => {\n    if (this._finalized) throw new Error('Digest already called')\n\n    // consume data\n    const block = this._block\n    let offset = 0\n    while (this._blockOffset + data.length - offset >= this._blockSize) {\n      for (let i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++]\n      this._update()\n      this._blockOffset = 0\n    }\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n    // update length\n    for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n      this._length[j] += carry\n      carry = (this._length[j] / 0x0100000000) | 0\n      if (carry > 0) this._length[j] -= 0x0100000000 * carry\n    }\n\n    return this\n  }\n\n  digest = (): Uint8Array => {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    const digest = this._digest()\n\n    // reset state\n    this._block.fill(0)\n    this._blockOffset = 0\n    for (let i = 0; i < 4; ++i) this._length[i] = 0\n\n    return digest\n  }\n\n  private _update = () => {\n    const words = new Array(16)\n    const temp = new DataView(this._block.buffer)\n    for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true)\n\n    let al = this._a | 0\n    let bl = this._b | 0\n    let cl = this._c | 0\n    let dl = this._d | 0\n    let el = this._e | 0\n\n    let ar = this._a | 0\n    let br = this._b | 0\n    let cr = this._c | 0\n    let dr = this._d | 0\n    let er = this._e | 0\n\n    // computation\n    for (let i = 0; i < 80; i += 1) {\n      let tl\n      let tr\n      if (i < 16) {\n        tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n        tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n      } else if (i < 32) {\n        tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n        tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n      } else if (i < 48) {\n        tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n        tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n      } else if (i < 64) {\n        tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n        tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n      } else {\n        // if (i<80) {\n        tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n        tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n      }\n\n      al = el\n      el = dl\n      dl = rotl(cl, 10)\n      cl = bl\n      bl = tl\n\n      ar = er\n      er = dr\n      dr = rotl(cr, 10)\n      cr = br\n      br = tr\n    }\n\n    // update state\n    const t = (this._b + cl + dr) | 0\n    this._b = (this._c + dl + er) | 0\n    this._c = (this._d + el + ar) | 0\n    this._d = (this._e + al + br) | 0\n    this._e = (this._a + bl + cr) | 0\n    this._a = t\n  }\n\n  private _digest = () => {\n    // create padding and handle blocks\n    this._block[this._blockOffset++] = 0x80\n    if (this._blockOffset > 56) {\n      this._block.fill(0, this._blockOffset, 64)\n      this._update()\n      this._blockOffset = 0\n    }\n\n    this._block.fill(0, this._blockOffset, 56)\n    const temp = new DataView(this._block.buffer)\n    temp.setUint32(56, this._length[0], true)\n    temp.setUint32(60, this._length[1], true)\n    this._block = new Uint8Array(temp.buffer)\n    this._update()\n\n    // produce result\n    const buffer = new DataView(new Uint8Array(20).buffer)\n    buffer.setInt32(0, this._a, true)\n    buffer.setInt32(4, this._b, true)\n    buffer.setInt32(8, this._c, true)\n    buffer.setInt32(12, this._d, true)\n    buffer.setInt32(16, this._e, true)\n\n    return new Uint8Array(buffer.buffer)\n  }\n}\n","import { hash } from '@stablelib/sha256'\nimport { Ripemd160 } from './blockchains/utils/ripemd160'\nimport * as u8a from 'uint8arrays'\nimport sha3 from 'js-sha3'\n\nexport function sha256(payload: string | Uint8Array): Uint8Array {\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload\n  return hash(data)\n}\n\nexport function keccak(data: Uint8Array): Uint8Array {\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data))\n}\n\nexport function toEthereumAddress(hexPublicKey: string): string {\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16')\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`\n}\n\nexport function ripemd160(data: Uint8Array): Uint8Array {\n  return new Ripemd160().update(data).digest()\n}\n\nfunction writeUint32BE(value: number, array = new Uint8Array(4)): Uint8Array {\n  const encoded = u8a.fromString(value.toString(), 'base10')\n  array.set(encoded, 4 - encoded.length)\n  return array\n}\n\nconst lengthAndInput = (input: Uint8Array): Uint8Array => u8a.concat([writeUint32BE(input.length), input])\n\n// This implementation of concatKDF was inspired by these two implementations:\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\nexport function concatKDF(\n  secret: Uint8Array,\n  keyLen: number,\n  alg: string,\n  producerInfo?: Uint8Array,\n  consumerInfo?: Uint8Array\n): Uint8Array {\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`)\n  const value = u8a.concat([\n    lengthAndInput(u8a.fromString(alg)),\n    lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), // apu\n    lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), // apv\n    writeUint32BE(keyLen),\n  ])\n\n  // since our key lenght is 256 we only have to do one round\n  const roundNumber = 1\n  return sha256(u8a.concat([writeUint32BE(roundNumber), secret, value]))\n}\n","import { leftpad } from '../util'\nimport { toJose } from '../util'\nimport { Signer } from '../JWT'\nimport { sha256 } from '../Digest'\nimport elliptic from 'elliptic'\n\nconst secp256k1 = new elliptic.ec('secp256k1')\n\n/**\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    privateKey   a private key as `Uint8Array`\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function ES256KSigner(privateKey: Uint8Array, recoverable = false): Signer {\n  const privateKeyBytes: Uint8Array = privateKey\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\n  }\n  const keyPair: elliptic.ec.KeyPair = secp256k1.keyFromPrivate(privateKeyBytes)\n\n  return async (data: string | Uint8Array): Promise<string> => {\n    const { r, s, recoveryParam }: elliptic.ec.Signature = keyPair.sign(sha256(data))\n    return toJose(\n      {\n        r: leftpad(r.toString('hex')),\n        s: leftpad(s.toString('hex')),\n        recoveryParam,\n      },\n      recoverable\n    )\n  }\n}\n","import { fromJose, hexToBytes } from '../util'\nimport { Signer } from '../JWT'\nimport { ES256KSigner } from './ES256KSigner'\n\n/**\n * @deprecated Please use ES256KSigner\n *  The SimpleSigner returns a configured function for signing data.\n *\n *  @example\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\n *  signer(data, (err, signature) => {\n *    ...\n *  })\n *\n *  @param    {String}         hexPrivateKey    a hex encoded private key\n *  @return   {Function}                     a configured signer function\n */\nfunction SimpleSigner(hexPrivateKey: string): Signer {\n  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true)\n  return async (data) => {\n    const signature = (await signer(data)) as string\n    return fromJose(signature)\n  }\n}\n\nexport default SimpleSigner\n","import { hexToBytes } from '../util'\nimport { Signer } from '../JWT'\nimport { ES256KSigner } from './ES256KSigner'\n\n/**\n * @deprecated Please use ES256KSigner\n *  The EllipticSigner returns a configured function for signing data.\n *\n *  @example\n *  ```typescript\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\n *  signer(data).then( (signature: string) => {\n *    ...\n *  })\n *  ```\n *\n *  @param    {String}         hexPrivateKey    a hex encoded private key\n *  @return   {Function}                        a configured signer function\n */\nfunction EllipticSigner(hexPrivateKey: string): Signer {\n  return ES256KSigner(hexToBytes(hexPrivateKey))\n}\n\nexport default EllipticSigner\n","import { sign } from '@stablelib/ed25519'\nimport { Signer } from '../JWT'\nimport { bytesToBase64url, stringToBytes } from '../util'\n\n/**\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function EdDSASigner(secretKey: Uint8Array): Signer {\n  const privateKeyBytes: Uint8Array = secretKey\n  if (privateKeyBytes.length !== 64) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`)\n  }\n  return async (data: string | Uint8Array): Promise<string> => {\n    const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data\n    const sig: Uint8Array = sign(privateKeyBytes, dataBytes)\n    return bytesToBase64url(sig)\n  }\n}\n","import { EdDSASigner as EdDSASigner } from './EdDSASigner'\nimport { Signer } from '../JWT'\nimport { base64ToBytes } from '../util'\n\n/**\n * @deprecated Please use EdDSASigner\n *\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\n *\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\n *\n *  @example\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\n *  const data: string = '...'\n *  signer(data).then( (signature: string) => {\n *    ...\n *  })\n *\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\n *  @return   {Function}                     a configured signer function\n */\n\nfunction NaclSigner(base64PrivateKey: string): Signer {\n  return EdDSASigner(base64ToBytes(base64PrivateKey))\n}\n\nexport default NaclSigner\n","import { leftpad } from '../util'\nimport { toJose } from '../util'\nimport { Signer } from '../JWT'\nimport { sha256 } from '../Digest'\nimport elliptic from 'elliptic'\n\nconst secp256r1 = new elliptic.ec('p256')\n\n/**\n *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.\n *\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\n *\n *  @example\n *  ```typescript\n *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)\n *  const signature: string = await sign(data)\n *  ```\n *\n *  @param    {String}    privateKey   a private key as `Uint8Array`\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\n */\nexport function ES256Signer(privateKey: Uint8Array): Signer {\n  const privateKeyBytes: Uint8Array = privateKey\n  if (privateKeyBytes.length !== 32) {\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\n  }\n  const keyPair: elliptic.ec.KeyPair = secp256r1.keyFromPrivate(privateKeyBytes)\n\n  return async (data: string | Uint8Array): Promise<string> => {\n    const { r, s }: elliptic.ec.Signature = keyPair.sign(sha256(data))\n    return toJose({\n      r: leftpad(r.toString('hex')),\n      s: leftpad(s.toString('hex')),\n    })\n  }\n}\n","import { Signer, SignerAlgorithm } from './JWT'\nimport { EcdsaSignature, fromJose, toJose } from './util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction instanceOfEcdsaSignature(object: any): object is EcdsaSignature {\n  return typeof object === 'object' && 'r' in object && 's' in object\n}\n\nexport function ES256SignerAlg(): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (instanceOfEcdsaSignature(signature)) {\n      return toJose(signature)\n    } else {\n      return signature\n    }\n  }\n}\n\nexport function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (instanceOfEcdsaSignature(signature)) {\n      return toJose(signature, recoverable)\n    } else {\n      if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\n        throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`)\n      }\n      return signature\n    }\n  }\n}\n\nexport function Ed25519SignerAlg(): SignerAlgorithm {\n  return async function sign(payload: string, signer: Signer): Promise<string> {\n    const signature: EcdsaSignature | string = await signer(payload)\n    if (!instanceOfEcdsaSignature(signature)) {\n      return signature\n    } else {\n      throw new Error('invalid_config: expected a signer function that returns a string instead of signature object')\n    }\n  }\n}\n\ninterface SignerAlgorithms {\n  [alg: string]: SignerAlgorithm\n}\n\nconst algorithms: SignerAlgorithms = {\n  ES256: ES256SignerAlg(),\n  ES256K: ES256KSignerAlg(),\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': ES256KSignerAlg(true),\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: Ed25519SignerAlg(),\n  EdDSA: Ed25519SignerAlg(),\n}\n\nfunction SignerAlg(alg: string): SignerAlgorithm {\n  const impl: SignerAlgorithm = algorithms[alg]\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\n  return impl\n}\n\nexport default SignerAlg\n","import * as u8a from 'uint8arrays'\nimport { bytesToBase58, base58ToBytes } from '../util'\nimport { sha256, ripemd160 } from '../Digest'\n\nexport const publicKeyToAddress = (publicKey: string, otherAddress: string): string => {\n  // Use the same version/prefix byte as the given address.\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex')\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex')\n  const publicKeyHash = ripemd160(sha256(publicKeyBuffer))\n  const step1 = version + u8a.toString(publicKeyHash, 'hex')\n  const step2 = sha256(u8a.fromString(step1, 'hex'))\n  const step3 = sha256(step2)\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8)\n  const step4 = step1 + checksum\n  return bytesToBase58(u8a.fromString(step4, 'hex'))\n}\n","import elliptic from 'elliptic'\nimport { bech32 } from 'bech32'\nimport * as u8a from 'uint8arrays'\nimport { sha256, ripemd160 } from '../Digest'\n\nconst EC = elliptic.ec\n\nexport const publicKeyToAddress = (publicKey: string, prefix: string): string => {\n  const ec = new EC('secp256k1')\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true)\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex')\n  const hash = ripemd160(sha256(publicKeyBuffer))\n  const words = bech32.toWords(hash)\n  return bech32.encode(prefix, words).replace(prefix, '')\n}\n","import { publicKeyToAddress as bip122 } from './bip122'\nimport { publicKeyToAddress as cosmos } from './cosmos'\nimport { toEthereumAddress } from '../Digest'\n\nexport const verifyBlockchainAccountId = (publicKey: string, blockchainAccountId: string | undefined): boolean => {\n  if (blockchainAccountId) {\n    const chain = blockchainAccountId.split(':')\n    switch (chain[0]) {\n      case 'bip122':\n        chain[chain.length - 1] = bip122(publicKey, chain[chain.length - 1])\n        break\n      case 'cosmos':\n        chain[chain.length - 1] = cosmos(publicKey, chain[1])\n        break\n      case 'eip155':\n        chain[chain.length - 1] = toEthereumAddress(publicKey)\n        break\n      default:\n        return false\n    }\n    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase()\n  }\n  return false\n}\n","import type { SignatureInput } from 'elliptic'\nimport elliptic from 'elliptic'\nimport { sha256, toEthereumAddress } from './Digest'\nimport { verify } from '@stablelib/ed25519'\nimport type { VerificationMethod } from 'did-resolver'\nimport { bases } from 'multiformats/basics'\nimport { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'\nimport { verifyBlockchainAccountId } from './blockchains'\n\nconst secp256k1 = new elliptic.ec('secp256k1')\nconst secp256r1 = new elliptic.ec('p256')\n\n// converts a JOSE signature to it's components\nexport function toSignatureObject(signature: string, recoverable = false): EcdsaSignature {\n  const rawSig: Uint8Array = base64ToBytes(signature)\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\n    throw new Error('wrong signature length')\n  }\n  const r: string = bytesToHex(rawSig.slice(0, 32))\n  const s: string = bytesToHex(rawSig.slice(32, 64))\n  const sigObj: EcdsaSignature = { r, s }\n  if (recoverable) {\n    sigObj.recoveryParam = rawSig[64]\n  }\n  return sigObj\n}\n\ninterface LegacyVerificationMethod extends VerificationMethod {\n  publicKeyBase64: string\n}\n\nfunction extractPublicKeyBytes(pk: VerificationMethod): Uint8Array {\n  if (pk.publicKeyBase58) {\n    return base58ToBytes(pk.publicKeyBase58)\n  } else if ((<LegacyVerificationMethod>pk).publicKeyBase64) {\n    return base64ToBytes((<LegacyVerificationMethod>pk).publicKeyBase64)\n  } else if (pk.publicKeyHex) {\n    return hexToBytes(pk.publicKeyHex)\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(\n      secp256k1\n        .keyFromPublic({\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\n        })\n        .getPublic('hex')\n    )\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\n    return hexToBytes(\n      secp256r1\n        .keyFromPublic({\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\n        })\n        .getPublic('hex')\n    )\n  } else if (\n    pk.publicKeyJwk &&\n    pk.publicKeyJwk.kty === 'OKP' &&\n    pk.publicKeyJwk.crv === 'Ed25519' &&\n    pk.publicKeyJwk.x\n  ) {\n    return base64ToBytes(pk.publicKeyJwk.x)\n  } else if (pk.publicKeyMultibase) {\n    const { base16, base58btc, base64, base64url } = bases\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)))\n    return baseDecoder.decode(pk.publicKeyMultibase)\n  }\n  return new Uint8Array()\n}\n\nexport function verifyES256(data: string, signature: string, authenticators: VerificationMethod[]): VerificationMethod {\n  const hash: Uint8Array = sha256(data)\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\n  })\n\n  const signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk)\n      return secp256r1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\n    } catch (err) {\n      return false\n    }\n  })\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\nexport function verifyES256K(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  const hash: Uint8Array = sha256(data)\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\n  })\n  const blockchainAddressKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined'\n  })\n\n  let signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\n    try {\n      const pubBytes = extractPublicKeyBytes(pk)\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\n    } catch (err) {\n      return false\n    }\n  })\n\n  if (!signer && blockchainAddressKeys.length > 0) {\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys)\n  }\n\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\nexport function verifyRecoverableES256K(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  let signatures: EcdsaSignature[]\n  if (signature.length > 86) {\n    signatures = [toSignatureObject(signature, true)]\n  } else {\n    const so = toSignatureObject(signature, false)\n    signatures = [\n      { ...so, recoveryParam: 0 },\n      { ...so, recoveryParam: 1 },\n    ]\n  }\n\n  const checkSignatureAgainstSigner = (sigObj: EcdsaSignature): VerificationMethod | undefined => {\n    const hash: Uint8Array = sha256(data)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const recoveredKey: any = secp256k1.recoverPubKey(hash, <SignatureInput>sigObj, <number>sigObj.recoveryParam)\n    const recoveredPublicKeyHex: string = recoveredKey.encode('hex')\n    const recoveredCompressedPublicKeyHex: string = recoveredKey.encode('hex', true)\n    const recoveredAddress: string = toEthereumAddress(recoveredPublicKeyHex).toLowerCase()\n\n    const signer: VerificationMethod | undefined = authenticators.find((pk: VerificationMethod) => {\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk))\n      return (\n        keyHex === recoveredPublicKeyHex ||\n        keyHex === recoveredCompressedPublicKeyHex ||\n        pk.ethereumAddress?.toLowerCase() === recoveredAddress ||\n        pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2\n        verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\n      )\n    })\n\n    return signer\n  }\n\n  const signer: VerificationMethod[] = signatures\n    .map(checkSignatureAgainstSigner)\n    .filter((key) => typeof key !== 'undefined') as VerificationMethod[]\n\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer[0]\n}\n\nexport function verifyEd25519(\n  data: string,\n  signature: string,\n  authenticators: VerificationMethod[]\n): VerificationMethod {\n  const clear: Uint8Array = stringToBytes(data)\n  const sig: Uint8Array = base64ToBytes(signature)\n  const signer = authenticators.find((pk: VerificationMethod) => {\n    return verify(extractPublicKeyBytes(pk), clear, sig)\n  })\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\n  return signer\n}\n\ntype Verifier = (data: string, signature: string, authenticators: VerificationMethod[]) => VerificationMethod\ninterface Algorithms {\n  [name: string]: Verifier\n}\nconst algorithms: Algorithms = {\n  ES256: verifyES256,\n  ES256K: verifyES256K,\n  // This is a non-standard algorithm but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\n  'ES256K-R': verifyRecoverableES256K,\n  // This is actually incorrect but retained for backwards compatibility\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\n  Ed25519: verifyEd25519,\n  EdDSA: verifyEd25519,\n}\n\nfunction VerifierAlgorithm(alg: string): Verifier {\n  const impl: Verifier = algorithms[alg]\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\n  return impl\n}\n\nVerifierAlgorithm.toSignatureObject = toSignatureObject\n\nexport default VerifierAlgorithm\n","/**\n * Error prefixes used for known verification failure cases.\n *\n * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major\n * version update to match the scenarios better.\n *\n * @beta\n */\nexport const JWT_ERROR = {\n  /**\n   * Thrown when a JWT payload schema is unexpected or when validity period does not match\n   */\n  INVALID_JWT: 'invalid_jwt',\n  /**\n   * Thrown when the verifier audience does not match the one set in the JWT payload\n   */\n  INVALID_AUDIENCE: 'invalid_config',\n  /**\n   * Thrown when none of the public keys of the issuer match the signature of the JWT.\n   *\n   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.\n   */\n  INVALID_SIGNATURE: 'invalid_signature',\n  /**\n   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given\n   * `proofPurpose`.\n   *\n   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.\n   */\n  NO_SUITABLE_KEYS: 'no_suitable_keys',\n  /**\n   * Thrown when the `alg` of the JWT or the encoding of the key is not supported\n   */\n  NOT_SUPPORTED: 'not_supported',\n  /**\n   * Thrown when the DID resolver is unable to resolve the issuer DID.\n   */\n  RESOLVER_ERROR: 'resolver_error',\n}\n","import canonicalizeData from 'canonicalize'\nimport type { DIDDocument, DIDResolutionResult, Resolvable, VerificationMethod } from 'did-resolver'\nimport SignerAlg from './SignerAlgorithm'\nimport { decodeBase64url, EcdsaSignature, encodeBase64url } from './util'\nimport VerifierAlgorithm from './VerifierAlgorithm'\nimport { JWT_ERROR } from './Errors'\n\nexport type Signer = (data: string | Uint8Array) => Promise<EcdsaSignature | string>\nexport type SignerAlgorithm = (payload: string, signer: Signer) => Promise<string>\n\nexport type ProofPurposeTypes =\n  | 'assertionMethod'\n  | 'authentication'\n  // | 'keyAgreement' // keyAgreement VerificationMethod should not be used for signing\n  | 'capabilityDelegation'\n  | 'capabilityInvocation'\n\nexport interface JWTOptions {\n  issuer: string\n  signer: Signer\n  /**\n   * @deprecated Please use `header.alg` to specify the JWT algorithm.\n   */\n  alg?: string\n  expiresIn?: number\n  canonicalize?: boolean\n}\n\nexport interface JWTVerifyOptions {\n  /** @deprecated Please use `proofPurpose: 'authentication' instead` */\n  auth?: boolean\n  audience?: string\n  callbackUrl?: string\n  resolver?: Resolvable\n  skewTime?: number\n  /** See https://www.w3.org/TR/did-spec-registries/#verification-relationships */\n  proofPurpose?: ProofPurposeTypes\n  policies?: JWTVerifyPolicies\n}\n\n/**\n * Overrides the different types of checks performed on the JWT besides the signature check\n */\nexport interface JWTVerifyPolicies {\n  // overrides the timestamp against which the validity interval is checked\n  now?: number\n  // when set to false, the timestamp checks ignore the Not Before(`nbf`) property\n  nbf?: boolean\n  // when set to false, the timestamp checks ignore the Issued At(`iat`) property\n  iat?: boolean\n  // when set to false, the timestamp checks ignore the Expires At(`exp`) property\n  exp?: boolean\n  // when set to false, the JWT audience check is skipped\n  aud?: boolean\n}\n\nexport interface JWSCreationOptions {\n  canonicalize?: boolean\n}\n\nexport interface DIDAuthenticator {\n  authenticators: VerificationMethod[]\n  issuer: string\n  didResolutionResult: DIDResolutionResult\n}\n\nexport interface JWTHeader {\n  typ: 'JWT'\n  alg: string\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface JWTPayload {\n  iss?: string\n  sub?: string\n  aud?: string | string[]\n  iat?: number\n  nbf?: number\n  exp?: number\n  rexp?: number\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\nexport interface JWTDecoded {\n  header: JWTHeader\n  payload: JWTPayload\n  signature: string\n  data: string\n}\n\nexport interface JWSDecoded {\n  header: JWTHeader\n  payload: string\n  signature: string\n  data: string\n}\n\n/**\n * Result object returned by {@link verifyJWT}\n */\nexport interface JWTVerified {\n  /**\n   * Set to true for a JWT that passes all the required checks minus any verification overrides.\n   */\n  verified: true\n\n  /**\n   * The decoded JWT payload\n   */\n  payload: Partial<JWTPayload>\n\n  /**\n   * The result of resolving the issuer DID\n   */\n  didResolutionResult: DIDResolutionResult\n\n  /**\n   * the issuer DID\n   */\n  issuer: string\n\n  /**\n   * The public key of the issuer that matches the JWT signature\n   */\n  signer: VerificationMethod\n\n  /**\n   * The original JWT that was verified\n   */\n  jwt: string\n\n  /**\n   * Any overrides that were used during verification\n   */\n  policies?: JWTVerifyPolicies\n}\n\nexport interface PublicKeyTypes {\n  [name: string]: string[]\n}\n\nexport const SUPPORTED_PUBLIC_KEY_TYPES: PublicKeyTypes = {\n  ES256: ['JsonWebKey2020'],\n  ES256K: [\n    'EcdsaSecp256k1VerificationKey2019',\n    /**\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\n     */\n    'EcdsaSecp256k1RecoveryMethod2020',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1VerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1SignatureVerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'EcdsaPublicKeySecp256k1',\n    'JsonWebKey2020',\n  ],\n  'ES256K-R': [\n    'EcdsaSecp256k1VerificationKey2019',\n    /**\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\n     */\n    'EcdsaSecp256k1RecoveryMethod2020',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1VerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'Secp256k1SignatureVerificationKey2018',\n    /**\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\n     *   not an ethereumAddress\n     */\n    'EcdsaPublicKeySecp256k1',\n    'JsonWebKey2020',\n  ],\n  Ed25519: [\n    'ED25519SignatureVerification',\n    'Ed25519VerificationKey2018',\n    'Ed25519VerificationKey2020',\n    'JsonWebKey2020',\n  ],\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],\n}\n\nexport const SELF_ISSUED_V2 = 'https://self-issued.me/v2'\nexport const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc' // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation\nexport const SELF_ISSUED_V0_1 = 'https://self-issued.me'\n\ntype LegacyVerificationMethod = { publicKey?: string }\n\nconst defaultAlg = 'ES256K'\nconst DID_JSON = 'application/did+json'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction encodeSection(data: any, shouldCanonicalize = false): string {\n  if (shouldCanonicalize) {\n    return encodeBase64url(<string>canonicalizeData(data))\n  } else {\n    return encodeBase64url(JSON.stringify(data))\n  }\n}\n\nexport const NBF_SKEW = 300\n\nfunction decodeJWS(jws: string): JWSDecoded {\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/)\n  if (parts) {\n    return {\n      header: JSON.parse(decodeBase64url(parts[1])),\n      payload: parts[2],\n      signature: parts[3],\n      data: `${parts[1]}.${parts[2]}`,\n    }\n  }\n  throw new Error('invalid_argument: Incorrect format JWS')\n}\n\n/**  @module did-jwt/JWT */\n\n/**\n *  Decodes a JWT and returns an object representing the payload\n *\n *  @example\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\n *\n *  @param    {String}            jwt                a JSON Web Token to verify\n *  @return   {Object}                               a JS object representing the decoded JWT\n */\nexport function decodeJWT(jwt: string): JWTDecoded {\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT')\n  try {\n    const jws = decodeJWS(jwt)\n    const decodedJwt: JWTDecoded = Object.assign(jws, { payload: JSON.parse(decodeBase64url(jws.payload)) })\n    return decodedJwt\n  } catch (e) {\n    throw new Error('invalid_argument: Incorrect format JWT')\n  }\n}\n\n/**\n *  Creates a signed JWS given a payload, a signer, and an optional header.\n *\n *  @example\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  const jws = await createJWS({ my: 'payload' }, signer)\n *\n *  @param    {Object}            payload           payload object\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\n *  @param    {Object}            header            optional object to specify or customize the JWS header\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\n *                                                    payload properties\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\n */\nexport async function createJWS(\n  payload: string | Partial<JWTPayload>,\n  signer: Signer,\n  header: Partial<JWTHeader> = {},\n  options: JWSCreationOptions = {}\n): Promise<string> {\n  if (!header.alg) header.alg = defaultAlg\n  const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize)\n  const signingInput: string = [encodeSection(header, options.canonicalize), encodedPayload].join('.')\n\n  const jwtSigner: SignerAlgorithm = SignerAlg(header.alg)\n  const signature: string = await jwtSigner(signingInput, signer)\n  return [signingInput, signature].join('.')\n}\n\n/**\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is\n * over.\n *\n *  @example\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\n *      ...\n *  })\n *\n *  @param    {Object}            payload               payload object\n *  @param    {Object}            [options]             an unsigned credential object\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:\n *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\n *  @param    {Object}            header                optional object to specify or customize the JWT header\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or\n *   rejects with an error\n */\nexport async function createJWT(\n  payload: Partial<JWTPayload>,\n  { issuer, signer, alg, expiresIn, canonicalize }: JWTOptions,\n  header: Partial<JWTHeader> = {}\n): Promise<string> {\n  if (!signer) throw new Error('missing_signer: No Signer functionality has been configured')\n  if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured')\n  if (!header.typ) header.typ = 'JWT'\n  if (!header.alg) header.alg = alg\n  const timestamps: Partial<JWTPayload> = {\n    iat: Math.floor(Date.now() / 1000),\n    exp: undefined,\n  }\n  if (expiresIn) {\n    if (typeof expiresIn === 'number') {\n      timestamps.exp = <number>(payload.nbf || timestamps.iat) + Math.floor(expiresIn)\n    } else {\n      throw new Error('invalid_argument: JWT expiresIn is not a number')\n    }\n  }\n  const fullPayload = { ...timestamps, ...payload, iss: issuer }\n  return createJWS(fullPayload, signer, header, { canonicalize })\n}\n\nfunction verifyJWSDecoded(\n  { header, data, signature }: JWSDecoded,\n  pubKeys: VerificationMethod | VerificationMethod[]\n): VerificationMethod {\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys]\n  const signer: VerificationMethod = VerifierAlgorithm(header.alg)(data, signature, pubKeys)\n  return signer\n}\n\n/**\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\n *\n *  @example\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\n *\n *  @param    {String}                          jws         A JWS string to verify\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\n */\nexport function verifyJWS(jws: string, pubKeys: VerificationMethod | VerificationMethod[]): VerificationMethod {\n  const jwsDecoded: JWSDecoded = decodeJWS(jws)\n  return verifyJWSDecoded(jwsDecoded, pubKeys)\n}\n\n/**\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\n *  and the DID document of the issuer of the JWT.\n *\n *  @example\n *  ```ts\n *  verifyJWT(\n *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',\n *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}\n *    ).then(obj => {\n *        const did = obj.did // DID of signer\n *        const payload = obj.payload\n *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer\n *        const jwt = obj.jwt\n *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT\n *        ...\n *    })\n *  ```\n *\n *  @param    {String}            jwt                a JSON Web Token to verify\n *  @param    {Object}            [options]           an unsigned credential object\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the\n *   DID document (for Authentication purposes)\n *  @param    {String}            options.audience    DID of the recipient of the JWT\n *  @param    {String}            options.callbackUrl callback url in JWT\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an\n *   error\n */\nexport async function verifyJWT(\n  jwt: string,\n  options: JWTVerifyOptions = {\n    resolver: undefined,\n    auth: undefined,\n    audience: undefined,\n    callbackUrl: undefined,\n    skewTime: undefined,\n    proofPurpose: undefined,\n    policies: {},\n  }\n): Promise<JWTVerified> {\n  if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured')\n  const { payload, header, signature, data }: JWTDecoded = decodeJWT(jwt)\n  const proofPurpose: ProofPurposeTypes | undefined = Object.prototype.hasOwnProperty.call(options, 'auth')\n    ? options.auth\n      ? 'authentication'\n      : undefined\n    : options.proofPurpose\n\n  let did\n\n  if (!payload.iss && !payload.client_id) {\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`)\n  }\n\n  if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {\n    if (!payload.sub) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`)\n    }\n    if (typeof payload.sub_jwk === 'undefined') {\n      did = payload.sub\n    } else {\n      did = (header.kid || '').split('#')[0]\n    }\n  } else if (payload.iss === SELF_ISSUED_V0_1) {\n    if (!payload.did) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`)\n    }\n    did = payload.did\n  } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {\n    // SIOP Request payload\n    // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object\n    if (!payload.client_id) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`)\n    }\n    did = payload.client_id\n  } else {\n    did = payload.iss\n  }\n\n  if (!did) {\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`)\n  }\n\n  const { didResolutionResult, authenticators, issuer }: DIDAuthenticator = await resolveAuthenticator(\n    options.resolver,\n    header.alg,\n    did,\n    proofPurpose\n  )\n  const signer: VerificationMethod = await verifyJWSDecoded({ header, data, signature } as JWSDecoded, authenticators)\n  const now: number = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000)\n  const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW\n  if (signer) {\n    const nowSkewed = now + skewTime\n    if (options.policies?.nbf !== false && payload.nbf) {\n      if (payload.nbf > nowSkewed) {\n        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`)\n      }\n    } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`)\n    }\n    if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`)\n    }\n    if (options.policies?.aud !== false && payload.aud) {\n      if (!options.audience && !options.callbackUrl) {\n        throw new Error(\n          `${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`\n        )\n      }\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\n      const matchedAudience = audArray.find((item) => options.audience === item || options.callbackUrl === item)\n\n      if (typeof matchedAudience === 'undefined') {\n        throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)\n      }\n    }\n    return { verified: true, payload, didResolutionResult, issuer, signer, jwt, policies: options.policies }\n  }\n  throw new Error(\n    `${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`\n  )\n}\n\n/**\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of\n * provided DID\n *\n *  @example\n *  ```ts\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\n *      const payload = obj.payload\n *      const profile = obj.profile\n *      const jwt = obj.jwt\n *      // ...\n *  })\n *  ```\n *\n *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`\n *  @param alg - {String} a JWT algorithm\n *  @param issuer - {String} a Decentralized Identifier (DID) to lookup\n *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the\n *   issuer DID document\n *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators\n *   or rejects with an error if none exist\n */\nexport async function resolveAuthenticator(\n  resolver: Resolvable,\n  alg: string,\n  issuer: string,\n  proofPurpose?: ProofPurposeTypes\n): Promise<DIDAuthenticator> {\n  const types: string[] = SUPPORTED_PUBLIC_KEY_TYPES[alg]\n  if (!types || types.length === 0) {\n    throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`)\n  }\n  let didResult: DIDResolutionResult\n\n  const result = (await resolver.resolve(issuer, { accept: DID_JSON })) as unknown\n  // support legacy resolvers that do not produce DIDResolutionResult\n  if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\n    didResult = {\n      didDocument: result as DIDDocument,\n      didDocumentMetadata: {},\n      didResolutionMetadata: { contentType: DID_JSON },\n    }\n  } else {\n    didResult = result as DIDResolutionResult\n  }\n\n  if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {\n    const { error, message } = didResult.didResolutionMetadata\n    throw new Error(\n      `${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`\n    )\n  }\n\n  const getPublicKeyById = (verificationMethods: VerificationMethod[], pubid?: string): VerificationMethod | null => {\n    const filtered = verificationMethods.filter(({ id }) => pubid === id)\n    return filtered.length > 0 ? filtered[0] : null\n  }\n\n  let publicKeysToCheck: VerificationMethod[] = [\n    ...(didResult?.didDocument?.verificationMethod || []),\n    ...(didResult?.didDocument?.publicKey || []),\n  ]\n  if (typeof proofPurpose === 'string') {\n    // support legacy DID Documents that do not list assertionMethod\n    if (\n      proofPurpose.startsWith('assertion') &&\n      !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')\n    ) {\n      didResult.didDocument = { ...(<DIDDocument>didResult.didDocument) }\n      didResult.didDocument.assertionMethod = [...publicKeysToCheck.map((pk) => pk.id)]\n    }\n\n    publicKeysToCheck = (didResult.didDocument[proofPurpose] || [])\n      .map((verificationMethod) => {\n        if (typeof verificationMethod === 'string') {\n          return getPublicKeyById(publicKeysToCheck, verificationMethod)\n        } else if (typeof (<LegacyVerificationMethod>verificationMethod).publicKey === 'string') {\n          // this is a legacy format\n          return getPublicKeyById(publicKeysToCheck, (<LegacyVerificationMethod>verificationMethod).publicKey)\n        } else {\n          return <VerificationMethod>verificationMethod\n        }\n      })\n      .filter((key) => key != null) as VerificationMethod[]\n  }\n\n  const authenticators: VerificationMethod[] = publicKeysToCheck.filter(({ type }) =>\n    types.find((supported) => supported === type)\n  )\n\n  if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\n    throw new Error(\n      `${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`\n    )\n  }\n  if (!authenticators || authenticators.length === 0) {\n    throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`)\n  }\n  return { authenticators, issuer, didResolutionResult: didResult }\n}\n","import { fromString } from 'uint8arrays'\nimport { base64ToBytes, bytesToBase64url, decodeBase64url, toSealed } from './util'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ProtectedHeader = Record<string, any> & Partial<RecipientHeader>\n\n/**\n * The JWK representation of an ephemeral public key.\n * See https://www.rfc-editor.org/rfc/rfc7518.html#section-6\n */\ninterface EphemeralPublicKey {\n  kty?: string\n  //ECC\n  crv?: string\n  x?: string\n  y?: string\n  //RSA\n  n?: string\n  e?: string\n}\n\nexport interface RecipientHeader {\n  alg: string\n  iv: string\n  tag: string\n  epk?: EphemeralPublicKey\n  kid?: string\n  apv?: string\n  apu?: string\n}\n\nexport interface Recipient {\n  header: RecipientHeader\n  encrypted_key: string\n}\n\nexport interface JWE {\n  protected: string\n  iv: string\n  ciphertext: string\n  tag: string\n  aad?: string\n  recipients?: Recipient[]\n}\n\nexport interface EncryptionResult {\n  ciphertext: Uint8Array\n  tag: Uint8Array\n  iv: Uint8Array\n  protectedHeader?: string\n  recipient?: Recipient\n  cek?: Uint8Array\n}\n\nexport interface Encrypter {\n  alg: string\n  enc: string\n  encrypt: (cleartext: Uint8Array, protectedHeader: ProtectedHeader, aad?: Uint8Array) => Promise<EncryptionResult>\n  encryptCek?: (cek: Uint8Array) => Promise<Recipient>\n}\n\nexport interface Decrypter {\n  alg: string\n  enc: string\n  decrypt: (sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array, recipient?: Recipient) => Promise<Uint8Array | null>\n}\n\nfunction validateJWE(jwe: JWE) {\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\n    throw new Error('bad_jwe: missing properties')\n  }\n  if (jwe.recipients) {\n    jwe.recipients.map((rec) => {\n      if (!(rec.header && rec.encrypted_key)) {\n        throw new Error('bad_jwe: malformed recipients')\n      }\n    })\n  }\n}\n\nfunction encodeJWE({ ciphertext, tag, iv, protectedHeader, recipient }: EncryptionResult, aad?: Uint8Array): JWE {\n  const jwe: JWE = {\n    protected: <string>protectedHeader,\n    iv: bytesToBase64url(iv),\n    ciphertext: bytesToBase64url(ciphertext),\n    tag: bytesToBase64url(tag),\n  }\n  if (aad) jwe.aad = bytesToBase64url(aad)\n  if (recipient) jwe.recipients = [recipient]\n  return jwe\n}\n\nexport async function createJWE(\n  cleartext: Uint8Array,\n  encrypters: Encrypter[],\n  protectedHeader = {},\n  aad?: Uint8Array\n): Promise<JWE> {\n  if (encrypters[0].alg === 'dir') {\n    if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.')\n    const encryptionResult = await encrypters[0].encrypt(cleartext, protectedHeader, aad)\n    return encodeJWE(encryptionResult, aad)\n  } else {\n    const tmpEnc = encrypters[0].enc\n    if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\n      throw new Error('invalid_argument: Incompatible encrypters passed')\n    }\n    let cek\n    let jwe\n    for (const encrypter of encrypters) {\n      if (!cek) {\n        const encryptionResult = await encrypter.encrypt(cleartext, protectedHeader, aad)\n        cek = encryptionResult.cek\n        jwe = encodeJWE(encryptionResult, aad)\n      } else {\n        const recipient = await encrypter.encryptCek?.(cek)\n        if (recipient) {\n          jwe?.recipients?.push(recipient)\n        }\n      }\n    }\n    return <JWE>jwe\n  }\n}\n\nexport async function decryptJWE(jwe: JWE, decrypter: Decrypter): Promise<Uint8Array> {\n  validateJWE(jwe)\n  const protHeader = JSON.parse(decodeBase64url(jwe.protected))\n  if (protHeader.enc !== decrypter.enc)\n    throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`)\n  const sealed = toSealed(jwe.ciphertext, jwe.tag)\n  const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected)\n  let cleartext = null\n  if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\n    cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)\n  } else if (!jwe.recipients || jwe.recipients.length === 0) {\n    throw new Error('bad_jwe: missing recipients')\n  } else {\n    for (let i = 0; !cleartext && i < jwe.recipients.length; i++) {\n      const recipient = jwe.recipients[i]\n      Object.assign(recipient.header, protHeader)\n      if (recipient.header.alg === decrypter.alg) {\n        cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)\n      }\n    }\n  }\n  if (cleartext === null) throw new Error('failure: Failed to decrypt')\n  return cleartext\n}\n","import { sharedKey } from '@stablelib/x25519'\n\n/**\n * A wrapper around `mySecretKey` that can compute a shared secret using `theirPublicKey`.\n * The promise should resolve to a `Uint8Array` containing the raw shared secret.\n *\n * This method is meant to be used when direct access to a secret key is impossible or not desired.\n *\n * @param theirPublicKey `Uint8Array` the other party's public key\n * @returns a `Promise` that resolves to a `Uint8Array` representing the computed shared secret\n */\nexport type ECDH = (theirPublicKey: Uint8Array) => Promise<Uint8Array>\n\n/**\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\n *\n * @throws 'invalid_argument:...' if the secret key size is wrong\n */\nexport function createX25519ECDH(mySecretKey: Uint8Array): ECDH {\n  if (mySecretKey.length !== 32) {\n    throw new Error('invalid_argument: incorrect secret key length for X25519')\n  }\n  return async (theirPublicKey: Uint8Array): Promise<Uint8Array> => {\n    if (theirPublicKey.length !== 32) {\n      throw new Error('invalid_argument: incorrect publicKey key length for X25519')\n    }\n    return sharedKey(mySecretKey, theirPublicKey)\n  }\n}\n","import { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305'\nimport { generateKeyPair, sharedKey } from '@stablelib/x25519'\nimport { randomBytes } from '@stablelib/random'\nimport { concatKDF } from './Digest'\nimport { bytesToBase64url, base58ToBytes, encodeBase64url, toSealed, base64ToBytes } from './util'\nimport { Recipient, EncryptionResult, Encrypter, Decrypter, ProtectedHeader } from './JWE'\nimport type { VerificationMethod, Resolvable } from 'did-resolver'\nimport { ECDH } from './ECDH'\nimport { fromString } from 'uint8arrays/from-string'\n\n/**\n * Extra parameters for JWE using authenticated encryption\n */\nexport type AuthEncryptParams = {\n  /**\n   * recipient key ID\n   */\n  kid?: string\n\n  /**\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.2}\n   * base64url encoded\n   */\n  apu?: string\n\n  /**\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.3}\n   * base64url encoded\n   */\n  apv?: string\n}\n\n/**\n * Extra parameters for JWE using anonymous encryption\n */\nexport type AnonEncryptParams = {\n  /**\n   * recipient key ID\n   */\n  kid?: string\n}\n\n/**\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\n * sender private key to encrypt the data).\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\n *\n * @param recipientPublicKey the byte array representing the recipient public key\n * @param senderSecret either a Uint8Array representing the sender secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\n *\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\n *\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\n * are subject to change as new revisions or until the official CFRG specification are released.\n *\n * @beta\n */\nexport function createAuthEncrypter(\n  recipientPublicKey: Uint8Array,\n  senderSecret: Uint8Array | ECDH,\n  options: Partial<AuthEncryptParams> = {}\n): Encrypter {\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options)\n}\n\n/**\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\n *\n * @param publicKey the byte array representing the recipient public key\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\n *\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\n *\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\n * is subject to change as new revisions or until the official CFRG specification is released.\n *\n * @beta\n */\nexport function createAnonEncrypter(publicKey: Uint8Array, options: Partial<AnonEncryptParams> = {}): Encrypter {\n  return x25519Encrypter(publicKey, options?.kid)\n}\n\n/**\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\n * sender public key to decrypt the data).\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\n *\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n * @param senderPublicKey the byte array representing the sender public key\n *\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\n *\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\n * are subject to change as new revisions or until the official CFRG specification are released.\n *\n * @beta\n */\nexport function createAuthDecrypter(recipientSecret: Uint8Array | ECDH, senderPublicKey: Uint8Array): Decrypter {\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey)\n}\n\n/**\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\n *\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\n *\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\n *\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\n * is subject to change as new revisions or until the official CFRG specification is released.\n *\n * @beta\n */\nexport function createAnonDecrypter(recipientSecret: Uint8Array | ECDH): Decrypter {\n  return x25519Decrypter(recipientSecret)\n}\n\nfunction xc20pEncrypter(key: Uint8Array): (cleartext: Uint8Array, aad?: Uint8Array) => EncryptionResult {\n  const cipher = new XChaCha20Poly1305(key)\n  return (cleartext: Uint8Array, aad?: Uint8Array) => {\n    const iv = randomBytes(cipher.nonceLength)\n    const sealed = cipher.seal(iv, cleartext, aad)\n    return {\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\n      iv,\n    }\n  }\n}\n\nexport function xc20pDirEncrypter(key: Uint8Array): Encrypter {\n  const xc20pEncrypt = xc20pEncrypter(key)\n  const enc = 'XC20P'\n  const alg = 'dir'\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    const protHeader = encodeBase64url(JSON.stringify(Object.assign({ alg }, protectedHeader, { enc })))\n    const encodedAad = fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader)\n    return {\n      ...xc20pEncrypt(cleartext, encodedAad),\n      protectedHeader: protHeader,\n    }\n  }\n  return { alg, enc, encrypt }\n}\n\nexport function xc20pDirDecrypter(key: Uint8Array): Decrypter {\n  const cipher = new XChaCha20Poly1305(key)\n  async function decrypt(sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array): Promise<Uint8Array | null> {\n    return cipher.open(iv, sealed, aad)\n  }\n  return { alg: 'dir', enc: 'XC20P', decrypt }\n}\n\nexport function x25519Encrypter(publicKey: Uint8Array, kid?: string): Encrypter {\n  const alg = 'ECDH-ES+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\n    const epk = generateKeyPair()\n    const sharedSecret = sharedKey(epk.secretKey, publicKey)\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg)\n    const res = xc20pEncrypter(kek)(cek)\n    const recipient: Recipient = {\n      encrypted_key: bytesToBase64url(res.ciphertext),\n      header: {\n        alg,\n        iv: bytesToBase64url(res.iv),\n        tag: bytesToBase64url(res.tag),\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\n      },\n    }\n    if (kid) recipient.header.kid = kid\n    return recipient\n  }\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    // we won't want alg to be set to dir from xc20pDirEncrypter\n    Object.assign(protectedHeader, { alg: undefined })\n    // Content Encryption Key\n    const cek = randomBytes(32)\n    return {\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\n      recipient: await encryptCek(cek),\n      cek,\n    }\n  }\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\n}\n\n/**\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\n */\nexport function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(\n  recipientPublicKey: Uint8Array,\n  senderSecret: Uint8Array | ECDH,\n  options: Partial<AuthEncryptParams> = {}\n): Encrypter {\n  const alg = 'ECDH-1PU+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n\n  let partyUInfo: Uint8Array\n  let partyVInfo: Uint8Array\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu)\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv)\n\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\n    const epk = generateKeyPair()\n    const zE = sharedKey(epk.secretKey, recipientPublicKey)\n\n    // ECDH-1PU requires additional shared secret between\n    // static key of sender and static key of recipient\n    let zS\n    if (senderSecret instanceof Uint8Array) {\n      zS = sharedKey(senderSecret, recipientPublicKey)\n    } else {\n      zS = await senderSecret(recipientPublicKey)\n    }\n\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\n    sharedSecret.set(zE)\n    sharedSecret.set(zS, zE.length)\n\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo)\n\n    const res = xc20pEncrypter(kek)(cek)\n    const recipient: Recipient = {\n      encrypted_key: bytesToBase64url(res.ciphertext),\n      header: {\n        alg,\n        iv: bytesToBase64url(res.iv),\n        tag: bytesToBase64url(res.tag),\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\n      },\n    }\n    if (options.kid) recipient.header.kid = options.kid\n    if (options.apu) recipient.header.apu = options.apu\n    if (options.apv) recipient.header.apv = options.apv\n\n    return recipient\n  }\n  async function encrypt(\n    cleartext: Uint8Array,\n    protectedHeader: ProtectedHeader = {},\n    aad?: Uint8Array\n  ): Promise<EncryptionResult> {\n    // we won't want alg to be set to dir from xc20pDirEncrypter\n    Object.assign(protectedHeader, { alg: undefined })\n    // Content Encryption Key\n    const cek = randomBytes(32)\n    return {\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\n      recipient: await encryptCek(cek),\n      cek,\n    }\n  }\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\n}\n\nexport async function resolveX25519Encrypters(dids: string[], resolver: Resolvable): Promise<Encrypter[]> {\n  const encryptersForDID = async (did: string, resolved: string[] = []): Promise<Encrypter[]> => {\n    const { didResolutionMetadata, didDocument } = await resolver.resolve(did)\n    resolved.push(did)\n    if (didResolutionMetadata?.error || didDocument == null) {\n      throw new Error(\n        `resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`\n      )\n    }\n    let controllerEncrypters: Encrypter[] = []\n    if (!didDocument.controller && !didDocument.keyAgreement) {\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\n    }\n    if (didDocument.controller) {\n      let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller]\n      controllers = controllers.filter((c) => !resolved.includes(c))\n      const encrypterPromises = controllers.map((did) =>\n        encryptersForDID(did, resolved).catch(() => {\n          return []\n        })\n      )\n      const encrypterArrays = await Promise.all(encrypterPromises)\n      controllerEncrypters = ([] as Encrypter[]).concat(...encrypterArrays)\n    }\n    const agreementKeys: VerificationMethod[] = didDocument.keyAgreement\n      ?.map((key) => {\n        if (typeof key === 'string') {\n          return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(\n            (pk) => pk.id === key\n          )\n        }\n        return key\n      })\n      ?.filter((key) => typeof key !== 'undefined') as VerificationMethod[]\n    const pks =\n      agreementKeys?.filter((key) => {\n        // TODO: should be able to use non base58 keys too\n        return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58)\n      }) || []\n    if (!pks.length && !controllerEncrypters.length)\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\n    return pks\n      .map((pk) => x25519Encrypter(base58ToBytes(<string>pk.publicKeyBase58), pk.id))\n      .concat(...controllerEncrypters)\n  }\n\n  const encrypterPromises = dids.map((did) => encryptersForDID(did))\n  const encrypterArrays = await Promise.all(encrypterPromises)\n  const flattenedArray = ([] as Encrypter[]).concat(...encrypterArrays)\n  return flattenedArray\n}\n\nfunction validateHeader(header?: ProtectedHeader) {\n  if (!(header && header.epk && header.iv && header.tag)) {\n    throw new Error('bad_jwe: malformed header')\n  }\n}\n\nexport function x25519Decrypter(receiverSecret: Uint8Array | ECDH): Decrypter {\n  const alg = 'ECDH-ES+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function decrypt(\n    sealed: Uint8Array,\n    iv: Uint8Array,\n    aad?: Uint8Array,\n    recipient?: Recipient\n  ): Promise<Uint8Array | null> {\n    validateHeader(recipient?.header)\n    recipient = <Recipient>recipient\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\n    const publicKey = base64ToBytes(recipient.header.epk.x)\n    let sharedSecret\n    if (receiverSecret instanceof Uint8Array) {\n      sharedSecret = sharedKey(receiverSecret, publicKey)\n    } else {\n      sharedSecret = await receiverSecret(publicKey)\n    }\n\n    // Key Encryption Key\n    const kek = concatKDF(sharedSecret, keyLen, alg)\n    // Content Encryption Key\n    const sealedCek = toSealed(<string>recipient.encrypted_key, recipient.header.tag)\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\n    if (cek === null) return null\n\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\n  }\n  return { alg, enc: 'XC20P', decrypt }\n}\n\n/**\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\n */\nexport function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(\n  recipientSecret: Uint8Array | ECDH,\n  senderPublicKey: Uint8Array\n): Decrypter {\n  const alg = 'ECDH-1PU+XC20PKW'\n  const keyLen = 256\n  const crv = 'X25519'\n  async function decrypt(\n    sealed: Uint8Array,\n    iv: Uint8Array,\n    aad?: Uint8Array,\n    recipient?: Recipient\n  ): Promise<Uint8Array | null> {\n    recipient = <Recipient>recipient\n    validateHeader(recipient.header)\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\n    // ECDH-1PU requires additional shared secret between\n    // static key of sender and static key of recipient\n    const publicKey = base64ToBytes(recipient.header.epk.x)\n    let zE: Uint8Array\n    let zS: Uint8Array\n\n    if (recipientSecret instanceof Uint8Array) {\n      zE = sharedKey(recipientSecret, publicKey)\n      zS = sharedKey(recipientSecret, senderPublicKey)\n    } else {\n      zE = await recipientSecret(publicKey)\n      zS = await recipientSecret(senderPublicKey)\n    }\n\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\n    sharedSecret.set(zE)\n    sharedSecret.set(zS, zE.length)\n\n    // Key Encryption Key\n    let producerInfo\n    let consumerInfo\n    if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu)\n    if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv)\n\n    const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo)\n    // Content Encryption Key\n    const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag)\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\n    if (cek === null) return null\n\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\n  }\n  return { alg, enc: 'XC20P', decrypt }\n}\n"],"names":["bytesToBase64url","b","u8a","toString","base64ToBytes","s","inputBase64Url","replace","fromString","base58ToBytes","bytesToBase58","hexToBytes","input","startsWith","substring","toLowerCase","encodeBase64url","decodeBase64url","bytesToHex","stringToBytes","toJose","r","recoveryParam","recoverable","jose","Uint8Array","set","Error","fromJose","signature","signatureBytes","length","TypeError","slice","undefined","toSealed","ciphertext","tag","concat","leftpad","data","size","repeat","zl","zr","sl","sr","hl","hr","rotl","x","n","fn1","a","c","d","e","m","k","fn2","fn3","fn4","fn5","Ripemd160","constructor","blockSize","_a","_b","_c","_d","_e","_blockOffset","_block","_blockSize","_length","_finalized","update","block","offset","i","_update","j","carry","digest","_digest","fill","words","Array","temp","DataView","buffer","getInt32","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","setUint32","setInt32","sha256","payload","hash","keccak","sha3","keccak_256","arrayBuffer","toEthereumAddress","hexPublicKey","hashInput","ripemd160","writeUint32BE","value","array","encoded","lengthAndInput","concatKDF","secret","keyLen","alg","producerInfo","consumerInfo","roundNumber","secp256k1","elliptic","ec","ES256KSigner","privateKey","privateKeyBytes","keyPair","keyFromPrivate","sign","SimpleSigner","hexPrivateKey","signer","EllipticSigner","EdDSASigner","secretKey","dataBytes","sig","NaclSigner","base64PrivateKey","secp256r1","ES256Signer","instanceOfEcdsaSignature","object","ES256SignerAlg","ES256KSignerAlg","Ed25519SignerAlg","algorithms","ES256","ES256K","Ed25519","EdDSA","SignerAlg","impl","publicKeyToAddress","publicKey","otherAddress","version","publicKeyBuffer","publicKeyHash","step1","step2","step3","checksum","step4","EC","prefix","compressedPublicKey","keyFromPublic","getPublic","encode","bech32","toWords","verifyBlockchainAccountId","blockchainAccountId","chain","split","bip122","cosmos","join","toSignatureObject","rawSig","sigObj","extractPublicKeyBytes","pk","publicKeyBase58","publicKeyBase64","publicKeyHex","publicKeyJwk","crv","y","kty","publicKeyMultibase","base16","base58btc","base64","base64url","bases","baseDecoder","decoder","or","decode","verifyES256","authenticators","fullPublicKeys","filter","ethereumAddress","find","pubBytes","verify","err","verifyES256K","blockchainAddressKeys","verifyRecoverableES256K","signatures","so","checkSignatureAgainstSigner","recoveredKey","recoverPubKey","recoveredPublicKeyHex","recoveredCompressedPublicKeyHex","recoveredAddress","keyHex","map","key","verifyEd25519","clear","VerifierAlgorithm","JWT_ERROR","INVALID_JWT","INVALID_AUDIENCE","INVALID_SIGNATURE","NO_SUITABLE_KEYS","NOT_SUPPORTED","RESOLVER_ERROR","resolveAuthenticator","resolver","issuer","proofPurpose","types","SUPPORTED_PUBLIC_KEY_TYPES","didResult","resolve","accept","DID_JSON","result","Object","getOwnPropertyNames","indexOf","didDocument","didDocumentMetadata","didResolutionMetadata","contentType","error","message","getPublicKeyById","verificationMethods","pubid","filtered","id","publicKeysToCheck","verificationMethod","includes","assertionMethod","type","supported","didResolutionResult","verifyJWT","jwt","options","auth","audience","callbackUrl","skewTime","policies","header","decodeJWT","prototype","hasOwnProperty","call","did","iss","client_id","SELF_ISSUED_V2","SELF_ISSUED_V2_VC_INTEROP","sub","sub_jwk","kid","SELF_ISSUED_V0_1","scope","redirect_uri","verifyJWSDecoded","now","Math","floor","Date","NBF_SKEW","nowSkewed","nbf","iat","exp","aud","audArray","isArray","matchedAudience","item","verified","createJWT","expiresIn","canonicalize","typ","timestamps","fullPayload","createJWS","defaultAlg","encodedPayload","encodeSection","signingInput","jwtSigner","shouldCanonicalize","canonicalizeData","JSON","stringify","decodeJWS","jws","parts","match","parse","decodedJwt","assign","pubKeys","verifyJWS","jwsDecoded","bind","then","v","pact","onFulfilled","_this","thenable","validateJWE","jwe","protected","iv","recipients","rec","encrypted_key","encodeJWE","protectedHeader","recipient","aad","decryptJWE","decrypter","cleartext","protHeader","enc","sealed","decrypt","createJWE","encrypters","encrypt","encryptionResult","tmpEnc","reduce","acc","encrypter","cek","encryptCek","push","createX25519ECDH","mySecretKey","theirPublicKey","sharedKey","resolveX25519Encrypters","dids","encryptersForDID","resolved","agreementKeys","keyAgreement","pks","Boolean","controllerEncrypters","x25519Encrypter","controller","controllers","encrypterPromises","catch","Promise","all","encrypterArrays","flattenedArray","createAuthEncrypter","recipientPublicKey","senderSecret","xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonEncrypter","createAuthDecrypter","recipientSecret","senderPublicKey","xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonDecrypter","x25519Decrypter","xc20pEncrypter","cipher","XChaCha20Poly1305","randomBytes","nonceLength","seal","subarray","tagLength","xc20pDirEncrypter","encodedAad","xc20pEncrypt","xc20pDirDecrypter","open","epk","generateKeyPair","sharedSecret","kek","res","zE","zS","partyUInfo","partyVInfo","apu","apv","validateHeader","receiverSecret","sealedCek"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.umd.js","sources":["../src/util.ts","../src/blockchains/utils/ripemd160.ts","../src/Digest.ts","../src/signers/ES256KSigner.ts","../src/signers/SimpleSigner.ts","../src/signers/EllipticSigner.ts","../src/signers/EdDSASigner.ts","../src/signers/NaclSigner.ts","../src/signers/ES256Signer.ts","../src/SignerAlgorithm.ts","../src/blockchains/bip122.ts","../src/blockchains/cosmos.ts","../src/blockchains/index.ts","../src/VerifierAlgorithm.ts","../src/Errors.ts","../src/JWT.ts","../src/JWE.ts","../src/ECDH.ts","../src/xc20pEncryption.ts"],"sourcesContent":["import * as u8a from 'uint8arrays'\r\nimport { bases } from 'multiformats/basics'\r\n\r\n/**\r\n * @deprecated Signers will be expected to return base64url `string` signatures.\r\n */\r\nexport interface EcdsaSignature {\r\n  r: string\r\n  s: string\r\n  recoveryParam?: number | null\r\n}\r\n\r\nexport function bytesToBase64url(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64url')\r\n}\r\n\r\nexport function base64ToBytes(s: string): Uint8Array {\r\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')\r\n  return u8a.fromString(inputBase64Url, 'base64url')\r\n}\r\n\r\nexport function bytesToBase64(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64pad')\r\n}\r\n\r\nexport function base58ToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s, 'base58btc')\r\n}\r\n\r\nexport function bytesToBase58(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base58btc')\r\n}\r\n\r\nexport function bytesToMultibase(b: Uint8Array, base: keyof typeof bases): string {\r\n  return bases[base].encode(b)\r\n}\r\n\r\nexport function hexToBytes(s: string): Uint8Array {\r\n  const input = s.startsWith('0x') ? s.substring(2) : s\r\n  return u8a.fromString(input.toLowerCase(), 'base16')\r\n}\r\n\r\nexport function encodeBase64url(s: string): string {\r\n  return bytesToBase64url(u8a.fromString(s))\r\n}\r\n\r\nexport function decodeBase64url(s: string): string {\r\n  return u8a.toString(base64ToBytes(s))\r\n}\r\n\r\nexport function bytesToHex(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base16')\r\n}\r\n\r\nexport function stringToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s)\r\n}\r\n\r\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\r\n  const jose = new Uint8Array(recoverable ? 65 : 64)\r\n  jose.set(u8a.fromString(r, 'base16'), 0)\r\n  jose.set(u8a.fromString(s, 'base16'), 32)\r\n  if (recoverable) {\r\n    if (typeof recoveryParam === 'undefined') {\r\n      throw new Error('Signer did not return a recoveryParam')\r\n    }\r\n    jose[64] = <number>recoveryParam\r\n  }\r\n  return bytesToBase64url(jose)\r\n}\r\n\r\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\r\n  const signatureBytes: Uint8Array = base64ToBytes(signature)\r\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\r\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`)\r\n  }\r\n  const r = bytesToHex(signatureBytes.slice(0, 32))\r\n  const s = bytesToHex(signatureBytes.slice(32, 64))\r\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined\r\n  return { r, s, recoveryParam }\r\n}\r\n\r\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\r\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)])\r\n}\r\n\r\nexport function leftpad(data: string, size = 64): string {\r\n  if (data.length === size) return data\r\n  return '0'.repeat(size - data.length) + data\r\n}\r\n","// https://github.com/crypto-browserify/ripemd160/blob/master/index.js\r\n\r\nconst zl = [\r\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14,\r\n  4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2,\r\n  10, 14, 1, 3, 8, 11, 6, 15, 13,\r\n]\r\n\r\nconst zr = [\r\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1,\r\n  3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5,\r\n  8, 7, 6, 2, 13, 14, 0, 3, 9, 11,\r\n]\r\n\r\nconst sl = [\r\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11,\r\n  13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5,\r\n  11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,\r\n]\r\n\r\nconst sr = [\r\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7,\r\n  15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9,\r\n  12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,\r\n]\r\n\r\nconst hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\r\nconst hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\r\n\r\nfunction rotl(x: number, n: number) {\r\n  return (x << n) | (x >>> (32 - n))\r\n}\r\n\r\nfunction fn1(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn2(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn3(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn4(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nfunction fn5(a: number, b: number, c: number, d: number, e: number, m: number, k: number, s: number) {\r\n  return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0\r\n}\r\n\r\nexport class Ripemd160 {\r\n  // state\r\n  private _a = 0x67452301\r\n  private _b = 0xefcdab89\r\n  private _c = 0x98badcfe\r\n  private _d = 0x10325476\r\n  private _e = 0xc3d2e1f0\r\n  private _blockOffset = 0\r\n  private _block: Uint8Array\r\n  private _blockSize: number\r\n  private _length = [0, 0, 0, 0]\r\n  private _finalized: boolean\r\n\r\n  constructor(blockSize = 64) {\r\n    this._block = new Uint8Array(blockSize)\r\n    this._blockSize = blockSize\r\n    this._blockOffset = 0\r\n    this._length = [0, 0, 0, 0]\r\n    this._finalized = false\r\n  }\r\n\r\n  update = (data: Uint8Array): Ripemd160 => {\r\n    if (this._finalized) throw new Error('Digest already called')\r\n\r\n    // consume data\r\n    const block = this._block\r\n    let offset = 0\r\n    while (this._blockOffset + data.length - offset >= this._blockSize) {\r\n      for (let i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++]\r\n      this._update()\r\n      this._blockOffset = 0\r\n    }\r\n    while (offset < data.length) block[this._blockOffset++] = data[offset++]\r\n\r\n    // update length\r\n    for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\r\n      this._length[j] += carry\r\n      carry = (this._length[j] / 0x0100000000) | 0\r\n      if (carry > 0) this._length[j] -= 0x0100000000 * carry\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  digest = (): Uint8Array => {\r\n    if (this._finalized) throw new Error('Digest already called')\r\n    this._finalized = true\r\n\r\n    const digest = this._digest()\r\n\r\n    // reset state\r\n    this._block.fill(0)\r\n    this._blockOffset = 0\r\n    for (let i = 0; i < 4; ++i) this._length[i] = 0\r\n\r\n    return digest\r\n  }\r\n\r\n  private _update = () => {\r\n    const words = new Array(16)\r\n    const temp = new DataView(this._block.buffer)\r\n    for (let j = 0; j < 16; ++j) words[j] = words[j] = temp.getInt32(j * 4, true)\r\n\r\n    let al = this._a | 0\r\n    let bl = this._b | 0\r\n    let cl = this._c | 0\r\n    let dl = this._d | 0\r\n    let el = this._e | 0\r\n\r\n    let ar = this._a | 0\r\n    let br = this._b | 0\r\n    let cr = this._c | 0\r\n    let dr = this._d | 0\r\n    let er = this._e | 0\r\n\r\n    // computation\r\n    for (let i = 0; i < 80; i += 1) {\r\n      let tl\r\n      let tr\r\n      if (i < 16) {\r\n        tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\r\n        tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\r\n      } else if (i < 32) {\r\n        tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\r\n        tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\r\n      } else if (i < 48) {\r\n        tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\r\n        tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\r\n      } else if (i < 64) {\r\n        tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\r\n        tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\r\n      } else {\r\n        // if (i<80) {\r\n        tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\r\n        tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\r\n      }\r\n\r\n      al = el\r\n      el = dl\r\n      dl = rotl(cl, 10)\r\n      cl = bl\r\n      bl = tl\r\n\r\n      ar = er\r\n      er = dr\r\n      dr = rotl(cr, 10)\r\n      cr = br\r\n      br = tr\r\n    }\r\n\r\n    // update state\r\n    const t = (this._b + cl + dr) | 0\r\n    this._b = (this._c + dl + er) | 0\r\n    this._c = (this._d + el + ar) | 0\r\n    this._d = (this._e + al + br) | 0\r\n    this._e = (this._a + bl + cr) | 0\r\n    this._a = t\r\n  }\r\n\r\n  private _digest = () => {\r\n    // create padding and handle blocks\r\n    this._block[this._blockOffset++] = 0x80\r\n    if (this._blockOffset > 56) {\r\n      this._block.fill(0, this._blockOffset, 64)\r\n      this._update()\r\n      this._blockOffset = 0\r\n    }\r\n\r\n    this._block.fill(0, this._blockOffset, 56)\r\n    const temp = new DataView(this._block.buffer)\r\n    temp.setUint32(56, this._length[0], true)\r\n    temp.setUint32(60, this._length[1], true)\r\n    this._block = new Uint8Array(temp.buffer)\r\n    this._update()\r\n\r\n    // produce result\r\n    const buffer = new DataView(new Uint8Array(20).buffer)\r\n    buffer.setInt32(0, this._a, true)\r\n    buffer.setInt32(4, this._b, true)\r\n    buffer.setInt32(8, this._c, true)\r\n    buffer.setInt32(12, this._d, true)\r\n    buffer.setInt32(16, this._e, true)\r\n\r\n    return new Uint8Array(buffer.buffer)\r\n  }\r\n}\r\n","import { hash } from '@stablelib/sha256'\r\nimport { Ripemd160 } from './blockchains/utils/ripemd160'\r\nimport * as u8a from 'uint8arrays'\r\nimport sha3 from 'js-sha3'\r\n\r\nexport function sha256(payload: string | Uint8Array): Uint8Array {\r\n  const data = typeof payload === 'string' ? u8a.fromString(payload) : payload\r\n  return hash(data)\r\n}\r\n\r\nexport function keccak(data: Uint8Array): Uint8Array {\r\n  return new Uint8Array(sha3.keccak_256.arrayBuffer(data))\r\n}\r\n\r\nexport function toEthereumAddress(hexPublicKey: string): string {\r\n  const hashInput = u8a.fromString(hexPublicKey.slice(2), 'base16')\r\n  return `0x${u8a.toString(keccak(hashInput).slice(-20), 'base16')}`\r\n}\r\n\r\nexport function ripemd160(data: Uint8Array): Uint8Array {\r\n  return new Ripemd160().update(data).digest()\r\n}\r\n\r\nfunction writeUint32BE(value: number, array = new Uint8Array(4)): Uint8Array {\r\n  const encoded = u8a.fromString(value.toString(), 'base10')\r\n  array.set(encoded, 4 - encoded.length)\r\n  return array\r\n}\r\n\r\nconst lengthAndInput = (input: Uint8Array): Uint8Array => u8a.concat([writeUint32BE(input.length), input])\r\n\r\n// This implementation of concatKDF was inspired by these two implementations:\r\n// https://github.com/digitalbazaar/minimal-cipher/blob/master/algorithms/ecdhkdf.js\r\n// https://github.com/panva/jose/blob/master/lib/jwa/ecdh/derive.js\r\nexport function concatKDF(\r\n  secret: Uint8Array,\r\n  keyLen: number,\r\n  alg: string,\r\n  producerInfo?: Uint8Array,\r\n  consumerInfo?: Uint8Array\r\n): Uint8Array {\r\n  if (keyLen !== 256) throw new Error(`Unsupported key length: ${keyLen}`)\r\n  const value = u8a.concat([\r\n    lengthAndInput(u8a.fromString(alg)),\r\n    lengthAndInput(typeof producerInfo === 'undefined' ? new Uint8Array(0) : producerInfo), // apu\r\n    lengthAndInput(typeof consumerInfo === 'undefined' ? new Uint8Array(0) : consumerInfo), // apv\r\n    writeUint32BE(keyLen),\r\n  ])\r\n\r\n  // since our key lenght is 256 we only have to do one round\r\n  const roundNumber = 1\r\n  return sha256(u8a.concat([writeUint32BE(roundNumber), secret, value]))\r\n}\r\n","import { leftpad } from '../util'\r\nimport { toJose } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { sha256 } from '../Digest'\r\nimport elliptic from 'elliptic'\r\n\r\nconst secp256k1 = new elliptic.ec('secp256k1')\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the ES256K (secp256k1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array`\r\n *  @param    {Boolean}   recoverable  an optional flag to add the recovery param to the generated signatures\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function ES256KSigner(privateKey: Uint8Array, recoverable = false): Signer {\r\n  const privateKeyBytes: Uint8Array = privateKey\r\n  if (privateKeyBytes.length !== 32) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  const keyPair: elliptic.ec.KeyPair = secp256k1.keyFromPrivate(privateKeyBytes)\r\n\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const { r, s, recoveryParam }: elliptic.ec.Signature = keyPair.sign(sha256(data))\r\n    return toJose(\r\n      {\r\n        r: leftpad(r.toString('hex')),\r\n        s: leftpad(s.toString('hex')),\r\n        recoveryParam,\r\n      },\r\n      recoverable\r\n    )\r\n  }\r\n}\r\n","import { fromJose, hexToBytes } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { ES256KSigner } from './ES256KSigner'\r\n\r\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The SimpleSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  const signer = SimpleSigner(process.env.PRIVATE_KEY)\r\n *  signer(data, (err, signature) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\r\nfunction SimpleSigner(hexPrivateKey: string): Signer {\r\n  const signer = ES256KSigner(hexToBytes(hexPrivateKey), true)\r\n  return async (data) => {\r\n    const signature = (await signer(data)) as string\r\n    return fromJose(signature)\r\n  }\r\n}\r\n\r\nexport default SimpleSigner\r\n","import { hexToBytes } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { ES256KSigner } from './ES256KSigner'\r\n\r\n/**\r\n * @deprecated Please use ES256KSigner\r\n *  The EllipticSigner returns a configured function for signing data.\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const signer = EllipticSigner(process.env.PRIVATE_KEY)\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param    {String}         hexPrivateKey    a hex encoded private key\r\n *  @return   {Function}                        a configured signer function\r\n */\r\nfunction EllipticSigner(hexPrivateKey: string): Signer {\r\n  return ES256KSigner(hexToBytes(hexPrivateKey))\r\n}\r\n\r\nexport default EllipticSigner\r\n","import { sign } from '@stablelib/ed25519'\r\nimport { Signer } from '../JWT'\r\nimport { bytesToBase64url, stringToBytes } from '../util'\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the EdDSA (Ed25519) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = EdDSASigner(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    secretKey   a 64 byte secret key as `Uint8Array`\r\n *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function EdDSASigner(secretKey: Uint8Array): Signer {\r\n  const privateKeyBytes: Uint8Array = secretKey\r\n  if (privateKeyBytes.length !== 64) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 64 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data\r\n    const sig: Uint8Array = sign(privateKeyBytes, dataBytes)\r\n    return bytesToBase64url(sig)\r\n  }\r\n}\r\n","import { EdDSASigner as EdDSASigner } from './EdDSASigner'\r\nimport { Signer } from '../JWT'\r\nimport { base64ToBytes } from '../util'\r\n\r\n/**\r\n * @deprecated Please use EdDSASigner\r\n *\r\n *  The NaclSigner returns a configured function for signing data using the Ed25519 algorithm.\r\n *\r\n *  The signing function itself takes the data as a `string` or `Uint8Array` parameter and returns a `base64Url`-encoded signature.\r\n *\r\n *  @example\r\n *  const signer = NaclSigner(process.env.PRIVATE_KEY)\r\n *  const data: string = '...'\r\n *  signer(data).then( (signature: string) => {\r\n *    ...\r\n *  })\r\n *\r\n *  @param    {String}   base64PrivateKey    a 64 byte base64 encoded private key\r\n *  @return   {Function}                     a configured signer function\r\n */\r\n\r\nfunction NaclSigner(base64PrivateKey: string): Signer {\r\n  return EdDSASigner(base64ToBytes(base64PrivateKey))\r\n}\r\n\r\nexport default NaclSigner\r\n","import { leftpad } from '../util'\r\nimport { toJose } from '../util'\r\nimport { Signer } from '../JWT'\r\nimport { sha256 } from '../Digest'\r\nimport elliptic from 'elliptic'\r\n\r\nconst secp256r1 = new elliptic.ec('p256')\r\n\r\n/**\r\n *  Creates a configured signer function for signing data using the ES256 (secp256r1 + sha256) algorithm.\r\n *\r\n *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature\r\n *\r\n *  @example\r\n *  ```typescript\r\n *  const sign: Signer = ES256Signer(process.env.PRIVATE_KEY)\r\n *  const signature: string = await sign(data)\r\n *  ```\r\n *\r\n *  @param    {String}    privateKey   a private key as `Uint8Array`\r\n *  @return   {Function}               a configured signer function `(data: string | Uint8Array): Promise<string>`\r\n */\r\nexport function ES256Signer(privateKey: Uint8Array): Signer {\r\n  const privateKeyBytes: Uint8Array = privateKey\r\n  if (privateKeyBytes.length !== 32) {\r\n    throw new Error(`bad_key: Invalid private key format. Expecting 32 bytes, but got ${privateKeyBytes.length}`)\r\n  }\r\n  const keyPair: elliptic.ec.KeyPair = secp256r1.keyFromPrivate(privateKeyBytes)\r\n\r\n  return async (data: string | Uint8Array): Promise<string> => {\r\n    const { r, s }: elliptic.ec.Signature = keyPair.sign(sha256(data))\r\n    return toJose({\r\n      r: leftpad(r.toString('hex')),\r\n      s: leftpad(s.toString('hex')),\r\n    })\r\n  }\r\n}\r\n","import { Signer, SignerAlgorithm } from './JWT'\r\nimport { EcdsaSignature, fromJose, toJose } from './util'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction instanceOfEcdsaSignature(object: any): object is EcdsaSignature {\r\n  return typeof object === 'object' && 'r' in object && 's' in object\r\n}\r\n\r\nexport function ES256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (instanceOfEcdsaSignature(signature)) {\r\n      return toJose(signature)\r\n    } else {\r\n      return signature\r\n    }\r\n  }\r\n}\r\n\r\nexport function ES256KSignerAlg(recoverable?: boolean): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (instanceOfEcdsaSignature(signature)) {\r\n      return toJose(signature, recoverable)\r\n    } else {\r\n      if (recoverable && typeof fromJose(signature).recoveryParam === 'undefined') {\r\n        throw new Error(`not_supported: ES256K-R not supported when signer doesn't provide a recovery param`)\r\n      }\r\n      return signature\r\n    }\r\n  }\r\n}\r\n\r\nexport function Ed25519SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    if (!instanceOfEcdsaSignature(signature)) {\r\n      return signature\r\n    } else {\r\n      throw new Error('invalid_config: expected a signer function that returns a string instead of signature object')\r\n    }\r\n  }\r\n}\r\n\r\nexport function RS256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    return signature as string\r\n  }\r\n}\r\n\r\nexport function PS256SignerAlg(): SignerAlgorithm {\r\n  return async function sign(payload: string, signer: Signer): Promise<string> {\r\n    const signature: EcdsaSignature | string = await signer(payload)\r\n    return signature as string\r\n  }\r\n}\r\n\r\ninterface SignerAlgorithms {\r\n  [alg: string]: SignerAlgorithm\r\n}\r\n\r\nconst algorithms: SignerAlgorithms = {\r\n  ES256: ES256SignerAlg(),\r\n  ES256K: ES256KSignerAlg(),\r\n  // This is a non-standard algorithm but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\r\n  'ES256K-R': ES256KSignerAlg(true),\r\n  // This is actually incorrect but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\r\n  Ed25519: Ed25519SignerAlg(),\r\n  EdDSA: Ed25519SignerAlg(),\r\n  RS256: RS256SignerAlg(),\r\n  PS256: PS256SignerAlg(),\r\n}\r\n\r\nfunction SignerAlg(alg: string): SignerAlgorithm {\r\n  const impl: SignerAlgorithm = algorithms[alg]\r\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\r\n  return impl\r\n}\r\n\r\nexport default SignerAlg\r\n","import * as u8a from 'uint8arrays'\r\nimport { bytesToBase58, base58ToBytes } from '../util'\r\nimport { sha256, ripemd160 } from '../Digest'\r\n\r\nexport const publicKeyToAddress = (publicKey: string, otherAddress: string): string => {\r\n  // Use the same version/prefix byte as the given address.\r\n  const version = u8a.toString(base58ToBytes(otherAddress).slice(0, 1), 'hex')\r\n  const publicKeyBuffer = u8a.fromString(publicKey, 'hex')\r\n  const publicKeyHash = ripemd160(sha256(publicKeyBuffer))\r\n  const step1 = version + u8a.toString(publicKeyHash, 'hex')\r\n  const step2 = sha256(u8a.fromString(step1, 'hex'))\r\n  const step3 = sha256(step2)\r\n  const checksum = u8a.toString(step3, 'hex').substring(0, 8)\r\n  const step4 = step1 + checksum\r\n  return bytesToBase58(u8a.fromString(step4, 'hex'))\r\n}\r\n","import elliptic from 'elliptic'\r\nimport { bech32 } from 'bech32'\r\nimport * as u8a from 'uint8arrays'\r\nimport { sha256, ripemd160 } from '../Digest'\r\n\r\nconst EC = elliptic.ec\r\n\r\nexport const publicKeyToAddress = (publicKey: string, prefix: string): string => {\r\n  const ec = new EC('secp256k1')\r\n  const compressedPublicKey = ec.keyFromPublic(publicKey, 'hex').getPublic().encode('hex', true)\r\n  const publicKeyBuffer = u8a.fromString(compressedPublicKey, 'hex')\r\n  const hash = ripemd160(sha256(publicKeyBuffer))\r\n  const words = bech32.toWords(hash)\r\n  return bech32.encode(prefix, words).replace(prefix, '')\r\n}\r\n","import { publicKeyToAddress as bip122 } from './bip122'\r\nimport { publicKeyToAddress as cosmos } from './cosmos'\r\nimport { toEthereumAddress } from '../Digest'\r\n\r\nexport const verifyBlockchainAccountId = (publicKey: string, blockchainAccountId: string | undefined): boolean => {\r\n  if (blockchainAccountId) {\r\n    const chain = blockchainAccountId.split(':')\r\n    switch (chain[0]) {\r\n      case 'bip122':\r\n        chain[chain.length - 1] = bip122(publicKey, chain[chain.length - 1])\r\n        break\r\n      case 'cosmos':\r\n        chain[chain.length - 1] = cosmos(publicKey, chain[1])\r\n        break\r\n      case 'eip155':\r\n        chain[chain.length - 1] = toEthereumAddress(publicKey)\r\n        break\r\n      default:\r\n        return false\r\n    }\r\n    return chain.join(':').toLowerCase() === blockchainAccountId.toLowerCase()\r\n  }\r\n  return false\r\n}\r\n","import type { SignatureInput } from 'elliptic'\r\nimport elliptic from 'elliptic'\r\nimport { sha256, toEthereumAddress } from './Digest'\r\nimport { verify } from '@stablelib/ed25519'\r\nimport type { VerificationMethod } from 'did-resolver'\r\nimport { bases } from 'multiformats/basics'\r\nimport { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'\r\nimport { verifyBlockchainAccountId } from './blockchains'\r\nimport { RS256SignerAlg } from \"./SignerAlgorithm\";\r\n\r\nconst secp256k1 = new elliptic.ec('secp256k1')\r\nconst secp256r1 = new elliptic.ec('p256')\r\n\r\n// converts a JOSE signature to it's components\r\nexport function toSignatureObject(signature: string, recoverable = false): EcdsaSignature {\r\n  const rawSig: Uint8Array = base64ToBytes(signature)\r\n  if (rawSig.length !== (recoverable ? 65 : 64)) {\r\n    throw new Error('wrong signature length')\r\n  }\r\n  const r: string = bytesToHex(rawSig.slice(0, 32))\r\n  const s: string = bytesToHex(rawSig.slice(32, 64))\r\n  const sigObj: EcdsaSignature = { r, s }\r\n  if (recoverable) {\r\n    sigObj.recoveryParam = rawSig[64]\r\n  }\r\n  return sigObj\r\n}\r\n\r\ninterface LegacyVerificationMethod extends VerificationMethod {\r\n  publicKeyBase64: string\r\n}\r\n\r\nfunction extractPublicKeyBytes(pk: VerificationMethod): Uint8Array {\r\n  if (pk.publicKeyBase58) {\r\n    return base58ToBytes(pk.publicKeyBase58)\r\n  } else if ((<LegacyVerificationMethod>pk).publicKeyBase64) {\r\n    return base64ToBytes((<LegacyVerificationMethod>pk).publicKeyBase64)\r\n  } else if (pk.publicKeyHex) {\r\n    return hexToBytes(pk.publicKeyHex)\r\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'secp256k1' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\r\n    return hexToBytes(\r\n      secp256k1\r\n        .keyFromPublic({\r\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\r\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\r\n        })\r\n        .getPublic('hex')\r\n    )\r\n  } else if (pk.publicKeyJwk && pk.publicKeyJwk.crv === 'P-256' && pk.publicKeyJwk.x && pk.publicKeyJwk.y) {\r\n    return hexToBytes(\r\n      secp256r1\r\n        .keyFromPublic({\r\n          x: bytesToHex(base64ToBytes(pk.publicKeyJwk.x)),\r\n          y: bytesToHex(base64ToBytes(pk.publicKeyJwk.y)),\r\n        })\r\n        .getPublic('hex')\r\n    )\r\n  } else if (\r\n    pk.publicKeyJwk &&\r\n    pk.publicKeyJwk.kty === 'OKP' &&\r\n    pk.publicKeyJwk.crv === 'Ed25519' &&\r\n    pk.publicKeyJwk.x\r\n  ) {\r\n    return base64ToBytes(pk.publicKeyJwk.x)\r\n  } else if (pk.publicKeyMultibase) {\r\n    const { base16, base58btc, base64, base64url } = bases\r\n    const baseDecoder = base16.decoder.or(base58btc.decoder.or(base64.decoder.or(base64url.decoder)))\r\n    return baseDecoder.decode(pk.publicKeyMultibase)\r\n  }\r\n  return new Uint8Array()\r\n}\r\n\r\nexport function verifyES256(data: string, signature: string, authenticators: VerificationMethod[]): VerificationMethod {\r\n  const hash: Uint8Array = sha256(data)\r\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\r\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\r\n  })\r\n\r\n  const signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\r\n    try {\r\n      const pubBytes = extractPublicKeyBytes(pk)\r\n      return secp256r1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  })\r\n\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\nexport function verifyES256K(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  const hash: Uint8Array = sha256(data)\r\n  const sigObj: EcdsaSignature = toSignatureObject(signature)\r\n  const fullPublicKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress === 'undefined' && typeof blockchainAccountId === 'undefined'\r\n  })\r\n  const blockchainAddressKeys = authenticators.filter(({ ethereumAddress, blockchainAccountId }) => {\r\n    return typeof ethereumAddress !== 'undefined' || typeof blockchainAccountId !== 'undefined'\r\n  })\r\n\r\n  let signer: VerificationMethod | undefined = fullPublicKeys.find((pk: VerificationMethod) => {\r\n    try {\r\n      const pubBytes = extractPublicKeyBytes(pk)\r\n      return secp256k1.keyFromPublic(pubBytes).verify(hash, <SignatureInput>sigObj)\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  })\r\n\r\n  if (!signer && blockchainAddressKeys.length > 0) {\r\n    signer = verifyRecoverableES256K(data, signature, blockchainAddressKeys)\r\n  }\r\n\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\nexport function verifyRecoverableES256K(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  let signatures: EcdsaSignature[]\r\n  if (signature.length > 86) {\r\n    signatures = [toSignatureObject(signature, true)]\r\n  } else {\r\n    const so = toSignatureObject(signature, false)\r\n    signatures = [\r\n      { ...so, recoveryParam: 0 },\r\n      { ...so, recoveryParam: 1 },\r\n    ]\r\n  }\r\n\r\n  const checkSignatureAgainstSigner = (sigObj: EcdsaSignature): VerificationMethod | undefined => {\r\n    const hash: Uint8Array = sha256(data)\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const recoveredKey: any = secp256k1.recoverPubKey(hash, <SignatureInput>sigObj, <number>sigObj.recoveryParam)\r\n    const recoveredPublicKeyHex: string = recoveredKey.encode('hex')\r\n    const recoveredCompressedPublicKeyHex: string = recoveredKey.encode('hex', true)\r\n    const recoveredAddress: string = toEthereumAddress(recoveredPublicKeyHex).toLowerCase()\r\n\r\n    const signer: VerificationMethod | undefined = authenticators.find((pk: VerificationMethod) => {\r\n      const keyHex = bytesToHex(extractPublicKeyBytes(pk))\r\n      return (\r\n        keyHex === recoveredPublicKeyHex ||\r\n        keyHex === recoveredCompressedPublicKeyHex ||\r\n        pk.ethereumAddress?.toLowerCase() === recoveredAddress ||\r\n        pk.blockchainAccountId?.split('@eip155')?.[0].toLowerCase() === recoveredAddress || // CAIP-2\r\n        verifyBlockchainAccountId(recoveredPublicKeyHex, pk.blockchainAccountId) // CAIP-10\r\n      )\r\n    })\r\n\r\n    return signer\r\n  }\r\n\r\n  const signer: VerificationMethod[] = signatures\r\n    .map(checkSignatureAgainstSigner)\r\n    .filter((key) => typeof key !== 'undefined') as VerificationMethod[]\r\n\r\n  if (signer.length === 0) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer[0]\r\n}\r\n\r\nexport function verifyEd25519(\r\n  data: string,\r\n  signature: string,\r\n  authenticators: VerificationMethod[]\r\n): VerificationMethod {\r\n  const clear: Uint8Array = stringToBytes(data)\r\n  const sig: Uint8Array = base64ToBytes(signature)\r\n  const signer = authenticators.find((pk: VerificationMethod) => {\r\n    return verify(extractPublicKeyBytes(pk), clear, sig)\r\n  })\r\n  if (!signer) throw new Error('invalid_signature: Signature invalid for JWT')\r\n  return signer\r\n}\r\n\r\ntype Verifier = (data: string, signature: string, authenticators: VerificationMethod[]) => VerificationMethod\r\ninterface Algorithms {\r\n  [name: string]: Verifier\r\n}\r\nconst algorithms: Algorithms = {\r\n  ES256: verifyES256,\r\n  ES256K: verifyES256K,\r\n  // This is a non-standard algorithm but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/146\r\n  'ES256K-R': verifyRecoverableES256K,\r\n  // This is actually incorrect but retained for backwards compatibility\r\n  // see https://github.com/decentralized-identity/did-jwt/issues/130\r\n  Ed25519: verifyEd25519,\r\n  EdDSA: verifyEd25519,\r\n}\r\n\r\nfunction VerifierAlgorithm(alg: string): Verifier {\r\n  const impl: Verifier = algorithms[alg]\r\n  if (!impl) throw new Error(`not_supported: Unsupported algorithm ${alg}`)\r\n  return impl\r\n}\r\n\r\nVerifierAlgorithm.toSignatureObject = toSignatureObject\r\n\r\nexport default VerifierAlgorithm\r\n","/**\r\n * Error prefixes used for known verification failure cases.\r\n *\r\n * For compatibility, these error prefixes match the existing error messages, but will be adjusted in a future major\r\n * version update to match the scenarios better.\r\n *\r\n * @beta\r\n */\r\nexport const JWT_ERROR = {\r\n  /**\r\n   * Thrown when a JWT payload schema is unexpected or when validity period does not match\r\n   */\r\n  INVALID_JWT: 'invalid_jwt',\r\n  /**\r\n   * Thrown when the verifier audience does not match the one set in the JWT payload\r\n   */\r\n  INVALID_AUDIENCE: 'invalid_config',\r\n  /**\r\n   * Thrown when none of the public keys of the issuer match the signature of the JWT.\r\n   *\r\n   * This is equivalent to `NO_SUITABLE_KEYS` when the `proofPurpose` is NOT specified.\r\n   */\r\n  INVALID_SIGNATURE: 'invalid_signature',\r\n  /**\r\n   * Thrown when the DID document of the issuer does not have any keys that match the signature for the given\r\n   * `proofPurpose`.\r\n   *\r\n   * This is equivalent to `invalid_signature`, when a `proofPurpose` is specified.\r\n   */\r\n  NO_SUITABLE_KEYS: 'no_suitable_keys',\r\n  /**\r\n   * Thrown when the `alg` of the JWT or the encoding of the key is not supported\r\n   */\r\n  NOT_SUPPORTED: 'not_supported',\r\n  /**\r\n   * Thrown when the DID resolver is unable to resolve the issuer DID.\r\n   */\r\n  RESOLVER_ERROR: 'resolver_error',\r\n}\r\n","import canonicalizeData from 'canonicalize'\r\nimport type { DIDDocument, DIDResolutionResult, Resolvable, VerificationMethod } from 'did-resolver'\r\nimport SignerAlg from './SignerAlgorithm'\r\nimport { decodeBase64url, EcdsaSignature, encodeBase64url } from './util'\r\nimport VerifierAlgorithm from './VerifierAlgorithm'\r\nimport { JWT_ERROR } from './Errors'\r\n\r\nexport type Signer = (data: string | Uint8Array) => Promise<EcdsaSignature | string>\r\nexport type SignerAlgorithm = (payload: string, signer: Signer) => Promise<string>\r\n\r\nexport type ProofPurposeTypes =\r\n  | 'assertionMethod'\r\n  | 'authentication'\r\n  // | 'keyAgreement' // keyAgreement VerificationMethod should not be used for signing\r\n  | 'capabilityDelegation'\r\n  | 'capabilityInvocation'\r\n\r\nexport interface JWTOptions {\r\n  issuer: string\r\n  signer: Signer\r\n  /**\r\n   * @deprecated Please use `header.alg` to specify the JWT algorithm.\r\n   */\r\n  alg?: string\r\n  expiresIn?: number\r\n  canonicalize?: boolean\r\n}\r\n\r\nexport interface JWTVerifyOptions {\r\n  /** @deprecated Please use `proofPurpose: 'authentication' instead` */\r\n  auth?: boolean\r\n  audience?: string\r\n  callbackUrl?: string\r\n  resolver?: Resolvable\r\n  skewTime?: number\r\n  /** See https://www.w3.org/TR/did-spec-registries/#verification-relationships */\r\n  proofPurpose?: ProofPurposeTypes\r\n  policies?: JWTVerifyPolicies\r\n}\r\n\r\n/**\r\n * Overrides the different types of checks performed on the JWT besides the signature check\r\n */\r\nexport interface JWTVerifyPolicies {\r\n  // overrides the timestamp against which the validity interval is checked\r\n  now?: number\r\n  // when set to false, the timestamp checks ignore the Not Before(`nbf`) property\r\n  nbf?: boolean\r\n  // when set to false, the timestamp checks ignore the Issued At(`iat`) property\r\n  iat?: boolean\r\n  // when set to false, the timestamp checks ignore the Expires At(`exp`) property\r\n  exp?: boolean\r\n  // when set to false, the JWT audience check is skipped\r\n  aud?: boolean\r\n}\r\n\r\nexport interface JWSCreationOptions {\r\n  canonicalize?: boolean\r\n}\r\n\r\nexport interface DIDAuthenticator {\r\n  authenticators: VerificationMethod[]\r\n  issuer: string\r\n  didResolutionResult: DIDResolutionResult\r\n}\r\n\r\nexport interface JWTHeader {\r\n  typ: 'JWT'\r\n  alg: string\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [x: string]: any\r\n}\r\n\r\nexport interface JWTPayload {\r\n  iss?: string\r\n  sub?: string\r\n  aud?: string | string[]\r\n  iat?: number\r\n  nbf?: number\r\n  exp?: number\r\n  rexp?: number\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  [x: string]: any\r\n}\r\n\r\nexport interface JWTDecoded {\r\n  header: JWTHeader\r\n  payload: JWTPayload\r\n  signature: string\r\n  data: string\r\n}\r\n\r\nexport interface JWSDecoded {\r\n  header: JWTHeader\r\n  payload: string\r\n  signature: string\r\n  data: string\r\n}\r\n\r\n/**\r\n * Result object returned by {@link verifyJWT}\r\n */\r\nexport interface JWTVerified {\r\n  /**\r\n   * Set to true for a JWT that passes all the required checks minus any verification overrides.\r\n   */\r\n  verified: true\r\n\r\n  /**\r\n   * The decoded JWT payload\r\n   */\r\n  payload: Partial<JWTPayload>\r\n\r\n  /**\r\n   * The result of resolving the issuer DID\r\n   */\r\n  didResolutionResult: DIDResolutionResult\r\n\r\n  /**\r\n   * the issuer DID\r\n   */\r\n  issuer: string\r\n\r\n  /**\r\n   * The public key of the issuer that matches the JWT signature\r\n   */\r\n  signer: VerificationMethod\r\n\r\n  /**\r\n   * The original JWT that was verified\r\n   */\r\n  jwt: string\r\n\r\n  /**\r\n   * Any overrides that were used during verification\r\n   */\r\n  policies?: JWTVerifyPolicies\r\n}\r\n\r\nexport interface PublicKeyTypes {\r\n  [name: string]: string[]\r\n}\r\n\r\nexport const SUPPORTED_PUBLIC_KEY_TYPES: PublicKeyTypes = {\r\n  ES256: ['JsonWebKey2020'],\r\n  ES256K: [\r\n    'EcdsaSecp256k1VerificationKey2019',\r\n    /**\r\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n     */\r\n    'EcdsaSecp256k1RecoveryMethod2020',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1VerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1SignatureVerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'EcdsaPublicKeySecp256k1',\r\n    'JsonWebKey2020',\r\n  ],\r\n  'ES256K-R': [\r\n    'EcdsaSecp256k1VerificationKey2019',\r\n    /**\r\n     * Equivalent to EcdsaSecp256k1VerificationKey2019 when key is an ethereumAddress\r\n     */\r\n    'EcdsaSecp256k1RecoveryMethod2020',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1VerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'Secp256k1SignatureVerificationKey2018',\r\n    /**\r\n     * @deprecated, supported for backward compatibility. Equivalent to EcdsaSecp256k1VerificationKey2019 when key is\r\n     *   not an ethereumAddress\r\n     */\r\n    'EcdsaPublicKeySecp256k1',\r\n    'JsonWebKey2020',\r\n  ],\r\n  Ed25519: [\r\n    'ED25519SignatureVerification',\r\n    'Ed25519VerificationKey2018',\r\n    'Ed25519VerificationKey2020',\r\n    'JsonWebKey2020',\r\n  ],\r\n  EdDSA: ['ED25519SignatureVerification', 'Ed25519VerificationKey2018', 'Ed25519VerificationKey2020', 'JsonWebKey2020'],\r\n}\r\n\r\nexport const SELF_ISSUED_V2 = 'https://self-issued.me/v2'\r\nexport const SELF_ISSUED_V2_VC_INTEROP = 'https://self-issued.me/v2/openid-vc' // https://identity.foundation/jwt-vc-presentation-profile/#id-token-validation\r\nexport const SELF_ISSUED_V0_1 = 'https://self-issued.me'\r\n\r\ntype LegacyVerificationMethod = { publicKey?: string }\r\n\r\nconst defaultAlg = 'ES256K'\r\nconst DID_JSON = 'application/did+json'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction encodeSection(data: any, shouldCanonicalize = false): string {\r\n  if (shouldCanonicalize) {\r\n    return encodeBase64url(<string>canonicalizeData(data))\r\n  } else {\r\n    return encodeBase64url(JSON.stringify(data))\r\n  }\r\n}\r\n\r\nexport const NBF_SKEW = 300\r\n\r\nfunction decodeJWS(jws: string): JWSDecoded {\r\n  const parts = jws.match(/^([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)\\.([a-zA-Z0-9_-]+)$/)\r\n  if (parts) {\r\n    return {\r\n      header: JSON.parse(decodeBase64url(parts[1])),\r\n      payload: parts[2],\r\n      signature: parts[3],\r\n      data: `${parts[1]}.${parts[2]}`,\r\n    }\r\n  }\r\n  throw new Error('invalid_argument: Incorrect format JWS')\r\n}\r\n\r\n/**  @module did-jwt/JWT */\r\n\r\n/**\r\n *  Decodes a JWT and returns an object representing the payload\r\n *\r\n *  @example\r\n *  decodeJWT('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpYXQiOjE1...')\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @return   {Object}                               a JS object representing the decoded JWT\r\n */\r\nexport function decodeJWT(jwt: string): JWTDecoded {\r\n  if (!jwt) throw new Error('invalid_argument: no JWT passed into decodeJWT')\r\n  try {\r\n    const jws = decodeJWS(jwt)\r\n    const decodedJwt: JWTDecoded = Object.assign(jws, { payload: JSON.parse(decodeBase64url(jws.payload)) })\r\n    return decodedJwt\r\n  } catch (e) {\r\n    throw new Error('invalid_argument: Incorrect format JWT')\r\n  }\r\n}\r\n\r\n/**\r\n *  Creates a signed JWS given a payload, a signer, and an optional header.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  const jws = await createJWS({ my: 'payload' }, signer)\r\n *\r\n *  @param    {Object}            payload           payload object\r\n *  @param    {Signer}            signer            a signer, see `ES256KSigner or `EdDSASigner`\r\n *  @param    {Object}            header            optional object to specify or customize the JWS header\r\n *  @param    {Object}            options           can be used to trigger automatic canonicalization of header and\r\n *                                                    payload properties\r\n *  @return   {Promise<string>}                     a Promise which resolves to a JWS string or rejects with an error\r\n */\r\nexport async function createJWS(\r\n  payload: string | Partial<JWTPayload>,\r\n  signer: Signer,\r\n  header: Partial<JWTHeader> = {},\r\n  options: JWSCreationOptions = {}\r\n): Promise<string> {\r\n  if (!header.alg) header.alg = defaultAlg\r\n  const encodedPayload = typeof payload === 'string' ? payload : encodeSection(payload, options.canonicalize)\r\n  const signingInput: string = [encodeSection(header, options.canonicalize), encodedPayload].join('.')\r\n\r\n  const jwtSigner: SignerAlgorithm = SignerAlg(header.alg)\r\n  const signature: string = await jwtSigner(signingInput, signer)\r\n  return [signingInput, signature].join('.')\r\n}\r\n\r\n/**\r\n *  Creates a signed JWT given an address which becomes the issuer, a signer, and a payload for which the signature is\r\n * over.\r\n *\r\n *  @example\r\n *  const signer = ES256KSigner(process.env.PRIVATE_KEY)\r\n *  createJWT({address: '5A8bRWU3F7j3REx3vkJ...', signer}, {key1: 'value', key2: ..., ... }).then(jwt => {\r\n *      ...\r\n *  })\r\n *\r\n *  @param    {Object}            payload               payload object\r\n *  @param    {Object}            [options]             an unsigned credential object\r\n *  @param    {String}            options.issuer        The DID of the issuer (signer) of JWT\r\n *  @param    {String}            options.alg           [DEPRECATED] The JWT signing algorithm to use. Supports:\r\n *   [ES256K, ES256K-R, Ed25519, EdDSA], Defaults to: ES256K. Please use `header.alg` to specify the algorithm\r\n *  @param    {Signer}            options.signer        a `Signer` function, Please see `ES256KSigner` or `EdDSASigner`\r\n *  @param    {boolean}           options.canonicalize  optional flag to canonicalize header and payload before signing\r\n *  @param    {Object}            header                optional object to specify or customize the JWT header\r\n *  @return   {Promise<Object, Error>}                  a promise which resolves with a signed JSON Web Token or\r\n *   rejects with an error\r\n */\r\nexport async function createJWT(\r\n  payload: Partial<JWTPayload>,\r\n  { issuer, signer, alg, expiresIn, canonicalize }: JWTOptions,\r\n  header: Partial<JWTHeader> = {}\r\n): Promise<string> {\r\n  if (!signer) throw new Error('missing_signer: No Signer functionality has been configured')\r\n  if (!issuer) throw new Error('missing_issuer: No issuing DID has been configured')\r\n  if (!header.typ) header.typ = 'JWT'\r\n  if (!header.alg) header.alg = alg\r\n  const timestamps: Partial<JWTPayload> = {\r\n    iat: Math.floor(Date.now() / 1000),\r\n    exp: undefined,\r\n  }\r\n  if (expiresIn) {\r\n    if (typeof expiresIn === 'number') {\r\n      timestamps.exp = <number>(payload.nbf || timestamps.iat) + Math.floor(expiresIn)\r\n    } else {\r\n      throw new Error('invalid_argument: JWT expiresIn is not a number')\r\n    }\r\n  }\r\n  const fullPayload = { ...timestamps, ...payload, iss: issuer }\r\n  return createJWS(fullPayload, signer, header, { canonicalize })\r\n}\r\n\r\nfunction verifyJWSDecoded(\r\n  { header, data, signature }: JWSDecoded,\r\n  pubKeys: VerificationMethod | VerificationMethod[]\r\n): VerificationMethod {\r\n  if (!Array.isArray(pubKeys)) pubKeys = [pubKeys]\r\n  const signer: VerificationMethod = VerifierAlgorithm(header.alg)(data, signature, pubKeys)\r\n  return signer\r\n}\r\n\r\n/**\r\n *  Verifies given JWS. If the JWS is valid, returns the public key that was\r\n *  used to sign the JWS, or throws an `Error` if none of the `pubKeys` match.\r\n *\r\n *  @example\r\n *  const pubKey = verifyJWS('eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....', { publicKeyHex: '0x12341...' })\r\n *\r\n *  @param    {String}                          jws         A JWS string to verify\r\n *  @param    {Array<VerificationMethod> | VerificationMethod}    pubKeys     The public keys used to verify the JWS\r\n *  @return   {VerificationMethod}                       The public key used to sign the JWS\r\n */\r\nexport function verifyJWS(jws: string, pubKeys: VerificationMethod | VerificationMethod[]): VerificationMethod {\r\n  const jwsDecoded: JWSDecoded = decodeJWS(jws)\r\n  return verifyJWSDecoded(jwsDecoded, pubKeys)\r\n}\r\n\r\n/**\r\n *  Verifies given JWT. If the JWT is valid, the promise returns an object including the JWT, the payload of the JWT,\r\n *  and the DID document of the issuer of the JWT.\r\n *\r\n *  @example\r\n *  ```ts\r\n *  verifyJWT(\r\n *      'did:uport:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJyZXF1Z....',\r\n *      {audience: '5A8bRWU3F7j3REx3vkJ...', callbackUrl: 'https://...'}\r\n *    ).then(obj => {\r\n *        const did = obj.did // DID of signer\r\n *        const payload = obj.payload\r\n *        const doc = obj.didResolutionResult.didDocument // DID Document of issuer\r\n *        const jwt = obj.jwt\r\n *        const signerKeyId = obj.signer.id // ID of key in DID document that signed JWT\r\n *        ...\r\n *    })\r\n *  ```\r\n *\r\n *  @param    {String}            jwt                a JSON Web Token to verify\r\n *  @param    {Object}            [options]           an unsigned credential object\r\n *  @param    {Boolean}           options.auth        Require signer to be listed in the authentication section of the\r\n *   DID document (for Authentication purposes)\r\n *  @param    {String}            options.audience    DID of the recipient of the JWT\r\n *  @param    {String}            options.callbackUrl callback url in JWT\r\n *  @return   {Promise<Object, Error>}               a promise which resolves with a response object or rejects with an\r\n *   error\r\n */\r\nexport async function verifyJWT(\r\n  jwt: string,\r\n  options: JWTVerifyOptions = {\r\n    resolver: undefined,\r\n    auth: undefined,\r\n    audience: undefined,\r\n    callbackUrl: undefined,\r\n    skewTime: undefined,\r\n    proofPurpose: undefined,\r\n    policies: {},\r\n  }\r\n): Promise<JWTVerified> {\r\n  if (!options.resolver) throw new Error('missing_resolver: No DID resolver has been configured')\r\n  const { payload, header, signature, data }: JWTDecoded = decodeJWT(jwt)\r\n  const proofPurpose: ProofPurposeTypes | undefined = Object.prototype.hasOwnProperty.call(options, 'auth')\r\n    ? options.auth\r\n      ? 'authentication'\r\n      : undefined\r\n    : options.proofPurpose\r\n\r\n  let did\r\n\r\n  if (!payload.iss && !payload.client_id) {\r\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT iss or client_id are required`)\r\n  }\r\n\r\n  if (payload.iss === SELF_ISSUED_V2 || payload.iss === SELF_ISSUED_V2_VC_INTEROP) {\r\n    if (!payload.sub) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT sub is required`)\r\n    }\r\n    if (typeof payload.sub_jwk === 'undefined') {\r\n      did = payload.sub\r\n    } else {\r\n      did = (header.kid || '').split('#')[0]\r\n    }\r\n  } else if (payload.iss === SELF_ISSUED_V0_1) {\r\n    if (!payload.did) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT did is required`)\r\n    }\r\n    did = payload.did\r\n  } else if (!payload.iss && payload.scope === 'openid' && payload.redirect_uri) {\r\n    // SIOP Request payload\r\n    // https://identity.foundation/jwt-vc-presentation-profile/#self-issued-op-request-object\r\n    if (!payload.client_id) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT client_id is required`)\r\n    }\r\n    did = payload.client_id\r\n  } else {\r\n    did = payload.iss\r\n  }\r\n\r\n  if (!did) {\r\n    throw new Error(`${JWT_ERROR.INVALID_JWT}: No DID has been found in the JWT`)\r\n  }\r\n\r\n  const { didResolutionResult, authenticators, issuer }: DIDAuthenticator = await resolveAuthenticator(\r\n    options.resolver,\r\n    header.alg,\r\n    did,\r\n    proofPurpose\r\n  )\r\n  const signer: VerificationMethod = await verifyJWSDecoded({ header, data, signature } as JWSDecoded, authenticators)\r\n  const now: number = typeof options.policies?.now === 'number' ? options.policies.now : Math.floor(Date.now() / 1000)\r\n  const skewTime = typeof options.skewTime !== 'undefined' && options.skewTime >= 0 ? options.skewTime : NBF_SKEW\r\n  if (signer) {\r\n    const nowSkewed = now + skewTime\r\n    if (options.policies?.nbf !== false && payload.nbf) {\r\n      if (payload.nbf > nowSkewed) {\r\n        throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid before nbf: ${payload.nbf}`)\r\n      }\r\n    } else if (options.policies?.iat !== false && payload.iat && payload.iat > nowSkewed) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT not valid yet (issued in the future) iat: ${payload.iat}`)\r\n    }\r\n    if (options.policies?.exp !== false && payload.exp && payload.exp <= now - skewTime) {\r\n      throw new Error(`${JWT_ERROR.INVALID_JWT}: JWT has expired: exp: ${payload.exp} < now: ${now}`)\r\n    }\r\n    if (options.policies?.aud !== false && payload.aud) {\r\n      if (!options.audience && !options.callbackUrl) {\r\n        throw new Error(\r\n          `${JWT_ERROR.INVALID_AUDIENCE}: JWT audience is required but your app address has not been configured`\r\n        )\r\n      }\r\n      const audArray = Array.isArray(payload.aud) ? payload.aud : [payload.aud]\r\n      const matchedAudience = audArray.find((item) => options.audience === item || options.callbackUrl === item)\r\n\r\n      if (typeof matchedAudience === 'undefined') {\r\n        throw new Error(`${JWT_ERROR.INVALID_AUDIENCE}: JWT audience does not match your DID or callback url`)\r\n      }\r\n    }\r\n    return { verified: true, payload, didResolutionResult, issuer, signer, jwt, policies: options.policies }\r\n  }\r\n  throw new Error(\r\n    `${JWT_ERROR.INVALID_SIGNATURE}: JWT not valid. issuer DID document does not contain a verificationMethod that matches the signature.`\r\n  )\r\n}\r\n\r\n/**\r\n * Resolves relevant public keys or other authenticating material used to verify signature from the DID document of\r\n * provided DID\r\n *\r\n *  @example\r\n *  ```ts\r\n *  resolveAuthenticator(resolver, 'ES256K', 'did:uport:2nQtiQG6Cgm1GYTBaaKAgr76uY7iSexUkqX').then(obj => {\r\n *      const payload = obj.payload\r\n *      const profile = obj.profile\r\n *      const jwt = obj.jwt\r\n *      // ...\r\n *  })\r\n *  ```\r\n *\r\n *  @param resolver - {Resolvable} a DID resolver function that can obtain the `DIDDocument` for the `issuer`\r\n *  @param alg - {String} a JWT algorithm\r\n *  @param issuer - {String} a Decentralized Identifier (DID) to lookup\r\n *  @param proofPurpose - {ProofPurposeTypes} *Optional* Use the verificationMethod linked in that section of the\r\n *   issuer DID document\r\n *  @return {Promise<DIDAuthenticator>} a promise which resolves with an object containing an array of authenticators\r\n *   or rejects with an error if none exist\r\n */\r\nexport async function resolveAuthenticator(\r\n  resolver: Resolvable,\r\n  alg: string,\r\n  issuer: string,\r\n  proofPurpose?: ProofPurposeTypes\r\n): Promise<DIDAuthenticator> {\r\n  const types: string[] = SUPPORTED_PUBLIC_KEY_TYPES[alg]\r\n  if (!types || types.length === 0) {\r\n    throw new Error(`${JWT_ERROR.NOT_SUPPORTED}: No supported signature types for algorithm ${alg}`)\r\n  }\r\n  let didResult: DIDResolutionResult\r\n\r\n  const result = (await resolver.resolve(issuer, { accept: DID_JSON })) as unknown\r\n  // support legacy resolvers that do not produce DIDResolutionResult\r\n  if (Object.getOwnPropertyNames(result).indexOf('didDocument') === -1) {\r\n    didResult = {\r\n      didDocument: result as DIDDocument,\r\n      didDocumentMetadata: {},\r\n      didResolutionMetadata: { contentType: DID_JSON },\r\n    }\r\n  } else {\r\n    didResult = result as DIDResolutionResult\r\n  }\r\n\r\n  if (didResult.didResolutionMetadata?.error || didResult.didDocument == null) {\r\n    const { error, message } = didResult.didResolutionMetadata\r\n    throw new Error(\r\n      `${JWT_ERROR.RESOLVER_ERROR}: Unable to resolve DID document for ${issuer}: ${error}, ${message || ''}`\r\n    )\r\n  }\r\n\r\n  const getPublicKeyById = (verificationMethods: VerificationMethod[], pubid?: string): VerificationMethod | null => {\r\n    const filtered = verificationMethods.filter(({ id }) => pubid === id)\r\n    return filtered.length > 0 ? filtered[0] : null\r\n  }\r\n\r\n  let publicKeysToCheck: VerificationMethod[] = [\r\n    ...(didResult?.didDocument?.verificationMethod || []),\r\n    ...(didResult?.didDocument?.publicKey || []),\r\n  ]\r\n  if (typeof proofPurpose === 'string') {\r\n    // support legacy DID Documents that do not list assertionMethod\r\n    if (\r\n      proofPurpose.startsWith('assertion') &&\r\n      !Object.getOwnPropertyNames(didResult?.didDocument).includes('assertionMethod')\r\n    ) {\r\n      didResult.didDocument = { ...(<DIDDocument>didResult.didDocument) }\r\n      didResult.didDocument.assertionMethod = [...publicKeysToCheck.map((pk) => pk.id)]\r\n    }\r\n\r\n    publicKeysToCheck = (didResult.didDocument[proofPurpose] || [])\r\n      .map((verificationMethod) => {\r\n        if (typeof verificationMethod === 'string') {\r\n          return getPublicKeyById(publicKeysToCheck, verificationMethod)\r\n        } else if (typeof (<LegacyVerificationMethod>verificationMethod).publicKey === 'string') {\r\n          // this is a legacy format\r\n          return getPublicKeyById(publicKeysToCheck, (<LegacyVerificationMethod>verificationMethod).publicKey)\r\n        } else {\r\n          return <VerificationMethod>verificationMethod\r\n        }\r\n      })\r\n      .filter((key) => key != null) as VerificationMethod[]\r\n  }\r\n\r\n  const authenticators: VerificationMethod[] = publicKeysToCheck.filter(({ type }) =>\r\n    types.find((supported) => supported === type)\r\n  )\r\n\r\n  if (typeof proofPurpose === 'string' && (!authenticators || authenticators.length === 0)) {\r\n    throw new Error(\r\n      `${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys suitable for ${alg} with ${proofPurpose} purpose`\r\n    )\r\n  }\r\n  if (!authenticators || authenticators.length === 0) {\r\n    throw new Error(`${JWT_ERROR.NO_SUITABLE_KEYS}: DID document for ${issuer} does not have public keys for ${alg}`)\r\n  }\r\n  return { authenticators, issuer, didResolutionResult: didResult }\r\n}\r\n","import { fromString } from 'uint8arrays'\r\nimport { base64ToBytes, bytesToBase64url, decodeBase64url, toSealed } from './util'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type ProtectedHeader = Record<string, any> & Partial<RecipientHeader>\r\n\r\n/**\r\n * The JWK representation of an ephemeral public key.\r\n * See https://www.rfc-editor.org/rfc/rfc7518.html#section-6\r\n */\r\ninterface EphemeralPublicKey {\r\n  kty?: string\r\n  //ECC\r\n  crv?: string\r\n  x?: string\r\n  y?: string\r\n  //RSA\r\n  n?: string\r\n  e?: string\r\n}\r\n\r\nexport interface RecipientHeader {\r\n  alg: string\r\n  iv: string\r\n  tag: string\r\n  epk?: EphemeralPublicKey\r\n  kid?: string\r\n  apv?: string\r\n  apu?: string\r\n}\r\n\r\nexport interface Recipient {\r\n  header: RecipientHeader\r\n  encrypted_key: string\r\n}\r\n\r\nexport interface JWE {\r\n  protected: string\r\n  iv: string\r\n  ciphertext: string\r\n  tag: string\r\n  aad?: string\r\n  recipients?: Recipient[]\r\n}\r\n\r\nexport interface EncryptionResult {\r\n  ciphertext: Uint8Array\r\n  tag: Uint8Array\r\n  iv: Uint8Array\r\n  protectedHeader?: string\r\n  recipient?: Recipient\r\n  cek?: Uint8Array\r\n}\r\n\r\nexport interface Encrypter {\r\n  alg: string\r\n  enc: string\r\n  encrypt: (cleartext: Uint8Array, protectedHeader: ProtectedHeader, aad?: Uint8Array) => Promise<EncryptionResult>\r\n  encryptCek?: (cek: Uint8Array) => Promise<Recipient>\r\n}\r\n\r\nexport interface Decrypter {\r\n  alg: string\r\n  enc: string\r\n  decrypt: (sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array, recipient?: Recipient) => Promise<Uint8Array | null>\r\n}\r\n\r\nfunction validateJWE(jwe: JWE) {\r\n  if (!(jwe.protected && jwe.iv && jwe.ciphertext && jwe.tag)) {\r\n    throw new Error('bad_jwe: missing properties')\r\n  }\r\n  if (jwe.recipients) {\r\n    jwe.recipients.map((rec) => {\r\n      if (!(rec.header && rec.encrypted_key)) {\r\n        throw new Error('bad_jwe: malformed recipients')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction encodeJWE({ ciphertext, tag, iv, protectedHeader, recipient }: EncryptionResult, aad?: Uint8Array): JWE {\r\n  const jwe: JWE = {\r\n    protected: <string>protectedHeader,\r\n    iv: bytesToBase64url(iv),\r\n    ciphertext: bytesToBase64url(ciphertext),\r\n    tag: bytesToBase64url(tag),\r\n  }\r\n  if (aad) jwe.aad = bytesToBase64url(aad)\r\n  if (recipient) jwe.recipients = [recipient]\r\n  return jwe\r\n}\r\n\r\nexport async function createJWE(\r\n  cleartext: Uint8Array,\r\n  encrypters: Encrypter[],\r\n  protectedHeader = {},\r\n  aad?: Uint8Array\r\n): Promise<JWE> {\r\n  if (encrypters[0].alg === 'dir') {\r\n    if (encrypters.length > 1) throw new Error('not_supported: Can only do \"dir\" encryption to one key.')\r\n    const encryptionResult = await encrypters[0].encrypt(cleartext, protectedHeader, aad)\r\n    return encodeJWE(encryptionResult, aad)\r\n  } else {\r\n    const tmpEnc = encrypters[0].enc\r\n    if (!encrypters.reduce((acc, encrypter) => acc && encrypter.enc === tmpEnc, true)) {\r\n      throw new Error('invalid_argument: Incompatible encrypters passed')\r\n    }\r\n    let cek\r\n    let jwe\r\n    for (const encrypter of encrypters) {\r\n      if (!cek) {\r\n        const encryptionResult = await encrypter.encrypt(cleartext, protectedHeader, aad)\r\n        cek = encryptionResult.cek\r\n        jwe = encodeJWE(encryptionResult, aad)\r\n      } else {\r\n        const recipient = await encrypter.encryptCek?.(cek)\r\n        if (recipient) {\r\n          jwe?.recipients?.push(recipient)\r\n        }\r\n      }\r\n    }\r\n    return <JWE>jwe\r\n  }\r\n}\r\n\r\nexport async function decryptJWE(jwe: JWE, decrypter: Decrypter): Promise<Uint8Array> {\r\n  validateJWE(jwe)\r\n  const protHeader = JSON.parse(decodeBase64url(jwe.protected))\r\n  if (protHeader.enc !== decrypter.enc)\r\n    throw new Error(`not_supported: Decrypter does not supported: '${protHeader.enc}'`)\r\n  const sealed = toSealed(jwe.ciphertext, jwe.tag)\r\n  const aad = fromString(jwe.aad ? `${jwe.protected}.${jwe.aad}` : jwe.protected)\r\n  let cleartext = null\r\n  if (protHeader.alg === 'dir' && decrypter.alg === 'dir') {\r\n    cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad)\r\n  } else if (!jwe.recipients || jwe.recipients.length === 0) {\r\n    throw new Error('bad_jwe: missing recipients')\r\n  } else {\r\n    for (let i = 0; !cleartext && i < jwe.recipients.length; i++) {\r\n      const recipient = jwe.recipients[i]\r\n      Object.assign(recipient.header, protHeader)\r\n      if (recipient.header.alg === decrypter.alg) {\r\n        cleartext = await decrypter.decrypt(sealed, base64ToBytes(jwe.iv), aad, recipient)\r\n      }\r\n    }\r\n  }\r\n  if (cleartext === null) throw new Error('failure: Failed to decrypt')\r\n  return cleartext\r\n}\r\n","import { sharedKey } from '@stablelib/x25519'\r\n\r\n/**\r\n * A wrapper around `mySecretKey` that can compute a shared secret using `theirPublicKey`.\r\n * The promise should resolve to a `Uint8Array` containing the raw shared secret.\r\n *\r\n * This method is meant to be used when direct access to a secret key is impossible or not desired.\r\n *\r\n * @param theirPublicKey `Uint8Array` the other party's public key\r\n * @returns a `Promise` that resolves to a `Uint8Array` representing the computed shared secret\r\n */\r\nexport type ECDH = (theirPublicKey: Uint8Array) => Promise<Uint8Array>\r\n\r\n/**\r\n * Wraps an X25519 secret key into an ECDH method that can be used to compute a shared secret with a public key.\r\n * @param mySecretKey A `Uint8Array` of length 32 representing the bytes of my secret key\r\n * @returns an `ECDH` method with the signature `(theirPublicKey: Uint8Array) => Promise<Uint8Array>`\r\n *\r\n * @throws 'invalid_argument:...' if the secret key size is wrong\r\n */\r\nexport function createX25519ECDH(mySecretKey: Uint8Array): ECDH {\r\n  if (mySecretKey.length !== 32) {\r\n    throw new Error('invalid_argument: incorrect secret key length for X25519')\r\n  }\r\n  return async (theirPublicKey: Uint8Array): Promise<Uint8Array> => {\r\n    if (theirPublicKey.length !== 32) {\r\n      throw new Error('invalid_argument: incorrect publicKey key length for X25519')\r\n    }\r\n    return sharedKey(mySecretKey, theirPublicKey)\r\n  }\r\n}\r\n","import { XChaCha20Poly1305 } from '@stablelib/xchacha20poly1305'\r\nimport { generateKeyPair, sharedKey } from '@stablelib/x25519'\r\nimport { randomBytes } from '@stablelib/random'\r\nimport { concatKDF } from './Digest'\r\nimport { bytesToBase64url, base58ToBytes, encodeBase64url, toSealed, base64ToBytes } from './util'\r\nimport { Recipient, EncryptionResult, Encrypter, Decrypter, ProtectedHeader } from './JWE'\r\nimport type { VerificationMethod, Resolvable } from 'did-resolver'\r\nimport { ECDH } from './ECDH'\r\nimport { fromString } from 'uint8arrays/from-string'\r\n\r\n/**\r\n * Extra parameters for JWE using authenticated encryption\r\n */\r\nexport type AuthEncryptParams = {\r\n  /**\r\n   * recipient key ID\r\n   */\r\n  kid?: string\r\n\r\n  /**\r\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.2}\r\n   * base64url encoded\r\n   */\r\n  apu?: string\r\n\r\n  /**\r\n   * See {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.1.3}\r\n   * base64url encoded\r\n   */\r\n  apv?: string\r\n}\r\n\r\n/**\r\n * Extra parameters for JWE using anonymous encryption\r\n */\r\nexport type AnonEncryptParams = {\r\n  /**\r\n   * recipient key ID\r\n   */\r\n  kid?: string\r\n}\r\n\r\n/**\r\n * Recommended encrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender private key to encrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientPublicKey the byte array representing the recipient public key\r\n * @param senderSecret either a Uint8Array representing the sender secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param options {@link AuthEncryptParams} used to specify extra header parameters\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\r\nexport function createAuthEncrypter(\r\n  recipientPublicKey: Uint8Array,\r\n  senderSecret: Uint8Array | ECDH,\r\n  options: Partial<AuthEncryptParams> = {}\r\n): Encrypter {\r\n  return xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(recipientPublicKey, senderSecret, options)\r\n}\r\n\r\n/**\r\n * Recommended encrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2}.\r\n *\r\n * @param publicKey the byte array representing the recipient public key\r\n * @param options {@link AnonEncryptParams} used to specify the recipient key ID (`kid`)\r\n *\r\n * @returns an {@link Encrypter} instance usable with {@link createJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\r\nexport function createAnonEncrypter(publicKey: Uint8Array, options: Partial<AnonEncryptParams> = {}): Encrypter {\r\n  return x25519Encrypter(publicKey, options?.kid)\r\n}\r\n\r\n/**\r\n * Recommended decrypter for authenticated encryption (i.e. sender authentication and requires\r\n * sender public key to decrypt the data).\r\n * Uses {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU v3 } and\r\n * {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n * @param senderPublicKey the byte array representing the sender public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-1PU and XC20PKW are proposed drafts in IETF and not a standard yet and\r\n * are subject to change as new revisions or until the official CFRG specification are released.\r\n *\r\n * @beta\r\n */\r\nexport function createAuthDecrypter(recipientSecret: Uint8Array | ECDH, senderPublicKey: Uint8Array): Decrypter {\r\n  return xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(recipientSecret, senderPublicKey)\r\n}\r\n\r\n/**\r\n * Recommended decrypter for anonymous encryption (i.e. no sender authentication).\r\n * Uses {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | ECDH-ES+XC20PKW v2 }.\r\n *\r\n * @param recipientSecret either a Uint8Array representing the recipient secret key or\r\n *   an ECDH function that wraps the key and can promise a shared secret given a public key\r\n *\r\n * @returns a {@link Decrypter} instance usable with {@link decryptJWE}\r\n *\r\n * NOTE: ECDH-ES+XC20PKW is a proposed draft in IETF and not a standard yet and\r\n * is subject to change as new revisions or until the official CFRG specification is released.\r\n *\r\n * @beta\r\n */\r\nexport function createAnonDecrypter(recipientSecret: Uint8Array | ECDH): Decrypter {\r\n  return x25519Decrypter(recipientSecret)\r\n}\r\n\r\nfunction xc20pEncrypter(key: Uint8Array): (cleartext: Uint8Array, aad?: Uint8Array) => EncryptionResult {\r\n  const cipher = new XChaCha20Poly1305(key)\r\n  return (cleartext: Uint8Array, aad?: Uint8Array) => {\r\n    const iv = randomBytes(cipher.nonceLength)\r\n    const sealed = cipher.seal(iv, cleartext, aad)\r\n    return {\r\n      ciphertext: sealed.subarray(0, sealed.length - cipher.tagLength),\r\n      tag: sealed.subarray(sealed.length - cipher.tagLength),\r\n      iv,\r\n    }\r\n  }\r\n}\r\n\r\nexport function xc20pDirEncrypter(key: Uint8Array): Encrypter {\r\n  const xc20pEncrypt = xc20pEncrypter(key)\r\n  const enc = 'XC20P'\r\n  const alg = 'dir'\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    const protHeader = encodeBase64url(JSON.stringify(Object.assign({ alg }, protectedHeader, { enc })))\r\n    const encodedAad = fromString(aad ? `${protHeader}.${bytesToBase64url(aad)}` : protHeader)\r\n    return {\r\n      ...xc20pEncrypt(cleartext, encodedAad),\r\n      protectedHeader: protHeader,\r\n    }\r\n  }\r\n  return { alg, enc, encrypt }\r\n}\r\n\r\nexport function xc20pDirDecrypter(key: Uint8Array): Decrypter {\r\n  const cipher = new XChaCha20Poly1305(key)\r\n  async function decrypt(sealed: Uint8Array, iv: Uint8Array, aad?: Uint8Array): Promise<Uint8Array | null> {\r\n    return cipher.open(iv, sealed, aad)\r\n  }\r\n  return { alg: 'dir', enc: 'XC20P', decrypt }\r\n}\r\n\r\nexport function x25519Encrypter(publicKey: Uint8Array, kid?: string): Encrypter {\r\n  const alg = 'ECDH-ES+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\r\n    const epk = generateKeyPair()\r\n    const sharedSecret = sharedKey(epk.secretKey, publicKey)\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg)\r\n    const res = xc20pEncrypter(kek)(cek)\r\n    const recipient: Recipient = {\r\n      encrypted_key: bytesToBase64url(res.ciphertext),\r\n      header: {\r\n        alg,\r\n        iv: bytesToBase64url(res.iv),\r\n        tag: bytesToBase64url(res.tag),\r\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\r\n      },\r\n    }\r\n    if (kid) recipient.header.kid = kid\r\n    return recipient\r\n  }\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    // we won't want alg to be set to dir from xc20pDirEncrypter\r\n    Object.assign(protectedHeader, { alg: undefined })\r\n    // Content Encryption Key\r\n    const cek = randomBytes(32)\r\n    return {\r\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\r\n      recipient: await encryptCek(cek),\r\n      cek,\r\n    }\r\n  }\r\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\r\n}\r\n\r\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\r\nexport function xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2(\r\n  recipientPublicKey: Uint8Array,\r\n  senderSecret: Uint8Array | ECDH,\r\n  options: Partial<AuthEncryptParams> = {}\r\n): Encrypter {\r\n  const alg = 'ECDH-1PU+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n\r\n  let partyUInfo: Uint8Array\r\n  let partyVInfo: Uint8Array\r\n  if (options.apu !== undefined) partyUInfo = base64ToBytes(options.apu)\r\n  if (options.apv !== undefined) partyVInfo = base64ToBytes(options.apv)\r\n\r\n  async function encryptCek(cek: Uint8Array): Promise<Recipient> {\r\n    const epk = generateKeyPair()\r\n    const zE = sharedKey(epk.secretKey, recipientPublicKey)\r\n\r\n    // ECDH-1PU requires additional shared secret between\r\n    // static key of sender and static key of recipient\r\n    let zS\r\n    if (senderSecret instanceof Uint8Array) {\r\n      zS = sharedKey(senderSecret, recipientPublicKey)\r\n    } else {\r\n      zS = await senderSecret(recipientPublicKey)\r\n    }\r\n\r\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\r\n    sharedSecret.set(zE)\r\n    sharedSecret.set(zS, zE.length)\r\n\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg, partyUInfo, partyVInfo)\r\n\r\n    const res = xc20pEncrypter(kek)(cek)\r\n    const recipient: Recipient = {\r\n      encrypted_key: bytesToBase64url(res.ciphertext),\r\n      header: {\r\n        alg,\r\n        iv: bytesToBase64url(res.iv),\r\n        tag: bytesToBase64url(res.tag),\r\n        epk: { kty: 'OKP', crv, x: bytesToBase64url(epk.publicKey) },\r\n      },\r\n    }\r\n    if (options.kid) recipient.header.kid = options.kid\r\n    if (options.apu) recipient.header.apu = options.apu\r\n    if (options.apv) recipient.header.apv = options.apv\r\n\r\n    return recipient\r\n  }\r\n  async function encrypt(\r\n    cleartext: Uint8Array,\r\n    protectedHeader: ProtectedHeader = {},\r\n    aad?: Uint8Array\r\n  ): Promise<EncryptionResult> {\r\n    // we won't want alg to be set to dir from xc20pDirEncrypter\r\n    Object.assign(protectedHeader, { alg: undefined })\r\n    // Content Encryption Key\r\n    const cek = randomBytes(32)\r\n    return {\r\n      ...(await xc20pDirEncrypter(cek).encrypt(cleartext, protectedHeader, aad)),\r\n      recipient: await encryptCek(cek),\r\n      cek,\r\n    }\r\n  }\r\n  return { alg, enc: 'XC20P', encrypt, encryptCek }\r\n}\r\n\r\nexport async function resolveX25519Encrypters(dids: string[], resolver: Resolvable): Promise<Encrypter[]> {\r\n  const encryptersForDID = async (did: string, resolved: string[] = []): Promise<Encrypter[]> => {\r\n    const { didResolutionMetadata, didDocument } = await resolver.resolve(did)\r\n    resolved.push(did)\r\n    if (didResolutionMetadata?.error || didDocument == null) {\r\n      throw new Error(\r\n        `resolver_error: Could not resolve ${did}: ${didResolutionMetadata.error}, ${didResolutionMetadata.message}`\r\n      )\r\n    }\r\n    let controllerEncrypters: Encrypter[] = []\r\n    if (!didDocument.controller && !didDocument.keyAgreement) {\r\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\r\n    }\r\n    if (didDocument.controller) {\r\n      let controllers = Array.isArray(didDocument.controller) ? didDocument.controller : [didDocument.controller]\r\n      controllers = controllers.filter((c) => !resolved.includes(c))\r\n      const encrypterPromises = controllers.map((did) =>\r\n        encryptersForDID(did, resolved).catch(() => {\r\n          return []\r\n        })\r\n      )\r\n      const encrypterArrays = await Promise.all(encrypterPromises)\r\n      controllerEncrypters = ([] as Encrypter[]).concat(...encrypterArrays)\r\n    }\r\n    const agreementKeys: VerificationMethod[] = didDocument.keyAgreement\r\n      ?.map((key) => {\r\n        if (typeof key === 'string') {\r\n          return [...(didDocument.publicKey || []), ...(didDocument.verificationMethod || [])].find(\r\n            (pk) => pk.id === key\r\n          )\r\n        }\r\n        return key\r\n      })\r\n      ?.filter((key) => typeof key !== 'undefined') as VerificationMethod[]\r\n    const pks =\r\n      agreementKeys?.filter((key) => {\r\n        // TODO: should be able to use non base58 keys too\r\n        return key.type === 'X25519KeyAgreementKey2019' && Boolean(key.publicKeyBase58)\r\n      }) || []\r\n    if (!pks.length && !controllerEncrypters.length)\r\n      throw new Error(`no_suitable_keys: Could not find x25519 key for ${did}`)\r\n    return pks\r\n      .map((pk) => x25519Encrypter(base58ToBytes(<string>pk.publicKeyBase58), pk.id))\r\n      .concat(...controllerEncrypters)\r\n  }\r\n\r\n  const encrypterPromises = dids.map((did) => encryptersForDID(did))\r\n  const encrypterArrays = await Promise.all(encrypterPromises)\r\n  const flattenedArray = ([] as Encrypter[]).concat(...encrypterArrays)\r\n  return flattenedArray\r\n}\r\n\r\nfunction validateHeader(header?: ProtectedHeader) {\r\n  if (!(header && header.epk && header.iv && header.tag)) {\r\n    throw new Error('bad_jwe: malformed header')\r\n  }\r\n}\r\n\r\nexport function x25519Decrypter(receiverSecret: Uint8Array | ECDH): Decrypter {\r\n  const alg = 'ECDH-ES+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function decrypt(\r\n    sealed: Uint8Array,\r\n    iv: Uint8Array,\r\n    aad?: Uint8Array,\r\n    recipient?: Recipient\r\n  ): Promise<Uint8Array | null> {\r\n    validateHeader(recipient?.header)\r\n    recipient = <Recipient>recipient\r\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\r\n    const publicKey = base64ToBytes(recipient.header.epk.x)\r\n    let sharedSecret\r\n    if (receiverSecret instanceof Uint8Array) {\r\n      sharedSecret = sharedKey(receiverSecret, publicKey)\r\n    } else {\r\n      sharedSecret = await receiverSecret(publicKey)\r\n    }\r\n\r\n    // Key Encryption Key\r\n    const kek = concatKDF(sharedSecret, keyLen, alg)\r\n    // Content Encryption Key\r\n    const sealedCek = toSealed(<string>recipient.encrypted_key, recipient.header.tag)\r\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\r\n    if (cek === null) return null\r\n\r\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\r\n  }\r\n  return { alg, enc: 'XC20P', decrypt }\r\n}\r\n\r\n/**\r\n * Implements ECDH-1PU+XC20PKW with XChaCha20Poly1305 based on the following specs:\r\n *   - {@link https://tools.ietf.org/html/draft-amringer-jose-chacha-02 | XC20PKW}\r\n *   - {@link https://tools.ietf.org/html/draft-madden-jose-ecdh-1pu-03 | ECDH-1PU}\r\n */\r\nexport function xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2(\r\n  recipientSecret: Uint8Array | ECDH,\r\n  senderPublicKey: Uint8Array\r\n): Decrypter {\r\n  const alg = 'ECDH-1PU+XC20PKW'\r\n  const keyLen = 256\r\n  const crv = 'X25519'\r\n  async function decrypt(\r\n    sealed: Uint8Array,\r\n    iv: Uint8Array,\r\n    aad?: Uint8Array,\r\n    recipient?: Recipient\r\n  ): Promise<Uint8Array | null> {\r\n    recipient = <Recipient>recipient\r\n    validateHeader(recipient.header)\r\n    if (recipient.header.epk?.crv !== crv || typeof recipient.header.epk.x == 'undefined') return null\r\n    // ECDH-1PU requires additional shared secret between\r\n    // static key of sender and static key of recipient\r\n    const publicKey = base64ToBytes(recipient.header.epk.x)\r\n    let zE: Uint8Array\r\n    let zS: Uint8Array\r\n\r\n    if (recipientSecret instanceof Uint8Array) {\r\n      zE = sharedKey(recipientSecret, publicKey)\r\n      zS = sharedKey(recipientSecret, senderPublicKey)\r\n    } else {\r\n      zE = await recipientSecret(publicKey)\r\n      zS = await recipientSecret(senderPublicKey)\r\n    }\r\n\r\n    const sharedSecret = new Uint8Array(zE.length + zS.length)\r\n    sharedSecret.set(zE)\r\n    sharedSecret.set(zS, zE.length)\r\n\r\n    // Key Encryption Key\r\n    let producerInfo\r\n    let consumerInfo\r\n    if (recipient.header.apu) producerInfo = base64ToBytes(recipient.header.apu)\r\n    if (recipient.header.apv) consumerInfo = base64ToBytes(recipient.header.apv)\r\n\r\n    const kek = concatKDF(sharedSecret, keyLen, alg, producerInfo, consumerInfo)\r\n    // Content Encryption Key\r\n    const sealedCek = toSealed(recipient.encrypted_key, recipient.header.tag)\r\n    const cek = await xc20pDirDecrypter(kek).decrypt(sealedCek, base64ToBytes(recipient.header.iv))\r\n    if (cek === null) return null\r\n\r\n    return xc20pDirDecrypter(cek).decrypt(sealed, iv, aad)\r\n  }\r\n  return { alg, enc: 'XC20P', decrypt }\r\n}\r\n"],"names":["bytesToBase64url","b","u8a","toString","base64ToBytes","s","inputBase64Url","replace","fromString","base58ToBytes","bytesToBase58","hexToBytes","input","startsWith","substring","toLowerCase","encodeBase64url","decodeBase64url","bytesToHex","stringToBytes","toJose","r","recoveryParam","recoverable","jose","Uint8Array","set","Error","fromJose","signature","signatureBytes","length","TypeError","slice","undefined","toSealed","ciphertext","tag","concat","leftpad","data","size","repeat","zl","zr","sl","sr","hl","hr","rotl","x","n","fn1","a","c","d","e","m","k","fn2","fn3","fn4","fn5","Ripemd160","constructor","blockSize","_a","_b","_c","_d","_e","_blockOffset","_block","_blockSize","_length","_finalized","update","block","offset","i","_update","j","carry","digest","_digest","fill","words","Array","temp","DataView","buffer","getInt32","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","setUint32","setInt32","sha256","payload","hash","keccak","sha3","keccak_256","arrayBuffer","toEthereumAddress","hexPublicKey","hashInput","ripemd160","writeUint32BE","value","array","encoded","lengthAndInput","concatKDF","secret","keyLen","alg","producerInfo","consumerInfo","roundNumber","secp256k1","elliptic","ec","ES256KSigner","privateKey","privateKeyBytes","keyPair","keyFromPrivate","sign","SimpleSigner","hexPrivateKey","signer","EllipticSigner","EdDSASigner","secretKey","dataBytes","sig","NaclSigner","base64PrivateKey","secp256r1","ES256Signer","instanceOfEcdsaSignature","object","ES256SignerAlg","ES256KSignerAlg","Ed25519SignerAlg","RS256SignerAlg","PS256SignerAlg","algorithms","ES256","ES256K","Ed25519","EdDSA","RS256","PS256","SignerAlg","impl","publicKeyToAddress","publicKey","otherAddress","version","publicKeyBuffer","publicKeyHash","step1","step2","step3","checksum","step4","EC","prefix","compressedPublicKey","keyFromPublic","getPublic","encode","bech32","toWords","verifyBlockchainAccountId","blockchainAccountId","chain","split","bip122","cosmos","join","toSignatureObject","rawSig","sigObj","extractPublicKeyBytes","pk","publicKeyBase58","publicKeyBase64","publicKeyHex","publicKeyJwk","crv","y","kty","publicKeyMultibase","base16","base58btc","base64","base64url","bases","baseDecoder","decoder","or","decode","verifyES256","authenticators","fullPublicKeys","filter","ethereumAddress","find","pubBytes","verify","err","verifyES256K","blockchainAddressKeys","verifyRecoverableES256K","signatures","so","checkSignatureAgainstSigner","recoveredKey","recoverPubKey","recoveredPublicKeyHex","recoveredCompressedPublicKeyHex","recoveredAddress","keyHex","map","key","verifyEd25519","clear","VerifierAlgorithm","JWT_ERROR","INVALID_JWT","INVALID_AUDIENCE","INVALID_SIGNATURE","NO_SUITABLE_KEYS","NOT_SUPPORTED","RESOLVER_ERROR","resolveAuthenticator","resolver","issuer","proofPurpose","types","SUPPORTED_PUBLIC_KEY_TYPES","didResult","resolve","accept","DID_JSON","result","Object","getOwnPropertyNames","indexOf","didDocument","didDocumentMetadata","didResolutionMetadata","contentType","error","message","getPublicKeyById","verificationMethods","pubid","filtered","id","publicKeysToCheck","verificationMethod","includes","assertionMethod","type","supported","didResolutionResult","verifyJWT","jwt","options","auth","audience","callbackUrl","skewTime","policies","header","decodeJWT","prototype","hasOwnProperty","call","did","iss","client_id","SELF_ISSUED_V2","SELF_ISSUED_V2_VC_INTEROP","sub","sub_jwk","kid","SELF_ISSUED_V0_1","scope","redirect_uri","verifyJWSDecoded","now","Math","floor","Date","NBF_SKEW","nowSkewed","nbf","iat","exp","aud","audArray","isArray","matchedAudience","item","verified","createJWT","expiresIn","canonicalize","typ","timestamps","fullPayload","createJWS","defaultAlg","encodedPayload","encodeSection","signingInput","jwtSigner","shouldCanonicalize","canonicalizeData","JSON","stringify","decodeJWS","jws","parts","match","parse","decodedJwt","assign","pubKeys","verifyJWS","jwsDecoded","bind","then","v","pact","onFulfilled","_this","thenable","validateJWE","jwe","protected","iv","recipients","rec","encrypted_key","encodeJWE","protectedHeader","recipient","aad","decryptJWE","decrypter","cleartext","protHeader","enc","sealed","decrypt","createJWE","encrypters","encrypt","encryptionResult","tmpEnc","reduce","acc","encrypter","cek","encryptCek","push","createX25519ECDH","mySecretKey","theirPublicKey","sharedKey","resolveX25519Encrypters","dids","encryptersForDID","resolved","agreementKeys","keyAgreement","pks","Boolean","controllerEncrypters","x25519Encrypter","controller","controllers","encrypterPromises","catch","Promise","all","encrypterArrays","flattenedArray","createAuthEncrypter","recipientPublicKey","senderSecret","xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonEncrypter","createAuthDecrypter","recipientSecret","senderPublicKey","xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2","createAnonDecrypter","x25519Decrypter","xc20pEncrypter","cipher","XChaCha20Poly1305","randomBytes","nonceLength","seal","subarray","tagLength","xc20pDirEncrypter","encodedAad","xc20pEncrypt","xc20pDirDecrypter","open","epk","generateKeyPair","sharedSecret","kek","res","zE","zS","partyUInfo","partyVInfo","apu","apv","validateHeader","receiverSecret","sealedCek"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/did-jwt/src/SignerAlgorithm.ts b/node_modules/did-jwt/src/SignerAlgorithm.ts
index 00c3c5e..db3783b 100644
--- a/node_modules/did-jwt/src/SignerAlgorithm.ts
+++ b/node_modules/did-jwt/src/SignerAlgorithm.ts
@@ -42,6 +42,20 @@ export function Ed25519SignerAlg(): SignerAlgorithm {
   }
 }

+export function RS256SignerAlg(): SignerAlgorithm {
+  return async function sign(payload: string, signer: Signer): Promise<string> {
+    const signature: EcdsaSignature | string = await signer(payload)
+    return signature as string
+  }
+}
+
+export function PS256SignerAlg(): SignerAlgorithm {
+  return async function sign(payload: string, signer: Signer): Promise<string> {
+    const signature: EcdsaSignature | string = await signer(payload)
+    return signature as string
+  }
+}
+
 interface SignerAlgorithms {
   [alg: string]: SignerAlgorithm
 }
@@ -56,6 +70,8 @@ const algorithms: SignerAlgorithms = {
   // see https://github.com/decentralized-identity/did-jwt/issues/130
   Ed25519: Ed25519SignerAlg(),
   EdDSA: Ed25519SignerAlg(),
+  RS256: RS256SignerAlg(),
+  PS256: PS256SignerAlg(),
 }

 function SignerAlg(alg: string): SignerAlgorithm {
diff --git a/node_modules/did-jwt/src/VerifierAlgorithm.ts b/node_modules/did-jwt/src/VerifierAlgorithm.ts
index cf920bd..b778bb8 100644
--- a/node_modules/did-jwt/src/VerifierAlgorithm.ts
+++ b/node_modules/did-jwt/src/VerifierAlgorithm.ts
@@ -6,6 +6,7 @@ import type { VerificationMethod } from 'did-resolver'
 import { bases } from 'multiformats/basics'
 import { hexToBytes, base58ToBytes, base64ToBytes, bytesToHex, EcdsaSignature, stringToBytes } from './util'
 import { verifyBlockchainAccountId } from './blockchains'
+import { RS256SignerAlg } from "./SignerAlgorithm";

 const secp256k1 = new elliptic.ec('secp256k1')
 const secp256r1 = new elliptic.ec('p256')
diff --git a/node_modules/did-jwt/src/__tests__/JWT.test.ts b/node_modules/did-jwt/src/__tests__/JWT.test.ts
index 8b0209e..40454f4 100644
--- a/node_modules/did-jwt/src/__tests__/JWT.test.ts
+++ b/node_modules/did-jwt/src/__tests__/JWT.test.ts
@@ -125,6 +125,7 @@ describe('createJWT()', () => {
     const publicKey_x = '14c58e581c7656ba153195669fe4ce53ff78dd5ede60a4039771a90c58cb41de'
     const publicKey_y = 'ec41869995bd661849414c523c7dff9a96f1c8dbc2e5e78172118f91c7199869'

+
     // construct did:key for secp256r1 (unlike did for secp256k1 which is for an Ethereum Address)
     // This originally was constructed by `encodeDIDfromHextString` imported from `did-key-creator`
     // package, but that dependency was removed, so now `did` is just hardcoded
@@ -159,61 +160,61 @@ describe('createJWT()', () => {
       kty_value: string,
       crv_value: string
     ): JsonWebKey {
-      if (publicPointHex_x.length % 2 != 0) {
-        publicPointHex_x = '0' + publicPointHex_x
-      }
-      if (publicPointHex_y.length % 2 != 0) {
-        publicPointHex_y = '0' + publicPointHex_y
-      }
-      const publicPointUint8_x = u8a.fromString(publicPointHex_x, 'hex')
-      const publicPointBase64URL_x = u8a.toString(publicPointUint8_x, 'base64url')
-      const publicPointUint8_y = u8a.fromString(publicPointHex_y, 'hex')
-      const publicPointBase64URL_y = u8a.toString(publicPointUint8_y, 'base64url')
-      return {
-        kty: kty_value,
-        crv: crv_value,
-        x: publicPointBase64URL_x,
-        y: publicPointBase64URL_y,
-      }
+    if (publicPointHex_x.length % 2 != 0) {
+      publicPointHex_x = '0' + publicPointHex_x
     }
+    if (publicPointHex_y.length % 2 != 0) {
+      publicPointHex_y = '0' + publicPointHex_y
+    }
+    const publicPointUint8_x = u8a.fromString(publicPointHex_x, 'hex')
+    const publicPointBase64URL_x = u8a.toString(publicPointUint8_x, 'base64url')
+    const publicPointUint8_y = u8a.fromString(publicPointHex_y, 'hex')
+    const publicPointBase64URL_y = u8a.toString(publicPointUint8_y, 'base64url')
+    return {
+      kty: kty_value,
+      crv: crv_value,
+      x: publicPointBase64URL_x,
+      y: publicPointBase64URL_y,
+    }
+  }

-    // input private key in hex, and export pem
-    function privateToJWK(privatePointHex: string, kty_value: string, crv_value: string): privateJsonWebKey {
-      if (privatePointHex.length % 2 != 0) {
-        privatePointHex = '0' + privatePointHex
-      }
-      const privatePointUint8 = u8a.fromString(privatePointHex, 'hex')
-      const privatePointBase64URL = u8a.toString(privatePointUint8, 'base64url')
-      return {
-        kty: kty_value,
-        crv: crv_value,
-        d: privatePointBase64URL,
-      }
+  // input private key in hex, and export pem
+  function privateToJWK(privatePointHex: string, kty_value: string, crv_value: string): privateJsonWebKey {
+    if (privatePointHex.length % 2 != 0) {
+      privatePointHex = '0' + privatePointHex
+    }
+    const privatePointUint8 = u8a.fromString(privatePointHex, 'hex')
+    const privatePointBase64URL = u8a.toString(privatePointUint8, 'base64url')
+    return {
+      kty: kty_value,
+      crv: crv_value,
+      d: privatePointBase64URL,
     }
+  }

     it('creates a valid JWT', async () => {
       expect.assertions(1)
-      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer }, { alg: 'ES256' })
-      const pemPublic = jwkToPem.default(publicToJWK(publicKey_x, publicKey_y, 'EC', 'P-256'))
-      expect(verifyTokenFormAndValidity(jwt, pemPublic)).toBe(true)
+      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer },{alg: 'ES256'})
+      const pemPublic = jwkToPem.default(publicToJWK(publicKey_x,publicKey_y,'EC','P-256'))
+      expect(verifyTokenFormAndValidity(jwt,pemPublic)).toBe(true)
     })

     it('creates a valid JWT using a MNID', async () => {
       expect.assertions(1)
-      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: address, signer }, { alg: 'ES256' })
-      const pemPublic = jwkToPem.default(publicToJWK(publicKey_x, publicKey_y, 'EC', 'P-256'))
-      expect(verifyTokenFormAndValidity(jwt, pemPublic)).toBe(true)
+      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: address, signer },{alg: 'ES256'})
+      const pemPublic = jwkToPem.default(publicToJWK(publicKey_x,publicKey_y,'EC','P-256'))
+      expect(verifyTokenFormAndValidity(jwt,pemPublic)).toBe(true)
     })

     it('creates a JWT with correct format', async () => {
       expect.assertions(1)
-      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer }, { alg: 'ES256' })
+      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer },{alg: 'ES256'})
       return expect(decodeJWT(jwt)).toMatchSnapshot()
     })

     it('creates a JWT with correct legacy format', async () => {
       expect.assertions(1)
-      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: address, signer }, { alg: 'ES256' })
+      const jwt = await createJWT({ requested: ['name', 'phone'] }, { issuer: address, signer },{alg: 'ES256'})
       return expect(decodeJWT(jwt)).toMatchSnapshot()
     })

@@ -225,7 +226,7 @@ describe('createJWT()', () => {
           nbf: Math.floor(new Date().getTime() / 1000),
         },
         { issuer: did, signer, expiresIn: 10000 },
-        { alg: 'ES256' }
+        {alg: 'ES256'}
       )
       const { payload } = decodeJWT(jwt)
       return expect(payload.exp).toEqual(payload.nbf + 10000)
@@ -234,7 +235,7 @@ describe('createJWT()', () => {
     it('Uses iat if nbf is not defined but expiresIn is included', async () => {
       expect.assertions(1)
       const { payload } = decodeJWT(
-        await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer, expiresIn: 10000 }, { alg: 'ES256' })
+      await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer, expiresIn: 10000 },{alg: 'ES256'})
       )
       return expect(payload.exp).toEqual(payload.iat + 10000)
     })
@@ -242,9 +243,7 @@ describe('createJWT()', () => {
     it('sets iat to the current time by default', async () => {
       expect.assertions(1)
       const timestamp = Math.floor(Date.now() / 1000)
-      const { payload } = decodeJWT(
-        await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer }, { alg: 'ES256' })
-      )
+      const { payload } = decodeJWT(await createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer },{alg: 'ES256'}))
       return expect(payload.iat).toEqual(timestamp)
     })

@@ -252,15 +251,15 @@ describe('createJWT()', () => {
       expect.assertions(1)
       const timestamp = 2000000
       const { payload } = decodeJWT(
-        await createJWT({ requested: ['name', 'phone'], iat: timestamp }, { issuer: did, signer }, { alg: 'ES256' })
+          await createJWT({ requested: ['name', 'phone'], iat: timestamp }, { issuer: did, signer },{alg: 'ES256'})
       )
       return expect(payload.iat).toEqual(timestamp)
     })

-    it('does not set iat if value in payload is undefined', async () => {
+      it('does not set iat if value in payload is undefined', async () => {
       expect.assertions(1)
       const { payload } = decodeJWT(
-        await createJWT({ requested: ['name', 'phone'], iat: undefined }, { issuer: did, signer }, { alg: 'ES256' })
+          await createJWT({ requested: ['name', 'phone'], iat: undefined }, { issuer: did, signer },{alg: 'ES256'})
       )
       return expect(payload.iat).toBeUndefined()
     })
@@ -271,6 +270,7 @@ describe('createJWT()', () => {
         createJWT({ requested: ['name', 'phone'] }, { issuer: did, signer, alg: 'BADALGO' })
       ).rejects.toThrowError('Unsupported algorithm BADALGO')
     })
+
   })
 })

@@ -438,6 +438,7 @@ describe('createJWT()', () => {
 })

 describe('verifyJWT() for ES256', () => {
+
   const alg = 'ES256'
   const privateKey = '736f625c9dda78a94bb16840c82779bb7bc18014b8ede52f0f03429902fc4ba8'
   const publicKey = '0314c58e581c7656ba153195669fe4ce53ff78dd5ede60a4039771a90c58cb41de'
@@ -490,7 +491,7 @@ describe('verifyJWT() for ES256', () => {

   describe('pregenerated JWT', () => {
     const incomingJwt =
-      'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODUzMjExMzMsInJlcXVlc3RlZCI6WyJuYW1lIiwicGhvbmUiXSwiaXNzIjoiZGlkOmtleTp6RG5hZWo0TkhudGRhNHJOVzRGQlVKZ0Z6ZGNnRUFYS0dSVkdFOEx1VmZSYnVNdWMxIn0.aMYFY0jitx2Bq9_wGBhEeIyVvzr2XkouCyEP662P8TbAPTpXOC3UrGQONaPD7wleLrMhGdvfod7idSxKXLl64Q'
+    'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODUzMjExMzMsInJlcXVlc3RlZCI6WyJuYW1lIiwicGhvbmUiXSwiaXNzIjoiZGlkOmtleTp6RG5hZWo0TkhudGRhNHJOVzRGQlVKZ0Z6ZGNnRUFYS0dSVkdFOEx1VmZSYnVNdWMxIn0.aMYFY0jitx2Bq9_wGBhEeIyVvzr2XkouCyEP662P8TbAPTpXOC3UrGQONaPD7wleLrMhGdvfod7idSxKXLl64Q'
     it('verifies the JWT and return correct payload', async () => {
       expect.assertions(1)
       const { payload } = await verifyJWT(incomingJwt, { resolver })
@@ -550,6 +551,7 @@ describe('verifyJWT() for ES256', () => {
   })
 })

+
 describe('verifyJWT() for ES256K', () => {
   const resolver = {
     resolve: jest.fn().mockImplementation((didUrl: string) => {
diff --git a/node_modules/did-jwt/src/__tests__/SignerAlgorithm.test.ts b/node_modules/did-jwt/src/__tests__/SignerAlgorithm.test.ts
index 7effff5..58f276b 100644
--- a/node_modules/did-jwt/src/__tests__/SignerAlgorithm.test.ts
+++ b/node_modules/did-jwt/src/__tests__/SignerAlgorithm.test.ts
@@ -59,6 +59,7 @@ describe('ES256', () => {
     const signature = await jwtSigner('hello', p256signer)
     expect(p256kp.verify(sha256('hello'), toSignatureObject(signature))).toBeTruthy()
   })
+
 })
 // end of tests added for P-256

diff --git a/node_modules/did-jwt/src/__tests__/VerifierAlgorithm.test.ts b/node_modules/did-jwt/src/__tests__/VerifierAlgorithm.test.ts
index c3be3f9..33d4ca5 100644
--- a/node_modules/did-jwt/src/__tests__/VerifierAlgorithm.test.ts
+++ b/node_modules/did-jwt/src/__tests__/VerifierAlgorithm.test.ts
@@ -13,6 +13,7 @@ import { publicKeyToAddress as toCosmosAddressWithoutPrefix } from '../blockchai
 import { ES256Signer } from '../signers/ES256Signer'

 describe('VerifierAlgorithm', () => {
+
   it('supports ES256', () => {
     expect(typeof VerifierAlgorithm('ES256')).toEqual('function')
   })
@@ -68,6 +69,7 @@ describe('ES256', () => {
     publicKeyHex: publicKey,
   }

+
   const compressedKey = {
     id: `${did}#keys-4`,
     type: 'JsonWebKey2020',
@@ -75,11 +77,13 @@ describe('ES256', () => {
     publicKeyHex: compressedPublicKey,
   }

+
   const malformedKey1 = {
     id: `${did}#keys-7`,
     type: 'JsonWebKey2020',
     controller: did,
-    publicKeyHex: '05f9c36f8964623378bdc068d4bce07ed17c8fa486f9ac0c2613ca3c8c306d7bb6',
+    publicKeyHex:
+      '05f9c36f8964623378bdc068d4bce07ed17c8fa486f9ac0c2613ca3c8c306d7bb6',
   }

   const malformedKey2 = {
@@ -87,7 +91,7 @@ describe('ES256', () => {
     type: 'JsonWebKey2020',
     controller: did,
     publicKeyHex:
-      '04f9c36f8964623378bdc068d4bce07ed17c8fa486f9ac0c2613ca3c8c306d7bb61cd36717b8ac5e4fea8ad23dc8d0783c2318ee4ad7a80db6e0026ad0b072a24f07',
+       '04f9c36f8964623378bdc068d4bce07ed17c8fa486f9ac0c2613ca3c8c306d7bb61cd36717b8ac5e4fea8ad23dc8d0783c2318ee4ad7a80db6e0026ad0b072a24f07',
   }

   const malformedKey3 = {
@@ -101,14 +105,14 @@ describe('ES256', () => {
   const verifier = VerifierAlgorithm('ES256')
   it('validates signature and picks correct public key', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     return expect(verifier(parts[1], parts[2], [ecKey1, ecKey2])).toEqual(ecKey2)
   })

   it('validates with publicKeyBase58', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     const pubkey = Object.assign({ publicKeyBase58 }, ecKey2)
     delete pubkey.publicKeyHex
@@ -117,7 +121,7 @@ describe('ES256', () => {

   it('validates with publicKeyBase64', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     const pubkey = Object.assign({ publicKeyBase64 }, ecKey2)
     delete pubkey.publicKeyHex
@@ -126,7 +130,7 @@ describe('ES256', () => {

   it('validates with publicKeyJwk', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' },{ issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     const pubkey = Object.assign({ publicKeyJwk }, ecKey2)
     delete pubkey.publicKeyHex
@@ -135,7 +139,7 @@ describe('ES256', () => {

   it('validates with publicKeyMultibase', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     const pubkey = Object.assign({ publicKeyMultibase }, ecKey2)
     delete pubkey.publicKeyHex
@@ -144,14 +148,14 @@ describe('ES256', () => {

   it('validates signature with compressed public key and picks correct public key', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     return expect(verifier(parts[1], parts[2], [ecKey1, compressedKey])).toEqual(compressedKey)
   })

   it('throws error if invalid signature', async () => {
     expect.assertions(1)
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     return expect(() => verifier(parts[1], parts[2], [ecKey1])).toThrowError(
       new Error('invalid_signature: Signature invalid for JWT')
@@ -160,18 +164,19 @@ describe('ES256', () => {

   it('throws error if invalid signature length', async () => {
     expect.assertions(1)
-    const jwt = (await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })) + 'aa'
+    const jwt = (await createJWT({ bla: 'bla' }, { issuer: did, signer },{ alg: 'ES256'})) + 'aa'
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     return expect(() => verifier(parts[1], parts[2], [ecKey1])).toThrowError(new Error('wrong signature length'))
   })

-  it('validates signature with compressed public key and picks correct public key when malformed keys are encountered first', async () => {
-    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer }, { alg: 'ES256' })
+   it('validates signature with compressed public key and picks correct public key when malformed keys are encountered first', async () => {
+    const jwt = await createJWT({ bla: 'bla' }, { issuer: did, signer },{alg: 'ES256'})
     const parts = jwt.match(/^([a-zA-Z0-9_-]+\.[a-zA-Z0-9_-]+)\.([a-zA-Z0-9_-]+)$/)
     return expect(verifier(parts[1], parts[2], [malformedKey1, malformedKey2, malformedKey3, compressedKey])).toEqual(
       compressedKey
     )
   })
+
 })

 const secp256k1 = new EC('secp256k1')
