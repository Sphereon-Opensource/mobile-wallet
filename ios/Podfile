source 'https://github.com/CocoaPods/Specs.git'

require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

def node_require(script)
   # Resolve script with node to allow for hoisting
   require Pod::Executable.execute_command('node', ['-p',
     "require.resolve(
       '#{script}',
       {paths: [process.argv[1]]},
     )", __dir__]).strip
 end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.0'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!


# ⬇️ uncomment wanted permissions
setup_permissions([
  'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  'Camera',
  # 'Contacts',
  'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])
target 'SphereonWallet' do
  use_expo_modules!
  config = use_native_modules!

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
                    # podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  pod 'musap-ios', :path => '../node_modules/@sphereon/musap-native'
  pod 'musap-react-native', :path => '../node_modules/@sphereon/musap-react-native' # auto-linking not working on expo app for some reason
  pod 'YubiKit', :modular_headers => true

#  permissions_path = '../node_modules/react-native-permissions/ios'

#    pod 'Permission-AppTrackingTransparency', :path => "#{permissions_path}/AppTrackingTransparency"
#    pod 'Permission-BluetoothPeripheral', :path => "#{permissions_path}/BluetoothPeripheral"
#    pod 'Permission-Calendars', :path => "#{permissions_path}/Calendars"
#    pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
#    pod 'Permission-Contacts', :path => "#{permissions_path}/Contacts"
#    pod 'Permission-FaceID', :path => "#{permissions_path}/FaceID"
#    pod 'Permission-LocationAccuracy', :path => "#{permissions_path}/LocationAccuracy"
#    pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
#    pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"
#    pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary"
#    pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone"
#    pod 'Permission-Motion', :path => "#{permissions_path}/Motion"
#    pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
#    pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
#    pod 'Permission-PhotoLibraryAddOnly', :path => "#{permissions_path}/PhotoLibraryAddOnly"
#    pod 'Permission-Reminders', :path => "#{permissions_path}/Reminders"
#    pod 'Permission-Siri', :path => "#{permissions_path}/Siri"
#    pod 'Permission-SpeechRecognition', :path => "#{permissions_path}/SpeechRecognition"
#    pod 'Permission-StoreKit', :path => "#{permissions_path}/StoreKit"
#    pod 'CatCrypto', :git => 'https://github.com/Sphereon-Opensource/CatCrypto'

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

  end

  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
end
